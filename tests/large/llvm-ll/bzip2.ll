; ModuleID = 'source/bzip2.c'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.EState = type { %struct.bz_stream*, i32, i32, i32, i32*, i32*, i32*, i32, i32*, i8*, i16*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, i32, i32, [258 x i32], [18002 x i8], [18002 x i8], [6 x [258 x i8]], [6 x [258 x i32]], [6 x [258 x i32]], [258 x [4 x i32]] }
%struct.bz_stream = type { i8*, i32, i32, i32, i8*, i32, i32, i32, i8*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8* }
%struct.DState = type { %struct.bz_stream*, i32, i8, i32, i8, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, [256 x i32], i32, [257 x i32], [257 x i32], i32*, i16*, i8*, i32, i32, i32, i32, i32, [256 x i8], [16 x i8], [256 x i8], [4096 x i8], [16 x i32], [18002 x i8], [18002 x i8], [6 x [258 x i8]], [6 x [258 x i32]], [6 x [258 x i32]], [6 x [258 x i32]], [6 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32* }
%struct.bzFile = type { %struct._IO_FILE*, [5000 x i8], i32, i8, %struct.bz_stream, i32, i8 }
%struct.zzzz = type { i8*, %struct.zzzz* }
%struct.utimbuf = type { i64, i64 }
%struct.UInt64 = type { [8 x i8] }

@stderr = external global %struct._IO_FILE*
@.str = private unnamed_addr constant [38 x i8] c"      %d work, %d block, ratio %5.2f\0A\00", align 1
@.str1 = private unnamed_addr constant [54 x i8] c"    too repetitive; using fallback sorting algorithm\0A\00", align 1
@BZ2_crc32Table = global [256 x i32] [i32 0, i32 79764919, i32 159529838, i32 222504665, i32 319059676, i32 398814059, i32 445009330, i32 507990021, i32 638119352, i32 583659535, i32 797628118, i32 726387553, i32 890018660, i32 835552979, i32 1015980042, i32 944750013, i32 1276238704, i32 1221641927, i32 1167319070, i32 1095957929, i32 1595256236, i32 1540665371, i32 1452775106, i32 1381403509, i32 1780037320, i32 1859660671, i32 1671105958, i32 1733955601, i32 2031960084, i32 2111593891, i32 1889500026, i32 1952343757, i32 -1742489888, i32 -1662866601, i32 -1851683442, i32 -1788833735, i32 -1960329156, i32 -1880695413, i32 -2103051438, i32 -2040207643, i32 -1104454824, i32 -1159051537, i32 -1213636554, i32 -1284997759, i32 -1389417084, i32 -1444007885, i32 -1532160278, i32 -1603531939, i32 -734892656, i32 -789352409, i32 -575645954, i32 -646886583, i32 -952755380, i32 -1007220997, i32 -827056094, i32 -898286187, i32 -231047128, i32 -151282273, i32 -71779514, i32 -8804623, i32 -515967244, i32 -436212925, i32 -390279782, i32 -327299027, i32 881225847, i32 809987520, i32 1023691545, i32 969234094, i32 662832811, i32 591600412, i32 771767749, i32 717299826, i32 311336399, i32 374308984, i32 453813921, i32 533576470, i32 25881363, i32 88864420, i32 134795389, i32 214552010, i32 2023205639, i32 2086057648, i32 1897238633, i32 1976864222, i32 1804852699, i32 1867694188, i32 1645340341, i32 1724971778, i32 1587496639, i32 1516133128, i32 1461550545, i32 1406951526, i32 1302016099, i32 1230646740, i32 1142491917, i32 1087903418, i32 -1398421865, i32 -1469785312, i32 -1524105735, i32 -1578704818, i32 -1079922613, i32 -1151291908, i32 -1239184603, i32 -1293773166, i32 -1968362705, i32 -1905510760, i32 -2094067647, i32 -2014441994, i32 -1716953613, i32 -1654112188, i32 -1876203875, i32 -1796572374, i32 -525066777, i32 -462094256, i32 -382327159, i32 -302564546, i32 -206542021, i32 -143559028, i32 -97365931, i32 -17609246, i32 -960696225, i32 -1031934488, i32 -817968335, i32 -872425850, i32 -709327229, i32 -780559564, i32 -600130067, i32 -654598054, i32 1762451694, i32 1842216281, i32 1619975040, i32 1682949687, i32 2047383090, i32 2127137669, i32 1938468188, i32 2001449195, i32 1325665622, i32 1271206113, i32 1183200824, i32 1111960463, i32 1543535498, i32 1489069629, i32 1434599652, i32 1363369299, i32 622672798, i32 568075817, i32 748617968, i32 677256519, i32 907627842, i32 853037301, i32 1067152940, i32 995781531, i32 51762726, i32 131386257, i32 177728840, i32 240578815, i32 269590778, i32 349224269, i32 429104020, i32 491947555, i32 -248556018, i32 -168932423, i32 -122852000, i32 -60002089, i32 -500490030, i32 -420856475, i32 -341238852, i32 -278395381, i32 -685261898, i32 -739858943, i32 -559578920, i32 -630940305, i32 -1004286614, i32 -1058877219, i32 -845023740, i32 -916395085, i32 -1119974018, i32 -1174433591, i32 -1262701040, i32 -1333941337, i32 -1371866206, i32 -1426332139, i32 -1481064244, i32 -1552294533, i32 -1690935098, i32 -1611170447, i32 -1833673816, i32 -1770699233, i32 -2009983462, i32 -1930228819, i32 -2119160460, i32 -2056179517, i32 1569362073, i32 1498123566, i32 1409854455, i32 1355396672, i32 1317987909, i32 1246755826, i32 1192025387, i32 1137557660, i32 2072149281, i32 2135122070, i32 1912620623, i32 1992383480, i32 1753615357, i32 1816598090, i32 1627664531, i32 1707420964, i32 295390185, i32 358241886, i32 404320391, i32 483945776, i32 43990325, i32 106832002, i32 186451547, i32 266083308, i32 932423249, i32 861060070, i32 1041341759, i32 986742920, i32 613929101, i32 542559546, i32 756411363, i32 701822548, i32 -978770311, i32 -1050133554, i32 -869589737, i32 -924188512, i32 -693284699, i32 -764654318, i32 -550540341, i32 -605129092, i32 -475935807, i32 -413084042, i32 -366743377, i32 -287118056, i32 -257573603, i32 -194731862, i32 -114850189, i32 -35218492, i32 -1984365303, i32 -1921392450, i32 -2143631769, i32 -2063868976, i32 -1698919467, i32 -1635936670, i32 -1824608069, i32 -1744851700, i32 -1347415887, i32 -1418654458, i32 -1506661409, i32 -1561119128, i32 -1129027987, i32 -1200260134, i32 -1254728445, i32 -1309196108], align 16
@BZ2_rNums = global [512 x i32] [i32 619, i32 720, i32 127, i32 481, i32 931, i32 816, i32 813, i32 233, i32 566, i32 247, i32 985, i32 724, i32 205, i32 454, i32 863, i32 491, i32 741, i32 242, i32 949, i32 214, i32 733, i32 859, i32 335, i32 708, i32 621, i32 574, i32 73, i32 654, i32 730, i32 472, i32 419, i32 436, i32 278, i32 496, i32 867, i32 210, i32 399, i32 680, i32 480, i32 51, i32 878, i32 465, i32 811, i32 169, i32 869, i32 675, i32 611, i32 697, i32 867, i32 561, i32 862, i32 687, i32 507, i32 283, i32 482, i32 129, i32 807, i32 591, i32 733, i32 623, i32 150, i32 238, i32 59, i32 379, i32 684, i32 877, i32 625, i32 169, i32 643, i32 105, i32 170, i32 607, i32 520, i32 932, i32 727, i32 476, i32 693, i32 425, i32 174, i32 647, i32 73, i32 122, i32 335, i32 530, i32 442, i32 853, i32 695, i32 249, i32 445, i32 515, i32 909, i32 545, i32 703, i32 919, i32 874, i32 474, i32 882, i32 500, i32 594, i32 612, i32 641, i32 801, i32 220, i32 162, i32 819, i32 984, i32 589, i32 513, i32 495, i32 799, i32 161, i32 604, i32 958, i32 533, i32 221, i32 400, i32 386, i32 867, i32 600, i32 782, i32 382, i32 596, i32 414, i32 171, i32 516, i32 375, i32 682, i32 485, i32 911, i32 276, i32 98, i32 553, i32 163, i32 354, i32 666, i32 933, i32 424, i32 341, i32 533, i32 870, i32 227, i32 730, i32 475, i32 186, i32 263, i32 647, i32 537, i32 686, i32 600, i32 224, i32 469, i32 68, i32 770, i32 919, i32 190, i32 373, i32 294, i32 822, i32 808, i32 206, i32 184, i32 943, i32 795, i32 384, i32 383, i32 461, i32 404, i32 758, i32 839, i32 887, i32 715, i32 67, i32 618, i32 276, i32 204, i32 918, i32 873, i32 777, i32 604, i32 560, i32 951, i32 160, i32 578, i32 722, i32 79, i32 804, i32 96, i32 409, i32 713, i32 940, i32 652, i32 934, i32 970, i32 447, i32 318, i32 353, i32 859, i32 672, i32 112, i32 785, i32 645, i32 863, i32 803, i32 350, i32 139, i32 93, i32 354, i32 99, i32 820, i32 908, i32 609, i32 772, i32 154, i32 274, i32 580, i32 184, i32 79, i32 626, i32 630, i32 742, i32 653, i32 282, i32 762, i32 623, i32 680, i32 81, i32 927, i32 626, i32 789, i32 125, i32 411, i32 521, i32 938, i32 300, i32 821, i32 78, i32 343, i32 175, i32 128, i32 250, i32 170, i32 774, i32 972, i32 275, i32 999, i32 639, i32 495, i32 78, i32 352, i32 126, i32 857, i32 956, i32 358, i32 619, i32 580, i32 124, i32 737, i32 594, i32 701, i32 612, i32 669, i32 112, i32 134, i32 694, i32 363, i32 992, i32 809, i32 743, i32 168, i32 974, i32 944, i32 375, i32 748, i32 52, i32 600, i32 747, i32 642, i32 182, i32 862, i32 81, i32 344, i32 805, i32 988, i32 739, i32 511, i32 655, i32 814, i32 334, i32 249, i32 515, i32 897, i32 955, i32 664, i32 981, i32 649, i32 113, i32 974, i32 459, i32 893, i32 228, i32 433, i32 837, i32 553, i32 268, i32 926, i32 240, i32 102, i32 654, i32 459, i32 51, i32 686, i32 754, i32 806, i32 760, i32 493, i32 403, i32 415, i32 394, i32 687, i32 700, i32 946, i32 670, i32 656, i32 610, i32 738, i32 392, i32 760, i32 799, i32 887, i32 653, i32 978, i32 321, i32 576, i32 617, i32 626, i32 502, i32 894, i32 679, i32 243, i32 440, i32 680, i32 879, i32 194, i32 572, i32 640, i32 724, i32 926, i32 56, i32 204, i32 700, i32 707, i32 151, i32 457, i32 449, i32 797, i32 195, i32 791, i32 558, i32 945, i32 679, i32 297, i32 59, i32 87, i32 824, i32 713, i32 663, i32 412, i32 693, i32 342, i32 606, i32 134, i32 108, i32 571, i32 364, i32 631, i32 212, i32 174, i32 643, i32 304, i32 329, i32 343, i32 97, i32 430, i32 751, i32 497, i32 314, i32 983, i32 374, i32 822, i32 928, i32 140, i32 206, i32 73, i32 263, i32 980, i32 736, i32 876, i32 478, i32 430, i32 305, i32 170, i32 514, i32 364, i32 692, i32 829, i32 82, i32 855, i32 953, i32 676, i32 246, i32 369, i32 970, i32 294, i32 750, i32 807, i32 827, i32 150, i32 790, i32 288, i32 923, i32 804, i32 378, i32 215, i32 828, i32 592, i32 281, i32 565, i32 555, i32 710, i32 82, i32 896, i32 831, i32 547, i32 261, i32 524, i32 462, i32 293, i32 465, i32 502, i32 56, i32 661, i32 821, i32 976, i32 991, i32 658, i32 869, i32 905, i32 758, i32 745, i32 193, i32 768, i32 550, i32 608, i32 933, i32 378, i32 286, i32 215, i32 979, i32 792, i32 961, i32 61, i32 688, i32 793, i32 644, i32 986, i32 403, i32 106, i32 366, i32 905, i32 644, i32 372, i32 567, i32 466, i32 434, i32 645, i32 210, i32 389, i32 550, i32 919, i32 135, i32 780, i32 773, i32 635, i32 389, i32 707, i32 100, i32 626, i32 958, i32 165, i32 504, i32 920, i32 176, i32 193, i32 713, i32 857, i32 265, i32 203, i32 50, i32 668, i32 108, i32 645, i32 990, i32 626, i32 197, i32 510, i32 357, i32 358, i32 850, i32 858, i32 364, i32 936, i32 638], align 16
@.str2 = private unnamed_addr constant [60 x i8] c"    block %d: crc = 0x%8x, combined CRC = 0x%8x, size = %d\0A\00", align 1
@.str3 = private unnamed_addr constant [34 x i8] c"    final combined CRC = 0x%x\0A   \00", align 1
@.str4 = private unnamed_addr constant [20 x i8] c"\0A    [%d: huff+mtf \00", align 1
@.str5 = private unnamed_addr constant [7 x i8] c"rt+rld\00", align 1
@.str6 = private unnamed_addr constant [442 x i8] c"\0A\0Abzip2/libbzip2: internal error number %d.\0AThis is a bug in bzip2/libbzip2, %s.\0APlease report it to me at: jseward@acm.org.  If this happened\0Awhen you were using some program which uses libbzip2 as a\0Acomponent, you should also report this bug to the author(s)\0Aof that program.  Please make an effort to report this bug;\0Atimely and accurate bug reports eventually lead to higher\0Aquality software.  Thanks.  Julian Seward, 30 December 2001.\0A\0A\00", align 1
@.str7 = private unnamed_addr constant [1057 x i8] c"\0A*** A special note about internal error number 1007 ***\0A\0AExperience suggests that a common cause of i.e. 1007\0Ais unreliable memory or other hardware.  The 1007 assertion\0Ajust happens to cross-check the results of huge numbers of\0Amemory reads/writes, and so acts (unintendedly) as a stress\0Atest of your memory system.\0A\0AI suggest the following: try compressing the file again,\0Apossibly monitoring progress in detail with the -vv flag.\0A\0A* If the error cannot be reproduced, and/or happens at different\0A  points in compression, you may have a flaky memory system.\0A  Try a memory-test program.  I have used Memtest86\0A  (www.memtest86.com).  At the time of writing it is free (GPLd).\0A  Memtest86 tests memory much more thorougly than your BIOSs\0A  power-on test, and may find failures that the BIOS doesn't.\0A\0A* If the error can be repeatably reproduced, this is a bug in\0A  bzip2, and I would very much like to hear about it.  Please\0A  let me know, and, ideally, save a copy of the file causing the\0A  problem -- without which I will be unable to investigate it.\0A\0A\00", align 1
@.str8 = private unnamed_addr constant [14 x i8] c" {0x%x, 0x%x}\00", align 1
@.str9 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str10 = private unnamed_addr constant [51 x i8] c"\0A    combined CRCs: stored = 0x%x, computed = 0x%x\00", align 1
@.str11 = private unnamed_addr constant [19 x i8] c"1.0.2, 30-Dec-2001\00", align 1
@stdin = external global %struct._IO_FILE*
@stdout = external global %struct._IO_FILE*
@bzerrorstrings = internal global [16 x i8*] [i8* getelementptr inbounds ([3 x i8]* @.str117, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str118, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.str119, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str120, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str121, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.str122, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str123, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str124, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str125, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str126, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str127, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str127, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str127, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str127, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str127, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str127, i32 0, i32 0)], align 16
@.str12 = private unnamed_addr constant [5 x i8] c".bz2\00", align 1
@.str13 = private unnamed_addr constant [4 x i8] c".bz\00", align 1
@.str14 = private unnamed_addr constant [6 x i8] c".tbz2\00", align 1
@.str15 = private unnamed_addr constant [5 x i8] c".tbz\00", align 1
@zSuffix = global [4 x i8*] [i8* getelementptr inbounds ([5 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str13, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str14, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str15, i32 0, i32 0)], align 16
@.str16 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str17 = private unnamed_addr constant [5 x i8] c".tar\00", align 1
@unzSuffix = global [4 x i8*] [i8* getelementptr inbounds ([1 x i8]* @.str16, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str16, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str17, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str17, i32 0, i32 0)], align 16
@outputHandleJustInCase = common global %struct._IO_FILE* null, align 8
@smallMode = common global i8 0, align 1
@keepInputFiles = common global i8 0, align 1
@forceOverwrite = common global i8 0, align 1
@noisy = common global i8 0, align 1
@verbosity = common global i32 0, align 4
@blockSize100k = common global i32 0, align 4
@testFailsExist = common global i8 0, align 1
@unzFailsExist = common global i8 0, align 1
@numFileNames = common global i32 0, align 4
@numFilesProcessed = common global i32 0, align 4
@workFactor = common global i32 0, align 4
@deleteOutputOnInterrupt = common global i8 0, align 1
@exitValue = common global i32 0, align 4
@inName = common global [1034 x i8] zeroinitializer, align 16
@.str18 = private unnamed_addr constant [7 x i8] c"(none)\00", align 1
@outName = common global [1034 x i8] zeroinitializer, align 16
@progNameReally = common global [1034 x i8] zeroinitializer, align 16
@progName = common global i8* null, align 8
@.str19 = private unnamed_addr constant [6 x i8] c"BZIP2\00", align 1
@.str20 = private unnamed_addr constant [5 x i8] c"BZIP\00", align 1
@longestFileName = common global i32 0, align 4
@.str21 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@srcMode = common global i32 0, align 4
@opMode = common global i32 0, align 4
@.str22 = private unnamed_addr constant [6 x i8] c"unzip\00", align 1
@.str23 = private unnamed_addr constant [6 x i8] c"UNZIP\00", align 1
@.str24 = private unnamed_addr constant [6 x i8] c"z2cat\00", align 1
@.str25 = private unnamed_addr constant [6 x i8] c"Z2CAT\00", align 1
@.str26 = private unnamed_addr constant [5 x i8] c"zcat\00", align 1
@.str27 = private unnamed_addr constant [5 x i8] c"ZCAT\00", align 1
@.str28 = private unnamed_addr constant [19 x i8] c"%s: Bad flag `%s'\0A\00", align 1
@.str29 = private unnamed_addr constant [9 x i8] c"--stdout\00", align 1
@.str30 = private unnamed_addr constant [13 x i8] c"--decompress\00", align 1
@.str31 = private unnamed_addr constant [11 x i8] c"--compress\00", align 1
@.str32 = private unnamed_addr constant [8 x i8] c"--force\00", align 1
@.str33 = private unnamed_addr constant [7 x i8] c"--test\00", align 1
@.str34 = private unnamed_addr constant [7 x i8] c"--keep\00", align 1
@.str35 = private unnamed_addr constant [8 x i8] c"--small\00", align 1
@.str36 = private unnamed_addr constant [8 x i8] c"--quiet\00", align 1
@.str37 = private unnamed_addr constant [10 x i8] c"--version\00", align 1
@.str38 = private unnamed_addr constant [10 x i8] c"--license\00", align 1
@.str39 = private unnamed_addr constant [14 x i8] c"--exponential\00", align 1
@.str40 = private unnamed_addr constant [18 x i8] c"--repetitive-best\00", align 1
@.str41 = private unnamed_addr constant [18 x i8] c"--repetitive-fast\00", align 1
@.str42 = private unnamed_addr constant [7 x i8] c"--fast\00", align 1
@.str43 = private unnamed_addr constant [7 x i8] c"--best\00", align 1
@.str44 = private unnamed_addr constant [10 x i8] c"--verbose\00", align 1
@.str45 = private unnamed_addr constant [7 x i8] c"--help\00", align 1
@.str46 = private unnamed_addr constant [40 x i8] c"%s: -c and -t cannot be used together.\0A\00", align 1
@.str47 = private unnamed_addr constant [113 x i8] c"\0AYou can use the `bzip2recover' program to attempt to recover\0Adata from undamaged sections of corrupted files.\0A\0A\00", align 1
@tmpName = common global [1034 x i8] zeroinitializer, align 16
@.str48 = private unnamed_addr constant [18 x i8] c"testf: bad modes\0A\00", align 1
@.str49 = private unnamed_addr constant [8 x i8] c"(stdin)\00", align 1
@.str50 = private unnamed_addr constant [39 x i8] c"%s: There are no files matching `%s'.\0A\00", align 1
@.str51 = private unnamed_addr constant [30 x i8] c"%s: Can't open input %s: %s.\0A\00", align 1
@.str52 = private unnamed_addr constant [35 x i8] c"%s: Input file %s is a directory.\0A\00", align 1
@.str53 = private unnamed_addr constant [51 x i8] c"%s: I won't read compressed data from a terminal.\0A\00", align 1
@.str54 = private unnamed_addr constant [34 x i8] c"%s: For help, type: `%s --help'.\0A\00", align 1
@.str55 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str56 = private unnamed_addr constant [34 x i8] c"%s: Can't open input file %s:%s.\0A\00", align 1
@.str57 = private unnamed_addr constant [19 x i8] c"testf: bad srcMode\00", align 1
@.str58 = private unnamed_addr constant [7 x i8] c"  %s: \00", align 1
@.str59 = private unnamed_addr constant [4 x i8] c"ok\0A\00", align 1
@.str60 = private unnamed_addr constant [21 x i8] c"test:bzReadGetUnused\00", align 1
@.str61 = private unnamed_addr constant [6 x i8] c"\0A    \00", align 1
@.str62 = private unnamed_addr constant [9 x i8] c"%s: %s: \00", align 1
@.str63 = private unnamed_addr constant [36 x i8] c"data integrity (CRC) error in data\0A\00", align 1
@.str64 = private unnamed_addr constant [24 x i8] c"file ends unexpectedly\0A\00", align 1
@.str65 = private unnamed_addr constant [46 x i8] c"bad magic number (file not created by bzip2)\0A\00", align 1
@.str66 = private unnamed_addr constant [36 x i8] c"trailing garbage after EOF ignored\0A\00", align 1
@.str67 = private unnamed_addr constant [22 x i8] c"test:unexpected error\00", align 1
@.str68 = private unnamed_addr constant [38 x i8] c"\0A%s: couldn't allocate enough memory\0A\00", align 1
@.str69 = private unnamed_addr constant [44 x i8] c"%s: Deleting output file %s, if it exists.\0A\00", align 1
@.str70 = private unnamed_addr constant [59 x i8] c"%s: WARNING: deletion of output file (apparently) failed.\0A\00", align 1
@.str71 = private unnamed_addr constant [49 x i8] c"%s: WARNING: deletion of output file suppressed\0A\00", align 1
@.str72 = private unnamed_addr constant [56 x i8] c"%s:    since input file no longer exists.  Output file\0A\00", align 1
@.str73 = private unnamed_addr constant [32 x i8] c"%s:    `%s' may be incomplete.\0A\00", align 1
@.str74 = private unnamed_addr constant [61 x i8] c"%s:    I suggest doing an integrity test (bzip2 -tv) of it.\0A\00", align 1
@.str75 = private unnamed_addr constant [110 x i8] c"%s: WARNING: some files have not been processed:\0A%s:    %d specified on command line, %d not processed yet.\0A\0A\00", align 1
@.str76 = private unnamed_addr constant [36 x i8] c"\09Input file = %s, output file = %s\0A\00", align 1
@.str77 = private unnamed_addr constant [65 x i8] c"\0A%s: I/O or other error, bailing out.  Possible reason follows.\0A\00", align 1
@.str78 = private unnamed_addr constant [236 x i8] c"bzip2: I'm not configured correctly for this platform!\0A\09I require Int32, Int16 and Char to have sizes\0A\09of 4, 2 and 1 bytes to run properly, and they don't.\0A\09Probably you can fix this by defining them correctly,\0A\09and recompiling.  Bye!\0A\00", align 1
@.str79 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str80 = private unnamed_addr constant [108 x i8] c"\0A%s: PANIC -- internal consistency error:\0A\09%s\0A\09This is a BUG.  Please report it to me at:\0A\09jseward@acm.org\0A\00", align 1
@.str81 = private unnamed_addr constant [23 x i8] c"uncompress: bad modes\0A\00", align 1
@.str82 = private unnamed_addr constant [9 x i8] c"(stdout)\00", align 1
@.str83 = private unnamed_addr constant [5 x i8] c".out\00", align 1
@.str84 = private unnamed_addr constant [35 x i8] c"%s: Can't open input file %s: %s.\0A\00", align 1
@.str85 = private unnamed_addr constant [41 x i8] c"%s: Input file %s is not a normal file.\0A\00", align 1
@.str86 = private unnamed_addr constant [50 x i8] c"%s: Can't guess original name for %s -- using %s\0A\00", align 1
@.str87 = private unnamed_addr constant [36 x i8] c"%s: Output file %s already exists.\0A\00", align 1
@.str88 = private unnamed_addr constant [40 x i8] c"%s: Input file %s has %d other link%s.\0A\00", align 1
@.str89 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str90 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str91 = private unnamed_addr constant [38 x i8] c"%s: Can't create output file %s: %s.\0A\00", align 1
@.str92 = private unnamed_addr constant [24 x i8] c"uncompress: bad srcMode\00", align 1
@.str93 = private unnamed_addr constant [6 x i8] c"done\0A\00", align 1
@.str94 = private unnamed_addr constant [19 x i8] c"not a bzip2 file.\0A\00", align 1
@.str95 = private unnamed_addr constant [29 x i8] c"%s: %s is not a bzip2 file.\0A\00", align 1
@fileMetaInfo = internal global %struct.stat zeroinitializer, align 8
@.str96 = private unnamed_addr constant [27 x i8] c"decompress:bzReadGetUnused\00", align 1
@.str97 = private unnamed_addr constant [45 x i8] c"\0A%s: %s: trailing garbage after EOF ignored\0A\00", align 1
@.str98 = private unnamed_addr constant [28 x i8] c"decompress:unexpected error\00", align 1
@.str99 = private unnamed_addr constant [95 x i8] c"\0A%s: Compressed file ends unexpectedly;\0A\09perhaps it is corrupted?  *Possible* reason follows.\0A\00", align 1
@.str100 = private unnamed_addr constant [241 x i8] c"\0AIt is possible that the compressed file(s) have become corrupted.\0AYou can use the -tvv option to test integrity of such files.\0A\0AYou can use the `bzip2recover' program to attempt to recover\0Adata from undamaged sections of corrupted files.\0A\0A\00", align 1
@.str101 = private unnamed_addr constant [47 x i8] c"\0A%s: Data integrity error when decompressing.\0A\00", align 1
@.str102 = private unnamed_addr constant [21 x i8] c"compress: bad modes\0A\00", align 1
@.str103 = private unnamed_addr constant [42 x i8] c"%s: Input file %s already has %s suffix.\0A\00", align 1
@.str104 = private unnamed_addr constant [50 x i8] c"%s: I won't write compressed data to a terminal.\0A\00", align 1
@.str105 = private unnamed_addr constant [22 x i8] c"compress: bad srcMode\00", align 1
@.str106 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str107 = private unnamed_addr constant [22 x i8] c" no data compressed.\0A\00", align 1
@.str108 = private unnamed_addr constant [57 x i8] c"%6.3f:1, %6.3f bits/byte, %5.2f%% saved, %s in, %s out.\0A\00", align 1
@.str109 = private unnamed_addr constant [26 x i8] c"compress:unexpected error\00", align 1
@.str110 = private unnamed_addr constant [45 x i8] c"\0A%s: Control-C or similar caught, quitting.\0A\00", align 1
@.str111 = private unnamed_addr constant [49 x i8] c"%s: %s is redundant in versions 0.9.5 and above\0A\00", align 1
@.str112 = private unnamed_addr constant [1230 x i8] c"bzip2, a block-sorting file compressor.  Version %s.\0A\0A   usage: %s [flags and input files in any order]\0A\0A   -h --help           print this message\0A   -d --decompress     force decompression\0A   -z --compress       force compression\0A   -k --keep           keep (don't delete) input files\0A   -f --force          overwrite existing output files\0A   -t --test           test compressed file integrity\0A   -c --stdout         output to standard out\0A   -q --quiet          suppress noncritical error messages\0A   -v --verbose        be verbose (a 2nd -v gives more)\0A   -L --license        display software version & license\0A   -V --version        display software version & license\0A   -s --small          use less memory (at most 2500k)\0A   -1 .. -9            set block size to 100k .. 900k\0A   --fast              alias for -1\0A   --best              alias for -9\0A\0A   If invoked as `bzip2', default action is to compress.\0A              as `bunzip2',  default action is to decompress.\0A              as `bzcat', default action is to decompress to stdout.\0A\0A   If no file names are given, bzip2 compresses or decompresses\0A   from standard input to standard output.  You can combine\0A   short flags, so `-v -4' means the same as -v4 or -4v, &c.\0A\0A\00", align 1
@.str113 = private unnamed_addr constant [529 x i8] c"bzip2, a block-sorting file compressor.  Version %s.\0A   \0A   Copyright (C) 1996-2002 by Julian Seward.\0A   \0A   This program is free software; you can redistribute it and/or modify\0A   it under the terms set out in the LICENSE file, which is included\0A   in the bzip2-1.0 source distribution.\0A   \0A   This program is distributed in the hope that it will be useful,\0A   but WITHOUT ANY WARRANTY; without even the implied warranty of\0A   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\0A   LICENSE file for more details.\0A   \0A\00", align 1
@.str114 = private unnamed_addr constant [120 x i8] c"bzip2: file name\0A`%s'\0Ais suspiciously (more than %d chars) long.\0ATry using a reasonable file name instead.  Sorry! :-)\0A\00", align 1
@.str115 = private unnamed_addr constant [868 x i8] c"\0A%s: Caught a SIGSEGV or SIGBUS whilst compressing.\0A\0A   Possible causes are (most likely first):\0A   (1) This computer has unreliable memory or cache hardware\0A       (a surprisingly common problem; try a different machine.)\0A   (2) A bug in the compiler used to create this executable\0A       (unlikely, if you didn't compile bzip2 yourself.)\0A   (3) A real bug in bzip2 -- I hope this should never be the case.\0A   The user's manual, Section 4.3, has more info on (1) and (2).\0A   \0A   If you suspect this is a bug in bzip2, or are unsure about (1)\0A   or (2), feel free to report it to me at: jseward@acm.org.\0A   Section 4.3 of the user's manual describes the info a useful\0A   bug report should have.  If the manual is available on your\0A   system, please try and read it before mailing me.  If you don't\0A   have the manual or can't be bothered to read it, mail me anyway.\0A\0A\00", align 1
@.str116 = private unnamed_addr constant [995 x i8] c"\0A%s: Caught a SIGSEGV or SIGBUS whilst decompressing.\0A\0A   Possible causes are (most likely first):\0A   (1) The compressed data is corrupted, and bzip2's usual checks\0A       failed to detect this.  Try bzip2 -tvv my_file.bz2.\0A   (2) This computer has unreliable memory or cache hardware\0A       (a surprisingly common problem; try a different machine.)\0A   (3) A bug in the compiler used to create this executable\0A       (unlikely, if you didn't compile bzip2 yourself.)\0A   (4) A real bug in bzip2 -- I hope this should never be the case.\0A   The user's manual, Section 4.3, has more info on (2) and (3).\0A   \0A   If you suspect this is a bug in bzip2, or are unsure about (2)\0A   or (3), feel free to report it to me at: jseward@acm.org.\0A   Section 4.3 of the user's manual describes the info a useful\0A   bug report should have.  If the manual is available on your\0A   system, please try and read it before mailing me.  If you don't\0A   have the manual or can't be bothered to read it, mail me anyway.\0A\0A\00", align 1
@.str117 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str118 = private unnamed_addr constant [15 x i8] c"SEQUENCE_ERROR\00", align 1
@.str119 = private unnamed_addr constant [12 x i8] c"PARAM_ERROR\00", align 1
@.str120 = private unnamed_addr constant [10 x i8] c"MEM_ERROR\00", align 1
@.str121 = private unnamed_addr constant [11 x i8] c"DATA_ERROR\00", align 1
@.str122 = private unnamed_addr constant [17 x i8] c"DATA_ERROR_MAGIC\00", align 1
@.str123 = private unnamed_addr constant [9 x i8] c"IO_ERROR\00", align 1
@.str124 = private unnamed_addr constant [15 x i8] c"UNEXPECTED_EOF\00", align 1
@.str125 = private unnamed_addr constant [13 x i8] c"OUTBUFF_FULL\00", align 1
@.str126 = private unnamed_addr constant [13 x i8] c"CONFIG_ERROR\00", align 1
@.str127 = private unnamed_addr constant [4 x i8] c"???\00", align 1
@.str128 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str129 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str130 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str131 = private unnamed_addr constant [64 x i8] c"      %d in block, %d after MTF & 1-2 coding, %d+2 syms in use\0A\00", align 1
@.str132 = private unnamed_addr constant [59 x i8] c"      initial group %d, [%d .. %d], has %d syms (%4.1f%%)\0A\00", align 1
@.str133 = private unnamed_addr constant [41 x i8] c"      pass %d: size is %d, grp uses are \00", align 1
@.str134 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str135 = private unnamed_addr constant [26 x i8] c"      bytes: mapping %d, \00", align 1
@.str136 = private unnamed_addr constant [15 x i8] c"selectors %d, \00", align 1
@.str137 = private unnamed_addr constant [18 x i8] c"code lengths %d, \00", align 1
@.str138 = private unnamed_addr constant [10 x i8] c"codes %d\0A\00", align 1
@.str139 = private unnamed_addr constant [34 x i8] c"        main sort initialise ...\0A\00", align 1
@.str140 = private unnamed_addr constant [28 x i8] c"        bucket sorting ...\0A\00", align 1
@.str141 = private unnamed_addr constant [48 x i8] c"        qsort [0x%x, 0x%x]   done %d   this %d\0A\00", align 1
@.str142 = private unnamed_addr constant [44 x i8] c"        %d pointers, %d sorted, %d scanned\0A\00", align 1
@incs = internal global [14 x i32] [i32 1, i32 4, i32 13, i32 40, i32 121, i32 364, i32 1093, i32 3280, i32 9841, i32 29524, i32 88573, i32 265720, i32 797161, i32 2391484], align 16
@.str143 = private unnamed_addr constant [23 x i8] c"        depth %6d has \00", align 1
@.str144 = private unnamed_addr constant [24 x i8] c"%6d unresolved strings\0A\00", align 1
@.str145 = private unnamed_addr constant [34 x i8] c"        reconstructing block ...\0A\00", align 1

; Function Attrs: nounwind uwtable
define void @BZ2_blockSort(%struct.EState* %s) #0 {
  %1 = alloca %struct.EState*, align 8
  %ptr = alloca i32*, align 8
  %block = alloca i8*, align 8
  %ftab = alloca i32*, align 8
  %nblock = alloca i32, align 4
  %verb = alloca i32, align 4
  %wfact = alloca i32, align 4
  %quadrant = alloca i16*, align 8
  %budget = alloca i32, align 4
  %budgetInit = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.EState* %s, %struct.EState** %1, align 8
  %2 = load %struct.EState** %1, align 8
  %3 = getelementptr inbounds %struct.EState* %2, i32 0, i32 8
  %4 = load i32** %3, align 8
  store i32* %4, i32** %ptr, align 8
  %5 = load %struct.EState** %1, align 8
  %6 = getelementptr inbounds %struct.EState* %5, i32 0, i32 9
  %7 = load i8** %6, align 8
  store i8* %7, i8** %block, align 8
  %8 = load %struct.EState** %1, align 8
  %9 = getelementptr inbounds %struct.EState* %8, i32 0, i32 6
  %10 = load i32** %9, align 8
  store i32* %10, i32** %ftab, align 8
  %11 = load %struct.EState** %1, align 8
  %12 = getelementptr inbounds %struct.EState* %11, i32 0, i32 17
  %13 = load i32* %12, align 4
  store i32 %13, i32* %nblock, align 4
  %14 = load %struct.EState** %1, align 8
  %15 = getelementptr inbounds %struct.EState* %14, i32 0, i32 28
  %16 = load i32* %15, align 4
  store i32 %16, i32* %verb, align 4
  %17 = load %struct.EState** %1, align 8
  %18 = getelementptr inbounds %struct.EState* %17, i32 0, i32 12
  %19 = load i32* %18, align 4
  store i32 %19, i32* %wfact, align 4
  %20 = load i32* %nblock, align 4
  %21 = icmp slt i32 %20, 10000
  br i1 %21, label %22, label %32

; <label>:22                                      ; preds = %0
  %23 = load %struct.EState** %1, align 8
  %24 = getelementptr inbounds %struct.EState* %23, i32 0, i32 4
  %25 = load i32** %24, align 8
  %26 = load %struct.EState** %1, align 8
  %27 = getelementptr inbounds %struct.EState* %26, i32 0, i32 5
  %28 = load i32** %27, align 8
  %29 = load i32** %ftab, align 8
  %30 = load i32* %nblock, align 4
  %31 = load i32* %verb, align 4
  call void @fallbackSort(i32* %25, i32* %28, i32* %29, i32 %30, i32 %31)
  br label %110

; <label>:32                                      ; preds = %0
  %33 = load i32* %nblock, align 4
  %34 = add nsw i32 %33, 34
  store i32 %34, i32* %i, align 4
  %35 = load i32* %i, align 4
  %36 = and i32 %35, 1
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %41

; <label>:38                                      ; preds = %32
  %39 = load i32* %i, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %i, align 4
  br label %41

; <label>:41                                      ; preds = %38, %32
  %42 = load i32* %i, align 4
  %43 = sext i32 %42 to i64
  %44 = load i8** %block, align 8
  %45 = getelementptr inbounds i8* %44, i64 %43
  %46 = bitcast i8* %45 to i16*
  store i16* %46, i16** %quadrant, align 8
  %47 = load i32* %wfact, align 4
  %48 = icmp slt i32 %47, 1
  br i1 %48, label %49, label %50

; <label>:49                                      ; preds = %41
  store i32 1, i32* %wfact, align 4
  br label %50

; <label>:50                                      ; preds = %49, %41
  %51 = load i32* %wfact, align 4
  %52 = icmp sgt i32 %51, 100
  br i1 %52, label %53, label %54

; <label>:53                                      ; preds = %50
  store i32 100, i32* %wfact, align 4
  br label %54

; <label>:54                                      ; preds = %53, %50
  %55 = load i32* %nblock, align 4
  %56 = load i32* %wfact, align 4
  %57 = sub nsw i32 %56, 1
  %58 = sdiv i32 %57, 3
  %59 = mul nsw i32 %55, %58
  store i32 %59, i32* %budgetInit, align 4
  %60 = load i32* %budgetInit, align 4
  store i32 %60, i32* %budget, align 4
  %61 = load i32** %ptr, align 8
  %62 = load i8** %block, align 8
  %63 = load i16** %quadrant, align 8
  %64 = load i32** %ftab, align 8
  %65 = load i32* %nblock, align 4
  %66 = load i32* %verb, align 4
  call void @mainSort(i32* %61, i8* %62, i16* %63, i32* %64, i32 %65, i32 %66, i32* %budget)
  %67 = load i32* %verb, align 4
  %68 = icmp sge i32 %67, 3
  br i1 %68, label %69, label %90

; <label>:69                                      ; preds = %54
  %70 = load %struct._IO_FILE** @stderr, align 8
  %71 = load i32* %budgetInit, align 4
  %72 = load i32* %budget, align 4
  %73 = sub nsw i32 %71, %72
  %74 = load i32* %nblock, align 4
  %75 = load i32* %budgetInit, align 4
  %76 = load i32* %budget, align 4
  %77 = sub nsw i32 %75, %76
  %78 = sitofp i32 %77 to float
  %79 = load i32* %nblock, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

; <label>:81                                      ; preds = %69
  br label %84

; <label>:82                                      ; preds = %69
  %83 = load i32* %nblock, align 4
  br label %84

; <label>:84                                      ; preds = %82, %81
  %85 = phi i32 [ 1, %81 ], [ %83, %82 ]
  %86 = sitofp i32 %85 to float
  %87 = fdiv float %78, %86
  %88 = fpext float %87 to double
  %89 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %70, i8* getelementptr inbounds ([38 x i8]* @.str, i32 0, i32 0), i32 %73, i32 %74, double %88)
  br label %90

; <label>:90                                      ; preds = %84, %54
  %91 = load i32* %budget, align 4
  %92 = icmp slt i32 %91, 0
  br i1 %92, label %93, label %109

; <label>:93                                      ; preds = %90
  %94 = load i32* %verb, align 4
  %95 = icmp sge i32 %94, 2
  br i1 %95, label %96, label %99

; <label>:96                                      ; preds = %93
  %97 = load %struct._IO_FILE** @stderr, align 8
  %98 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %97, i8* getelementptr inbounds ([54 x i8]* @.str1, i32 0, i32 0))
  br label %99

; <label>:99                                      ; preds = %96, %93
  %100 = load %struct.EState** %1, align 8
  %101 = getelementptr inbounds %struct.EState* %100, i32 0, i32 4
  %102 = load i32** %101, align 8
  %103 = load %struct.EState** %1, align 8
  %104 = getelementptr inbounds %struct.EState* %103, i32 0, i32 5
  %105 = load i32** %104, align 8
  %106 = load i32** %ftab, align 8
  %107 = load i32* %nblock, align 4
  %108 = load i32* %verb, align 4
  call void @fallbackSort(i32* %102, i32* %105, i32* %106, i32 %107, i32 %108)
  br label %109

; <label>:109                                     ; preds = %99, %90
  br label %110

; <label>:110                                     ; preds = %109, %22
  %111 = load %struct.EState** %1, align 8
  %112 = getelementptr inbounds %struct.EState* %111, i32 0, i32 7
  store i32 -1, i32* %112, align 4
  store i32 0, i32* %i, align 4
  br label %113

; <label>:113                                     ; preds = %131, %110
  %114 = load i32* %i, align 4
  %115 = load %struct.EState** %1, align 8
  %116 = getelementptr inbounds %struct.EState* %115, i32 0, i32 17
  %117 = load i32* %116, align 4
  %118 = icmp slt i32 %114, %117
  br i1 %118, label %119, label %134

; <label>:119                                     ; preds = %113
  %120 = load i32* %i, align 4
  %121 = sext i32 %120 to i64
  %122 = load i32** %ptr, align 8
  %123 = getelementptr inbounds i32* %122, i64 %121
  %124 = load i32* %123, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %130

; <label>:126                                     ; preds = %119
  %127 = load i32* %i, align 4
  %128 = load %struct.EState** %1, align 8
  %129 = getelementptr inbounds %struct.EState* %128, i32 0, i32 7
  store i32 %127, i32* %129, align 4
  br label %134

; <label>:130                                     ; preds = %119
  br label %131

; <label>:131                                     ; preds = %130
  %132 = load i32* %i, align 4
  %133 = add nsw i32 %132, 1
  store i32 %133, i32* %i, align 4
  br label %113

; <label>:134                                     ; preds = %126, %113
  %135 = load %struct.EState** %1, align 8
  %136 = getelementptr inbounds %struct.EState* %135, i32 0, i32 7
  %137 = load i32* %136, align 4
  %138 = icmp ne i32 %137, -1
  br i1 %138, label %140, label %139

; <label>:139                                     ; preds = %134
  call void @BZ2_bz__AssertH__fail(i32 1003)
  br label %140

; <label>:140                                     ; preds = %139, %134
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @fallbackSort(i32* %fmap, i32* %eclass, i32* %bhtab, i32 %nblock, i32 %verb) #0 {
  %1 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %ftab = alloca [257 x i32], align 16
  %ftabCopy = alloca [256 x i32], align 16
  %H = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %r = alloca i32, align 4
  %cc = alloca i32, align 4
  %cc1 = alloca i32, align 4
  %nNotDone = alloca i32, align 4
  %nBhtab = alloca i32, align 4
  %eclass8 = alloca i8*, align 8
  store i32* %fmap, i32** %1, align 8
  store i32* %eclass, i32** %2, align 8
  store i32* %bhtab, i32** %3, align 8
  store i32 %nblock, i32* %4, align 4
  store i32 %verb, i32* %5, align 4
  %6 = load i32** %2, align 8
  %7 = bitcast i32* %6 to i8*
  store i8* %7, i8** %eclass8, align 8
  %8 = load i32* %5, align 4
  %9 = icmp sge i32 %8, 4
  br i1 %9, label %10, label %13

; <label>:10                                      ; preds = %0
  %11 = load %struct._IO_FILE** @stderr, align 8
  %12 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([28 x i8]* @.str140, i32 0, i32 0))
  br label %13

; <label>:13                                      ; preds = %10, %0
  store i32 0, i32* %i, align 4
  br label %14

; <label>:14                                      ; preds = %21, %13
  %15 = load i32* %i, align 4
  %16 = icmp slt i32 %15, 257
  br i1 %16, label %17, label %24

; <label>:17                                      ; preds = %14
  %18 = load i32* %i, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [257 x i32]* %ftab, i32 0, i64 %19
  store i32 0, i32* %20, align 4
  br label %21

; <label>:21                                      ; preds = %17
  %22 = load i32* %i, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %i, align 4
  br label %14

; <label>:24                                      ; preds = %14
  store i32 0, i32* %i, align 4
  br label %25

; <label>:25                                      ; preds = %39, %24
  %26 = load i32* %i, align 4
  %27 = load i32* %4, align 4
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %29, label %42

; <label>:29                                      ; preds = %25
  %30 = load i32* %i, align 4
  %31 = sext i32 %30 to i64
  %32 = load i8** %eclass8, align 8
  %33 = getelementptr inbounds i8* %32, i64 %31
  %34 = load i8* %33, align 1
  %35 = zext i8 %34 to i64
  %36 = getelementptr inbounds [257 x i32]* %ftab, i32 0, i64 %35
  %37 = load i32* %36, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %36, align 4
  br label %39

; <label>:39                                      ; preds = %29
  %40 = load i32* %i, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %i, align 4
  br label %25

; <label>:42                                      ; preds = %25
  store i32 0, i32* %i, align 4
  br label %43

; <label>:43                                      ; preds = %54, %42
  %44 = load i32* %i, align 4
  %45 = icmp slt i32 %44, 256
  br i1 %45, label %46, label %57

; <label>:46                                      ; preds = %43
  %47 = load i32* %i, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [257 x i32]* %ftab, i32 0, i64 %48
  %50 = load i32* %49, align 4
  %51 = load i32* %i, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [256 x i32]* %ftabCopy, i32 0, i64 %52
  store i32 %50, i32* %53, align 4
  br label %54

; <label>:54                                      ; preds = %46
  %55 = load i32* %i, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %i, align 4
  br label %43

; <label>:57                                      ; preds = %43
  store i32 1, i32* %i, align 4
  br label %58

; <label>:58                                      ; preds = %72, %57
  %59 = load i32* %i, align 4
  %60 = icmp slt i32 %59, 257
  br i1 %60, label %61, label %75

; <label>:61                                      ; preds = %58
  %62 = load i32* %i, align 4
  %63 = sub nsw i32 %62, 1
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [257 x i32]* %ftab, i32 0, i64 %64
  %66 = load i32* %65, align 4
  %67 = load i32* %i, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [257 x i32]* %ftab, i32 0, i64 %68
  %70 = load i32* %69, align 4
  %71 = add nsw i32 %70, %66
  store i32 %71, i32* %69, align 4
  br label %72

; <label>:72                                      ; preds = %61
  %73 = load i32* %i, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %i, align 4
  br label %58

; <label>:75                                      ; preds = %58
  store i32 0, i32* %i, align 4
  br label %76

; <label>:76                                      ; preds = %101, %75
  %77 = load i32* %i, align 4
  %78 = load i32* %4, align 4
  %79 = icmp slt i32 %77, %78
  br i1 %79, label %80, label %104

; <label>:80                                      ; preds = %76
  %81 = load i32* %i, align 4
  %82 = sext i32 %81 to i64
  %83 = load i8** %eclass8, align 8
  %84 = getelementptr inbounds i8* %83, i64 %82
  %85 = load i8* %84, align 1
  %86 = zext i8 %85 to i32
  store i32 %86, i32* %j, align 4
  %87 = load i32* %j, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [257 x i32]* %ftab, i32 0, i64 %88
  %90 = load i32* %89, align 4
  %91 = sub nsw i32 %90, 1
  store i32 %91, i32* %k, align 4
  %92 = load i32* %k, align 4
  %93 = load i32* %j, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds [257 x i32]* %ftab, i32 0, i64 %94
  store i32 %92, i32* %95, align 4
  %96 = load i32* %i, align 4
  %97 = load i32* %k, align 4
  %98 = sext i32 %97 to i64
  %99 = load i32** %1, align 8
  %100 = getelementptr inbounds i32* %99, i64 %98
  store i32 %96, i32* %100, align 4
  br label %101

; <label>:101                                     ; preds = %80
  %102 = load i32* %i, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %i, align 4
  br label %76

; <label>:104                                     ; preds = %76
  %105 = load i32* %4, align 4
  %106 = sdiv i32 %105, 32
  %107 = add nsw i32 2, %106
  store i32 %107, i32* %nBhtab, align 4
  store i32 0, i32* %i, align 4
  br label %108

; <label>:108                                     ; preds = %117, %104
  %109 = load i32* %i, align 4
  %110 = load i32* %nBhtab, align 4
  %111 = icmp slt i32 %109, %110
  br i1 %111, label %112, label %120

; <label>:112                                     ; preds = %108
  %113 = load i32* %i, align 4
  %114 = sext i32 %113 to i64
  %115 = load i32** %3, align 8
  %116 = getelementptr inbounds i32* %115, i64 %114
  store i32 0, i32* %116, align 4
  br label %117

; <label>:117                                     ; preds = %112
  %118 = load i32* %i, align 4
  %119 = add nsw i32 %118, 1
  store i32 %119, i32* %i, align 4
  br label %108

; <label>:120                                     ; preds = %108
  store i32 0, i32* %i, align 4
  br label %121

; <label>:121                                     ; preds = %141, %120
  %122 = load i32* %i, align 4
  %123 = icmp slt i32 %122, 256
  br i1 %123, label %124, label %144

; <label>:124                                     ; preds = %121
  %125 = load i32* %i, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [257 x i32]* %ftab, i32 0, i64 %126
  %128 = load i32* %127, align 4
  %129 = and i32 %128, 31
  %130 = shl i32 1, %129
  %131 = load i32* %i, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds [257 x i32]* %ftab, i32 0, i64 %132
  %134 = load i32* %133, align 4
  %135 = ashr i32 %134, 5
  %136 = sext i32 %135 to i64
  %137 = load i32** %3, align 8
  %138 = getelementptr inbounds i32* %137, i64 %136
  %139 = load i32* %138, align 4
  %140 = or i32 %139, %130
  store i32 %140, i32* %138, align 4
  br label %141

; <label>:141                                     ; preds = %124
  %142 = load i32* %i, align 4
  %143 = add nsw i32 %142, 1
  store i32 %143, i32* %i, align 4
  br label %121

; <label>:144                                     ; preds = %121
  store i32 0, i32* %i, align 4
  br label %145

; <label>:145                                     ; preds = %184, %144
  %146 = load i32* %i, align 4
  %147 = icmp slt i32 %146, 32
  br i1 %147, label %148, label %187

; <label>:148                                     ; preds = %145
  %149 = load i32* %4, align 4
  %150 = load i32* %i, align 4
  %151 = mul nsw i32 2, %150
  %152 = add nsw i32 %149, %151
  %153 = and i32 %152, 31
  %154 = shl i32 1, %153
  %155 = load i32* %4, align 4
  %156 = load i32* %i, align 4
  %157 = mul nsw i32 2, %156
  %158 = add nsw i32 %155, %157
  %159 = ashr i32 %158, 5
  %160 = sext i32 %159 to i64
  %161 = load i32** %3, align 8
  %162 = getelementptr inbounds i32* %161, i64 %160
  %163 = load i32* %162, align 4
  %164 = or i32 %163, %154
  store i32 %164, i32* %162, align 4
  %165 = load i32* %4, align 4
  %166 = load i32* %i, align 4
  %167 = mul nsw i32 2, %166
  %168 = add nsw i32 %165, %167
  %169 = add nsw i32 %168, 1
  %170 = and i32 %169, 31
  %171 = shl i32 1, %170
  %172 = xor i32 %171, -1
  %173 = load i32* %4, align 4
  %174 = load i32* %i, align 4
  %175 = mul nsw i32 2, %174
  %176 = add nsw i32 %173, %175
  %177 = add nsw i32 %176, 1
  %178 = ashr i32 %177, 5
  %179 = sext i32 %178 to i64
  %180 = load i32** %3, align 8
  %181 = getelementptr inbounds i32* %180, i64 %179
  %182 = load i32* %181, align 4
  %183 = and i32 %182, %172
  store i32 %183, i32* %181, align 4
  br label %184

; <label>:184                                     ; preds = %148
  %185 = load i32* %i, align 4
  %186 = add nsw i32 %185, 1
  store i32 %186, i32* %i, align 4
  br label %145

; <label>:187                                     ; preds = %145
  store i32 1, i32* %H, align 4
  br label %188

; <label>:188                                     ; preds = %187, %449
  %189 = load i32* %5, align 4
  %190 = icmp sge i32 %189, 4
  br i1 %190, label %191, label %195

; <label>:191                                     ; preds = %188
  %192 = load %struct._IO_FILE** @stderr, align 8
  %193 = load i32* %H, align 4
  %194 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %192, i8* getelementptr inbounds ([23 x i8]* @.str143, i32 0, i32 0), i32 %193)
  br label %195

; <label>:195                                     ; preds = %191, %188
  store i32 0, i32* %j, align 4
  store i32 0, i32* %i, align 4
  br label %196

; <label>:196                                     ; preds = %234, %195
  %197 = load i32* %i, align 4
  %198 = load i32* %4, align 4
  %199 = icmp slt i32 %197, %198
  br i1 %199, label %200, label %237

; <label>:200                                     ; preds = %196
  %201 = load i32* %i, align 4
  %202 = ashr i32 %201, 5
  %203 = sext i32 %202 to i64
  %204 = load i32** %3, align 8
  %205 = getelementptr inbounds i32* %204, i64 %203
  %206 = load i32* %205, align 4
  %207 = load i32* %i, align 4
  %208 = and i32 %207, 31
  %209 = shl i32 1, %208
  %210 = and i32 %206, %209
  %211 = icmp ne i32 %210, 0
  br i1 %211, label %212, label %214

; <label>:212                                     ; preds = %200
  %213 = load i32* %i, align 4
  store i32 %213, i32* %j, align 4
  br label %214

; <label>:214                                     ; preds = %212, %200
  %215 = load i32* %i, align 4
  %216 = sext i32 %215 to i64
  %217 = load i32** %1, align 8
  %218 = getelementptr inbounds i32* %217, i64 %216
  %219 = load i32* %218, align 4
  %220 = load i32* %H, align 4
  %221 = sub i32 %219, %220
  store i32 %221, i32* %k, align 4
  %222 = load i32* %k, align 4
  %223 = icmp slt i32 %222, 0
  br i1 %223, label %224, label %228

; <label>:224                                     ; preds = %214
  %225 = load i32* %4, align 4
  %226 = load i32* %k, align 4
  %227 = add nsw i32 %226, %225
  store i32 %227, i32* %k, align 4
  br label %228

; <label>:228                                     ; preds = %224, %214
  %229 = load i32* %j, align 4
  %230 = load i32* %k, align 4
  %231 = sext i32 %230 to i64
  %232 = load i32** %2, align 8
  %233 = getelementptr inbounds i32* %232, i64 %231
  store i32 %229, i32* %233, align 4
  br label %234

; <label>:234                                     ; preds = %228
  %235 = load i32* %i, align 4
  %236 = add nsw i32 %235, 1
  store i32 %236, i32* %i, align 4
  br label %196

; <label>:237                                     ; preds = %196
  store i32 0, i32* %nNotDone, align 4
  store i32 -1, i32* %r, align 4
  br label %238

; <label>:238                                     ; preds = %237, %431
  %239 = load i32* %r, align 4
  %240 = add nsw i32 %239, 1
  store i32 %240, i32* %k, align 4
  br label %241

; <label>:241                                     ; preds = %259, %238
  %242 = load i32* %k, align 4
  %243 = ashr i32 %242, 5
  %244 = sext i32 %243 to i64
  %245 = load i32** %3, align 8
  %246 = getelementptr inbounds i32* %245, i64 %244
  %247 = load i32* %246, align 4
  %248 = load i32* %k, align 4
  %249 = and i32 %248, 31
  %250 = shl i32 1, %249
  %251 = and i32 %247, %250
  %252 = icmp ne i32 %251, 0
  br i1 %252, label %253, label %257

; <label>:253                                     ; preds = %241
  %254 = load i32* %k, align 4
  %255 = and i32 %254, 31
  %256 = icmp ne i32 %255, 0
  br label %257

; <label>:257                                     ; preds = %253, %241
  %258 = phi i1 [ false, %241 ], [ %256, %253 ]
  br i1 %258, label %259, label %262

; <label>:259                                     ; preds = %257
  %260 = load i32* %k, align 4
  %261 = add nsw i32 %260, 1
  store i32 %261, i32* %k, align 4
  br label %241

; <label>:262                                     ; preds = %257
  %263 = load i32* %k, align 4
  %264 = ashr i32 %263, 5
  %265 = sext i32 %264 to i64
  %266 = load i32** %3, align 8
  %267 = getelementptr inbounds i32* %266, i64 %265
  %268 = load i32* %267, align 4
  %269 = load i32* %k, align 4
  %270 = and i32 %269, 31
  %271 = shl i32 1, %270
  %272 = and i32 %268, %271
  %273 = icmp ne i32 %272, 0
  br i1 %273, label %274, label %303

; <label>:274                                     ; preds = %262
  br label %275

; <label>:275                                     ; preds = %283, %274
  %276 = load i32* %k, align 4
  %277 = ashr i32 %276, 5
  %278 = sext i32 %277 to i64
  %279 = load i32** %3, align 8
  %280 = getelementptr inbounds i32* %279, i64 %278
  %281 = load i32* %280, align 4
  %282 = icmp eq i32 %281, -1
  br i1 %282, label %283, label %286

; <label>:283                                     ; preds = %275
  %284 = load i32* %k, align 4
  %285 = add nsw i32 %284, 32
  store i32 %285, i32* %k, align 4
  br label %275

; <label>:286                                     ; preds = %275
  br label %287

; <label>:287                                     ; preds = %299, %286
  %288 = load i32* %k, align 4
  %289 = ashr i32 %288, 5
  %290 = sext i32 %289 to i64
  %291 = load i32** %3, align 8
  %292 = getelementptr inbounds i32* %291, i64 %290
  %293 = load i32* %292, align 4
  %294 = load i32* %k, align 4
  %295 = and i32 %294, 31
  %296 = shl i32 1, %295
  %297 = and i32 %293, %296
  %298 = icmp ne i32 %297, 0
  br i1 %298, label %299, label %302

; <label>:299                                     ; preds = %287
  %300 = load i32* %k, align 4
  %301 = add nsw i32 %300, 1
  store i32 %301, i32* %k, align 4
  br label %287

; <label>:302                                     ; preds = %287
  br label %303

; <label>:303                                     ; preds = %302, %262
  %304 = load i32* %k, align 4
  %305 = sub nsw i32 %304, 1
  store i32 %305, i32* %l, align 4
  %306 = load i32* %l, align 4
  %307 = load i32* %4, align 4
  %308 = icmp sge i32 %306, %307
  br i1 %308, label %309, label %310

; <label>:309                                     ; preds = %303
  br label %432

; <label>:310                                     ; preds = %303
  br label %311

; <label>:311                                     ; preds = %329, %310
  %312 = load i32* %k, align 4
  %313 = ashr i32 %312, 5
  %314 = sext i32 %313 to i64
  %315 = load i32** %3, align 8
  %316 = getelementptr inbounds i32* %315, i64 %314
  %317 = load i32* %316, align 4
  %318 = load i32* %k, align 4
  %319 = and i32 %318, 31
  %320 = shl i32 1, %319
  %321 = and i32 %317, %320
  %322 = icmp ne i32 %321, 0
  br i1 %322, label %327, label %323

; <label>:323                                     ; preds = %311
  %324 = load i32* %k, align 4
  %325 = and i32 %324, 31
  %326 = icmp ne i32 %325, 0
  br label %327

; <label>:327                                     ; preds = %323, %311
  %328 = phi i1 [ false, %311 ], [ %326, %323 ]
  br i1 %328, label %329, label %332

; <label>:329                                     ; preds = %327
  %330 = load i32* %k, align 4
  %331 = add nsw i32 %330, 1
  store i32 %331, i32* %k, align 4
  br label %311

; <label>:332                                     ; preds = %327
  %333 = load i32* %k, align 4
  %334 = ashr i32 %333, 5
  %335 = sext i32 %334 to i64
  %336 = load i32** %3, align 8
  %337 = getelementptr inbounds i32* %336, i64 %335
  %338 = load i32* %337, align 4
  %339 = load i32* %k, align 4
  %340 = and i32 %339, 31
  %341 = shl i32 1, %340
  %342 = and i32 %338, %341
  %343 = icmp ne i32 %342, 0
  br i1 %343, label %374, label %344

; <label>:344                                     ; preds = %332
  br label %345

; <label>:345                                     ; preds = %353, %344
  %346 = load i32* %k, align 4
  %347 = ashr i32 %346, 5
  %348 = sext i32 %347 to i64
  %349 = load i32** %3, align 8
  %350 = getelementptr inbounds i32* %349, i64 %348
  %351 = load i32* %350, align 4
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %356

; <label>:353                                     ; preds = %345
  %354 = load i32* %k, align 4
  %355 = add nsw i32 %354, 32
  store i32 %355, i32* %k, align 4
  br label %345

; <label>:356                                     ; preds = %345
  br label %357

; <label>:357                                     ; preds = %370, %356
  %358 = load i32* %k, align 4
  %359 = ashr i32 %358, 5
  %360 = sext i32 %359 to i64
  %361 = load i32** %3, align 8
  %362 = getelementptr inbounds i32* %361, i64 %360
  %363 = load i32* %362, align 4
  %364 = load i32* %k, align 4
  %365 = and i32 %364, 31
  %366 = shl i32 1, %365
  %367 = and i32 %363, %366
  %368 = icmp ne i32 %367, 0
  %369 = xor i1 %368, true
  br i1 %369, label %370, label %373

; <label>:370                                     ; preds = %357
  %371 = load i32* %k, align 4
  %372 = add nsw i32 %371, 1
  store i32 %372, i32* %k, align 4
  br label %357

; <label>:373                                     ; preds = %357
  br label %374

; <label>:374                                     ; preds = %373, %332
  %375 = load i32* %k, align 4
  %376 = sub nsw i32 %375, 1
  store i32 %376, i32* %r, align 4
  %377 = load i32* %r, align 4
  %378 = load i32* %4, align 4
  %379 = icmp sge i32 %377, %378
  br i1 %379, label %380, label %381

; <label>:380                                     ; preds = %374
  br label %432

; <label>:381                                     ; preds = %374
  %382 = load i32* %r, align 4
  %383 = load i32* %l, align 4
  %384 = icmp sgt i32 %382, %383
  br i1 %384, label %385, label %431

; <label>:385                                     ; preds = %381
  %386 = load i32* %r, align 4
  %387 = load i32* %l, align 4
  %388 = sub nsw i32 %386, %387
  %389 = add nsw i32 %388, 1
  %390 = load i32* %nNotDone, align 4
  %391 = add nsw i32 %390, %389
  store i32 %391, i32* %nNotDone, align 4
  %392 = load i32** %1, align 8
  %393 = load i32** %2, align 8
  %394 = load i32* %l, align 4
  %395 = load i32* %r, align 4
  call void @fallbackQSort3(i32* %392, i32* %393, i32 %394, i32 %395)
  store i32 -1, i32* %cc, align 4
  %396 = load i32* %l, align 4
  store i32 %396, i32* %i, align 4
  br label %397

; <label>:397                                     ; preds = %427, %385
  %398 = load i32* %i, align 4
  %399 = load i32* %r, align 4
  %400 = icmp sle i32 %398, %399
  br i1 %400, label %401, label %430

; <label>:401                                     ; preds = %397
  %402 = load i32* %i, align 4
  %403 = sext i32 %402 to i64
  %404 = load i32** %1, align 8
  %405 = getelementptr inbounds i32* %404, i64 %403
  %406 = load i32* %405, align 4
  %407 = zext i32 %406 to i64
  %408 = load i32** %2, align 8
  %409 = getelementptr inbounds i32* %408, i64 %407
  %410 = load i32* %409, align 4
  store i32 %410, i32* %cc1, align 4
  %411 = load i32* %cc, align 4
  %412 = load i32* %cc1, align 4
  %413 = icmp ne i32 %411, %412
  br i1 %413, label %414, label %426

; <label>:414                                     ; preds = %401
  %415 = load i32* %i, align 4
  %416 = and i32 %415, 31
  %417 = shl i32 1, %416
  %418 = load i32* %i, align 4
  %419 = ashr i32 %418, 5
  %420 = sext i32 %419 to i64
  %421 = load i32** %3, align 8
  %422 = getelementptr inbounds i32* %421, i64 %420
  %423 = load i32* %422, align 4
  %424 = or i32 %423, %417
  store i32 %424, i32* %422, align 4
  %425 = load i32* %cc1, align 4
  store i32 %425, i32* %cc, align 4
  br label %426

; <label>:426                                     ; preds = %414, %401
  br label %427

; <label>:427                                     ; preds = %426
  %428 = load i32* %i, align 4
  %429 = add nsw i32 %428, 1
  store i32 %429, i32* %i, align 4
  br label %397

; <label>:430                                     ; preds = %397
  br label %431

; <label>:431                                     ; preds = %430, %381
  br label %238

; <label>:432                                     ; preds = %380, %309
  %433 = load i32* %5, align 4
  %434 = icmp sge i32 %433, 4
  br i1 %434, label %435, label %439

; <label>:435                                     ; preds = %432
  %436 = load %struct._IO_FILE** @stderr, align 8
  %437 = load i32* %nNotDone, align 4
  %438 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %436, i8* getelementptr inbounds ([24 x i8]* @.str144, i32 0, i32 0), i32 %437)
  br label %439

; <label>:439                                     ; preds = %435, %432
  %440 = load i32* %H, align 4
  %441 = mul nsw i32 %440, 2
  store i32 %441, i32* %H, align 4
  %442 = load i32* %H, align 4
  %443 = load i32* %4, align 4
  %444 = icmp sgt i32 %442, %443
  br i1 %444, label %448, label %445

; <label>:445                                     ; preds = %439
  %446 = load i32* %nNotDone, align 4
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %448, label %449

; <label>:448                                     ; preds = %445, %439
  br label %450

; <label>:449                                     ; preds = %445
  br label %188

; <label>:450                                     ; preds = %448
  %451 = load i32* %5, align 4
  %452 = icmp sge i32 %451, 4
  br i1 %452, label %453, label %456

; <label>:453                                     ; preds = %450
  %454 = load %struct._IO_FILE** @stderr, align 8
  %455 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %454, i8* getelementptr inbounds ([34 x i8]* @.str145, i32 0, i32 0))
  br label %456

; <label>:456                                     ; preds = %453, %450
  store i32 0, i32* %j, align 4
  store i32 0, i32* %i, align 4
  br label %457

; <label>:457                                     ; preds = %487, %456
  %458 = load i32* %i, align 4
  %459 = load i32* %4, align 4
  %460 = icmp slt i32 %458, %459
  br i1 %460, label %461, label %490

; <label>:461                                     ; preds = %457
  br label %462

; <label>:462                                     ; preds = %468, %461
  %463 = load i32* %j, align 4
  %464 = sext i32 %463 to i64
  %465 = getelementptr inbounds [256 x i32]* %ftabCopy, i32 0, i64 %464
  %466 = load i32* %465, align 4
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %468, label %471

; <label>:468                                     ; preds = %462
  %469 = load i32* %j, align 4
  %470 = add nsw i32 %469, 1
  store i32 %470, i32* %j, align 4
  br label %462

; <label>:471                                     ; preds = %462
  %472 = load i32* %j, align 4
  %473 = sext i32 %472 to i64
  %474 = getelementptr inbounds [256 x i32]* %ftabCopy, i32 0, i64 %473
  %475 = load i32* %474, align 4
  %476 = add nsw i32 %475, -1
  store i32 %476, i32* %474, align 4
  %477 = load i32* %j, align 4
  %478 = trunc i32 %477 to i8
  %479 = load i32* %i, align 4
  %480 = sext i32 %479 to i64
  %481 = load i32** %1, align 8
  %482 = getelementptr inbounds i32* %481, i64 %480
  %483 = load i32* %482, align 4
  %484 = zext i32 %483 to i64
  %485 = load i8** %eclass8, align 8
  %486 = getelementptr inbounds i8* %485, i64 %484
  store i8 %478, i8* %486, align 1
  br label %487

; <label>:487                                     ; preds = %471
  %488 = load i32* %i, align 4
  %489 = add nsw i32 %488, 1
  store i32 %489, i32* %i, align 4
  br label %457

; <label>:490                                     ; preds = %457
  %491 = load i32* %j, align 4
  %492 = icmp slt i32 %491, 256
  br i1 %492, label %494, label %493

; <label>:493                                     ; preds = %490
  call void @BZ2_bz__AssertH__fail(i32 1005)
  br label %494

; <label>:494                                     ; preds = %493, %490
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @mainSort(i32* %ptr, i8* %block, i16* %quadrant, i32* %ftab, i32 %nblock, i32 %verb, i32* %budget) #0 {
  %1 = alloca i32*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i16*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %ss = alloca i32, align 4
  %sb = alloca i32, align 4
  %runningOrder = alloca [256 x i32], align 16
  %bigDone = alloca [256 x i8], align 16
  %copyStart = alloca [256 x i32], align 16
  %copyEnd = alloca [256 x i32], align 16
  %c1 = alloca i8, align 1
  %numQSorted = alloca i32, align 4
  %s = alloca i16, align 2
  %vv = alloca i32, align 4
  %h = alloca i32, align 4
  %lo = alloca i32, align 4
  %hi = alloca i32, align 4
  %bbStart = alloca i32, align 4
  %bbSize = alloca i32, align 4
  %shifts = alloca i32, align 4
  %a2update = alloca i32, align 4
  %qVal = alloca i16, align 2
  store i32* %ptr, i32** %1, align 8
  store i8* %block, i8** %2, align 8
  store i16* %quadrant, i16** %3, align 8
  store i32* %ftab, i32** %4, align 8
  store i32 %nblock, i32* %5, align 4
  store i32 %verb, i32* %6, align 4
  store i32* %budget, i32** %7, align 8
  %8 = load i32* %6, align 4
  %9 = icmp sge i32 %8, 4
  br i1 %9, label %10, label %13

; <label>:10                                      ; preds = %0
  %11 = load %struct._IO_FILE** @stderr, align 8
  %12 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([34 x i8]* @.str139, i32 0, i32 0))
  br label %13

; <label>:13                                      ; preds = %10, %0
  store i32 65536, i32* %i, align 4
  br label %14

; <label>:14                                      ; preds = %22, %13
  %15 = load i32* %i, align 4
  %16 = icmp sge i32 %15, 0
  br i1 %16, label %17, label %25

; <label>:17                                      ; preds = %14
  %18 = load i32* %i, align 4
  %19 = sext i32 %18 to i64
  %20 = load i32** %4, align 8
  %21 = getelementptr inbounds i32* %20, i64 %19
  store i32 0, i32* %21, align 4
  br label %22

; <label>:22                                      ; preds = %17
  %23 = load i32* %i, align 4
  %24 = add nsw i32 %23, -1
  store i32 %24, i32* %i, align 4
  br label %14

; <label>:25                                      ; preds = %14
  %26 = load i8** %2, align 8
  %27 = getelementptr inbounds i8* %26, i64 0
  %28 = load i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl i32 %29, 8
  store i32 %30, i32* %j, align 4
  %31 = load i32* %5, align 4
  %32 = sub nsw i32 %31, 1
  store i32 %32, i32* %i, align 4
  br label %33

; <label>:33                                      ; preds = %127, %25
  %34 = load i32* %i, align 4
  %35 = icmp sge i32 %34, 3
  br i1 %35, label %36, label %130

; <label>:36                                      ; preds = %33
  %37 = load i32* %i, align 4
  %38 = sext i32 %37 to i64
  %39 = load i16** %3, align 8
  %40 = getelementptr inbounds i16* %39, i64 %38
  store i16 0, i16* %40, align 2
  %41 = load i32* %j, align 4
  %42 = ashr i32 %41, 8
  %43 = load i32* %i, align 4
  %44 = sext i32 %43 to i64
  %45 = load i8** %2, align 8
  %46 = getelementptr inbounds i8* %45, i64 %44
  %47 = load i8* %46, align 1
  %48 = zext i8 %47 to i16
  %49 = zext i16 %48 to i32
  %50 = shl i32 %49, 8
  %51 = or i32 %42, %50
  store i32 %51, i32* %j, align 4
  %52 = load i32* %j, align 4
  %53 = sext i32 %52 to i64
  %54 = load i32** %4, align 8
  %55 = getelementptr inbounds i32* %54, i64 %53
  %56 = load i32* %55, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %55, align 4
  %58 = load i32* %i, align 4
  %59 = sub nsw i32 %58, 1
  %60 = sext i32 %59 to i64
  %61 = load i16** %3, align 8
  %62 = getelementptr inbounds i16* %61, i64 %60
  store i16 0, i16* %62, align 2
  %63 = load i32* %j, align 4
  %64 = ashr i32 %63, 8
  %65 = load i32* %i, align 4
  %66 = sub nsw i32 %65, 1
  %67 = sext i32 %66 to i64
  %68 = load i8** %2, align 8
  %69 = getelementptr inbounds i8* %68, i64 %67
  %70 = load i8* %69, align 1
  %71 = zext i8 %70 to i16
  %72 = zext i16 %71 to i32
  %73 = shl i32 %72, 8
  %74 = or i32 %64, %73
  store i32 %74, i32* %j, align 4
  %75 = load i32* %j, align 4
  %76 = sext i32 %75 to i64
  %77 = load i32** %4, align 8
  %78 = getelementptr inbounds i32* %77, i64 %76
  %79 = load i32* %78, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %78, align 4
  %81 = load i32* %i, align 4
  %82 = sub nsw i32 %81, 2
  %83 = sext i32 %82 to i64
  %84 = load i16** %3, align 8
  %85 = getelementptr inbounds i16* %84, i64 %83
  store i16 0, i16* %85, align 2
  %86 = load i32* %j, align 4
  %87 = ashr i32 %86, 8
  %88 = load i32* %i, align 4
  %89 = sub nsw i32 %88, 2
  %90 = sext i32 %89 to i64
  %91 = load i8** %2, align 8
  %92 = getelementptr inbounds i8* %91, i64 %90
  %93 = load i8* %92, align 1
  %94 = zext i8 %93 to i16
  %95 = zext i16 %94 to i32
  %96 = shl i32 %95, 8
  %97 = or i32 %87, %96
  store i32 %97, i32* %j, align 4
  %98 = load i32* %j, align 4
  %99 = sext i32 %98 to i64
  %100 = load i32** %4, align 8
  %101 = getelementptr inbounds i32* %100, i64 %99
  %102 = load i32* %101, align 4
  %103 = add i32 %102, 1
  store i32 %103, i32* %101, align 4
  %104 = load i32* %i, align 4
  %105 = sub nsw i32 %104, 3
  %106 = sext i32 %105 to i64
  %107 = load i16** %3, align 8
  %108 = getelementptr inbounds i16* %107, i64 %106
  store i16 0, i16* %108, align 2
  %109 = load i32* %j, align 4
  %110 = ashr i32 %109, 8
  %111 = load i32* %i, align 4
  %112 = sub nsw i32 %111, 3
  %113 = sext i32 %112 to i64
  %114 = load i8** %2, align 8
  %115 = getelementptr inbounds i8* %114, i64 %113
  %116 = load i8* %115, align 1
  %117 = zext i8 %116 to i16
  %118 = zext i16 %117 to i32
  %119 = shl i32 %118, 8
  %120 = or i32 %110, %119
  store i32 %120, i32* %j, align 4
  %121 = load i32* %j, align 4
  %122 = sext i32 %121 to i64
  %123 = load i32** %4, align 8
  %124 = getelementptr inbounds i32* %123, i64 %122
  %125 = load i32* %124, align 4
  %126 = add i32 %125, 1
  store i32 %126, i32* %124, align 4
  br label %127

; <label>:127                                     ; preds = %36
  %128 = load i32* %i, align 4
  %129 = sub nsw i32 %128, 4
  store i32 %129, i32* %i, align 4
  br label %33

; <label>:130                                     ; preds = %33
  br label %131

; <label>:131                                     ; preds = %156, %130
  %132 = load i32* %i, align 4
  %133 = icmp sge i32 %132, 0
  br i1 %133, label %134, label %159

; <label>:134                                     ; preds = %131
  %135 = load i32* %i, align 4
  %136 = sext i32 %135 to i64
  %137 = load i16** %3, align 8
  %138 = getelementptr inbounds i16* %137, i64 %136
  store i16 0, i16* %138, align 2
  %139 = load i32* %j, align 4
  %140 = ashr i32 %139, 8
  %141 = load i32* %i, align 4
  %142 = sext i32 %141 to i64
  %143 = load i8** %2, align 8
  %144 = getelementptr inbounds i8* %143, i64 %142
  %145 = load i8* %144, align 1
  %146 = zext i8 %145 to i16
  %147 = zext i16 %146 to i32
  %148 = shl i32 %147, 8
  %149 = or i32 %140, %148
  store i32 %149, i32* %j, align 4
  %150 = load i32* %j, align 4
  %151 = sext i32 %150 to i64
  %152 = load i32** %4, align 8
  %153 = getelementptr inbounds i32* %152, i64 %151
  %154 = load i32* %153, align 4
  %155 = add i32 %154, 1
  store i32 %155, i32* %153, align 4
  br label %156

; <label>:156                                     ; preds = %134
  %157 = load i32* %i, align 4
  %158 = add nsw i32 %157, -1
  store i32 %158, i32* %i, align 4
  br label %131

; <label>:159                                     ; preds = %131
  store i32 0, i32* %i, align 4
  br label %160

; <label>:160                                     ; preds = %181, %159
  %161 = load i32* %i, align 4
  %162 = icmp slt i32 %161, 34
  br i1 %162, label %163, label %184

; <label>:163                                     ; preds = %160
  %164 = load i32* %i, align 4
  %165 = sext i32 %164 to i64
  %166 = load i8** %2, align 8
  %167 = getelementptr inbounds i8* %166, i64 %165
  %168 = load i8* %167, align 1
  %169 = load i32* %5, align 4
  %170 = load i32* %i, align 4
  %171 = add nsw i32 %169, %170
  %172 = sext i32 %171 to i64
  %173 = load i8** %2, align 8
  %174 = getelementptr inbounds i8* %173, i64 %172
  store i8 %168, i8* %174, align 1
  %175 = load i32* %5, align 4
  %176 = load i32* %i, align 4
  %177 = add nsw i32 %175, %176
  %178 = sext i32 %177 to i64
  %179 = load i16** %3, align 8
  %180 = getelementptr inbounds i16* %179, i64 %178
  store i16 0, i16* %180, align 2
  br label %181

; <label>:181                                     ; preds = %163
  %182 = load i32* %i, align 4
  %183 = add nsw i32 %182, 1
  store i32 %183, i32* %i, align 4
  br label %160

; <label>:184                                     ; preds = %160
  %185 = load i32* %6, align 4
  %186 = icmp sge i32 %185, 4
  br i1 %186, label %187, label %190

; <label>:187                                     ; preds = %184
  %188 = load %struct._IO_FILE** @stderr, align 8
  %189 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %188, i8* getelementptr inbounds ([28 x i8]* @.str140, i32 0, i32 0))
  br label %190

; <label>:190                                     ; preds = %187, %184
  store i32 1, i32* %i, align 4
  br label %191

; <label>:191                                     ; preds = %207, %190
  %192 = load i32* %i, align 4
  %193 = icmp sle i32 %192, 65536
  br i1 %193, label %194, label %210

; <label>:194                                     ; preds = %191
  %195 = load i32* %i, align 4
  %196 = sub nsw i32 %195, 1
  %197 = sext i32 %196 to i64
  %198 = load i32** %4, align 8
  %199 = getelementptr inbounds i32* %198, i64 %197
  %200 = load i32* %199, align 4
  %201 = load i32* %i, align 4
  %202 = sext i32 %201 to i64
  %203 = load i32** %4, align 8
  %204 = getelementptr inbounds i32* %203, i64 %202
  %205 = load i32* %204, align 4
  %206 = add i32 %205, %200
  store i32 %206, i32* %204, align 4
  br label %207

; <label>:207                                     ; preds = %194
  %208 = load i32* %i, align 4
  %209 = add nsw i32 %208, 1
  store i32 %209, i32* %i, align 4
  br label %191

; <label>:210                                     ; preds = %191
  %211 = load i8** %2, align 8
  %212 = getelementptr inbounds i8* %211, i64 0
  %213 = load i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = shl i32 %214, 8
  %216 = trunc i32 %215 to i16
  store i16 %216, i16* %s, align 2
  %217 = load i32* %5, align 4
  %218 = sub nsw i32 %217, 1
  store i32 %218, i32* %i, align 4
  br label %219

; <label>:219                                     ; preds = %341, %210
  %220 = load i32* %i, align 4
  %221 = icmp sge i32 %220, 3
  br i1 %221, label %222, label %344

; <label>:222                                     ; preds = %219
  %223 = load i16* %s, align 2
  %224 = zext i16 %223 to i32
  %225 = ashr i32 %224, 8
  %226 = load i32* %i, align 4
  %227 = sext i32 %226 to i64
  %228 = load i8** %2, align 8
  %229 = getelementptr inbounds i8* %228, i64 %227
  %230 = load i8* %229, align 1
  %231 = zext i8 %230 to i32
  %232 = shl i32 %231, 8
  %233 = or i32 %225, %232
  %234 = trunc i32 %233 to i16
  store i16 %234, i16* %s, align 2
  %235 = load i16* %s, align 2
  %236 = zext i16 %235 to i64
  %237 = load i32** %4, align 8
  %238 = getelementptr inbounds i32* %237, i64 %236
  %239 = load i32* %238, align 4
  %240 = sub i32 %239, 1
  store i32 %240, i32* %j, align 4
  %241 = load i32* %j, align 4
  %242 = load i16* %s, align 2
  %243 = zext i16 %242 to i64
  %244 = load i32** %4, align 8
  %245 = getelementptr inbounds i32* %244, i64 %243
  store i32 %241, i32* %245, align 4
  %246 = load i32* %i, align 4
  %247 = load i32* %j, align 4
  %248 = sext i32 %247 to i64
  %249 = load i32** %1, align 8
  %250 = getelementptr inbounds i32* %249, i64 %248
  store i32 %246, i32* %250, align 4
  %251 = load i16* %s, align 2
  %252 = zext i16 %251 to i32
  %253 = ashr i32 %252, 8
  %254 = load i32* %i, align 4
  %255 = sub nsw i32 %254, 1
  %256 = sext i32 %255 to i64
  %257 = load i8** %2, align 8
  %258 = getelementptr inbounds i8* %257, i64 %256
  %259 = load i8* %258, align 1
  %260 = zext i8 %259 to i32
  %261 = shl i32 %260, 8
  %262 = or i32 %253, %261
  %263 = trunc i32 %262 to i16
  store i16 %263, i16* %s, align 2
  %264 = load i16* %s, align 2
  %265 = zext i16 %264 to i64
  %266 = load i32** %4, align 8
  %267 = getelementptr inbounds i32* %266, i64 %265
  %268 = load i32* %267, align 4
  %269 = sub i32 %268, 1
  store i32 %269, i32* %j, align 4
  %270 = load i32* %j, align 4
  %271 = load i16* %s, align 2
  %272 = zext i16 %271 to i64
  %273 = load i32** %4, align 8
  %274 = getelementptr inbounds i32* %273, i64 %272
  store i32 %270, i32* %274, align 4
  %275 = load i32* %i, align 4
  %276 = sub nsw i32 %275, 1
  %277 = load i32* %j, align 4
  %278 = sext i32 %277 to i64
  %279 = load i32** %1, align 8
  %280 = getelementptr inbounds i32* %279, i64 %278
  store i32 %276, i32* %280, align 4
  %281 = load i16* %s, align 2
  %282 = zext i16 %281 to i32
  %283 = ashr i32 %282, 8
  %284 = load i32* %i, align 4
  %285 = sub nsw i32 %284, 2
  %286 = sext i32 %285 to i64
  %287 = load i8** %2, align 8
  %288 = getelementptr inbounds i8* %287, i64 %286
  %289 = load i8* %288, align 1
  %290 = zext i8 %289 to i32
  %291 = shl i32 %290, 8
  %292 = or i32 %283, %291
  %293 = trunc i32 %292 to i16
  store i16 %293, i16* %s, align 2
  %294 = load i16* %s, align 2
  %295 = zext i16 %294 to i64
  %296 = load i32** %4, align 8
  %297 = getelementptr inbounds i32* %296, i64 %295
  %298 = load i32* %297, align 4
  %299 = sub i32 %298, 1
  store i32 %299, i32* %j, align 4
  %300 = load i32* %j, align 4
  %301 = load i16* %s, align 2
  %302 = zext i16 %301 to i64
  %303 = load i32** %4, align 8
  %304 = getelementptr inbounds i32* %303, i64 %302
  store i32 %300, i32* %304, align 4
  %305 = load i32* %i, align 4
  %306 = sub nsw i32 %305, 2
  %307 = load i32* %j, align 4
  %308 = sext i32 %307 to i64
  %309 = load i32** %1, align 8
  %310 = getelementptr inbounds i32* %309, i64 %308
  store i32 %306, i32* %310, align 4
  %311 = load i16* %s, align 2
  %312 = zext i16 %311 to i32
  %313 = ashr i32 %312, 8
  %314 = load i32* %i, align 4
  %315 = sub nsw i32 %314, 3
  %316 = sext i32 %315 to i64
  %317 = load i8** %2, align 8
  %318 = getelementptr inbounds i8* %317, i64 %316
  %319 = load i8* %318, align 1
  %320 = zext i8 %319 to i32
  %321 = shl i32 %320, 8
  %322 = or i32 %313, %321
  %323 = trunc i32 %322 to i16
  store i16 %323, i16* %s, align 2
  %324 = load i16* %s, align 2
  %325 = zext i16 %324 to i64
  %326 = load i32** %4, align 8
  %327 = getelementptr inbounds i32* %326, i64 %325
  %328 = load i32* %327, align 4
  %329 = sub i32 %328, 1
  store i32 %329, i32* %j, align 4
  %330 = load i32* %j, align 4
  %331 = load i16* %s, align 2
  %332 = zext i16 %331 to i64
  %333 = load i32** %4, align 8
  %334 = getelementptr inbounds i32* %333, i64 %332
  store i32 %330, i32* %334, align 4
  %335 = load i32* %i, align 4
  %336 = sub nsw i32 %335, 3
  %337 = load i32* %j, align 4
  %338 = sext i32 %337 to i64
  %339 = load i32** %1, align 8
  %340 = getelementptr inbounds i32* %339, i64 %338
  store i32 %336, i32* %340, align 4
  br label %341

; <label>:341                                     ; preds = %222
  %342 = load i32* %i, align 4
  %343 = sub nsw i32 %342, 4
  store i32 %343, i32* %i, align 4
  br label %219

; <label>:344                                     ; preds = %219
  br label %345

; <label>:345                                     ; preds = %377, %344
  %346 = load i32* %i, align 4
  %347 = icmp sge i32 %346, 0
  br i1 %347, label %348, label %380

; <label>:348                                     ; preds = %345
  %349 = load i16* %s, align 2
  %350 = zext i16 %349 to i32
  %351 = ashr i32 %350, 8
  %352 = load i32* %i, align 4
  %353 = sext i32 %352 to i64
  %354 = load i8** %2, align 8
  %355 = getelementptr inbounds i8* %354, i64 %353
  %356 = load i8* %355, align 1
  %357 = zext i8 %356 to i32
  %358 = shl i32 %357, 8
  %359 = or i32 %351, %358
  %360 = trunc i32 %359 to i16
  store i16 %360, i16* %s, align 2
  %361 = load i16* %s, align 2
  %362 = zext i16 %361 to i64
  %363 = load i32** %4, align 8
  %364 = getelementptr inbounds i32* %363, i64 %362
  %365 = load i32* %364, align 4
  %366 = sub i32 %365, 1
  store i32 %366, i32* %j, align 4
  %367 = load i32* %j, align 4
  %368 = load i16* %s, align 2
  %369 = zext i16 %368 to i64
  %370 = load i32** %4, align 8
  %371 = getelementptr inbounds i32* %370, i64 %369
  store i32 %367, i32* %371, align 4
  %372 = load i32* %i, align 4
  %373 = load i32* %j, align 4
  %374 = sext i32 %373 to i64
  %375 = load i32** %1, align 8
  %376 = getelementptr inbounds i32* %375, i64 %374
  store i32 %372, i32* %376, align 4
  br label %377

; <label>:377                                     ; preds = %348
  %378 = load i32* %i, align 4
  %379 = add nsw i32 %378, -1
  store i32 %379, i32* %i, align 4
  br label %345

; <label>:380                                     ; preds = %345
  store i32 0, i32* %i, align 4
  br label %381

; <label>:381                                     ; preds = %392, %380
  %382 = load i32* %i, align 4
  %383 = icmp sle i32 %382, 255
  br i1 %383, label %384, label %395

; <label>:384                                     ; preds = %381
  %385 = load i32* %i, align 4
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds [256 x i8]* %bigDone, i32 0, i64 %386
  store i8 0, i8* %387, align 1
  %388 = load i32* %i, align 4
  %389 = load i32* %i, align 4
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds [256 x i32]* %runningOrder, i32 0, i64 %390
  store i32 %388, i32* %391, align 4
  br label %392

; <label>:392                                     ; preds = %384
  %393 = load i32* %i, align 4
  %394 = add nsw i32 %393, 1
  store i32 %394, i32* %i, align 4
  br label %381

; <label>:395                                     ; preds = %381
  store i32 1, i32* %h, align 4
  br label %396

; <label>:396                                     ; preds = %400, %395
  %397 = load i32* %h, align 4
  %398 = mul nsw i32 3, %397
  %399 = add nsw i32 %398, 1
  store i32 %399, i32* %h, align 4
  br label %400

; <label>:400                                     ; preds = %396
  %401 = load i32* %h, align 4
  %402 = icmp sle i32 %401, 256
  br i1 %402, label %396, label %403

; <label>:403                                     ; preds = %400
  br label %404

; <label>:404                                     ; preds = %486, %403
  %405 = load i32* %h, align 4
  %406 = sdiv i32 %405, 3
  store i32 %406, i32* %h, align 4
  %407 = load i32* %h, align 4
  store i32 %407, i32* %i, align 4
  br label %408

; <label>:408                                     ; preds = %482, %404
  %409 = load i32* %i, align 4
  %410 = icmp sle i32 %409, 255
  br i1 %410, label %411, label %485

; <label>:411                                     ; preds = %408
  %412 = load i32* %i, align 4
  %413 = sext i32 %412 to i64
  %414 = getelementptr inbounds [256 x i32]* %runningOrder, i32 0, i64 %413
  %415 = load i32* %414, align 4
  store i32 %415, i32* %vv, align 4
  %416 = load i32* %i, align 4
  store i32 %416, i32* %j, align 4
  br label %417

; <label>:417                                     ; preds = %475, %411
  %418 = load i32* %j, align 4
  %419 = load i32* %h, align 4
  %420 = sub nsw i32 %418, %419
  %421 = sext i32 %420 to i64
  %422 = getelementptr inbounds [256 x i32]* %runningOrder, i32 0, i64 %421
  %423 = load i32* %422, align 4
  %424 = add nsw i32 %423, 1
  %425 = shl i32 %424, 8
  %426 = sext i32 %425 to i64
  %427 = load i32** %4, align 8
  %428 = getelementptr inbounds i32* %427, i64 %426
  %429 = load i32* %428, align 4
  %430 = load i32* %j, align 4
  %431 = load i32* %h, align 4
  %432 = sub nsw i32 %430, %431
  %433 = sext i32 %432 to i64
  %434 = getelementptr inbounds [256 x i32]* %runningOrder, i32 0, i64 %433
  %435 = load i32* %434, align 4
  %436 = shl i32 %435, 8
  %437 = sext i32 %436 to i64
  %438 = load i32** %4, align 8
  %439 = getelementptr inbounds i32* %438, i64 %437
  %440 = load i32* %439, align 4
  %441 = sub i32 %429, %440
  %442 = load i32* %vv, align 4
  %443 = add nsw i32 %442, 1
  %444 = shl i32 %443, 8
  %445 = sext i32 %444 to i64
  %446 = load i32** %4, align 8
  %447 = getelementptr inbounds i32* %446, i64 %445
  %448 = load i32* %447, align 4
  %449 = load i32* %vv, align 4
  %450 = shl i32 %449, 8
  %451 = sext i32 %450 to i64
  %452 = load i32** %4, align 8
  %453 = getelementptr inbounds i32* %452, i64 %451
  %454 = load i32* %453, align 4
  %455 = sub i32 %448, %454
  %456 = icmp ugt i32 %441, %455
  br i1 %456, label %457, label %476

; <label>:457                                     ; preds = %417
  %458 = load i32* %j, align 4
  %459 = load i32* %h, align 4
  %460 = sub nsw i32 %458, %459
  %461 = sext i32 %460 to i64
  %462 = getelementptr inbounds [256 x i32]* %runningOrder, i32 0, i64 %461
  %463 = load i32* %462, align 4
  %464 = load i32* %j, align 4
  %465 = sext i32 %464 to i64
  %466 = getelementptr inbounds [256 x i32]* %runningOrder, i32 0, i64 %465
  store i32 %463, i32* %466, align 4
  %467 = load i32* %j, align 4
  %468 = load i32* %h, align 4
  %469 = sub nsw i32 %467, %468
  store i32 %469, i32* %j, align 4
  %470 = load i32* %j, align 4
  %471 = load i32* %h, align 4
  %472 = sub nsw i32 %471, 1
  %473 = icmp sle i32 %470, %472
  br i1 %473, label %474, label %475

; <label>:474                                     ; preds = %457
  br label %477

; <label>:475                                     ; preds = %457
  br label %417

; <label>:476                                     ; preds = %417
  br label %477

; <label>:477                                     ; preds = %476, %474
  %478 = load i32* %vv, align 4
  %479 = load i32* %j, align 4
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds [256 x i32]* %runningOrder, i32 0, i64 %480
  store i32 %478, i32* %481, align 4
  br label %482

; <label>:482                                     ; preds = %477
  %483 = load i32* %i, align 4
  %484 = add nsw i32 %483, 1
  store i32 %484, i32* %i, align 4
  br label %408

; <label>:485                                     ; preds = %408
  br label %486

; <label>:486                                     ; preds = %485
  %487 = load i32* %h, align 4
  %488 = icmp ne i32 %487, 1
  br i1 %488, label %404, label %489

; <label>:489                                     ; preds = %486
  store i32 0, i32* %numQSorted, align 4
  store i32 0, i32* %i, align 4
  br label %490

; <label>:490                                     ; preds = %849, %489
  %491 = load i32* %i, align 4
  %492 = icmp sle i32 %491, 255
  br i1 %492, label %493, label %852

; <label>:493                                     ; preds = %490
  %494 = load i32* %i, align 4
  %495 = sext i32 %494 to i64
  %496 = getelementptr inbounds [256 x i32]* %runningOrder, i32 0, i64 %495
  %497 = load i32* %496, align 4
  store i32 %497, i32* %ss, align 4
  store i32 0, i32* %j, align 4
  br label %498

; <label>:498                                     ; preds = %576, %493
  %499 = load i32* %j, align 4
  %500 = icmp sle i32 %499, 255
  br i1 %500, label %501, label %579

; <label>:501                                     ; preds = %498
  %502 = load i32* %j, align 4
  %503 = load i32* %ss, align 4
  %504 = icmp ne i32 %502, %503
  br i1 %504, label %505, label %575

; <label>:505                                     ; preds = %501
  %506 = load i32* %ss, align 4
  %507 = shl i32 %506, 8
  %508 = load i32* %j, align 4
  %509 = add nsw i32 %507, %508
  store i32 %509, i32* %sb, align 4
  %510 = load i32* %sb, align 4
  %511 = sext i32 %510 to i64
  %512 = load i32** %4, align 8
  %513 = getelementptr inbounds i32* %512, i64 %511
  %514 = load i32* %513, align 4
  %515 = and i32 %514, 2097152
  %516 = icmp ne i32 %515, 0
  br i1 %516, label %568, label %517

; <label>:517                                     ; preds = %505
  %518 = load i32* %sb, align 4
  %519 = sext i32 %518 to i64
  %520 = load i32** %4, align 8
  %521 = getelementptr inbounds i32* %520, i64 %519
  %522 = load i32* %521, align 4
  %523 = and i32 %522, -2097153
  store i32 %523, i32* %lo, align 4
  %524 = load i32* %sb, align 4
  %525 = add nsw i32 %524, 1
  %526 = sext i32 %525 to i64
  %527 = load i32** %4, align 8
  %528 = getelementptr inbounds i32* %527, i64 %526
  %529 = load i32* %528, align 4
  %530 = and i32 %529, -2097153
  %531 = sub i32 %530, 1
  store i32 %531, i32* %hi, align 4
  %532 = load i32* %hi, align 4
  %533 = load i32* %lo, align 4
  %534 = icmp sgt i32 %532, %533
  br i1 %534, label %535, label %567

; <label>:535                                     ; preds = %517
  %536 = load i32* %6, align 4
  %537 = icmp sge i32 %536, 4
  br i1 %537, label %538, label %548

; <label>:538                                     ; preds = %535
  %539 = load %struct._IO_FILE** @stderr, align 8
  %540 = load i32* %ss, align 4
  %541 = load i32* %j, align 4
  %542 = load i32* %numQSorted, align 4
  %543 = load i32* %hi, align 4
  %544 = load i32* %lo, align 4
  %545 = sub nsw i32 %543, %544
  %546 = add nsw i32 %545, 1
  %547 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %539, i8* getelementptr inbounds ([48 x i8]* @.str141, i32 0, i32 0), i32 %540, i32 %541, i32 %542, i32 %546)
  br label %548

; <label>:548                                     ; preds = %538, %535
  %549 = load i32** %1, align 8
  %550 = load i8** %2, align 8
  %551 = load i16** %3, align 8
  %552 = load i32* %5, align 4
  %553 = load i32* %lo, align 4
  %554 = load i32* %hi, align 4
  %555 = load i32** %7, align 8
  call void @mainQSort3(i32* %549, i8* %550, i16* %551, i32 %552, i32 %553, i32 %554, i32 2, i32* %555)
  %556 = load i32* %hi, align 4
  %557 = load i32* %lo, align 4
  %558 = sub nsw i32 %556, %557
  %559 = add nsw i32 %558, 1
  %560 = load i32* %numQSorted, align 4
  %561 = add nsw i32 %560, %559
  store i32 %561, i32* %numQSorted, align 4
  %562 = load i32** %7, align 8
  %563 = load i32* %562, align 4
  %564 = icmp slt i32 %563, 0
  br i1 %564, label %565, label %566

; <label>:565                                     ; preds = %548
  br label %863

; <label>:566                                     ; preds = %548
  br label %567

; <label>:567                                     ; preds = %566, %517
  br label %568

; <label>:568                                     ; preds = %567, %505
  %569 = load i32* %sb, align 4
  %570 = sext i32 %569 to i64
  %571 = load i32** %4, align 8
  %572 = getelementptr inbounds i32* %571, i64 %570
  %573 = load i32* %572, align 4
  %574 = or i32 %573, 2097152
  store i32 %574, i32* %572, align 4
  br label %575

; <label>:575                                     ; preds = %568, %501
  br label %576

; <label>:576                                     ; preds = %575
  %577 = load i32* %j, align 4
  %578 = add nsw i32 %577, 1
  store i32 %578, i32* %j, align 4
  br label %498

; <label>:579                                     ; preds = %498
  %580 = load i32* %ss, align 4
  %581 = sext i32 %580 to i64
  %582 = getelementptr inbounds [256 x i8]* %bigDone, i32 0, i64 %581
  %583 = load i8* %582, align 1
  %584 = icmp ne i8 %583, 0
  br i1 %584, label %585, label %586

; <label>:585                                     ; preds = %579
  call void @BZ2_bz__AssertH__fail(i32 1006)
  br label %586

; <label>:586                                     ; preds = %585, %579
  store i32 0, i32* %j, align 4
  br label %587

; <label>:587                                     ; preds = %617, %586
  %588 = load i32* %j, align 4
  %589 = icmp sle i32 %588, 255
  br i1 %589, label %590, label %620

; <label>:590                                     ; preds = %587
  %591 = load i32* %j, align 4
  %592 = shl i32 %591, 8
  %593 = load i32* %ss, align 4
  %594 = add nsw i32 %592, %593
  %595 = sext i32 %594 to i64
  %596 = load i32** %4, align 8
  %597 = getelementptr inbounds i32* %596, i64 %595
  %598 = load i32* %597, align 4
  %599 = and i32 %598, -2097153
  %600 = load i32* %j, align 4
  %601 = sext i32 %600 to i64
  %602 = getelementptr inbounds [256 x i32]* %copyStart, i32 0, i64 %601
  store i32 %599, i32* %602, align 4
  %603 = load i32* %j, align 4
  %604 = shl i32 %603, 8
  %605 = load i32* %ss, align 4
  %606 = add nsw i32 %604, %605
  %607 = add nsw i32 %606, 1
  %608 = sext i32 %607 to i64
  %609 = load i32** %4, align 8
  %610 = getelementptr inbounds i32* %609, i64 %608
  %611 = load i32* %610, align 4
  %612 = and i32 %611, -2097153
  %613 = sub i32 %612, 1
  %614 = load i32* %j, align 4
  %615 = sext i32 %614 to i64
  %616 = getelementptr inbounds [256 x i32]* %copyEnd, i32 0, i64 %615
  store i32 %613, i32* %616, align 4
  br label %617

; <label>:617                                     ; preds = %590
  %618 = load i32* %j, align 4
  %619 = add nsw i32 %618, 1
  store i32 %619, i32* %j, align 4
  br label %587

; <label>:620                                     ; preds = %587
  %621 = load i32* %ss, align 4
  %622 = shl i32 %621, 8
  %623 = sext i32 %622 to i64
  %624 = load i32** %4, align 8
  %625 = getelementptr inbounds i32* %624, i64 %623
  %626 = load i32* %625, align 4
  %627 = and i32 %626, -2097153
  store i32 %627, i32* %j, align 4
  br label %628

; <label>:628                                     ; preds = %670, %620
  %629 = load i32* %j, align 4
  %630 = load i32* %ss, align 4
  %631 = sext i32 %630 to i64
  %632 = getelementptr inbounds [256 x i32]* %copyStart, i32 0, i64 %631
  %633 = load i32* %632, align 4
  %634 = icmp slt i32 %629, %633
  br i1 %634, label %635, label %673

; <label>:635                                     ; preds = %628
  %636 = load i32* %j, align 4
  %637 = sext i32 %636 to i64
  %638 = load i32** %1, align 8
  %639 = getelementptr inbounds i32* %638, i64 %637
  %640 = load i32* %639, align 4
  %641 = sub i32 %640, 1
  store i32 %641, i32* %k, align 4
  %642 = load i32* %k, align 4
  %643 = icmp slt i32 %642, 0
  br i1 %643, label %644, label %648

; <label>:644                                     ; preds = %635
  %645 = load i32* %5, align 4
  %646 = load i32* %k, align 4
  %647 = add nsw i32 %646, %645
  store i32 %647, i32* %k, align 4
  br label %648

; <label>:648                                     ; preds = %644, %635
  %649 = load i32* %k, align 4
  %650 = sext i32 %649 to i64
  %651 = load i8** %2, align 8
  %652 = getelementptr inbounds i8* %651, i64 %650
  %653 = load i8* %652, align 1
  store i8 %653, i8* %c1, align 1
  %654 = load i8* %c1, align 1
  %655 = zext i8 %654 to i64
  %656 = getelementptr inbounds [256 x i8]* %bigDone, i32 0, i64 %655
  %657 = load i8* %656, align 1
  %658 = icmp ne i8 %657, 0
  br i1 %658, label %669, label %659

; <label>:659                                     ; preds = %648
  %660 = load i32* %k, align 4
  %661 = load i8* %c1, align 1
  %662 = zext i8 %661 to i64
  %663 = getelementptr inbounds [256 x i32]* %copyStart, i32 0, i64 %662
  %664 = load i32* %663, align 4
  %665 = add nsw i32 %664, 1
  store i32 %665, i32* %663, align 4
  %666 = sext i32 %664 to i64
  %667 = load i32** %1, align 8
  %668 = getelementptr inbounds i32* %667, i64 %666
  store i32 %660, i32* %668, align 4
  br label %669

; <label>:669                                     ; preds = %659, %648
  br label %670

; <label>:670                                     ; preds = %669
  %671 = load i32* %j, align 4
  %672 = add nsw i32 %671, 1
  store i32 %672, i32* %j, align 4
  br label %628

; <label>:673                                     ; preds = %628
  %674 = load i32* %ss, align 4
  %675 = add nsw i32 %674, 1
  %676 = shl i32 %675, 8
  %677 = sext i32 %676 to i64
  %678 = load i32** %4, align 8
  %679 = getelementptr inbounds i32* %678, i64 %677
  %680 = load i32* %679, align 4
  %681 = and i32 %680, -2097153
  %682 = sub i32 %681, 1
  store i32 %682, i32* %j, align 4
  br label %683

; <label>:683                                     ; preds = %725, %673
  %684 = load i32* %j, align 4
  %685 = load i32* %ss, align 4
  %686 = sext i32 %685 to i64
  %687 = getelementptr inbounds [256 x i32]* %copyEnd, i32 0, i64 %686
  %688 = load i32* %687, align 4
  %689 = icmp sgt i32 %684, %688
  br i1 %689, label %690, label %728

; <label>:690                                     ; preds = %683
  %691 = load i32* %j, align 4
  %692 = sext i32 %691 to i64
  %693 = load i32** %1, align 8
  %694 = getelementptr inbounds i32* %693, i64 %692
  %695 = load i32* %694, align 4
  %696 = sub i32 %695, 1
  store i32 %696, i32* %k, align 4
  %697 = load i32* %k, align 4
  %698 = icmp slt i32 %697, 0
  br i1 %698, label %699, label %703

; <label>:699                                     ; preds = %690
  %700 = load i32* %5, align 4
  %701 = load i32* %k, align 4
  %702 = add nsw i32 %701, %700
  store i32 %702, i32* %k, align 4
  br label %703

; <label>:703                                     ; preds = %699, %690
  %704 = load i32* %k, align 4
  %705 = sext i32 %704 to i64
  %706 = load i8** %2, align 8
  %707 = getelementptr inbounds i8* %706, i64 %705
  %708 = load i8* %707, align 1
  store i8 %708, i8* %c1, align 1
  %709 = load i8* %c1, align 1
  %710 = zext i8 %709 to i64
  %711 = getelementptr inbounds [256 x i8]* %bigDone, i32 0, i64 %710
  %712 = load i8* %711, align 1
  %713 = icmp ne i8 %712, 0
  br i1 %713, label %724, label %714

; <label>:714                                     ; preds = %703
  %715 = load i32* %k, align 4
  %716 = load i8* %c1, align 1
  %717 = zext i8 %716 to i64
  %718 = getelementptr inbounds [256 x i32]* %copyEnd, i32 0, i64 %717
  %719 = load i32* %718, align 4
  %720 = add nsw i32 %719, -1
  store i32 %720, i32* %718, align 4
  %721 = sext i32 %719 to i64
  %722 = load i32** %1, align 8
  %723 = getelementptr inbounds i32* %722, i64 %721
  store i32 %715, i32* %723, align 4
  br label %724

; <label>:724                                     ; preds = %714, %703
  br label %725

; <label>:725                                     ; preds = %724
  %726 = load i32* %j, align 4
  %727 = add nsw i32 %726, -1
  store i32 %727, i32* %j, align 4
  br label %683

; <label>:728                                     ; preds = %683
  %729 = load i32* %ss, align 4
  %730 = sext i32 %729 to i64
  %731 = getelementptr inbounds [256 x i32]* %copyStart, i32 0, i64 %730
  %732 = load i32* %731, align 4
  %733 = sub nsw i32 %732, 1
  %734 = load i32* %ss, align 4
  %735 = sext i32 %734 to i64
  %736 = getelementptr inbounds [256 x i32]* %copyEnd, i32 0, i64 %735
  %737 = load i32* %736, align 4
  %738 = icmp eq i32 %733, %737
  br i1 %738, label %754, label %739

; <label>:739                                     ; preds = %728
  %740 = load i32* %ss, align 4
  %741 = sext i32 %740 to i64
  %742 = getelementptr inbounds [256 x i32]* %copyStart, i32 0, i64 %741
  %743 = load i32* %742, align 4
  %744 = icmp eq i32 %743, 0
  br i1 %744, label %745, label %753

; <label>:745                                     ; preds = %739
  %746 = load i32* %ss, align 4
  %747 = sext i32 %746 to i64
  %748 = getelementptr inbounds [256 x i32]* %copyEnd, i32 0, i64 %747
  %749 = load i32* %748, align 4
  %750 = load i32* %5, align 4
  %751 = sub nsw i32 %750, 1
  %752 = icmp eq i32 %749, %751
  br i1 %752, label %754, label %753

; <label>:753                                     ; preds = %745, %739
  call void @BZ2_bz__AssertH__fail(i32 1007)
  br label %754

; <label>:754                                     ; preds = %753, %745, %728
  store i32 0, i32* %j, align 4
  br label %755

; <label>:755                                     ; preds = %768, %754
  %756 = load i32* %j, align 4
  %757 = icmp sle i32 %756, 255
  br i1 %757, label %758, label %771

; <label>:758                                     ; preds = %755
  %759 = load i32* %j, align 4
  %760 = shl i32 %759, 8
  %761 = load i32* %ss, align 4
  %762 = add nsw i32 %760, %761
  %763 = sext i32 %762 to i64
  %764 = load i32** %4, align 8
  %765 = getelementptr inbounds i32* %764, i64 %763
  %766 = load i32* %765, align 4
  %767 = or i32 %766, 2097152
  store i32 %767, i32* %765, align 4
  br label %768

; <label>:768                                     ; preds = %758
  %769 = load i32* %j, align 4
  %770 = add nsw i32 %769, 1
  store i32 %770, i32* %j, align 4
  br label %755

; <label>:771                                     ; preds = %755
  %772 = load i32* %ss, align 4
  %773 = sext i32 %772 to i64
  %774 = getelementptr inbounds [256 x i8]* %bigDone, i32 0, i64 %773
  store i8 1, i8* %774, align 1
  %775 = load i32* %i, align 4
  %776 = icmp slt i32 %775, 255
  br i1 %776, label %777, label %848

; <label>:777                                     ; preds = %771
  %778 = load i32* %ss, align 4
  %779 = shl i32 %778, 8
  %780 = sext i32 %779 to i64
  %781 = load i32** %4, align 8
  %782 = getelementptr inbounds i32* %781, i64 %780
  %783 = load i32* %782, align 4
  %784 = and i32 %783, -2097153
  store i32 %784, i32* %bbStart, align 4
  %785 = load i32* %ss, align 4
  %786 = add nsw i32 %785, 1
  %787 = shl i32 %786, 8
  %788 = sext i32 %787 to i64
  %789 = load i32** %4, align 8
  %790 = getelementptr inbounds i32* %789, i64 %788
  %791 = load i32* %790, align 4
  %792 = and i32 %791, -2097153
  %793 = load i32* %bbStart, align 4
  %794 = sub i32 %792, %793
  store i32 %794, i32* %bbSize, align 4
  store i32 0, i32* %shifts, align 4
  br label %795

; <label>:795                                     ; preds = %800, %777
  %796 = load i32* %bbSize, align 4
  %797 = load i32* %shifts, align 4
  %798 = ashr i32 %796, %797
  %799 = icmp sgt i32 %798, 65534
  br i1 %799, label %800, label %803

; <label>:800                                     ; preds = %795
  %801 = load i32* %shifts, align 4
  %802 = add nsw i32 %801, 1
  store i32 %802, i32* %shifts, align 4
  br label %795

; <label>:803                                     ; preds = %795
  %804 = load i32* %bbSize, align 4
  %805 = sub nsw i32 %804, 1
  store i32 %805, i32* %j, align 4
  br label %806

; <label>:806                                     ; preds = %837, %803
  %807 = load i32* %j, align 4
  %808 = icmp sge i32 %807, 0
  br i1 %808, label %809, label %840

; <label>:809                                     ; preds = %806
  %810 = load i32* %bbStart, align 4
  %811 = load i32* %j, align 4
  %812 = add nsw i32 %810, %811
  %813 = sext i32 %812 to i64
  %814 = load i32** %1, align 8
  %815 = getelementptr inbounds i32* %814, i64 %813
  %816 = load i32* %815, align 4
  store i32 %816, i32* %a2update, align 4
  %817 = load i32* %j, align 4
  %818 = load i32* %shifts, align 4
  %819 = ashr i32 %817, %818
  %820 = trunc i32 %819 to i16
  store i16 %820, i16* %qVal, align 2
  %821 = load i16* %qVal, align 2
  %822 = load i32* %a2update, align 4
  %823 = sext i32 %822 to i64
  %824 = load i16** %3, align 8
  %825 = getelementptr inbounds i16* %824, i64 %823
  store i16 %821, i16* %825, align 2
  %826 = load i32* %a2update, align 4
  %827 = icmp slt i32 %826, 34
  br i1 %827, label %828, label %836

; <label>:828                                     ; preds = %809
  %829 = load i16* %qVal, align 2
  %830 = load i32* %a2update, align 4
  %831 = load i32* %5, align 4
  %832 = add nsw i32 %830, %831
  %833 = sext i32 %832 to i64
  %834 = load i16** %3, align 8
  %835 = getelementptr inbounds i16* %834, i64 %833
  store i16 %829, i16* %835, align 2
  br label %836

; <label>:836                                     ; preds = %828, %809
  br label %837

; <label>:837                                     ; preds = %836
  %838 = load i32* %j, align 4
  %839 = add nsw i32 %838, -1
  store i32 %839, i32* %j, align 4
  br label %806

; <label>:840                                     ; preds = %806
  %841 = load i32* %bbSize, align 4
  %842 = sub nsw i32 %841, 1
  %843 = load i32* %shifts, align 4
  %844 = ashr i32 %842, %843
  %845 = icmp sle i32 %844, 65535
  br i1 %845, label %847, label %846

; <label>:846                                     ; preds = %840
  call void @BZ2_bz__AssertH__fail(i32 1002)
  br label %847

; <label>:847                                     ; preds = %846, %840
  br label %848

; <label>:848                                     ; preds = %847, %771
  br label %849

; <label>:849                                     ; preds = %848
  %850 = load i32* %i, align 4
  %851 = add nsw i32 %850, 1
  store i32 %851, i32* %i, align 4
  br label %490

; <label>:852                                     ; preds = %490
  %853 = load i32* %6, align 4
  %854 = icmp sge i32 %853, 4
  br i1 %854, label %855, label %863

; <label>:855                                     ; preds = %852
  %856 = load %struct._IO_FILE** @stderr, align 8
  %857 = load i32* %5, align 4
  %858 = load i32* %numQSorted, align 4
  %859 = load i32* %5, align 4
  %860 = load i32* %numQSorted, align 4
  %861 = sub nsw i32 %859, %860
  %862 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %856, i8* getelementptr inbounds ([44 x i8]* @.str142, i32 0, i32 0), i32 %857, i32 %858, i32 %861)
  br label %863

; <label>:863                                     ; preds = %565, %855, %852
  ret void
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define void @BZ2_bz__AssertH__fail(i32 %errcode) #0 {
  %1 = alloca i32, align 4
  store i32 %errcode, i32* %1, align 4
  %2 = load %struct._IO_FILE** @stderr, align 8
  %3 = load i32* %1, align 4
  %4 = call i8* @BZ2_bzlibVersion()
  %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([442 x i8]* @.str6, i32 0, i32 0), i32 %3, i8* %4)
  %6 = load i32* %1, align 4
  %7 = icmp eq i32 %6, 1007
  br i1 %7, label %8, label %11

; <label>:8                                       ; preds = %0
  %9 = load %struct._IO_FILE** @stderr, align 8
  %10 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([1057 x i8]* @.str7, i32 0, i32 0))
  br label %11

; <label>:11                                      ; preds = %8, %0
  call void @exit(i32 3) #9
  unreachable
                                                  ; No predecessors!
  ret void
}

; Function Attrs: nounwind uwtable
define void @BZ2_hbMakeCodeLengths(i8* %len, i32* %freq, i32 %alphaSize, i32 %maxLen) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i32*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %nNodes = alloca i32, align 4
  %nHeap = alloca i32, align 4
  %n1 = alloca i32, align 4
  %n2 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %tooLong = alloca i8, align 1
  %heap = alloca [260 x i32], align 16
  %weight = alloca [516 x i32], align 16
  %parent = alloca [516 x i32], align 16
  %zz = alloca i32, align 4
  %tmp = alloca i32, align 4
  %zz1 = alloca i32, align 4
  %yy = alloca i32, align 4
  %tmp2 = alloca i32, align 4
  %zz3 = alloca i32, align 4
  %yy4 = alloca i32, align 4
  %tmp5 = alloca i32, align 4
  %zz6 = alloca i32, align 4
  %tmp7 = alloca i32, align 4
  store i8* %len, i8** %1, align 8
  store i32* %freq, i32** %2, align 8
  store i32 %alphaSize, i32* %3, align 4
  store i32 %maxLen, i32* %4, align 4
  store i32 0, i32* %i, align 4
  br label %5

; <label>:5                                       ; preds = %30, %0
  %6 = load i32* %i, align 4
  %7 = load i32* %3, align 4
  %8 = icmp slt i32 %6, %7
  br i1 %8, label %9, label %33

; <label>:9                                       ; preds = %5
  %10 = load i32* %i, align 4
  %11 = sext i32 %10 to i64
  %12 = load i32** %2, align 8
  %13 = getelementptr inbounds i32* %12, i64 %11
  %14 = load i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %17

; <label>:16                                      ; preds = %9
  br label %23

; <label>:17                                      ; preds = %9
  %18 = load i32* %i, align 4
  %19 = sext i32 %18 to i64
  %20 = load i32** %2, align 8
  %21 = getelementptr inbounds i32* %20, i64 %19
  %22 = load i32* %21, align 4
  br label %23

; <label>:23                                      ; preds = %17, %16
  %24 = phi i32 [ 1, %16 ], [ %22, %17 ]
  %25 = shl i32 %24, 8
  %26 = load i32* %i, align 4
  %27 = add nsw i32 %26, 1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [516 x i32]* %weight, i32 0, i64 %28
  store i32 %25, i32* %29, align 4
  br label %30

; <label>:30                                      ; preds = %23
  %31 = load i32* %i, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %i, align 4
  br label %5

; <label>:33                                      ; preds = %5
  br label %34

; <label>:34                                      ; preds = %33, %404
  %35 = load i32* %3, align 4
  store i32 %35, i32* %nNodes, align 4
  store i32 0, i32* %nHeap, align 4
  %36 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 0
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds [516 x i32]* %weight, i32 0, i64 0
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds [516 x i32]* %parent, i32 0, i64 0
  store i32 -2, i32* %38, align 4
  store i32 1, i32* %i, align 4
  br label %39

; <label>:39                                      ; preds = %88, %34
  %40 = load i32* %i, align 4
  %41 = load i32* %3, align 4
  %42 = icmp sle i32 %40, %41
  br i1 %42, label %43, label %91

; <label>:43                                      ; preds = %39
  %44 = load i32* %i, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [516 x i32]* %parent, i32 0, i64 %45
  store i32 -1, i32* %46, align 4
  %47 = load i32* %nHeap, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %nHeap, align 4
  %49 = load i32* %i, align 4
  %50 = load i32* %nHeap, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %51
  store i32 %49, i32* %52, align 4
  %53 = load i32* %nHeap, align 4
  store i32 %53, i32* %zz, align 4
  %54 = load i32* %zz, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %55
  %57 = load i32* %56, align 4
  store i32 %57, i32* %tmp, align 4
  br label %58

; <label>:58                                      ; preds = %72, %43
  %59 = load i32* %tmp, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [516 x i32]* %weight, i32 0, i64 %60
  %62 = load i32* %61, align 4
  %63 = load i32* %zz, align 4
  %64 = ashr i32 %63, 1
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %65
  %67 = load i32* %66, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [516 x i32]* %weight, i32 0, i64 %68
  %70 = load i32* %69, align 4
  %71 = icmp slt i32 %62, %70
  br i1 %71, label %72, label %83

; <label>:72                                      ; preds = %58
  %73 = load i32* %zz, align 4
  %74 = ashr i32 %73, 1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %75
  %77 = load i32* %76, align 4
  %78 = load i32* %zz, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %79
  store i32 %77, i32* %80, align 4
  %81 = load i32* %zz, align 4
  %82 = ashr i32 %81, 1
  store i32 %82, i32* %zz, align 4
  br label %58

; <label>:83                                      ; preds = %58
  %84 = load i32* %tmp, align 4
  %85 = load i32* %zz, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %86
  store i32 %84, i32* %87, align 4
  br label %88

; <label>:88                                      ; preds = %83
  %89 = load i32* %i, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %i, align 4
  br label %39

; <label>:91                                      ; preds = %39
  %92 = load i32* %nHeap, align 4
  %93 = icmp slt i32 %92, 260
  br i1 %93, label %95, label %94

; <label>:94                                      ; preds = %91
  call void @BZ2_bz__AssertH__fail(i32 2001)
  br label %95

; <label>:95                                      ; preds = %94, %91
  br label %96

; <label>:96                                      ; preds = %333, %95
  %97 = load i32* %nHeap, align 4
  %98 = icmp sgt i32 %97, 1
  br i1 %98, label %99, label %338

; <label>:99                                      ; preds = %96
  %100 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 1
  %101 = load i32* %100, align 4
  store i32 %101, i32* %n1, align 4
  %102 = load i32* %nHeap, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %103
  %105 = load i32* %104, align 4
  %106 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 1
  store i32 %105, i32* %106, align 4
  %107 = load i32* %nHeap, align 4
  %108 = add nsw i32 %107, -1
  store i32 %108, i32* %nHeap, align 4
  store i32 1, i32* %zz1, align 4
  %109 = load i32* %zz1, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %110
  %112 = load i32* %111, align 4
  store i32 %112, i32* %tmp2, align 4
  br label %113

; <label>:113                                     ; preds = %99, %158
  %114 = load i32* %zz1, align 4
  %115 = shl i32 %114, 1
  store i32 %115, i32* %yy, align 4
  %116 = load i32* %yy, align 4
  %117 = load i32* %nHeap, align 4
  %118 = icmp sgt i32 %116, %117
  br i1 %118, label %119, label %120

; <label>:119                                     ; preds = %113
  br label %167

; <label>:120                                     ; preds = %113
  %121 = load i32* %yy, align 4
  %122 = load i32* %nHeap, align 4
  %123 = icmp slt i32 %121, %122
  br i1 %123, label %124, label %144

; <label>:124                                     ; preds = %120
  %125 = load i32* %yy, align 4
  %126 = add nsw i32 %125, 1
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %127
  %129 = load i32* %128, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds [516 x i32]* %weight, i32 0, i64 %130
  %132 = load i32* %131, align 4
  %133 = load i32* %yy, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %134
  %136 = load i32* %135, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [516 x i32]* %weight, i32 0, i64 %137
  %139 = load i32* %138, align 4
  %140 = icmp slt i32 %132, %139
  br i1 %140, label %141, label %144

; <label>:141                                     ; preds = %124
  %142 = load i32* %yy, align 4
  %143 = add nsw i32 %142, 1
  store i32 %143, i32* %yy, align 4
  br label %144

; <label>:144                                     ; preds = %141, %124, %120
  %145 = load i32* %tmp2, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds [516 x i32]* %weight, i32 0, i64 %146
  %148 = load i32* %147, align 4
  %149 = load i32* %yy, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %150
  %152 = load i32* %151, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [516 x i32]* %weight, i32 0, i64 %153
  %155 = load i32* %154, align 4
  %156 = icmp slt i32 %148, %155
  br i1 %156, label %157, label %158

; <label>:157                                     ; preds = %144
  br label %167

; <label>:158                                     ; preds = %144
  %159 = load i32* %yy, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %160
  %162 = load i32* %161, align 4
  %163 = load i32* %zz1, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %164
  store i32 %162, i32* %165, align 4
  %166 = load i32* %yy, align 4
  store i32 %166, i32* %zz1, align 4
  br label %113

; <label>:167                                     ; preds = %157, %119
  %168 = load i32* %tmp2, align 4
  %169 = load i32* %zz1, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %170
  store i32 %168, i32* %171, align 4
  %172 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 1
  %173 = load i32* %172, align 4
  store i32 %173, i32* %n2, align 4
  %174 = load i32* %nHeap, align 4
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %175
  %177 = load i32* %176, align 4
  %178 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 1
  store i32 %177, i32* %178, align 4
  %179 = load i32* %nHeap, align 4
  %180 = add nsw i32 %179, -1
  store i32 %180, i32* %nHeap, align 4
  store i32 1, i32* %zz3, align 4
  %181 = load i32* %zz3, align 4
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %182
  %184 = load i32* %183, align 4
  store i32 %184, i32* %tmp5, align 4
  br label %185

; <label>:185                                     ; preds = %167, %230
  %186 = load i32* %zz3, align 4
  %187 = shl i32 %186, 1
  store i32 %187, i32* %yy4, align 4
  %188 = load i32* %yy4, align 4
  %189 = load i32* %nHeap, align 4
  %190 = icmp sgt i32 %188, %189
  br i1 %190, label %191, label %192

; <label>:191                                     ; preds = %185
  br label %239

; <label>:192                                     ; preds = %185
  %193 = load i32* %yy4, align 4
  %194 = load i32* %nHeap, align 4
  %195 = icmp slt i32 %193, %194
  br i1 %195, label %196, label %216

; <label>:196                                     ; preds = %192
  %197 = load i32* %yy4, align 4
  %198 = add nsw i32 %197, 1
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %199
  %201 = load i32* %200, align 4
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds [516 x i32]* %weight, i32 0, i64 %202
  %204 = load i32* %203, align 4
  %205 = load i32* %yy4, align 4
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %206
  %208 = load i32* %207, align 4
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds [516 x i32]* %weight, i32 0, i64 %209
  %211 = load i32* %210, align 4
  %212 = icmp slt i32 %204, %211
  br i1 %212, label %213, label %216

; <label>:213                                     ; preds = %196
  %214 = load i32* %yy4, align 4
  %215 = add nsw i32 %214, 1
  store i32 %215, i32* %yy4, align 4
  br label %216

; <label>:216                                     ; preds = %213, %196, %192
  %217 = load i32* %tmp5, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds [516 x i32]* %weight, i32 0, i64 %218
  %220 = load i32* %219, align 4
  %221 = load i32* %yy4, align 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %222
  %224 = load i32* %223, align 4
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds [516 x i32]* %weight, i32 0, i64 %225
  %227 = load i32* %226, align 4
  %228 = icmp slt i32 %220, %227
  br i1 %228, label %229, label %230

; <label>:229                                     ; preds = %216
  br label %239

; <label>:230                                     ; preds = %216
  %231 = load i32* %yy4, align 4
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %232
  %234 = load i32* %233, align 4
  %235 = load i32* %zz3, align 4
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %236
  store i32 %234, i32* %237, align 4
  %238 = load i32* %yy4, align 4
  store i32 %238, i32* %zz3, align 4
  br label %185

; <label>:239                                     ; preds = %229, %191
  %240 = load i32* %tmp5, align 4
  %241 = load i32* %zz3, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %242
  store i32 %240, i32* %243, align 4
  %244 = load i32* %nNodes, align 4
  %245 = add nsw i32 %244, 1
  store i32 %245, i32* %nNodes, align 4
  %246 = load i32* %nNodes, align 4
  %247 = load i32* %n2, align 4
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds [516 x i32]* %parent, i32 0, i64 %248
  store i32 %246, i32* %249, align 4
  %250 = load i32* %n1, align 4
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds [516 x i32]* %parent, i32 0, i64 %251
  store i32 %246, i32* %252, align 4
  %253 = load i32* %n1, align 4
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds [516 x i32]* %weight, i32 0, i64 %254
  %256 = load i32* %255, align 4
  %257 = and i32 %256, -256
  %258 = load i32* %n2, align 4
  %259 = sext i32 %258 to i64
  %260 = getelementptr inbounds [516 x i32]* %weight, i32 0, i64 %259
  %261 = load i32* %260, align 4
  %262 = and i32 %261, -256
  %263 = add i32 %257, %262
  %264 = load i32* %n1, align 4
  %265 = sext i32 %264 to i64
  %266 = getelementptr inbounds [516 x i32]* %weight, i32 0, i64 %265
  %267 = load i32* %266, align 4
  %268 = and i32 %267, 255
  %269 = load i32* %n2, align 4
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds [516 x i32]* %weight, i32 0, i64 %270
  %272 = load i32* %271, align 4
  %273 = and i32 %272, 255
  %274 = icmp sgt i32 %268, %273
  br i1 %274, label %275, label %281

; <label>:275                                     ; preds = %239
  %276 = load i32* %n1, align 4
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds [516 x i32]* %weight, i32 0, i64 %277
  %279 = load i32* %278, align 4
  %280 = and i32 %279, 255
  br label %287

; <label>:281                                     ; preds = %239
  %282 = load i32* %n2, align 4
  %283 = sext i32 %282 to i64
  %284 = getelementptr inbounds [516 x i32]* %weight, i32 0, i64 %283
  %285 = load i32* %284, align 4
  %286 = and i32 %285, 255
  br label %287

; <label>:287                                     ; preds = %281, %275
  %288 = phi i32 [ %280, %275 ], [ %286, %281 ]
  %289 = add nsw i32 1, %288
  %290 = or i32 %263, %289
  %291 = load i32* %nNodes, align 4
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds [516 x i32]* %weight, i32 0, i64 %292
  store i32 %290, i32* %293, align 4
  %294 = load i32* %nNodes, align 4
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds [516 x i32]* %parent, i32 0, i64 %295
  store i32 -1, i32* %296, align 4
  %297 = load i32* %nHeap, align 4
  %298 = add nsw i32 %297, 1
  store i32 %298, i32* %nHeap, align 4
  %299 = load i32* %nNodes, align 4
  %300 = load i32* %nHeap, align 4
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %301
  store i32 %299, i32* %302, align 4
  %303 = load i32* %nHeap, align 4
  store i32 %303, i32* %zz6, align 4
  %304 = load i32* %zz6, align 4
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %305
  %307 = load i32* %306, align 4
  store i32 %307, i32* %tmp7, align 4
  br label %308

; <label>:308                                     ; preds = %322, %287
  %309 = load i32* %tmp7, align 4
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds [516 x i32]* %weight, i32 0, i64 %310
  %312 = load i32* %311, align 4
  %313 = load i32* %zz6, align 4
  %314 = ashr i32 %313, 1
  %315 = sext i32 %314 to i64
  %316 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %315
  %317 = load i32* %316, align 4
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds [516 x i32]* %weight, i32 0, i64 %318
  %320 = load i32* %319, align 4
  %321 = icmp slt i32 %312, %320
  br i1 %321, label %322, label %333

; <label>:322                                     ; preds = %308
  %323 = load i32* %zz6, align 4
  %324 = ashr i32 %323, 1
  %325 = sext i32 %324 to i64
  %326 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %325
  %327 = load i32* %326, align 4
  %328 = load i32* %zz6, align 4
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %329
  store i32 %327, i32* %330, align 4
  %331 = load i32* %zz6, align 4
  %332 = ashr i32 %331, 1
  store i32 %332, i32* %zz6, align 4
  br label %308

; <label>:333                                     ; preds = %308
  %334 = load i32* %tmp7, align 4
  %335 = load i32* %zz6, align 4
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds [260 x i32]* %heap, i32 0, i64 %336
  store i32 %334, i32* %337, align 4
  br label %96

; <label>:338                                     ; preds = %96
  %339 = load i32* %nNodes, align 4
  %340 = icmp slt i32 %339, 516
  br i1 %340, label %342, label %341

; <label>:341                                     ; preds = %338
  call void @BZ2_bz__AssertH__fail(i32 2002)
  br label %342

; <label>:342                                     ; preds = %341, %338
  store i8 0, i8* %tooLong, align 1
  store i32 1, i32* %i, align 4
  br label %343

; <label>:343                                     ; preds = %375, %342
  %344 = load i32* %i, align 4
  %345 = load i32* %3, align 4
  %346 = icmp sle i32 %344, %345
  br i1 %346, label %347, label %378

; <label>:347                                     ; preds = %343
  store i32 0, i32* %j, align 4
  %348 = load i32* %i, align 4
  store i32 %348, i32* %k, align 4
  br label %349

; <label>:349                                     ; preds = %355, %347
  %350 = load i32* %k, align 4
  %351 = sext i32 %350 to i64
  %352 = getelementptr inbounds [516 x i32]* %parent, i32 0, i64 %351
  %353 = load i32* %352, align 4
  %354 = icmp sge i32 %353, 0
  br i1 %354, label %355, label %362

; <label>:355                                     ; preds = %349
  %356 = load i32* %k, align 4
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds [516 x i32]* %parent, i32 0, i64 %357
  %359 = load i32* %358, align 4
  store i32 %359, i32* %k, align 4
  %360 = load i32* %j, align 4
  %361 = add nsw i32 %360, 1
  store i32 %361, i32* %j, align 4
  br label %349

; <label>:362                                     ; preds = %349
  %363 = load i32* %j, align 4
  %364 = trunc i32 %363 to i8
  %365 = load i32* %i, align 4
  %366 = sub nsw i32 %365, 1
  %367 = sext i32 %366 to i64
  %368 = load i8** %1, align 8
  %369 = getelementptr inbounds i8* %368, i64 %367
  store i8 %364, i8* %369, align 1
  %370 = load i32* %j, align 4
  %371 = load i32* %4, align 4
  %372 = icmp sgt i32 %370, %371
  br i1 %372, label %373, label %374

; <label>:373                                     ; preds = %362
  store i8 1, i8* %tooLong, align 1
  br label %374

; <label>:374                                     ; preds = %373, %362
  br label %375

; <label>:375                                     ; preds = %374
  %376 = load i32* %i, align 4
  %377 = add nsw i32 %376, 1
  store i32 %377, i32* %i, align 4
  br label %343

; <label>:378                                     ; preds = %343
  %379 = load i8* %tooLong, align 1
  %380 = icmp ne i8 %379, 0
  br i1 %380, label %382, label %381

; <label>:381                                     ; preds = %378
  br label %405

; <label>:382                                     ; preds = %378
  store i32 1, i32* %i, align 4
  br label %383

; <label>:383                                     ; preds = %401, %382
  %384 = load i32* %i, align 4
  %385 = load i32* %3, align 4
  %386 = icmp slt i32 %384, %385
  br i1 %386, label %387, label %404

; <label>:387                                     ; preds = %383
  %388 = load i32* %i, align 4
  %389 = sext i32 %388 to i64
  %390 = getelementptr inbounds [516 x i32]* %weight, i32 0, i64 %389
  %391 = load i32* %390, align 4
  %392 = ashr i32 %391, 8
  store i32 %392, i32* %j, align 4
  %393 = load i32* %j, align 4
  %394 = sdiv i32 %393, 2
  %395 = add nsw i32 1, %394
  store i32 %395, i32* %j, align 4
  %396 = load i32* %j, align 4
  %397 = shl i32 %396, 8
  %398 = load i32* %i, align 4
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds [516 x i32]* %weight, i32 0, i64 %399
  store i32 %397, i32* %400, align 4
  br label %401

; <label>:401                                     ; preds = %387
  %402 = load i32* %i, align 4
  %403 = add nsw i32 %402, 1
  store i32 %403, i32* %i, align 4
  br label %383

; <label>:404                                     ; preds = %383
  br label %34

; <label>:405                                     ; preds = %381
  ret void
}

; Function Attrs: nounwind uwtable
define void @BZ2_hbAssignCodes(i32* %code, i8* %length, i32 %minLen, i32 %maxLen, i32 %alphaSize) #0 {
  %1 = alloca i32*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %n = alloca i32, align 4
  %vec = alloca i32, align 4
  %i = alloca i32, align 4
  store i32* %code, i32** %1, align 8
  store i8* %length, i8** %2, align 8
  store i32 %minLen, i32* %3, align 4
  store i32 %maxLen, i32* %4, align 4
  store i32 %alphaSize, i32* %5, align 4
  store i32 0, i32* %vec, align 4
  %6 = load i32* %3, align 4
  store i32 %6, i32* %n, align 4
  br label %7

; <label>:7                                       ; preds = %40, %0
  %8 = load i32* %n, align 4
  %9 = load i32* %4, align 4
  %10 = icmp sle i32 %8, %9
  br i1 %10, label %11, label %43

; <label>:11                                      ; preds = %7
  store i32 0, i32* %i, align 4
  br label %12

; <label>:12                                      ; preds = %34, %11
  %13 = load i32* %i, align 4
  %14 = load i32* %5, align 4
  %15 = icmp slt i32 %13, %14
  br i1 %15, label %16, label %37

; <label>:16                                      ; preds = %12
  %17 = load i32* %i, align 4
  %18 = sext i32 %17 to i64
  %19 = load i8** %2, align 8
  %20 = getelementptr inbounds i8* %19, i64 %18
  %21 = load i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = load i32* %n, align 4
  %24 = icmp eq i32 %22, %23
  br i1 %24, label %25, label %33

; <label>:25                                      ; preds = %16
  %26 = load i32* %vec, align 4
  %27 = load i32* %i, align 4
  %28 = sext i32 %27 to i64
  %29 = load i32** %1, align 8
  %30 = getelementptr inbounds i32* %29, i64 %28
  store i32 %26, i32* %30, align 4
  %31 = load i32* %vec, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %vec, align 4
  br label %33

; <label>:33                                      ; preds = %25, %16
  br label %34

; <label>:34                                      ; preds = %33
  %35 = load i32* %i, align 4
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %i, align 4
  br label %12

; <label>:37                                      ; preds = %12
  %38 = load i32* %vec, align 4
  %39 = shl i32 %38, 1
  store i32 %39, i32* %vec, align 4
  br label %40

; <label>:40                                      ; preds = %37
  %41 = load i32* %n, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %n, align 4
  br label %7

; <label>:43                                      ; preds = %7
  ret void
}

; Function Attrs: nounwind uwtable
define void @BZ2_hbCreateDecodeTables(i32* %limit, i32* %base, i32* %perm, i8* %length, i32 %minLen, i32 %maxLen, i32 %alphaSize) #0 {
  %1 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %pp = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %vec = alloca i32, align 4
  store i32* %limit, i32** %1, align 8
  store i32* %base, i32** %2, align 8
  store i32* %perm, i32** %3, align 8
  store i8* %length, i8** %4, align 8
  store i32 %minLen, i32* %5, align 4
  store i32 %maxLen, i32* %6, align 4
  store i32 %alphaSize, i32* %7, align 4
  store i32 0, i32* %pp, align 4
  %8 = load i32* %5, align 4
  store i32 %8, i32* %i, align 4
  br label %9

; <label>:9                                       ; preds = %40, %0
  %10 = load i32* %i, align 4
  %11 = load i32* %6, align 4
  %12 = icmp sle i32 %10, %11
  br i1 %12, label %13, label %43

; <label>:13                                      ; preds = %9
  store i32 0, i32* %j, align 4
  br label %14

; <label>:14                                      ; preds = %36, %13
  %15 = load i32* %j, align 4
  %16 = load i32* %7, align 4
  %17 = icmp slt i32 %15, %16
  br i1 %17, label %18, label %39

; <label>:18                                      ; preds = %14
  %19 = load i32* %j, align 4
  %20 = sext i32 %19 to i64
  %21 = load i8** %4, align 8
  %22 = getelementptr inbounds i8* %21, i64 %20
  %23 = load i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = load i32* %i, align 4
  %26 = icmp eq i32 %24, %25
  br i1 %26, label %27, label %35

; <label>:27                                      ; preds = %18
  %28 = load i32* %j, align 4
  %29 = load i32* %pp, align 4
  %30 = sext i32 %29 to i64
  %31 = load i32** %3, align 8
  %32 = getelementptr inbounds i32* %31, i64 %30
  store i32 %28, i32* %32, align 4
  %33 = load i32* %pp, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %pp, align 4
  br label %35

; <label>:35                                      ; preds = %27, %18
  br label %36

; <label>:36                                      ; preds = %35
  %37 = load i32* %j, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %j, align 4
  br label %14

; <label>:39                                      ; preds = %14
  br label %40

; <label>:40                                      ; preds = %39
  %41 = load i32* %i, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %i, align 4
  br label %9

; <label>:43                                      ; preds = %9
  store i32 0, i32* %i, align 4
  br label %44

; <label>:44                                      ; preds = %52, %43
  %45 = load i32* %i, align 4
  %46 = icmp slt i32 %45, 23
  br i1 %46, label %47, label %55

; <label>:47                                      ; preds = %44
  %48 = load i32* %i, align 4
  %49 = sext i32 %48 to i64
  %50 = load i32** %2, align 8
  %51 = getelementptr inbounds i32* %50, i64 %49
  store i32 0, i32* %51, align 4
  br label %52

; <label>:52                                      ; preds = %47
  %53 = load i32* %i, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %i, align 4
  br label %44

; <label>:55                                      ; preds = %44
  store i32 0, i32* %i, align 4
  br label %56

; <label>:56                                      ; preds = %73, %55
  %57 = load i32* %i, align 4
  %58 = load i32* %7, align 4
  %59 = icmp slt i32 %57, %58
  br i1 %59, label %60, label %76

; <label>:60                                      ; preds = %56
  %61 = load i32* %i, align 4
  %62 = sext i32 %61 to i64
  %63 = load i8** %4, align 8
  %64 = getelementptr inbounds i8* %63, i64 %62
  %65 = load i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = add nsw i32 %66, 1
  %68 = sext i32 %67 to i64
  %69 = load i32** %2, align 8
  %70 = getelementptr inbounds i32* %69, i64 %68
  %71 = load i32* %70, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %70, align 4
  br label %73

; <label>:73                                      ; preds = %60
  %74 = load i32* %i, align 4
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %i, align 4
  br label %56

; <label>:76                                      ; preds = %56
  store i32 1, i32* %i, align 4
  br label %77

; <label>:77                                      ; preds = %93, %76
  %78 = load i32* %i, align 4
  %79 = icmp slt i32 %78, 23
  br i1 %79, label %80, label %96

; <label>:80                                      ; preds = %77
  %81 = load i32* %i, align 4
  %82 = sub nsw i32 %81, 1
  %83 = sext i32 %82 to i64
  %84 = load i32** %2, align 8
  %85 = getelementptr inbounds i32* %84, i64 %83
  %86 = load i32* %85, align 4
  %87 = load i32* %i, align 4
  %88 = sext i32 %87 to i64
  %89 = load i32** %2, align 8
  %90 = getelementptr inbounds i32* %89, i64 %88
  %91 = load i32* %90, align 4
  %92 = add nsw i32 %91, %86
  store i32 %92, i32* %90, align 4
  br label %93

; <label>:93                                      ; preds = %80
  %94 = load i32* %i, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %i, align 4
  br label %77

; <label>:96                                      ; preds = %77
  store i32 0, i32* %i, align 4
  br label %97

; <label>:97                                      ; preds = %105, %96
  %98 = load i32* %i, align 4
  %99 = icmp slt i32 %98, 23
  br i1 %99, label %100, label %108

; <label>:100                                     ; preds = %97
  %101 = load i32* %i, align 4
  %102 = sext i32 %101 to i64
  %103 = load i32** %1, align 8
  %104 = getelementptr inbounds i32* %103, i64 %102
  store i32 0, i32* %104, align 4
  br label %105

; <label>:105                                     ; preds = %100
  %106 = load i32* %i, align 4
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %i, align 4
  br label %97

; <label>:108                                     ; preds = %97
  store i32 0, i32* %vec, align 4
  %109 = load i32* %5, align 4
  store i32 %109, i32* %i, align 4
  br label %110

; <label>:110                                     ; preds = %137, %108
  %111 = load i32* %i, align 4
  %112 = load i32* %6, align 4
  %113 = icmp sle i32 %111, %112
  br i1 %113, label %114, label %140

; <label>:114                                     ; preds = %110
  %115 = load i32* %i, align 4
  %116 = add nsw i32 %115, 1
  %117 = sext i32 %116 to i64
  %118 = load i32** %2, align 8
  %119 = getelementptr inbounds i32* %118, i64 %117
  %120 = load i32* %119, align 4
  %121 = load i32* %i, align 4
  %122 = sext i32 %121 to i64
  %123 = load i32** %2, align 8
  %124 = getelementptr inbounds i32* %123, i64 %122
  %125 = load i32* %124, align 4
  %126 = sub nsw i32 %120, %125
  %127 = load i32* %vec, align 4
  %128 = add nsw i32 %127, %126
  store i32 %128, i32* %vec, align 4
  %129 = load i32* %vec, align 4
  %130 = sub nsw i32 %129, 1
  %131 = load i32* %i, align 4
  %132 = sext i32 %131 to i64
  %133 = load i32** %1, align 8
  %134 = getelementptr inbounds i32* %133, i64 %132
  store i32 %130, i32* %134, align 4
  %135 = load i32* %vec, align 4
  %136 = shl i32 %135, 1
  store i32 %136, i32* %vec, align 4
  br label %137

; <label>:137                                     ; preds = %114
  %138 = load i32* %i, align 4
  %139 = add nsw i32 %138, 1
  store i32 %139, i32* %i, align 4
  br label %110

; <label>:140                                     ; preds = %110
  %141 = load i32* %5, align 4
  %142 = add nsw i32 %141, 1
  store i32 %142, i32* %i, align 4
  br label %143

; <label>:143                                     ; preds = %166, %140
  %144 = load i32* %i, align 4
  %145 = load i32* %6, align 4
  %146 = icmp sle i32 %144, %145
  br i1 %146, label %147, label %169

; <label>:147                                     ; preds = %143
  %148 = load i32* %i, align 4
  %149 = sub nsw i32 %148, 1
  %150 = sext i32 %149 to i64
  %151 = load i32** %1, align 8
  %152 = getelementptr inbounds i32* %151, i64 %150
  %153 = load i32* %152, align 4
  %154 = add nsw i32 %153, 1
  %155 = shl i32 %154, 1
  %156 = load i32* %i, align 4
  %157 = sext i32 %156 to i64
  %158 = load i32** %2, align 8
  %159 = getelementptr inbounds i32* %158, i64 %157
  %160 = load i32* %159, align 4
  %161 = sub nsw i32 %155, %160
  %162 = load i32* %i, align 4
  %163 = sext i32 %162 to i64
  %164 = load i32** %2, align 8
  %165 = getelementptr inbounds i32* %164, i64 %163
  store i32 %161, i32* %165, align 4
  br label %166

; <label>:166                                     ; preds = %147
  %167 = load i32* %i, align 4
  %168 = add nsw i32 %167, 1
  store i32 %168, i32* %i, align 4
  br label %143

; <label>:169                                     ; preds = %143
  ret void
}

; Function Attrs: nounwind uwtable
define void @BZ2_bsInitWrite(%struct.EState* %s) #0 {
  %1 = alloca %struct.EState*, align 8
  store %struct.EState* %s, %struct.EState** %1, align 8
  %2 = load %struct.EState** %1, align 8
  %3 = getelementptr inbounds %struct.EState* %2, i32 0, i32 25
  store i32 0, i32* %3, align 4
  %4 = load %struct.EState** %1, align 8
  %5 = getelementptr inbounds %struct.EState* %4, i32 0, i32 24
  store i32 0, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define void @BZ2_compressBlock(%struct.EState* %s, i8 zeroext %is_last_block) #0 {
  %1 = alloca %struct.EState*, align 8
  %2 = alloca i8, align 1
  store %struct.EState* %s, %struct.EState** %1, align 8
  store i8 %is_last_block, i8* %2, align 1
  %3 = load %struct.EState** %1, align 8
  %4 = getelementptr inbounds %struct.EState* %3, i32 0, i32 17
  %5 = load i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %61

; <label>:7                                       ; preds = %0
  %8 = load %struct.EState** %1, align 8
  %9 = getelementptr inbounds %struct.EState* %8, i32 0, i32 26
  %10 = load i32* %9, align 4
  %11 = xor i32 %10, -1
  %12 = load %struct.EState** %1, align 8
  %13 = getelementptr inbounds %struct.EState* %12, i32 0, i32 26
  store i32 %11, i32* %13, align 4
  %14 = load %struct.EState** %1, align 8
  %15 = getelementptr inbounds %struct.EState* %14, i32 0, i32 27
  %16 = load i32* %15, align 4
  %17 = shl i32 %16, 1
  %18 = load %struct.EState** %1, align 8
  %19 = getelementptr inbounds %struct.EState* %18, i32 0, i32 27
  %20 = load i32* %19, align 4
  %21 = lshr i32 %20, 31
  %22 = or i32 %17, %21
  %23 = load %struct.EState** %1, align 8
  %24 = getelementptr inbounds %struct.EState* %23, i32 0, i32 27
  store i32 %22, i32* %24, align 4
  %25 = load %struct.EState** %1, align 8
  %26 = getelementptr inbounds %struct.EState* %25, i32 0, i32 26
  %27 = load i32* %26, align 4
  %28 = load %struct.EState** %1, align 8
  %29 = getelementptr inbounds %struct.EState* %28, i32 0, i32 27
  %30 = load i32* %29, align 4
  %31 = xor i32 %30, %27
  store i32 %31, i32* %29, align 4
  %32 = load %struct.EState** %1, align 8
  %33 = getelementptr inbounds %struct.EState* %32, i32 0, i32 29
  %34 = load i32* %33, align 4
  %35 = icmp sgt i32 %34, 1
  br i1 %35, label %36, label %39

; <label>:36                                      ; preds = %7
  %37 = load %struct.EState** %1, align 8
  %38 = getelementptr inbounds %struct.EState* %37, i32 0, i32 19
  store i32 0, i32* %38, align 4
  br label %39

; <label>:39                                      ; preds = %36, %7
  %40 = load %struct.EState** %1, align 8
  %41 = getelementptr inbounds %struct.EState* %40, i32 0, i32 28
  %42 = load i32* %41, align 4
  %43 = icmp sge i32 %42, 2
  br i1 %43, label %44, label %59

; <label>:44                                      ; preds = %39
  %45 = load %struct._IO_FILE** @stderr, align 8
  %46 = load %struct.EState** %1, align 8
  %47 = getelementptr inbounds %struct.EState* %46, i32 0, i32 29
  %48 = load i32* %47, align 4
  %49 = load %struct.EState** %1, align 8
  %50 = getelementptr inbounds %struct.EState* %49, i32 0, i32 26
  %51 = load i32* %50, align 4
  %52 = load %struct.EState** %1, align 8
  %53 = getelementptr inbounds %struct.EState* %52, i32 0, i32 27
  %54 = load i32* %53, align 4
  %55 = load %struct.EState** %1, align 8
  %56 = getelementptr inbounds %struct.EState* %55, i32 0, i32 17
  %57 = load i32* %56, align 4
  %58 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([60 x i8]* @.str2, i32 0, i32 0), i32 %48, i32 %51, i32 %54, i32 %57)
  br label %59

; <label>:59                                      ; preds = %44, %39
  %60 = load %struct.EState** %1, align 8
  call void @BZ2_blockSort(%struct.EState* %60)
  br label %61

; <label>:61                                      ; preds = %59, %0
  %62 = load %struct.EState** %1, align 8
  %63 = getelementptr inbounds %struct.EState* %62, i32 0, i32 17
  %64 = load i32* %63, align 4
  %65 = sext i32 %64 to i64
  %66 = load %struct.EState** %1, align 8
  %67 = getelementptr inbounds %struct.EState* %66, i32 0, i32 5
  %68 = load i32** %67, align 8
  %69 = bitcast i32* %68 to i8*
  %70 = getelementptr inbounds i8* %69, i64 %65
  %71 = load %struct.EState** %1, align 8
  %72 = getelementptr inbounds %struct.EState* %71, i32 0, i32 11
  store i8* %70, i8** %72, align 8
  %73 = load %struct.EState** %1, align 8
  %74 = getelementptr inbounds %struct.EState* %73, i32 0, i32 29
  %75 = load i32* %74, align 4
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %88

; <label>:77                                      ; preds = %61
  %78 = load %struct.EState** %1, align 8
  call void @BZ2_bsInitWrite(%struct.EState* %78)
  %79 = load %struct.EState** %1, align 8
  call void @bsPutUChar(%struct.EState* %79, i8 zeroext 66)
  %80 = load %struct.EState** %1, align 8
  call void @bsPutUChar(%struct.EState* %80, i8 zeroext 90)
  %81 = load %struct.EState** %1, align 8
  call void @bsPutUChar(%struct.EState* %81, i8 zeroext 104)
  %82 = load %struct.EState** %1, align 8
  %83 = load %struct.EState** %1, align 8
  %84 = getelementptr inbounds %struct.EState* %83, i32 0, i32 30
  %85 = load i32* %84, align 4
  %86 = add nsw i32 48, %85
  %87 = trunc i32 %86 to i8
  call void @bsPutUChar(%struct.EState* %82, i8 zeroext %87)
  br label %88

; <label>:88                                      ; preds = %77, %61
  %89 = load %struct.EState** %1, align 8
  %90 = getelementptr inbounds %struct.EState* %89, i32 0, i32 17
  %91 = load i32* %90, align 4
  %92 = icmp sgt i32 %91, 0
  br i1 %92, label %93, label %111

; <label>:93                                      ; preds = %88
  %94 = load %struct.EState** %1, align 8
  call void @bsPutUChar(%struct.EState* %94, i8 zeroext 49)
  %95 = load %struct.EState** %1, align 8
  call void @bsPutUChar(%struct.EState* %95, i8 zeroext 65)
  %96 = load %struct.EState** %1, align 8
  call void @bsPutUChar(%struct.EState* %96, i8 zeroext 89)
  %97 = load %struct.EState** %1, align 8
  call void @bsPutUChar(%struct.EState* %97, i8 zeroext 38)
  %98 = load %struct.EState** %1, align 8
  call void @bsPutUChar(%struct.EState* %98, i8 zeroext 83)
  %99 = load %struct.EState** %1, align 8
  call void @bsPutUChar(%struct.EState* %99, i8 zeroext 89)
  %100 = load %struct.EState** %1, align 8
  %101 = load %struct.EState** %1, align 8
  %102 = getelementptr inbounds %struct.EState* %101, i32 0, i32 26
  %103 = load i32* %102, align 4
  call void @bsPutUInt32(%struct.EState* %100, i32 %103)
  %104 = load %struct.EState** %1, align 8
  call void @bsW(%struct.EState* %104, i32 1, i32 0)
  %105 = load %struct.EState** %1, align 8
  %106 = load %struct.EState** %1, align 8
  %107 = getelementptr inbounds %struct.EState* %106, i32 0, i32 7
  %108 = load i32* %107, align 4
  call void @bsW(%struct.EState* %105, i32 24, i32 %108)
  %109 = load %struct.EState** %1, align 8
  call void @generateMTFValues(%struct.EState* %109)
  %110 = load %struct.EState** %1, align 8
  call void @sendMTFValues(%struct.EState* %110)
  br label %111

; <label>:111                                     ; preds = %93, %88
  %112 = load i8* %2, align 1
  %113 = icmp ne i8 %112, 0
  br i1 %113, label %114, label %137

; <label>:114                                     ; preds = %111
  %115 = load %struct.EState** %1, align 8
  call void @bsPutUChar(%struct.EState* %115, i8 zeroext 23)
  %116 = load %struct.EState** %1, align 8
  call void @bsPutUChar(%struct.EState* %116, i8 zeroext 114)
  %117 = load %struct.EState** %1, align 8
  call void @bsPutUChar(%struct.EState* %117, i8 zeroext 69)
  %118 = load %struct.EState** %1, align 8
  call void @bsPutUChar(%struct.EState* %118, i8 zeroext 56)
  %119 = load %struct.EState** %1, align 8
  call void @bsPutUChar(%struct.EState* %119, i8 zeroext 80)
  %120 = load %struct.EState** %1, align 8
  call void @bsPutUChar(%struct.EState* %120, i8 zeroext -112)
  %121 = load %struct.EState** %1, align 8
  %122 = load %struct.EState** %1, align 8
  %123 = getelementptr inbounds %struct.EState* %122, i32 0, i32 27
  %124 = load i32* %123, align 4
  call void @bsPutUInt32(%struct.EState* %121, i32 %124)
  %125 = load %struct.EState** %1, align 8
  %126 = getelementptr inbounds %struct.EState* %125, i32 0, i32 28
  %127 = load i32* %126, align 4
  %128 = icmp sge i32 %127, 2
  br i1 %128, label %129, label %135

; <label>:129                                     ; preds = %114
  %130 = load %struct._IO_FILE** @stderr, align 8
  %131 = load %struct.EState** %1, align 8
  %132 = getelementptr inbounds %struct.EState* %131, i32 0, i32 27
  %133 = load i32* %132, align 4
  %134 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %130, i8* getelementptr inbounds ([34 x i8]* @.str3, i32 0, i32 0), i32 %133)
  br label %135

; <label>:135                                     ; preds = %129, %114
  %136 = load %struct.EState** %1, align 8
  call void @bsFinishWrite(%struct.EState* %136)
  br label %137

; <label>:137                                     ; preds = %135, %111
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @bsPutUChar(%struct.EState* %s, i8 zeroext %c) #0 {
  %1 = alloca %struct.EState*, align 8
  %2 = alloca i8, align 1
  store %struct.EState* %s, %struct.EState** %1, align 8
  store i8 %c, i8* %2, align 1
  %3 = load %struct.EState** %1, align 8
  %4 = load i8* %2, align 1
  %5 = zext i8 %4 to i32
  call void @bsW(%struct.EState* %3, i32 8, i32 %5)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @bsPutUInt32(%struct.EState* %s, i32 %u) #0 {
  %1 = alloca %struct.EState*, align 8
  %2 = alloca i32, align 4
  store %struct.EState* %s, %struct.EState** %1, align 8
  store i32 %u, i32* %2, align 4
  %3 = load %struct.EState** %1, align 8
  %4 = load i32* %2, align 4
  %5 = lshr i32 %4, 24
  %6 = zext i32 %5 to i64
  %7 = and i64 %6, 255
  %8 = trunc i64 %7 to i32
  call void @bsW(%struct.EState* %3, i32 8, i32 %8)
  %9 = load %struct.EState** %1, align 8
  %10 = load i32* %2, align 4
  %11 = lshr i32 %10, 16
  %12 = zext i32 %11 to i64
  %13 = and i64 %12, 255
  %14 = trunc i64 %13 to i32
  call void @bsW(%struct.EState* %9, i32 8, i32 %14)
  %15 = load %struct.EState** %1, align 8
  %16 = load i32* %2, align 4
  %17 = lshr i32 %16, 8
  %18 = zext i32 %17 to i64
  %19 = and i64 %18, 255
  %20 = trunc i64 %19 to i32
  call void @bsW(%struct.EState* %15, i32 8, i32 %20)
  %21 = load %struct.EState** %1, align 8
  %22 = load i32* %2, align 4
  %23 = zext i32 %22 to i64
  %24 = and i64 %23, 255
  %25 = trunc i64 %24 to i32
  call void @bsW(%struct.EState* %21, i32 8, i32 %25)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @bsW(%struct.EState* %s, i32 %n, i32 %v) #2 {
  %1 = alloca %struct.EState*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store %struct.EState* %s, %struct.EState** %1, align 8
  store i32 %n, i32* %2, align 4
  store i32 %v, i32* %3, align 4
  br label %4

; <label>:4                                       ; preds = %9, %0
  %5 = load %struct.EState** %1, align 8
  %6 = getelementptr inbounds %struct.EState* %5, i32 0, i32 25
  %7 = load i32* %6, align 4
  %8 = icmp sge i32 %7, 8
  br i1 %8, label %9, label %35

; <label>:9                                       ; preds = %4
  %10 = load %struct.EState** %1, align 8
  %11 = getelementptr inbounds %struct.EState* %10, i32 0, i32 24
  %12 = load i32* %11, align 4
  %13 = lshr i32 %12, 24
  %14 = trunc i32 %13 to i8
  %15 = load %struct.EState** %1, align 8
  %16 = getelementptr inbounds %struct.EState* %15, i32 0, i32 19
  %17 = load i32* %16, align 4
  %18 = sext i32 %17 to i64
  %19 = load %struct.EState** %1, align 8
  %20 = getelementptr inbounds %struct.EState* %19, i32 0, i32 11
  %21 = load i8** %20, align 8
  %22 = getelementptr inbounds i8* %21, i64 %18
  store i8 %14, i8* %22, align 1
  %23 = load %struct.EState** %1, align 8
  %24 = getelementptr inbounds %struct.EState* %23, i32 0, i32 19
  %25 = load i32* %24, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %24, align 4
  %27 = load %struct.EState** %1, align 8
  %28 = getelementptr inbounds %struct.EState* %27, i32 0, i32 24
  %29 = load i32* %28, align 4
  %30 = shl i32 %29, 8
  store i32 %30, i32* %28, align 4
  %31 = load %struct.EState** %1, align 8
  %32 = getelementptr inbounds %struct.EState* %31, i32 0, i32 25
  %33 = load i32* %32, align 4
  %34 = sub nsw i32 %33, 8
  store i32 %34, i32* %32, align 4
  br label %4

; <label>:35                                      ; preds = %4
  %36 = load i32* %3, align 4
  %37 = load %struct.EState** %1, align 8
  %38 = getelementptr inbounds %struct.EState* %37, i32 0, i32 25
  %39 = load i32* %38, align 4
  %40 = sub nsw i32 32, %39
  %41 = load i32* %2, align 4
  %42 = sub nsw i32 %40, %41
  %43 = shl i32 %36, %42
  %44 = load %struct.EState** %1, align 8
  %45 = getelementptr inbounds %struct.EState* %44, i32 0, i32 24
  %46 = load i32* %45, align 4
  %47 = or i32 %46, %43
  store i32 %47, i32* %45, align 4
  %48 = load i32* %2, align 4
  %49 = load %struct.EState** %1, align 8
  %50 = getelementptr inbounds %struct.EState* %49, i32 0, i32 25
  %51 = load i32* %50, align 4
  %52 = add nsw i32 %51, %48
  store i32 %52, i32* %50, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @generateMTFValues(%struct.EState* %s) #0 {
  %1 = alloca %struct.EState*, align 8
  %yy = alloca [256 x i8], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %zPend = alloca i32, align 4
  %wr = alloca i32, align 4
  %EOB = alloca i32, align 4
  %ptr = alloca i32*, align 8
  %block = alloca i8*, align 8
  %mtfv = alloca i16*, align 8
  %ll_i = alloca i8, align 1
  %rtmp = alloca i8, align 1
  %ryy_j = alloca i8*, align 8
  %rll_i = alloca i8, align 1
  %rtmp2 = alloca i8, align 1
  store %struct.EState* %s, %struct.EState** %1, align 8
  %2 = load %struct.EState** %1, align 8
  %3 = getelementptr inbounds %struct.EState* %2, i32 0, i32 8
  %4 = load i32** %3, align 8
  store i32* %4, i32** %ptr, align 8
  %5 = load %struct.EState** %1, align 8
  %6 = getelementptr inbounds %struct.EState* %5, i32 0, i32 9
  %7 = load i8** %6, align 8
  store i8* %7, i8** %block, align 8
  %8 = load %struct.EState** %1, align 8
  %9 = getelementptr inbounds %struct.EState* %8, i32 0, i32 10
  %10 = load i16** %9, align 8
  store i16* %10, i16** %mtfv, align 8
  %11 = load %struct.EState** %1, align 8
  call void @makeMaps_e(%struct.EState* %11)
  %12 = load %struct.EState** %1, align 8
  %13 = getelementptr inbounds %struct.EState* %12, i32 0, i32 21
  %14 = load i32* %13, align 4
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %EOB, align 4
  store i32 0, i32* %i, align 4
  br label %16

; <label>:16                                      ; preds = %26, %0
  %17 = load i32* %i, align 4
  %18 = load i32* %EOB, align 4
  %19 = icmp sle i32 %17, %18
  br i1 %19, label %20, label %29

; <label>:20                                      ; preds = %16
  %21 = load i32* %i, align 4
  %22 = sext i32 %21 to i64
  %23 = load %struct.EState** %1, align 8
  %24 = getelementptr inbounds %struct.EState* %23, i32 0, i32 32
  %25 = getelementptr inbounds [258 x i32]* %24, i32 0, i64 %22
  store i32 0, i32* %25, align 4
  br label %26

; <label>:26                                      ; preds = %20
  %27 = load i32* %i, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %i, align 4
  br label %16

; <label>:29                                      ; preds = %16
  store i32 0, i32* %wr, align 4
  store i32 0, i32* %zPend, align 4
  store i32 0, i32* %i, align 4
  br label %30

; <label>:30                                      ; preds = %42, %29
  %31 = load i32* %i, align 4
  %32 = load %struct.EState** %1, align 8
  %33 = getelementptr inbounds %struct.EState* %32, i32 0, i32 21
  %34 = load i32* %33, align 4
  %35 = icmp slt i32 %31, %34
  br i1 %35, label %36, label %45

; <label>:36                                      ; preds = %30
  %37 = load i32* %i, align 4
  %38 = trunc i32 %37 to i8
  %39 = load i32* %i, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [256 x i8]* %yy, i32 0, i64 %40
  store i8 %38, i8* %41, align 1
  br label %42

; <label>:42                                      ; preds = %36
  %43 = load i32* %i, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %i, align 4
  br label %30

; <label>:45                                      ; preds = %30
  store i32 0, i32* %i, align 4
  br label %46

; <label>:46                                      ; preds = %179, %45
  %47 = load i32* %i, align 4
  %48 = load %struct.EState** %1, align 8
  %49 = getelementptr inbounds %struct.EState* %48, i32 0, i32 17
  %50 = load i32* %49, align 4
  %51 = icmp slt i32 %47, %50
  br i1 %51, label %52, label %182

; <label>:52                                      ; preds = %46
  %53 = load i32* %i, align 4
  %54 = sext i32 %53 to i64
  %55 = load i32** %ptr, align 8
  %56 = getelementptr inbounds i32* %55, i64 %54
  %57 = load i32* %56, align 4
  %58 = sub i32 %57, 1
  store i32 %58, i32* %j, align 4
  %59 = load i32* %j, align 4
  %60 = icmp slt i32 %59, 0
  br i1 %60, label %61, label %67

; <label>:61                                      ; preds = %52
  %62 = load %struct.EState** %1, align 8
  %63 = getelementptr inbounds %struct.EState* %62, i32 0, i32 17
  %64 = load i32* %63, align 4
  %65 = load i32* %j, align 4
  %66 = add nsw i32 %65, %64
  store i32 %66, i32* %j, align 4
  br label %67

; <label>:67                                      ; preds = %61, %52
  %68 = load i32* %j, align 4
  %69 = sext i32 %68 to i64
  %70 = load i8** %block, align 8
  %71 = getelementptr inbounds i8* %70, i64 %69
  %72 = load i8* %71, align 1
  %73 = zext i8 %72 to i64
  %74 = load %struct.EState** %1, align 8
  %75 = getelementptr inbounds %struct.EState* %74, i32 0, i32 23
  %76 = getelementptr inbounds [256 x i8]* %75, i32 0, i64 %73
  %77 = load i8* %76, align 1
  store i8 %77, i8* %ll_i, align 1
  %78 = getelementptr inbounds [256 x i8]* %yy, i32 0, i64 0
  %79 = load i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = load i8* %ll_i, align 1
  %82 = zext i8 %81 to i32
  %83 = icmp eq i32 %80, %82
  br i1 %83, label %84, label %87

; <label>:84                                      ; preds = %67
  %85 = load i32* %zPend, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %zPend, align 4
  br label %178

; <label>:87                                      ; preds = %67
  %88 = load i32* %zPend, align 4
  %89 = icmp sgt i32 %88, 0
  br i1 %89, label %90, label %130

; <label>:90                                      ; preds = %87
  %91 = load i32* %zPend, align 4
  %92 = add nsw i32 %91, -1
  store i32 %92, i32* %zPend, align 4
  br label %93

; <label>:93                                      ; preds = %90, %125
  %94 = load i32* %zPend, align 4
  %95 = and i32 %94, 1
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %97, label %109

; <label>:97                                      ; preds = %93
  %98 = load i32* %wr, align 4
  %99 = sext i32 %98 to i64
  %100 = load i16** %mtfv, align 8
  %101 = getelementptr inbounds i16* %100, i64 %99
  store i16 1, i16* %101, align 2
  %102 = load i32* %wr, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %wr, align 4
  %104 = load %struct.EState** %1, align 8
  %105 = getelementptr inbounds %struct.EState* %104, i32 0, i32 32
  %106 = getelementptr inbounds [258 x i32]* %105, i32 0, i64 1
  %107 = load i32* %106, align 4
  %108 = add nsw i32 %107, 1
  store i32 %108, i32* %106, align 4
  br label %121

; <label>:109                                     ; preds = %93
  %110 = load i32* %wr, align 4
  %111 = sext i32 %110 to i64
  %112 = load i16** %mtfv, align 8
  %113 = getelementptr inbounds i16* %112, i64 %111
  store i16 0, i16* %113, align 2
  %114 = load i32* %wr, align 4
  %115 = add nsw i32 %114, 1
  store i32 %115, i32* %wr, align 4
  %116 = load %struct.EState** %1, align 8
  %117 = getelementptr inbounds %struct.EState* %116, i32 0, i32 32
  %118 = getelementptr inbounds [258 x i32]* %117, i32 0, i64 0
  %119 = load i32* %118, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %118, align 4
  br label %121

; <label>:121                                     ; preds = %109, %97
  %122 = load i32* %zPend, align 4
  %123 = icmp slt i32 %122, 2
  br i1 %123, label %124, label %125

; <label>:124                                     ; preds = %121
  br label %129

; <label>:125                                     ; preds = %121
  %126 = load i32* %zPend, align 4
  %127 = sub nsw i32 %126, 2
  %128 = sdiv i32 %127, 2
  store i32 %128, i32* %zPend, align 4
  br label %93

; <label>:129                                     ; preds = %124
  store i32 0, i32* %zPend, align 4
  br label %130

; <label>:130                                     ; preds = %129, %87
  %131 = getelementptr inbounds [256 x i8]* %yy, i32 0, i64 1
  %132 = load i8* %131, align 1
  store i8 %132, i8* %rtmp, align 1
  %133 = getelementptr inbounds [256 x i8]* %yy, i32 0, i64 0
  %134 = load i8* %133, align 1
  %135 = getelementptr inbounds [256 x i8]* %yy, i32 0, i64 1
  store i8 %134, i8* %135, align 1
  %136 = getelementptr inbounds [256 x i8]* %yy, i32 0, i64 1
  store i8* %136, i8** %ryy_j, align 8
  %137 = load i8* %ll_i, align 1
  store i8 %137, i8* %rll_i, align 1
  br label %138

; <label>:138                                     ; preds = %144, %130
  %139 = load i8* %rll_i, align 1
  %140 = zext i8 %139 to i32
  %141 = load i8* %rtmp, align 1
  %142 = zext i8 %141 to i32
  %143 = icmp ne i32 %140, %142
  br i1 %143, label %144, label %152

; <label>:144                                     ; preds = %138
  %145 = load i8** %ryy_j, align 8
  %146 = getelementptr inbounds i8* %145, i32 1
  store i8* %146, i8** %ryy_j, align 8
  %147 = load i8* %rtmp, align 1
  store i8 %147, i8* %rtmp2, align 1
  %148 = load i8** %ryy_j, align 8
  %149 = load i8* %148, align 1
  store i8 %149, i8* %rtmp, align 1
  %150 = load i8* %rtmp2, align 1
  %151 = load i8** %ryy_j, align 8
  store i8 %150, i8* %151, align 1
  br label %138

; <label>:152                                     ; preds = %138
  %153 = load i8* %rtmp, align 1
  %154 = getelementptr inbounds [256 x i8]* %yy, i32 0, i64 0
  store i8 %153, i8* %154, align 1
  %155 = load i8** %ryy_j, align 8
  %156 = getelementptr inbounds [256 x i8]* %yy, i32 0, i64 0
  %157 = ptrtoint i8* %155 to i64
  %158 = ptrtoint i8* %156 to i64
  %159 = sub i64 %157, %158
  %160 = trunc i64 %159 to i32
  store i32 %160, i32* %j, align 4
  %161 = load i32* %j, align 4
  %162 = add nsw i32 %161, 1
  %163 = trunc i32 %162 to i16
  %164 = load i32* %wr, align 4
  %165 = sext i32 %164 to i64
  %166 = load i16** %mtfv, align 8
  %167 = getelementptr inbounds i16* %166, i64 %165
  store i16 %163, i16* %167, align 2
  %168 = load i32* %wr, align 4
  %169 = add nsw i32 %168, 1
  store i32 %169, i32* %wr, align 4
  %170 = load i32* %j, align 4
  %171 = add nsw i32 %170, 1
  %172 = sext i32 %171 to i64
  %173 = load %struct.EState** %1, align 8
  %174 = getelementptr inbounds %struct.EState* %173, i32 0, i32 32
  %175 = getelementptr inbounds [258 x i32]* %174, i32 0, i64 %172
  %176 = load i32* %175, align 4
  %177 = add nsw i32 %176, 1
  store i32 %177, i32* %175, align 4
  br label %178

; <label>:178                                     ; preds = %152, %84
  br label %179

; <label>:179                                     ; preds = %178
  %180 = load i32* %i, align 4
  %181 = add nsw i32 %180, 1
  store i32 %181, i32* %i, align 4
  br label %46

; <label>:182                                     ; preds = %46
  %183 = load i32* %zPend, align 4
  %184 = icmp sgt i32 %183, 0
  br i1 %184, label %185, label %225

; <label>:185                                     ; preds = %182
  %186 = load i32* %zPend, align 4
  %187 = add nsw i32 %186, -1
  store i32 %187, i32* %zPend, align 4
  br label %188

; <label>:188                                     ; preds = %185, %220
  %189 = load i32* %zPend, align 4
  %190 = and i32 %189, 1
  %191 = icmp ne i32 %190, 0
  br i1 %191, label %192, label %204

; <label>:192                                     ; preds = %188
  %193 = load i32* %wr, align 4
  %194 = sext i32 %193 to i64
  %195 = load i16** %mtfv, align 8
  %196 = getelementptr inbounds i16* %195, i64 %194
  store i16 1, i16* %196, align 2
  %197 = load i32* %wr, align 4
  %198 = add nsw i32 %197, 1
  store i32 %198, i32* %wr, align 4
  %199 = load %struct.EState** %1, align 8
  %200 = getelementptr inbounds %struct.EState* %199, i32 0, i32 32
  %201 = getelementptr inbounds [258 x i32]* %200, i32 0, i64 1
  %202 = load i32* %201, align 4
  %203 = add nsw i32 %202, 1
  store i32 %203, i32* %201, align 4
  br label %216

; <label>:204                                     ; preds = %188
  %205 = load i32* %wr, align 4
  %206 = sext i32 %205 to i64
  %207 = load i16** %mtfv, align 8
  %208 = getelementptr inbounds i16* %207, i64 %206
  store i16 0, i16* %208, align 2
  %209 = load i32* %wr, align 4
  %210 = add nsw i32 %209, 1
  store i32 %210, i32* %wr, align 4
  %211 = load %struct.EState** %1, align 8
  %212 = getelementptr inbounds %struct.EState* %211, i32 0, i32 32
  %213 = getelementptr inbounds [258 x i32]* %212, i32 0, i64 0
  %214 = load i32* %213, align 4
  %215 = add nsw i32 %214, 1
  store i32 %215, i32* %213, align 4
  br label %216

; <label>:216                                     ; preds = %204, %192
  %217 = load i32* %zPend, align 4
  %218 = icmp slt i32 %217, 2
  br i1 %218, label %219, label %220

; <label>:219                                     ; preds = %216
  br label %224

; <label>:220                                     ; preds = %216
  %221 = load i32* %zPend, align 4
  %222 = sub nsw i32 %221, 2
  %223 = sdiv i32 %222, 2
  store i32 %223, i32* %zPend, align 4
  br label %188

; <label>:224                                     ; preds = %219
  store i32 0, i32* %zPend, align 4
  br label %225

; <label>:225                                     ; preds = %224, %182
  %226 = load i32* %EOB, align 4
  %227 = trunc i32 %226 to i16
  %228 = load i32* %wr, align 4
  %229 = sext i32 %228 to i64
  %230 = load i16** %mtfv, align 8
  %231 = getelementptr inbounds i16* %230, i64 %229
  store i16 %227, i16* %231, align 2
  %232 = load i32* %wr, align 4
  %233 = add nsw i32 %232, 1
  store i32 %233, i32* %wr, align 4
  %234 = load i32* %EOB, align 4
  %235 = sext i32 %234 to i64
  %236 = load %struct.EState** %1, align 8
  %237 = getelementptr inbounds %struct.EState* %236, i32 0, i32 32
  %238 = getelementptr inbounds [258 x i32]* %237, i32 0, i64 %235
  %239 = load i32* %238, align 4
  %240 = add nsw i32 %239, 1
  store i32 %240, i32* %238, align 4
  %241 = load i32* %wr, align 4
  %242 = load %struct.EState** %1, align 8
  %243 = getelementptr inbounds %struct.EState* %242, i32 0, i32 31
  store i32 %241, i32* %243, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @sendMTFValues(%struct.EState* %s) #0 {
  %1 = alloca %struct.EState*, align 8
  %v = alloca i32, align 4
  %t = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %gs = alloca i32, align 4
  %ge = alloca i32, align 4
  %totc = alloca i32, align 4
  %bt = alloca i32, align 4
  %bc = alloca i32, align 4
  %iter = alloca i32, align 4
  %nSelectors = alloca i32, align 4
  %alphaSize = alloca i32, align 4
  %minLen = alloca i32, align 4
  %maxLen = alloca i32, align 4
  %selCtr = alloca i32, align 4
  %nGroups = alloca i32, align 4
  %nBytes = alloca i32, align 4
  %cost = alloca [6 x i16], align 2
  %fave = alloca [6 x i32], align 16
  %mtfv = alloca i16*, align 8
  %nPart = alloca i32, align 4
  %remF = alloca i32, align 4
  %tFreq = alloca i32, align 4
  %aFreq = alloca i32, align 4
  %cost01 = alloca i32, align 4
  %cost23 = alloca i32, align 4
  %cost45 = alloca i32, align 4
  %icv = alloca i16, align 2
  %icv1 = alloca i16, align 2
  %pos = alloca [6 x i8], align 1
  %ll_i = alloca i8, align 1
  %tmp2 = alloca i8, align 1
  %tmp = alloca i8, align 1
  %inUse16 = alloca [16 x i8], align 16
  %curr = alloca i32, align 4
  %mtfv_i = alloca i16, align 2
  %s_len_sel_selCtr = alloca i8*, align 8
  %s_code_sel_selCtr = alloca i32*, align 8
  store %struct.EState* %s, %struct.EState** %1, align 8
  %2 = load %struct.EState** %1, align 8
  %3 = getelementptr inbounds %struct.EState* %2, i32 0, i32 10
  %4 = load i16** %3, align 8
  store i16* %4, i16** %mtfv, align 8
  %5 = load %struct.EState** %1, align 8
  %6 = getelementptr inbounds %struct.EState* %5, i32 0, i32 28
  %7 = load i32* %6, align 4
  %8 = icmp sge i32 %7, 3
  br i1 %8, label %9, label %21

; <label>:9                                       ; preds = %0
  %10 = load %struct._IO_FILE** @stderr, align 8
  %11 = load %struct.EState** %1, align 8
  %12 = getelementptr inbounds %struct.EState* %11, i32 0, i32 17
  %13 = load i32* %12, align 4
  %14 = load %struct.EState** %1, align 8
  %15 = getelementptr inbounds %struct.EState* %14, i32 0, i32 31
  %16 = load i32* %15, align 4
  %17 = load %struct.EState** %1, align 8
  %18 = getelementptr inbounds %struct.EState* %17, i32 0, i32 21
  %19 = load i32* %18, align 4
  %20 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([64 x i8]* @.str131, i32 0, i32 0), i32 %13, i32 %16, i32 %19)
  br label %21

; <label>:21                                      ; preds = %9, %0
  %22 = load %struct.EState** %1, align 8
  %23 = getelementptr inbounds %struct.EState* %22, i32 0, i32 21
  %24 = load i32* %23, align 4
  %25 = add nsw i32 %24, 2
  store i32 %25, i32* %alphaSize, align 4
  store i32 0, i32* %t, align 4
  br label %26

; <label>:26                                      ; preds = %47, %21
  %27 = load i32* %t, align 4
  %28 = icmp slt i32 %27, 6
  br i1 %28, label %29, label %50

; <label>:29                                      ; preds = %26
  store i32 0, i32* %v, align 4
  br label %30

; <label>:30                                      ; preds = %43, %29
  %31 = load i32* %v, align 4
  %32 = load i32* %alphaSize, align 4
  %33 = icmp slt i32 %31, %32
  br i1 %33, label %34, label %46

; <label>:34                                      ; preds = %30
  %35 = load i32* %v, align 4
  %36 = sext i32 %35 to i64
  %37 = load i32* %t, align 4
  %38 = sext i32 %37 to i64
  %39 = load %struct.EState** %1, align 8
  %40 = getelementptr inbounds %struct.EState* %39, i32 0, i32 35
  %41 = getelementptr inbounds [6 x [258 x i8]]* %40, i32 0, i64 %38
  %42 = getelementptr inbounds [258 x i8]* %41, i32 0, i64 %36
  store i8 15, i8* %42, align 1
  br label %43

; <label>:43                                      ; preds = %34
  %44 = load i32* %v, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %v, align 4
  br label %30

; <label>:46                                      ; preds = %30
  br label %47

; <label>:47                                      ; preds = %46
  %48 = load i32* %t, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %t, align 4
  br label %26

; <label>:50                                      ; preds = %26
  %51 = load %struct.EState** %1, align 8
  %52 = getelementptr inbounds %struct.EState* %51, i32 0, i32 31
  %53 = load i32* %52, align 4
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %56, label %55

; <label>:55                                      ; preds = %50
  call void @BZ2_bz__AssertH__fail(i32 3001)
  br label %56

; <label>:56                                      ; preds = %55, %50
  %57 = load %struct.EState** %1, align 8
  %58 = getelementptr inbounds %struct.EState* %57, i32 0, i32 31
  %59 = load i32* %58, align 4
  %60 = icmp slt i32 %59, 200
  br i1 %60, label %61, label %62

; <label>:61                                      ; preds = %56
  store i32 2, i32* %nGroups, align 4
  br label %84

; <label>:62                                      ; preds = %56
  %63 = load %struct.EState** %1, align 8
  %64 = getelementptr inbounds %struct.EState* %63, i32 0, i32 31
  %65 = load i32* %64, align 4
  %66 = icmp slt i32 %65, 600
  br i1 %66, label %67, label %68

; <label>:67                                      ; preds = %62
  store i32 3, i32* %nGroups, align 4
  br label %83

; <label>:68                                      ; preds = %62
  %69 = load %struct.EState** %1, align 8
  %70 = getelementptr inbounds %struct.EState* %69, i32 0, i32 31
  %71 = load i32* %70, align 4
  %72 = icmp slt i32 %71, 1200
  br i1 %72, label %73, label %74

; <label>:73                                      ; preds = %68
  store i32 4, i32* %nGroups, align 4
  br label %82

; <label>:74                                      ; preds = %68
  %75 = load %struct.EState** %1, align 8
  %76 = getelementptr inbounds %struct.EState* %75, i32 0, i32 31
  %77 = load i32* %76, align 4
  %78 = icmp slt i32 %77, 2400
  br i1 %78, label %79, label %80

; <label>:79                                      ; preds = %74
  store i32 5, i32* %nGroups, align 4
  br label %81

; <label>:80                                      ; preds = %74
  store i32 6, i32* %nGroups, align 4
  br label %81

; <label>:81                                      ; preds = %80, %79
  br label %82

; <label>:82                                      ; preds = %81, %73
  br label %83

; <label>:83                                      ; preds = %82, %67
  br label %84

; <label>:84                                      ; preds = %83, %61
  %85 = load i32* %nGroups, align 4
  store i32 %85, i32* %nPart, align 4
  %86 = load %struct.EState** %1, align 8
  %87 = getelementptr inbounds %struct.EState* %86, i32 0, i32 31
  %88 = load i32* %87, align 4
  store i32 %88, i32* %remF, align 4
  store i32 0, i32* %gs, align 4
  br label %89

; <label>:89                                      ; preds = %207, %84
  %90 = load i32* %nPart, align 4
  %91 = icmp sgt i32 %90, 0
  br i1 %91, label %92, label %215

; <label>:92                                      ; preds = %89
  %93 = load i32* %remF, align 4
  %94 = load i32* %nPart, align 4
  %95 = sdiv i32 %93, %94
  store i32 %95, i32* %tFreq, align 4
  %96 = load i32* %gs, align 4
  %97 = sub nsw i32 %96, 1
  store i32 %97, i32* %ge, align 4
  store i32 0, i32* %aFreq, align 4
  br label %98

; <label>:98                                      ; preds = %109, %92
  %99 = load i32* %aFreq, align 4
  %100 = load i32* %tFreq, align 4
  %101 = icmp slt i32 %99, %100
  br i1 %101, label %102, label %107

; <label>:102                                     ; preds = %98
  %103 = load i32* %ge, align 4
  %104 = load i32* %alphaSize, align 4
  %105 = sub nsw i32 %104, 1
  %106 = icmp slt i32 %103, %105
  br label %107

; <label>:107                                     ; preds = %102, %98
  %108 = phi i1 [ false, %98 ], [ %106, %102 ]
  br i1 %108, label %109, label %120

; <label>:109                                     ; preds = %107
  %110 = load i32* %ge, align 4
  %111 = add nsw i32 %110, 1
  store i32 %111, i32* %ge, align 4
  %112 = load i32* %ge, align 4
  %113 = sext i32 %112 to i64
  %114 = load %struct.EState** %1, align 8
  %115 = getelementptr inbounds %struct.EState* %114, i32 0, i32 32
  %116 = getelementptr inbounds [258 x i32]* %115, i32 0, i64 %113
  %117 = load i32* %116, align 4
  %118 = load i32* %aFreq, align 4
  %119 = add nsw i32 %118, %117
  store i32 %119, i32* %aFreq, align 4
  br label %98

; <label>:120                                     ; preds = %107
  %121 = load i32* %ge, align 4
  %122 = load i32* %gs, align 4
  %123 = icmp sgt i32 %121, %122
  br i1 %123, label %124, label %148

; <label>:124                                     ; preds = %120
  %125 = load i32* %nPart, align 4
  %126 = load i32* %nGroups, align 4
  %127 = icmp ne i32 %125, %126
  br i1 %127, label %128, label %148

; <label>:128                                     ; preds = %124
  %129 = load i32* %nPart, align 4
  %130 = icmp ne i32 %129, 1
  br i1 %130, label %131, label %148

; <label>:131                                     ; preds = %128
  %132 = load i32* %nGroups, align 4
  %133 = load i32* %nPart, align 4
  %134 = sub nsw i32 %132, %133
  %135 = srem i32 %134, 2
  %136 = icmp eq i32 %135, 1
  br i1 %136, label %137, label %148

; <label>:137                                     ; preds = %131
  %138 = load i32* %ge, align 4
  %139 = sext i32 %138 to i64
  %140 = load %struct.EState** %1, align 8
  %141 = getelementptr inbounds %struct.EState* %140, i32 0, i32 32
  %142 = getelementptr inbounds [258 x i32]* %141, i32 0, i64 %139
  %143 = load i32* %142, align 4
  %144 = load i32* %aFreq, align 4
  %145 = sub nsw i32 %144, %143
  store i32 %145, i32* %aFreq, align 4
  %146 = load i32* %ge, align 4
  %147 = add nsw i32 %146, -1
  store i32 %147, i32* %ge, align 4
  br label %148

; <label>:148                                     ; preds = %137, %131, %128, %124, %120
  %149 = load %struct.EState** %1, align 8
  %150 = getelementptr inbounds %struct.EState* %149, i32 0, i32 28
  %151 = load i32* %150, align 4
  %152 = icmp sge i32 %151, 3
  br i1 %152, label %153, label %170

; <label>:153                                     ; preds = %148
  %154 = load %struct._IO_FILE** @stderr, align 8
  %155 = load i32* %nPart, align 4
  %156 = load i32* %gs, align 4
  %157 = load i32* %ge, align 4
  %158 = load i32* %aFreq, align 4
  %159 = load i32* %aFreq, align 4
  %160 = sitofp i32 %159 to float
  %161 = fpext float %160 to double
  %162 = fmul double 1.000000e+02, %161
  %163 = load %struct.EState** %1, align 8
  %164 = getelementptr inbounds %struct.EState* %163, i32 0, i32 31
  %165 = load i32* %164, align 4
  %166 = sitofp i32 %165 to float
  %167 = fpext float %166 to double
  %168 = fdiv double %162, %167
  %169 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %154, i8* getelementptr inbounds ([59 x i8]* @.str132, i32 0, i32 0), i32 %155, i32 %156, i32 %157, i32 %158, double %168)
  br label %170

; <label>:170                                     ; preds = %153, %148
  store i32 0, i32* %v, align 4
  br label %171

; <label>:171                                     ; preds = %204, %170
  %172 = load i32* %v, align 4
  %173 = load i32* %alphaSize, align 4
  %174 = icmp slt i32 %172, %173
  br i1 %174, label %175, label %207

; <label>:175                                     ; preds = %171
  %176 = load i32* %v, align 4
  %177 = load i32* %gs, align 4
  %178 = icmp sge i32 %176, %177
  br i1 %178, label %179, label %193

; <label>:179                                     ; preds = %175
  %180 = load i32* %v, align 4
  %181 = load i32* %ge, align 4
  %182 = icmp sle i32 %180, %181
  br i1 %182, label %183, label %193

; <label>:183                                     ; preds = %179
  %184 = load i32* %v, align 4
  %185 = sext i32 %184 to i64
  %186 = load i32* %nPart, align 4
  %187 = sub nsw i32 %186, 1
  %188 = sext i32 %187 to i64
  %189 = load %struct.EState** %1, align 8
  %190 = getelementptr inbounds %struct.EState* %189, i32 0, i32 35
  %191 = getelementptr inbounds [6 x [258 x i8]]* %190, i32 0, i64 %188
  %192 = getelementptr inbounds [258 x i8]* %191, i32 0, i64 %185
  store i8 0, i8* %192, align 1
  br label %203

; <label>:193                                     ; preds = %179, %175
  %194 = load i32* %v, align 4
  %195 = sext i32 %194 to i64
  %196 = load i32* %nPart, align 4
  %197 = sub nsw i32 %196, 1
  %198 = sext i32 %197 to i64
  %199 = load %struct.EState** %1, align 8
  %200 = getelementptr inbounds %struct.EState* %199, i32 0, i32 35
  %201 = getelementptr inbounds [6 x [258 x i8]]* %200, i32 0, i64 %198
  %202 = getelementptr inbounds [258 x i8]* %201, i32 0, i64 %195
  store i8 15, i8* %202, align 1
  br label %203

; <label>:203                                     ; preds = %193, %183
  br label %204

; <label>:204                                     ; preds = %203
  %205 = load i32* %v, align 4
  %206 = add nsw i32 %205, 1
  store i32 %206, i32* %v, align 4
  br label %171

; <label>:207                                     ; preds = %171
  %208 = load i32* %nPart, align 4
  %209 = add nsw i32 %208, -1
  store i32 %209, i32* %nPart, align 4
  %210 = load i32* %ge, align 4
  %211 = add nsw i32 %210, 1
  store i32 %211, i32* %gs, align 4
  %212 = load i32* %aFreq, align 4
  %213 = load i32* %remF, align 4
  %214 = sub nsw i32 %213, %212
  store i32 %214, i32* %remF, align 4
  br label %89

; <label>:215                                     ; preds = %89
  store i32 0, i32* %iter, align 4
  br label %216

; <label>:216                                     ; preds = %2983, %215
  %217 = load i32* %iter, align 4
  %218 = icmp slt i32 %217, 4
  br i1 %218, label %219, label %2986

; <label>:219                                     ; preds = %216
  store i32 0, i32* %t, align 4
  br label %220

; <label>:220                                     ; preds = %228, %219
  %221 = load i32* %t, align 4
  %222 = load i32* %nGroups, align 4
  %223 = icmp slt i32 %221, %222
  br i1 %223, label %224, label %231

; <label>:224                                     ; preds = %220
  %225 = load i32* %t, align 4
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds [6 x i32]* %fave, i32 0, i64 %226
  store i32 0, i32* %227, align 4
  br label %228

; <label>:228                                     ; preds = %224
  %229 = load i32* %t, align 4
  %230 = add nsw i32 %229, 1
  store i32 %230, i32* %t, align 4
  br label %220

; <label>:231                                     ; preds = %220
  store i32 0, i32* %t, align 4
  br label %232

; <label>:232                                     ; preds = %254, %231
  %233 = load i32* %t, align 4
  %234 = load i32* %nGroups, align 4
  %235 = icmp slt i32 %233, %234
  br i1 %235, label %236, label %257

; <label>:236                                     ; preds = %232
  store i32 0, i32* %v, align 4
  br label %237

; <label>:237                                     ; preds = %250, %236
  %238 = load i32* %v, align 4
  %239 = load i32* %alphaSize, align 4
  %240 = icmp slt i32 %238, %239
  br i1 %240, label %241, label %253

; <label>:241                                     ; preds = %237
  %242 = load i32* %v, align 4
  %243 = sext i32 %242 to i64
  %244 = load i32* %t, align 4
  %245 = sext i32 %244 to i64
  %246 = load %struct.EState** %1, align 8
  %247 = getelementptr inbounds %struct.EState* %246, i32 0, i32 37
  %248 = getelementptr inbounds [6 x [258 x i32]]* %247, i32 0, i64 %245
  %249 = getelementptr inbounds [258 x i32]* %248, i32 0, i64 %243
  store i32 0, i32* %249, align 4
  br label %250

; <label>:250                                     ; preds = %241
  %251 = load i32* %v, align 4
  %252 = add nsw i32 %251, 1
  store i32 %252, i32* %v, align 4
  br label %237

; <label>:253                                     ; preds = %237
  br label %254

; <label>:254                                     ; preds = %253
  %255 = load i32* %t, align 4
  %256 = add nsw i32 %255, 1
  store i32 %256, i32* %t, align 4
  br label %232

; <label>:257                                     ; preds = %232
  %258 = load i32* %nGroups, align 4
  %259 = icmp eq i32 %258, 6
  br i1 %259, label %260, label %342

; <label>:260                                     ; preds = %257
  store i32 0, i32* %v, align 4
  br label %261

; <label>:261                                     ; preds = %338, %260
  %262 = load i32* %v, align 4
  %263 = load i32* %alphaSize, align 4
  %264 = icmp slt i32 %262, %263
  br i1 %264, label %265, label %341

; <label>:265                                     ; preds = %261
  %266 = load i32* %v, align 4
  %267 = sext i32 %266 to i64
  %268 = load %struct.EState** %1, align 8
  %269 = getelementptr inbounds %struct.EState* %268, i32 0, i32 35
  %270 = getelementptr inbounds [6 x [258 x i8]]* %269, i32 0, i64 1
  %271 = getelementptr inbounds [258 x i8]* %270, i32 0, i64 %267
  %272 = load i8* %271, align 1
  %273 = zext i8 %272 to i32
  %274 = shl i32 %273, 16
  %275 = load i32* %v, align 4
  %276 = sext i32 %275 to i64
  %277 = load %struct.EState** %1, align 8
  %278 = getelementptr inbounds %struct.EState* %277, i32 0, i32 35
  %279 = getelementptr inbounds [6 x [258 x i8]]* %278, i32 0, i64 0
  %280 = getelementptr inbounds [258 x i8]* %279, i32 0, i64 %276
  %281 = load i8* %280, align 1
  %282 = zext i8 %281 to i32
  %283 = or i32 %274, %282
  %284 = load i32* %v, align 4
  %285 = sext i32 %284 to i64
  %286 = load %struct.EState** %1, align 8
  %287 = getelementptr inbounds %struct.EState* %286, i32 0, i32 38
  %288 = getelementptr inbounds [258 x [4 x i32]]* %287, i32 0, i64 %285
  %289 = getelementptr inbounds [4 x i32]* %288, i32 0, i64 0
  store i32 %283, i32* %289, align 4
  %290 = load i32* %v, align 4
  %291 = sext i32 %290 to i64
  %292 = load %struct.EState** %1, align 8
  %293 = getelementptr inbounds %struct.EState* %292, i32 0, i32 35
  %294 = getelementptr inbounds [6 x [258 x i8]]* %293, i32 0, i64 3
  %295 = getelementptr inbounds [258 x i8]* %294, i32 0, i64 %291
  %296 = load i8* %295, align 1
  %297 = zext i8 %296 to i32
  %298 = shl i32 %297, 16
  %299 = load i32* %v, align 4
  %300 = sext i32 %299 to i64
  %301 = load %struct.EState** %1, align 8
  %302 = getelementptr inbounds %struct.EState* %301, i32 0, i32 35
  %303 = getelementptr inbounds [6 x [258 x i8]]* %302, i32 0, i64 2
  %304 = getelementptr inbounds [258 x i8]* %303, i32 0, i64 %300
  %305 = load i8* %304, align 1
  %306 = zext i8 %305 to i32
  %307 = or i32 %298, %306
  %308 = load i32* %v, align 4
  %309 = sext i32 %308 to i64
  %310 = load %struct.EState** %1, align 8
  %311 = getelementptr inbounds %struct.EState* %310, i32 0, i32 38
  %312 = getelementptr inbounds [258 x [4 x i32]]* %311, i32 0, i64 %309
  %313 = getelementptr inbounds [4 x i32]* %312, i32 0, i64 1
  store i32 %307, i32* %313, align 4
  %314 = load i32* %v, align 4
  %315 = sext i32 %314 to i64
  %316 = load %struct.EState** %1, align 8
  %317 = getelementptr inbounds %struct.EState* %316, i32 0, i32 35
  %318 = getelementptr inbounds [6 x [258 x i8]]* %317, i32 0, i64 5
  %319 = getelementptr inbounds [258 x i8]* %318, i32 0, i64 %315
  %320 = load i8* %319, align 1
  %321 = zext i8 %320 to i32
  %322 = shl i32 %321, 16
  %323 = load i32* %v, align 4
  %324 = sext i32 %323 to i64
  %325 = load %struct.EState** %1, align 8
  %326 = getelementptr inbounds %struct.EState* %325, i32 0, i32 35
  %327 = getelementptr inbounds [6 x [258 x i8]]* %326, i32 0, i64 4
  %328 = getelementptr inbounds [258 x i8]* %327, i32 0, i64 %324
  %329 = load i8* %328, align 1
  %330 = zext i8 %329 to i32
  %331 = or i32 %322, %330
  %332 = load i32* %v, align 4
  %333 = sext i32 %332 to i64
  %334 = load %struct.EState** %1, align 8
  %335 = getelementptr inbounds %struct.EState* %334, i32 0, i32 38
  %336 = getelementptr inbounds [258 x [4 x i32]]* %335, i32 0, i64 %333
  %337 = getelementptr inbounds [4 x i32]* %336, i32 0, i64 2
  store i32 %331, i32* %337, align 4
  br label %338

; <label>:338                                     ; preds = %265
  %339 = load i32* %v, align 4
  %340 = add nsw i32 %339, 1
  store i32 %340, i32* %v, align 4
  br label %261

; <label>:341                                     ; preds = %261
  br label %342

; <label>:342                                     ; preds = %341, %257
  store i32 0, i32* %nSelectors, align 4
  store i32 0, i32* %totc, align 4
  store i32 0, i32* %gs, align 4
  br label %343

; <label>:343                                     ; preds = %342, %2928
  %344 = load i32* %gs, align 4
  %345 = load %struct.EState** %1, align 8
  %346 = getelementptr inbounds %struct.EState* %345, i32 0, i32 31
  %347 = load i32* %346, align 4
  %348 = icmp sge i32 %344, %347
  br i1 %348, label %349, label %350

; <label>:349                                     ; preds = %343
  br label %2931

; <label>:350                                     ; preds = %343
  %351 = load i32* %gs, align 4
  %352 = add nsw i32 %351, 50
  %353 = sub nsw i32 %352, 1
  store i32 %353, i32* %ge, align 4
  %354 = load i32* %ge, align 4
  %355 = load %struct.EState** %1, align 8
  %356 = getelementptr inbounds %struct.EState* %355, i32 0, i32 31
  %357 = load i32* %356, align 4
  %358 = icmp sge i32 %354, %357
  br i1 %358, label %359, label %364

; <label>:359                                     ; preds = %350
  %360 = load %struct.EState** %1, align 8
  %361 = getelementptr inbounds %struct.EState* %360, i32 0, i32 31
  %362 = load i32* %361, align 4
  %363 = sub nsw i32 %362, 1
  store i32 %363, i32* %ge, align 4
  br label %364

; <label>:364                                     ; preds = %359, %350
  store i32 0, i32* %t, align 4
  br label %365

; <label>:365                                     ; preds = %373, %364
  %366 = load i32* %t, align 4
  %367 = load i32* %nGroups, align 4
  %368 = icmp slt i32 %366, %367
  br i1 %368, label %369, label %376

; <label>:369                                     ; preds = %365
  %370 = load i32* %t, align 4
  %371 = sext i32 %370 to i64
  %372 = getelementptr inbounds [6 x i16]* %cost, i32 0, i64 %371
  store i16 0, i16* %372, align 2
  br label %373

; <label>:373                                     ; preds = %369
  %374 = load i32* %t, align 4
  %375 = add nsw i32 %374, 1
  store i32 %375, i32* %t, align 4
  br label %365

; <label>:376                                     ; preds = %365
  %377 = load i32* %nGroups, align 4
  %378 = icmp eq i32 %377, 6
  br i1 %378, label %379, label %2060

; <label>:379                                     ; preds = %376
  %380 = load i32* %ge, align 4
  %381 = load i32* %gs, align 4
  %382 = sub nsw i32 %380, %381
  %383 = add nsw i32 %382, 1
  %384 = icmp eq i32 50, %383
  br i1 %384, label %385, label %2060

; <label>:385                                     ; preds = %379
  store i32 0, i32* %cost45, align 4
  store i32 0, i32* %cost23, align 4
  store i32 0, i32* %cost01, align 4
  %386 = load i32* %gs, align 4
  %387 = add nsw i32 %386, 0
  %388 = sext i32 %387 to i64
  %389 = load i16** %mtfv, align 8
  %390 = getelementptr inbounds i16* %389, i64 %388
  %391 = load i16* %390, align 2
  store i16 %391, i16* %icv, align 2
  %392 = load i16* %icv, align 2
  %393 = zext i16 %392 to i64
  %394 = load %struct.EState** %1, align 8
  %395 = getelementptr inbounds %struct.EState* %394, i32 0, i32 38
  %396 = getelementptr inbounds [258 x [4 x i32]]* %395, i32 0, i64 %393
  %397 = getelementptr inbounds [4 x i32]* %396, i32 0, i64 0
  %398 = load i32* %397, align 4
  %399 = load i32* %cost01, align 4
  %400 = add i32 %399, %398
  store i32 %400, i32* %cost01, align 4
  %401 = load i16* %icv, align 2
  %402 = zext i16 %401 to i64
  %403 = load %struct.EState** %1, align 8
  %404 = getelementptr inbounds %struct.EState* %403, i32 0, i32 38
  %405 = getelementptr inbounds [258 x [4 x i32]]* %404, i32 0, i64 %402
  %406 = getelementptr inbounds [4 x i32]* %405, i32 0, i64 1
  %407 = load i32* %406, align 4
  %408 = load i32* %cost23, align 4
  %409 = add i32 %408, %407
  store i32 %409, i32* %cost23, align 4
  %410 = load i16* %icv, align 2
  %411 = zext i16 %410 to i64
  %412 = load %struct.EState** %1, align 8
  %413 = getelementptr inbounds %struct.EState* %412, i32 0, i32 38
  %414 = getelementptr inbounds [258 x [4 x i32]]* %413, i32 0, i64 %411
  %415 = getelementptr inbounds [4 x i32]* %414, i32 0, i64 2
  %416 = load i32* %415, align 4
  %417 = load i32* %cost45, align 4
  %418 = add i32 %417, %416
  store i32 %418, i32* %cost45, align 4
  %419 = load i32* %gs, align 4
  %420 = add nsw i32 %419, 1
  %421 = sext i32 %420 to i64
  %422 = load i16** %mtfv, align 8
  %423 = getelementptr inbounds i16* %422, i64 %421
  %424 = load i16* %423, align 2
  store i16 %424, i16* %icv, align 2
  %425 = load i16* %icv, align 2
  %426 = zext i16 %425 to i64
  %427 = load %struct.EState** %1, align 8
  %428 = getelementptr inbounds %struct.EState* %427, i32 0, i32 38
  %429 = getelementptr inbounds [258 x [4 x i32]]* %428, i32 0, i64 %426
  %430 = getelementptr inbounds [4 x i32]* %429, i32 0, i64 0
  %431 = load i32* %430, align 4
  %432 = load i32* %cost01, align 4
  %433 = add i32 %432, %431
  store i32 %433, i32* %cost01, align 4
  %434 = load i16* %icv, align 2
  %435 = zext i16 %434 to i64
  %436 = load %struct.EState** %1, align 8
  %437 = getelementptr inbounds %struct.EState* %436, i32 0, i32 38
  %438 = getelementptr inbounds [258 x [4 x i32]]* %437, i32 0, i64 %435
  %439 = getelementptr inbounds [4 x i32]* %438, i32 0, i64 1
  %440 = load i32* %439, align 4
  %441 = load i32* %cost23, align 4
  %442 = add i32 %441, %440
  store i32 %442, i32* %cost23, align 4
  %443 = load i16* %icv, align 2
  %444 = zext i16 %443 to i64
  %445 = load %struct.EState** %1, align 8
  %446 = getelementptr inbounds %struct.EState* %445, i32 0, i32 38
  %447 = getelementptr inbounds [258 x [4 x i32]]* %446, i32 0, i64 %444
  %448 = getelementptr inbounds [4 x i32]* %447, i32 0, i64 2
  %449 = load i32* %448, align 4
  %450 = load i32* %cost45, align 4
  %451 = add i32 %450, %449
  store i32 %451, i32* %cost45, align 4
  %452 = load i32* %gs, align 4
  %453 = add nsw i32 %452, 2
  %454 = sext i32 %453 to i64
  %455 = load i16** %mtfv, align 8
  %456 = getelementptr inbounds i16* %455, i64 %454
  %457 = load i16* %456, align 2
  store i16 %457, i16* %icv, align 2
  %458 = load i16* %icv, align 2
  %459 = zext i16 %458 to i64
  %460 = load %struct.EState** %1, align 8
  %461 = getelementptr inbounds %struct.EState* %460, i32 0, i32 38
  %462 = getelementptr inbounds [258 x [4 x i32]]* %461, i32 0, i64 %459
  %463 = getelementptr inbounds [4 x i32]* %462, i32 0, i64 0
  %464 = load i32* %463, align 4
  %465 = load i32* %cost01, align 4
  %466 = add i32 %465, %464
  store i32 %466, i32* %cost01, align 4
  %467 = load i16* %icv, align 2
  %468 = zext i16 %467 to i64
  %469 = load %struct.EState** %1, align 8
  %470 = getelementptr inbounds %struct.EState* %469, i32 0, i32 38
  %471 = getelementptr inbounds [258 x [4 x i32]]* %470, i32 0, i64 %468
  %472 = getelementptr inbounds [4 x i32]* %471, i32 0, i64 1
  %473 = load i32* %472, align 4
  %474 = load i32* %cost23, align 4
  %475 = add i32 %474, %473
  store i32 %475, i32* %cost23, align 4
  %476 = load i16* %icv, align 2
  %477 = zext i16 %476 to i64
  %478 = load %struct.EState** %1, align 8
  %479 = getelementptr inbounds %struct.EState* %478, i32 0, i32 38
  %480 = getelementptr inbounds [258 x [4 x i32]]* %479, i32 0, i64 %477
  %481 = getelementptr inbounds [4 x i32]* %480, i32 0, i64 2
  %482 = load i32* %481, align 4
  %483 = load i32* %cost45, align 4
  %484 = add i32 %483, %482
  store i32 %484, i32* %cost45, align 4
  %485 = load i32* %gs, align 4
  %486 = add nsw i32 %485, 3
  %487 = sext i32 %486 to i64
  %488 = load i16** %mtfv, align 8
  %489 = getelementptr inbounds i16* %488, i64 %487
  %490 = load i16* %489, align 2
  store i16 %490, i16* %icv, align 2
  %491 = load i16* %icv, align 2
  %492 = zext i16 %491 to i64
  %493 = load %struct.EState** %1, align 8
  %494 = getelementptr inbounds %struct.EState* %493, i32 0, i32 38
  %495 = getelementptr inbounds [258 x [4 x i32]]* %494, i32 0, i64 %492
  %496 = getelementptr inbounds [4 x i32]* %495, i32 0, i64 0
  %497 = load i32* %496, align 4
  %498 = load i32* %cost01, align 4
  %499 = add i32 %498, %497
  store i32 %499, i32* %cost01, align 4
  %500 = load i16* %icv, align 2
  %501 = zext i16 %500 to i64
  %502 = load %struct.EState** %1, align 8
  %503 = getelementptr inbounds %struct.EState* %502, i32 0, i32 38
  %504 = getelementptr inbounds [258 x [4 x i32]]* %503, i32 0, i64 %501
  %505 = getelementptr inbounds [4 x i32]* %504, i32 0, i64 1
  %506 = load i32* %505, align 4
  %507 = load i32* %cost23, align 4
  %508 = add i32 %507, %506
  store i32 %508, i32* %cost23, align 4
  %509 = load i16* %icv, align 2
  %510 = zext i16 %509 to i64
  %511 = load %struct.EState** %1, align 8
  %512 = getelementptr inbounds %struct.EState* %511, i32 0, i32 38
  %513 = getelementptr inbounds [258 x [4 x i32]]* %512, i32 0, i64 %510
  %514 = getelementptr inbounds [4 x i32]* %513, i32 0, i64 2
  %515 = load i32* %514, align 4
  %516 = load i32* %cost45, align 4
  %517 = add i32 %516, %515
  store i32 %517, i32* %cost45, align 4
  %518 = load i32* %gs, align 4
  %519 = add nsw i32 %518, 4
  %520 = sext i32 %519 to i64
  %521 = load i16** %mtfv, align 8
  %522 = getelementptr inbounds i16* %521, i64 %520
  %523 = load i16* %522, align 2
  store i16 %523, i16* %icv, align 2
  %524 = load i16* %icv, align 2
  %525 = zext i16 %524 to i64
  %526 = load %struct.EState** %1, align 8
  %527 = getelementptr inbounds %struct.EState* %526, i32 0, i32 38
  %528 = getelementptr inbounds [258 x [4 x i32]]* %527, i32 0, i64 %525
  %529 = getelementptr inbounds [4 x i32]* %528, i32 0, i64 0
  %530 = load i32* %529, align 4
  %531 = load i32* %cost01, align 4
  %532 = add i32 %531, %530
  store i32 %532, i32* %cost01, align 4
  %533 = load i16* %icv, align 2
  %534 = zext i16 %533 to i64
  %535 = load %struct.EState** %1, align 8
  %536 = getelementptr inbounds %struct.EState* %535, i32 0, i32 38
  %537 = getelementptr inbounds [258 x [4 x i32]]* %536, i32 0, i64 %534
  %538 = getelementptr inbounds [4 x i32]* %537, i32 0, i64 1
  %539 = load i32* %538, align 4
  %540 = load i32* %cost23, align 4
  %541 = add i32 %540, %539
  store i32 %541, i32* %cost23, align 4
  %542 = load i16* %icv, align 2
  %543 = zext i16 %542 to i64
  %544 = load %struct.EState** %1, align 8
  %545 = getelementptr inbounds %struct.EState* %544, i32 0, i32 38
  %546 = getelementptr inbounds [258 x [4 x i32]]* %545, i32 0, i64 %543
  %547 = getelementptr inbounds [4 x i32]* %546, i32 0, i64 2
  %548 = load i32* %547, align 4
  %549 = load i32* %cost45, align 4
  %550 = add i32 %549, %548
  store i32 %550, i32* %cost45, align 4
  %551 = load i32* %gs, align 4
  %552 = add nsw i32 %551, 5
  %553 = sext i32 %552 to i64
  %554 = load i16** %mtfv, align 8
  %555 = getelementptr inbounds i16* %554, i64 %553
  %556 = load i16* %555, align 2
  store i16 %556, i16* %icv, align 2
  %557 = load i16* %icv, align 2
  %558 = zext i16 %557 to i64
  %559 = load %struct.EState** %1, align 8
  %560 = getelementptr inbounds %struct.EState* %559, i32 0, i32 38
  %561 = getelementptr inbounds [258 x [4 x i32]]* %560, i32 0, i64 %558
  %562 = getelementptr inbounds [4 x i32]* %561, i32 0, i64 0
  %563 = load i32* %562, align 4
  %564 = load i32* %cost01, align 4
  %565 = add i32 %564, %563
  store i32 %565, i32* %cost01, align 4
  %566 = load i16* %icv, align 2
  %567 = zext i16 %566 to i64
  %568 = load %struct.EState** %1, align 8
  %569 = getelementptr inbounds %struct.EState* %568, i32 0, i32 38
  %570 = getelementptr inbounds [258 x [4 x i32]]* %569, i32 0, i64 %567
  %571 = getelementptr inbounds [4 x i32]* %570, i32 0, i64 1
  %572 = load i32* %571, align 4
  %573 = load i32* %cost23, align 4
  %574 = add i32 %573, %572
  store i32 %574, i32* %cost23, align 4
  %575 = load i16* %icv, align 2
  %576 = zext i16 %575 to i64
  %577 = load %struct.EState** %1, align 8
  %578 = getelementptr inbounds %struct.EState* %577, i32 0, i32 38
  %579 = getelementptr inbounds [258 x [4 x i32]]* %578, i32 0, i64 %576
  %580 = getelementptr inbounds [4 x i32]* %579, i32 0, i64 2
  %581 = load i32* %580, align 4
  %582 = load i32* %cost45, align 4
  %583 = add i32 %582, %581
  store i32 %583, i32* %cost45, align 4
  %584 = load i32* %gs, align 4
  %585 = add nsw i32 %584, 6
  %586 = sext i32 %585 to i64
  %587 = load i16** %mtfv, align 8
  %588 = getelementptr inbounds i16* %587, i64 %586
  %589 = load i16* %588, align 2
  store i16 %589, i16* %icv, align 2
  %590 = load i16* %icv, align 2
  %591 = zext i16 %590 to i64
  %592 = load %struct.EState** %1, align 8
  %593 = getelementptr inbounds %struct.EState* %592, i32 0, i32 38
  %594 = getelementptr inbounds [258 x [4 x i32]]* %593, i32 0, i64 %591
  %595 = getelementptr inbounds [4 x i32]* %594, i32 0, i64 0
  %596 = load i32* %595, align 4
  %597 = load i32* %cost01, align 4
  %598 = add i32 %597, %596
  store i32 %598, i32* %cost01, align 4
  %599 = load i16* %icv, align 2
  %600 = zext i16 %599 to i64
  %601 = load %struct.EState** %1, align 8
  %602 = getelementptr inbounds %struct.EState* %601, i32 0, i32 38
  %603 = getelementptr inbounds [258 x [4 x i32]]* %602, i32 0, i64 %600
  %604 = getelementptr inbounds [4 x i32]* %603, i32 0, i64 1
  %605 = load i32* %604, align 4
  %606 = load i32* %cost23, align 4
  %607 = add i32 %606, %605
  store i32 %607, i32* %cost23, align 4
  %608 = load i16* %icv, align 2
  %609 = zext i16 %608 to i64
  %610 = load %struct.EState** %1, align 8
  %611 = getelementptr inbounds %struct.EState* %610, i32 0, i32 38
  %612 = getelementptr inbounds [258 x [4 x i32]]* %611, i32 0, i64 %609
  %613 = getelementptr inbounds [4 x i32]* %612, i32 0, i64 2
  %614 = load i32* %613, align 4
  %615 = load i32* %cost45, align 4
  %616 = add i32 %615, %614
  store i32 %616, i32* %cost45, align 4
  %617 = load i32* %gs, align 4
  %618 = add nsw i32 %617, 7
  %619 = sext i32 %618 to i64
  %620 = load i16** %mtfv, align 8
  %621 = getelementptr inbounds i16* %620, i64 %619
  %622 = load i16* %621, align 2
  store i16 %622, i16* %icv, align 2
  %623 = load i16* %icv, align 2
  %624 = zext i16 %623 to i64
  %625 = load %struct.EState** %1, align 8
  %626 = getelementptr inbounds %struct.EState* %625, i32 0, i32 38
  %627 = getelementptr inbounds [258 x [4 x i32]]* %626, i32 0, i64 %624
  %628 = getelementptr inbounds [4 x i32]* %627, i32 0, i64 0
  %629 = load i32* %628, align 4
  %630 = load i32* %cost01, align 4
  %631 = add i32 %630, %629
  store i32 %631, i32* %cost01, align 4
  %632 = load i16* %icv, align 2
  %633 = zext i16 %632 to i64
  %634 = load %struct.EState** %1, align 8
  %635 = getelementptr inbounds %struct.EState* %634, i32 0, i32 38
  %636 = getelementptr inbounds [258 x [4 x i32]]* %635, i32 0, i64 %633
  %637 = getelementptr inbounds [4 x i32]* %636, i32 0, i64 1
  %638 = load i32* %637, align 4
  %639 = load i32* %cost23, align 4
  %640 = add i32 %639, %638
  store i32 %640, i32* %cost23, align 4
  %641 = load i16* %icv, align 2
  %642 = zext i16 %641 to i64
  %643 = load %struct.EState** %1, align 8
  %644 = getelementptr inbounds %struct.EState* %643, i32 0, i32 38
  %645 = getelementptr inbounds [258 x [4 x i32]]* %644, i32 0, i64 %642
  %646 = getelementptr inbounds [4 x i32]* %645, i32 0, i64 2
  %647 = load i32* %646, align 4
  %648 = load i32* %cost45, align 4
  %649 = add i32 %648, %647
  store i32 %649, i32* %cost45, align 4
  %650 = load i32* %gs, align 4
  %651 = add nsw i32 %650, 8
  %652 = sext i32 %651 to i64
  %653 = load i16** %mtfv, align 8
  %654 = getelementptr inbounds i16* %653, i64 %652
  %655 = load i16* %654, align 2
  store i16 %655, i16* %icv, align 2
  %656 = load i16* %icv, align 2
  %657 = zext i16 %656 to i64
  %658 = load %struct.EState** %1, align 8
  %659 = getelementptr inbounds %struct.EState* %658, i32 0, i32 38
  %660 = getelementptr inbounds [258 x [4 x i32]]* %659, i32 0, i64 %657
  %661 = getelementptr inbounds [4 x i32]* %660, i32 0, i64 0
  %662 = load i32* %661, align 4
  %663 = load i32* %cost01, align 4
  %664 = add i32 %663, %662
  store i32 %664, i32* %cost01, align 4
  %665 = load i16* %icv, align 2
  %666 = zext i16 %665 to i64
  %667 = load %struct.EState** %1, align 8
  %668 = getelementptr inbounds %struct.EState* %667, i32 0, i32 38
  %669 = getelementptr inbounds [258 x [4 x i32]]* %668, i32 0, i64 %666
  %670 = getelementptr inbounds [4 x i32]* %669, i32 0, i64 1
  %671 = load i32* %670, align 4
  %672 = load i32* %cost23, align 4
  %673 = add i32 %672, %671
  store i32 %673, i32* %cost23, align 4
  %674 = load i16* %icv, align 2
  %675 = zext i16 %674 to i64
  %676 = load %struct.EState** %1, align 8
  %677 = getelementptr inbounds %struct.EState* %676, i32 0, i32 38
  %678 = getelementptr inbounds [258 x [4 x i32]]* %677, i32 0, i64 %675
  %679 = getelementptr inbounds [4 x i32]* %678, i32 0, i64 2
  %680 = load i32* %679, align 4
  %681 = load i32* %cost45, align 4
  %682 = add i32 %681, %680
  store i32 %682, i32* %cost45, align 4
  %683 = load i32* %gs, align 4
  %684 = add nsw i32 %683, 9
  %685 = sext i32 %684 to i64
  %686 = load i16** %mtfv, align 8
  %687 = getelementptr inbounds i16* %686, i64 %685
  %688 = load i16* %687, align 2
  store i16 %688, i16* %icv, align 2
  %689 = load i16* %icv, align 2
  %690 = zext i16 %689 to i64
  %691 = load %struct.EState** %1, align 8
  %692 = getelementptr inbounds %struct.EState* %691, i32 0, i32 38
  %693 = getelementptr inbounds [258 x [4 x i32]]* %692, i32 0, i64 %690
  %694 = getelementptr inbounds [4 x i32]* %693, i32 0, i64 0
  %695 = load i32* %694, align 4
  %696 = load i32* %cost01, align 4
  %697 = add i32 %696, %695
  store i32 %697, i32* %cost01, align 4
  %698 = load i16* %icv, align 2
  %699 = zext i16 %698 to i64
  %700 = load %struct.EState** %1, align 8
  %701 = getelementptr inbounds %struct.EState* %700, i32 0, i32 38
  %702 = getelementptr inbounds [258 x [4 x i32]]* %701, i32 0, i64 %699
  %703 = getelementptr inbounds [4 x i32]* %702, i32 0, i64 1
  %704 = load i32* %703, align 4
  %705 = load i32* %cost23, align 4
  %706 = add i32 %705, %704
  store i32 %706, i32* %cost23, align 4
  %707 = load i16* %icv, align 2
  %708 = zext i16 %707 to i64
  %709 = load %struct.EState** %1, align 8
  %710 = getelementptr inbounds %struct.EState* %709, i32 0, i32 38
  %711 = getelementptr inbounds [258 x [4 x i32]]* %710, i32 0, i64 %708
  %712 = getelementptr inbounds [4 x i32]* %711, i32 0, i64 2
  %713 = load i32* %712, align 4
  %714 = load i32* %cost45, align 4
  %715 = add i32 %714, %713
  store i32 %715, i32* %cost45, align 4
  %716 = load i32* %gs, align 4
  %717 = add nsw i32 %716, 10
  %718 = sext i32 %717 to i64
  %719 = load i16** %mtfv, align 8
  %720 = getelementptr inbounds i16* %719, i64 %718
  %721 = load i16* %720, align 2
  store i16 %721, i16* %icv, align 2
  %722 = load i16* %icv, align 2
  %723 = zext i16 %722 to i64
  %724 = load %struct.EState** %1, align 8
  %725 = getelementptr inbounds %struct.EState* %724, i32 0, i32 38
  %726 = getelementptr inbounds [258 x [4 x i32]]* %725, i32 0, i64 %723
  %727 = getelementptr inbounds [4 x i32]* %726, i32 0, i64 0
  %728 = load i32* %727, align 4
  %729 = load i32* %cost01, align 4
  %730 = add i32 %729, %728
  store i32 %730, i32* %cost01, align 4
  %731 = load i16* %icv, align 2
  %732 = zext i16 %731 to i64
  %733 = load %struct.EState** %1, align 8
  %734 = getelementptr inbounds %struct.EState* %733, i32 0, i32 38
  %735 = getelementptr inbounds [258 x [4 x i32]]* %734, i32 0, i64 %732
  %736 = getelementptr inbounds [4 x i32]* %735, i32 0, i64 1
  %737 = load i32* %736, align 4
  %738 = load i32* %cost23, align 4
  %739 = add i32 %738, %737
  store i32 %739, i32* %cost23, align 4
  %740 = load i16* %icv, align 2
  %741 = zext i16 %740 to i64
  %742 = load %struct.EState** %1, align 8
  %743 = getelementptr inbounds %struct.EState* %742, i32 0, i32 38
  %744 = getelementptr inbounds [258 x [4 x i32]]* %743, i32 0, i64 %741
  %745 = getelementptr inbounds [4 x i32]* %744, i32 0, i64 2
  %746 = load i32* %745, align 4
  %747 = load i32* %cost45, align 4
  %748 = add i32 %747, %746
  store i32 %748, i32* %cost45, align 4
  %749 = load i32* %gs, align 4
  %750 = add nsw i32 %749, 11
  %751 = sext i32 %750 to i64
  %752 = load i16** %mtfv, align 8
  %753 = getelementptr inbounds i16* %752, i64 %751
  %754 = load i16* %753, align 2
  store i16 %754, i16* %icv, align 2
  %755 = load i16* %icv, align 2
  %756 = zext i16 %755 to i64
  %757 = load %struct.EState** %1, align 8
  %758 = getelementptr inbounds %struct.EState* %757, i32 0, i32 38
  %759 = getelementptr inbounds [258 x [4 x i32]]* %758, i32 0, i64 %756
  %760 = getelementptr inbounds [4 x i32]* %759, i32 0, i64 0
  %761 = load i32* %760, align 4
  %762 = load i32* %cost01, align 4
  %763 = add i32 %762, %761
  store i32 %763, i32* %cost01, align 4
  %764 = load i16* %icv, align 2
  %765 = zext i16 %764 to i64
  %766 = load %struct.EState** %1, align 8
  %767 = getelementptr inbounds %struct.EState* %766, i32 0, i32 38
  %768 = getelementptr inbounds [258 x [4 x i32]]* %767, i32 0, i64 %765
  %769 = getelementptr inbounds [4 x i32]* %768, i32 0, i64 1
  %770 = load i32* %769, align 4
  %771 = load i32* %cost23, align 4
  %772 = add i32 %771, %770
  store i32 %772, i32* %cost23, align 4
  %773 = load i16* %icv, align 2
  %774 = zext i16 %773 to i64
  %775 = load %struct.EState** %1, align 8
  %776 = getelementptr inbounds %struct.EState* %775, i32 0, i32 38
  %777 = getelementptr inbounds [258 x [4 x i32]]* %776, i32 0, i64 %774
  %778 = getelementptr inbounds [4 x i32]* %777, i32 0, i64 2
  %779 = load i32* %778, align 4
  %780 = load i32* %cost45, align 4
  %781 = add i32 %780, %779
  store i32 %781, i32* %cost45, align 4
  %782 = load i32* %gs, align 4
  %783 = add nsw i32 %782, 12
  %784 = sext i32 %783 to i64
  %785 = load i16** %mtfv, align 8
  %786 = getelementptr inbounds i16* %785, i64 %784
  %787 = load i16* %786, align 2
  store i16 %787, i16* %icv, align 2
  %788 = load i16* %icv, align 2
  %789 = zext i16 %788 to i64
  %790 = load %struct.EState** %1, align 8
  %791 = getelementptr inbounds %struct.EState* %790, i32 0, i32 38
  %792 = getelementptr inbounds [258 x [4 x i32]]* %791, i32 0, i64 %789
  %793 = getelementptr inbounds [4 x i32]* %792, i32 0, i64 0
  %794 = load i32* %793, align 4
  %795 = load i32* %cost01, align 4
  %796 = add i32 %795, %794
  store i32 %796, i32* %cost01, align 4
  %797 = load i16* %icv, align 2
  %798 = zext i16 %797 to i64
  %799 = load %struct.EState** %1, align 8
  %800 = getelementptr inbounds %struct.EState* %799, i32 0, i32 38
  %801 = getelementptr inbounds [258 x [4 x i32]]* %800, i32 0, i64 %798
  %802 = getelementptr inbounds [4 x i32]* %801, i32 0, i64 1
  %803 = load i32* %802, align 4
  %804 = load i32* %cost23, align 4
  %805 = add i32 %804, %803
  store i32 %805, i32* %cost23, align 4
  %806 = load i16* %icv, align 2
  %807 = zext i16 %806 to i64
  %808 = load %struct.EState** %1, align 8
  %809 = getelementptr inbounds %struct.EState* %808, i32 0, i32 38
  %810 = getelementptr inbounds [258 x [4 x i32]]* %809, i32 0, i64 %807
  %811 = getelementptr inbounds [4 x i32]* %810, i32 0, i64 2
  %812 = load i32* %811, align 4
  %813 = load i32* %cost45, align 4
  %814 = add i32 %813, %812
  store i32 %814, i32* %cost45, align 4
  %815 = load i32* %gs, align 4
  %816 = add nsw i32 %815, 13
  %817 = sext i32 %816 to i64
  %818 = load i16** %mtfv, align 8
  %819 = getelementptr inbounds i16* %818, i64 %817
  %820 = load i16* %819, align 2
  store i16 %820, i16* %icv, align 2
  %821 = load i16* %icv, align 2
  %822 = zext i16 %821 to i64
  %823 = load %struct.EState** %1, align 8
  %824 = getelementptr inbounds %struct.EState* %823, i32 0, i32 38
  %825 = getelementptr inbounds [258 x [4 x i32]]* %824, i32 0, i64 %822
  %826 = getelementptr inbounds [4 x i32]* %825, i32 0, i64 0
  %827 = load i32* %826, align 4
  %828 = load i32* %cost01, align 4
  %829 = add i32 %828, %827
  store i32 %829, i32* %cost01, align 4
  %830 = load i16* %icv, align 2
  %831 = zext i16 %830 to i64
  %832 = load %struct.EState** %1, align 8
  %833 = getelementptr inbounds %struct.EState* %832, i32 0, i32 38
  %834 = getelementptr inbounds [258 x [4 x i32]]* %833, i32 0, i64 %831
  %835 = getelementptr inbounds [4 x i32]* %834, i32 0, i64 1
  %836 = load i32* %835, align 4
  %837 = load i32* %cost23, align 4
  %838 = add i32 %837, %836
  store i32 %838, i32* %cost23, align 4
  %839 = load i16* %icv, align 2
  %840 = zext i16 %839 to i64
  %841 = load %struct.EState** %1, align 8
  %842 = getelementptr inbounds %struct.EState* %841, i32 0, i32 38
  %843 = getelementptr inbounds [258 x [4 x i32]]* %842, i32 0, i64 %840
  %844 = getelementptr inbounds [4 x i32]* %843, i32 0, i64 2
  %845 = load i32* %844, align 4
  %846 = load i32* %cost45, align 4
  %847 = add i32 %846, %845
  store i32 %847, i32* %cost45, align 4
  %848 = load i32* %gs, align 4
  %849 = add nsw i32 %848, 14
  %850 = sext i32 %849 to i64
  %851 = load i16** %mtfv, align 8
  %852 = getelementptr inbounds i16* %851, i64 %850
  %853 = load i16* %852, align 2
  store i16 %853, i16* %icv, align 2
  %854 = load i16* %icv, align 2
  %855 = zext i16 %854 to i64
  %856 = load %struct.EState** %1, align 8
  %857 = getelementptr inbounds %struct.EState* %856, i32 0, i32 38
  %858 = getelementptr inbounds [258 x [4 x i32]]* %857, i32 0, i64 %855
  %859 = getelementptr inbounds [4 x i32]* %858, i32 0, i64 0
  %860 = load i32* %859, align 4
  %861 = load i32* %cost01, align 4
  %862 = add i32 %861, %860
  store i32 %862, i32* %cost01, align 4
  %863 = load i16* %icv, align 2
  %864 = zext i16 %863 to i64
  %865 = load %struct.EState** %1, align 8
  %866 = getelementptr inbounds %struct.EState* %865, i32 0, i32 38
  %867 = getelementptr inbounds [258 x [4 x i32]]* %866, i32 0, i64 %864
  %868 = getelementptr inbounds [4 x i32]* %867, i32 0, i64 1
  %869 = load i32* %868, align 4
  %870 = load i32* %cost23, align 4
  %871 = add i32 %870, %869
  store i32 %871, i32* %cost23, align 4
  %872 = load i16* %icv, align 2
  %873 = zext i16 %872 to i64
  %874 = load %struct.EState** %1, align 8
  %875 = getelementptr inbounds %struct.EState* %874, i32 0, i32 38
  %876 = getelementptr inbounds [258 x [4 x i32]]* %875, i32 0, i64 %873
  %877 = getelementptr inbounds [4 x i32]* %876, i32 0, i64 2
  %878 = load i32* %877, align 4
  %879 = load i32* %cost45, align 4
  %880 = add i32 %879, %878
  store i32 %880, i32* %cost45, align 4
  %881 = load i32* %gs, align 4
  %882 = add nsw i32 %881, 15
  %883 = sext i32 %882 to i64
  %884 = load i16** %mtfv, align 8
  %885 = getelementptr inbounds i16* %884, i64 %883
  %886 = load i16* %885, align 2
  store i16 %886, i16* %icv, align 2
  %887 = load i16* %icv, align 2
  %888 = zext i16 %887 to i64
  %889 = load %struct.EState** %1, align 8
  %890 = getelementptr inbounds %struct.EState* %889, i32 0, i32 38
  %891 = getelementptr inbounds [258 x [4 x i32]]* %890, i32 0, i64 %888
  %892 = getelementptr inbounds [4 x i32]* %891, i32 0, i64 0
  %893 = load i32* %892, align 4
  %894 = load i32* %cost01, align 4
  %895 = add i32 %894, %893
  store i32 %895, i32* %cost01, align 4
  %896 = load i16* %icv, align 2
  %897 = zext i16 %896 to i64
  %898 = load %struct.EState** %1, align 8
  %899 = getelementptr inbounds %struct.EState* %898, i32 0, i32 38
  %900 = getelementptr inbounds [258 x [4 x i32]]* %899, i32 0, i64 %897
  %901 = getelementptr inbounds [4 x i32]* %900, i32 0, i64 1
  %902 = load i32* %901, align 4
  %903 = load i32* %cost23, align 4
  %904 = add i32 %903, %902
  store i32 %904, i32* %cost23, align 4
  %905 = load i16* %icv, align 2
  %906 = zext i16 %905 to i64
  %907 = load %struct.EState** %1, align 8
  %908 = getelementptr inbounds %struct.EState* %907, i32 0, i32 38
  %909 = getelementptr inbounds [258 x [4 x i32]]* %908, i32 0, i64 %906
  %910 = getelementptr inbounds [4 x i32]* %909, i32 0, i64 2
  %911 = load i32* %910, align 4
  %912 = load i32* %cost45, align 4
  %913 = add i32 %912, %911
  store i32 %913, i32* %cost45, align 4
  %914 = load i32* %gs, align 4
  %915 = add nsw i32 %914, 16
  %916 = sext i32 %915 to i64
  %917 = load i16** %mtfv, align 8
  %918 = getelementptr inbounds i16* %917, i64 %916
  %919 = load i16* %918, align 2
  store i16 %919, i16* %icv, align 2
  %920 = load i16* %icv, align 2
  %921 = zext i16 %920 to i64
  %922 = load %struct.EState** %1, align 8
  %923 = getelementptr inbounds %struct.EState* %922, i32 0, i32 38
  %924 = getelementptr inbounds [258 x [4 x i32]]* %923, i32 0, i64 %921
  %925 = getelementptr inbounds [4 x i32]* %924, i32 0, i64 0
  %926 = load i32* %925, align 4
  %927 = load i32* %cost01, align 4
  %928 = add i32 %927, %926
  store i32 %928, i32* %cost01, align 4
  %929 = load i16* %icv, align 2
  %930 = zext i16 %929 to i64
  %931 = load %struct.EState** %1, align 8
  %932 = getelementptr inbounds %struct.EState* %931, i32 0, i32 38
  %933 = getelementptr inbounds [258 x [4 x i32]]* %932, i32 0, i64 %930
  %934 = getelementptr inbounds [4 x i32]* %933, i32 0, i64 1
  %935 = load i32* %934, align 4
  %936 = load i32* %cost23, align 4
  %937 = add i32 %936, %935
  store i32 %937, i32* %cost23, align 4
  %938 = load i16* %icv, align 2
  %939 = zext i16 %938 to i64
  %940 = load %struct.EState** %1, align 8
  %941 = getelementptr inbounds %struct.EState* %940, i32 0, i32 38
  %942 = getelementptr inbounds [258 x [4 x i32]]* %941, i32 0, i64 %939
  %943 = getelementptr inbounds [4 x i32]* %942, i32 0, i64 2
  %944 = load i32* %943, align 4
  %945 = load i32* %cost45, align 4
  %946 = add i32 %945, %944
  store i32 %946, i32* %cost45, align 4
  %947 = load i32* %gs, align 4
  %948 = add nsw i32 %947, 17
  %949 = sext i32 %948 to i64
  %950 = load i16** %mtfv, align 8
  %951 = getelementptr inbounds i16* %950, i64 %949
  %952 = load i16* %951, align 2
  store i16 %952, i16* %icv, align 2
  %953 = load i16* %icv, align 2
  %954 = zext i16 %953 to i64
  %955 = load %struct.EState** %1, align 8
  %956 = getelementptr inbounds %struct.EState* %955, i32 0, i32 38
  %957 = getelementptr inbounds [258 x [4 x i32]]* %956, i32 0, i64 %954
  %958 = getelementptr inbounds [4 x i32]* %957, i32 0, i64 0
  %959 = load i32* %958, align 4
  %960 = load i32* %cost01, align 4
  %961 = add i32 %960, %959
  store i32 %961, i32* %cost01, align 4
  %962 = load i16* %icv, align 2
  %963 = zext i16 %962 to i64
  %964 = load %struct.EState** %1, align 8
  %965 = getelementptr inbounds %struct.EState* %964, i32 0, i32 38
  %966 = getelementptr inbounds [258 x [4 x i32]]* %965, i32 0, i64 %963
  %967 = getelementptr inbounds [4 x i32]* %966, i32 0, i64 1
  %968 = load i32* %967, align 4
  %969 = load i32* %cost23, align 4
  %970 = add i32 %969, %968
  store i32 %970, i32* %cost23, align 4
  %971 = load i16* %icv, align 2
  %972 = zext i16 %971 to i64
  %973 = load %struct.EState** %1, align 8
  %974 = getelementptr inbounds %struct.EState* %973, i32 0, i32 38
  %975 = getelementptr inbounds [258 x [4 x i32]]* %974, i32 0, i64 %972
  %976 = getelementptr inbounds [4 x i32]* %975, i32 0, i64 2
  %977 = load i32* %976, align 4
  %978 = load i32* %cost45, align 4
  %979 = add i32 %978, %977
  store i32 %979, i32* %cost45, align 4
  %980 = load i32* %gs, align 4
  %981 = add nsw i32 %980, 18
  %982 = sext i32 %981 to i64
  %983 = load i16** %mtfv, align 8
  %984 = getelementptr inbounds i16* %983, i64 %982
  %985 = load i16* %984, align 2
  store i16 %985, i16* %icv, align 2
  %986 = load i16* %icv, align 2
  %987 = zext i16 %986 to i64
  %988 = load %struct.EState** %1, align 8
  %989 = getelementptr inbounds %struct.EState* %988, i32 0, i32 38
  %990 = getelementptr inbounds [258 x [4 x i32]]* %989, i32 0, i64 %987
  %991 = getelementptr inbounds [4 x i32]* %990, i32 0, i64 0
  %992 = load i32* %991, align 4
  %993 = load i32* %cost01, align 4
  %994 = add i32 %993, %992
  store i32 %994, i32* %cost01, align 4
  %995 = load i16* %icv, align 2
  %996 = zext i16 %995 to i64
  %997 = load %struct.EState** %1, align 8
  %998 = getelementptr inbounds %struct.EState* %997, i32 0, i32 38
  %999 = getelementptr inbounds [258 x [4 x i32]]* %998, i32 0, i64 %996
  %1000 = getelementptr inbounds [4 x i32]* %999, i32 0, i64 1
  %1001 = load i32* %1000, align 4
  %1002 = load i32* %cost23, align 4
  %1003 = add i32 %1002, %1001
  store i32 %1003, i32* %cost23, align 4
  %1004 = load i16* %icv, align 2
  %1005 = zext i16 %1004 to i64
  %1006 = load %struct.EState** %1, align 8
  %1007 = getelementptr inbounds %struct.EState* %1006, i32 0, i32 38
  %1008 = getelementptr inbounds [258 x [4 x i32]]* %1007, i32 0, i64 %1005
  %1009 = getelementptr inbounds [4 x i32]* %1008, i32 0, i64 2
  %1010 = load i32* %1009, align 4
  %1011 = load i32* %cost45, align 4
  %1012 = add i32 %1011, %1010
  store i32 %1012, i32* %cost45, align 4
  %1013 = load i32* %gs, align 4
  %1014 = add nsw i32 %1013, 19
  %1015 = sext i32 %1014 to i64
  %1016 = load i16** %mtfv, align 8
  %1017 = getelementptr inbounds i16* %1016, i64 %1015
  %1018 = load i16* %1017, align 2
  store i16 %1018, i16* %icv, align 2
  %1019 = load i16* %icv, align 2
  %1020 = zext i16 %1019 to i64
  %1021 = load %struct.EState** %1, align 8
  %1022 = getelementptr inbounds %struct.EState* %1021, i32 0, i32 38
  %1023 = getelementptr inbounds [258 x [4 x i32]]* %1022, i32 0, i64 %1020
  %1024 = getelementptr inbounds [4 x i32]* %1023, i32 0, i64 0
  %1025 = load i32* %1024, align 4
  %1026 = load i32* %cost01, align 4
  %1027 = add i32 %1026, %1025
  store i32 %1027, i32* %cost01, align 4
  %1028 = load i16* %icv, align 2
  %1029 = zext i16 %1028 to i64
  %1030 = load %struct.EState** %1, align 8
  %1031 = getelementptr inbounds %struct.EState* %1030, i32 0, i32 38
  %1032 = getelementptr inbounds [258 x [4 x i32]]* %1031, i32 0, i64 %1029
  %1033 = getelementptr inbounds [4 x i32]* %1032, i32 0, i64 1
  %1034 = load i32* %1033, align 4
  %1035 = load i32* %cost23, align 4
  %1036 = add i32 %1035, %1034
  store i32 %1036, i32* %cost23, align 4
  %1037 = load i16* %icv, align 2
  %1038 = zext i16 %1037 to i64
  %1039 = load %struct.EState** %1, align 8
  %1040 = getelementptr inbounds %struct.EState* %1039, i32 0, i32 38
  %1041 = getelementptr inbounds [258 x [4 x i32]]* %1040, i32 0, i64 %1038
  %1042 = getelementptr inbounds [4 x i32]* %1041, i32 0, i64 2
  %1043 = load i32* %1042, align 4
  %1044 = load i32* %cost45, align 4
  %1045 = add i32 %1044, %1043
  store i32 %1045, i32* %cost45, align 4
  %1046 = load i32* %gs, align 4
  %1047 = add nsw i32 %1046, 20
  %1048 = sext i32 %1047 to i64
  %1049 = load i16** %mtfv, align 8
  %1050 = getelementptr inbounds i16* %1049, i64 %1048
  %1051 = load i16* %1050, align 2
  store i16 %1051, i16* %icv, align 2
  %1052 = load i16* %icv, align 2
  %1053 = zext i16 %1052 to i64
  %1054 = load %struct.EState** %1, align 8
  %1055 = getelementptr inbounds %struct.EState* %1054, i32 0, i32 38
  %1056 = getelementptr inbounds [258 x [4 x i32]]* %1055, i32 0, i64 %1053
  %1057 = getelementptr inbounds [4 x i32]* %1056, i32 0, i64 0
  %1058 = load i32* %1057, align 4
  %1059 = load i32* %cost01, align 4
  %1060 = add i32 %1059, %1058
  store i32 %1060, i32* %cost01, align 4
  %1061 = load i16* %icv, align 2
  %1062 = zext i16 %1061 to i64
  %1063 = load %struct.EState** %1, align 8
  %1064 = getelementptr inbounds %struct.EState* %1063, i32 0, i32 38
  %1065 = getelementptr inbounds [258 x [4 x i32]]* %1064, i32 0, i64 %1062
  %1066 = getelementptr inbounds [4 x i32]* %1065, i32 0, i64 1
  %1067 = load i32* %1066, align 4
  %1068 = load i32* %cost23, align 4
  %1069 = add i32 %1068, %1067
  store i32 %1069, i32* %cost23, align 4
  %1070 = load i16* %icv, align 2
  %1071 = zext i16 %1070 to i64
  %1072 = load %struct.EState** %1, align 8
  %1073 = getelementptr inbounds %struct.EState* %1072, i32 0, i32 38
  %1074 = getelementptr inbounds [258 x [4 x i32]]* %1073, i32 0, i64 %1071
  %1075 = getelementptr inbounds [4 x i32]* %1074, i32 0, i64 2
  %1076 = load i32* %1075, align 4
  %1077 = load i32* %cost45, align 4
  %1078 = add i32 %1077, %1076
  store i32 %1078, i32* %cost45, align 4
  %1079 = load i32* %gs, align 4
  %1080 = add nsw i32 %1079, 21
  %1081 = sext i32 %1080 to i64
  %1082 = load i16** %mtfv, align 8
  %1083 = getelementptr inbounds i16* %1082, i64 %1081
  %1084 = load i16* %1083, align 2
  store i16 %1084, i16* %icv, align 2
  %1085 = load i16* %icv, align 2
  %1086 = zext i16 %1085 to i64
  %1087 = load %struct.EState** %1, align 8
  %1088 = getelementptr inbounds %struct.EState* %1087, i32 0, i32 38
  %1089 = getelementptr inbounds [258 x [4 x i32]]* %1088, i32 0, i64 %1086
  %1090 = getelementptr inbounds [4 x i32]* %1089, i32 0, i64 0
  %1091 = load i32* %1090, align 4
  %1092 = load i32* %cost01, align 4
  %1093 = add i32 %1092, %1091
  store i32 %1093, i32* %cost01, align 4
  %1094 = load i16* %icv, align 2
  %1095 = zext i16 %1094 to i64
  %1096 = load %struct.EState** %1, align 8
  %1097 = getelementptr inbounds %struct.EState* %1096, i32 0, i32 38
  %1098 = getelementptr inbounds [258 x [4 x i32]]* %1097, i32 0, i64 %1095
  %1099 = getelementptr inbounds [4 x i32]* %1098, i32 0, i64 1
  %1100 = load i32* %1099, align 4
  %1101 = load i32* %cost23, align 4
  %1102 = add i32 %1101, %1100
  store i32 %1102, i32* %cost23, align 4
  %1103 = load i16* %icv, align 2
  %1104 = zext i16 %1103 to i64
  %1105 = load %struct.EState** %1, align 8
  %1106 = getelementptr inbounds %struct.EState* %1105, i32 0, i32 38
  %1107 = getelementptr inbounds [258 x [4 x i32]]* %1106, i32 0, i64 %1104
  %1108 = getelementptr inbounds [4 x i32]* %1107, i32 0, i64 2
  %1109 = load i32* %1108, align 4
  %1110 = load i32* %cost45, align 4
  %1111 = add i32 %1110, %1109
  store i32 %1111, i32* %cost45, align 4
  %1112 = load i32* %gs, align 4
  %1113 = add nsw i32 %1112, 22
  %1114 = sext i32 %1113 to i64
  %1115 = load i16** %mtfv, align 8
  %1116 = getelementptr inbounds i16* %1115, i64 %1114
  %1117 = load i16* %1116, align 2
  store i16 %1117, i16* %icv, align 2
  %1118 = load i16* %icv, align 2
  %1119 = zext i16 %1118 to i64
  %1120 = load %struct.EState** %1, align 8
  %1121 = getelementptr inbounds %struct.EState* %1120, i32 0, i32 38
  %1122 = getelementptr inbounds [258 x [4 x i32]]* %1121, i32 0, i64 %1119
  %1123 = getelementptr inbounds [4 x i32]* %1122, i32 0, i64 0
  %1124 = load i32* %1123, align 4
  %1125 = load i32* %cost01, align 4
  %1126 = add i32 %1125, %1124
  store i32 %1126, i32* %cost01, align 4
  %1127 = load i16* %icv, align 2
  %1128 = zext i16 %1127 to i64
  %1129 = load %struct.EState** %1, align 8
  %1130 = getelementptr inbounds %struct.EState* %1129, i32 0, i32 38
  %1131 = getelementptr inbounds [258 x [4 x i32]]* %1130, i32 0, i64 %1128
  %1132 = getelementptr inbounds [4 x i32]* %1131, i32 0, i64 1
  %1133 = load i32* %1132, align 4
  %1134 = load i32* %cost23, align 4
  %1135 = add i32 %1134, %1133
  store i32 %1135, i32* %cost23, align 4
  %1136 = load i16* %icv, align 2
  %1137 = zext i16 %1136 to i64
  %1138 = load %struct.EState** %1, align 8
  %1139 = getelementptr inbounds %struct.EState* %1138, i32 0, i32 38
  %1140 = getelementptr inbounds [258 x [4 x i32]]* %1139, i32 0, i64 %1137
  %1141 = getelementptr inbounds [4 x i32]* %1140, i32 0, i64 2
  %1142 = load i32* %1141, align 4
  %1143 = load i32* %cost45, align 4
  %1144 = add i32 %1143, %1142
  store i32 %1144, i32* %cost45, align 4
  %1145 = load i32* %gs, align 4
  %1146 = add nsw i32 %1145, 23
  %1147 = sext i32 %1146 to i64
  %1148 = load i16** %mtfv, align 8
  %1149 = getelementptr inbounds i16* %1148, i64 %1147
  %1150 = load i16* %1149, align 2
  store i16 %1150, i16* %icv, align 2
  %1151 = load i16* %icv, align 2
  %1152 = zext i16 %1151 to i64
  %1153 = load %struct.EState** %1, align 8
  %1154 = getelementptr inbounds %struct.EState* %1153, i32 0, i32 38
  %1155 = getelementptr inbounds [258 x [4 x i32]]* %1154, i32 0, i64 %1152
  %1156 = getelementptr inbounds [4 x i32]* %1155, i32 0, i64 0
  %1157 = load i32* %1156, align 4
  %1158 = load i32* %cost01, align 4
  %1159 = add i32 %1158, %1157
  store i32 %1159, i32* %cost01, align 4
  %1160 = load i16* %icv, align 2
  %1161 = zext i16 %1160 to i64
  %1162 = load %struct.EState** %1, align 8
  %1163 = getelementptr inbounds %struct.EState* %1162, i32 0, i32 38
  %1164 = getelementptr inbounds [258 x [4 x i32]]* %1163, i32 0, i64 %1161
  %1165 = getelementptr inbounds [4 x i32]* %1164, i32 0, i64 1
  %1166 = load i32* %1165, align 4
  %1167 = load i32* %cost23, align 4
  %1168 = add i32 %1167, %1166
  store i32 %1168, i32* %cost23, align 4
  %1169 = load i16* %icv, align 2
  %1170 = zext i16 %1169 to i64
  %1171 = load %struct.EState** %1, align 8
  %1172 = getelementptr inbounds %struct.EState* %1171, i32 0, i32 38
  %1173 = getelementptr inbounds [258 x [4 x i32]]* %1172, i32 0, i64 %1170
  %1174 = getelementptr inbounds [4 x i32]* %1173, i32 0, i64 2
  %1175 = load i32* %1174, align 4
  %1176 = load i32* %cost45, align 4
  %1177 = add i32 %1176, %1175
  store i32 %1177, i32* %cost45, align 4
  %1178 = load i32* %gs, align 4
  %1179 = add nsw i32 %1178, 24
  %1180 = sext i32 %1179 to i64
  %1181 = load i16** %mtfv, align 8
  %1182 = getelementptr inbounds i16* %1181, i64 %1180
  %1183 = load i16* %1182, align 2
  store i16 %1183, i16* %icv, align 2
  %1184 = load i16* %icv, align 2
  %1185 = zext i16 %1184 to i64
  %1186 = load %struct.EState** %1, align 8
  %1187 = getelementptr inbounds %struct.EState* %1186, i32 0, i32 38
  %1188 = getelementptr inbounds [258 x [4 x i32]]* %1187, i32 0, i64 %1185
  %1189 = getelementptr inbounds [4 x i32]* %1188, i32 0, i64 0
  %1190 = load i32* %1189, align 4
  %1191 = load i32* %cost01, align 4
  %1192 = add i32 %1191, %1190
  store i32 %1192, i32* %cost01, align 4
  %1193 = load i16* %icv, align 2
  %1194 = zext i16 %1193 to i64
  %1195 = load %struct.EState** %1, align 8
  %1196 = getelementptr inbounds %struct.EState* %1195, i32 0, i32 38
  %1197 = getelementptr inbounds [258 x [4 x i32]]* %1196, i32 0, i64 %1194
  %1198 = getelementptr inbounds [4 x i32]* %1197, i32 0, i64 1
  %1199 = load i32* %1198, align 4
  %1200 = load i32* %cost23, align 4
  %1201 = add i32 %1200, %1199
  store i32 %1201, i32* %cost23, align 4
  %1202 = load i16* %icv, align 2
  %1203 = zext i16 %1202 to i64
  %1204 = load %struct.EState** %1, align 8
  %1205 = getelementptr inbounds %struct.EState* %1204, i32 0, i32 38
  %1206 = getelementptr inbounds [258 x [4 x i32]]* %1205, i32 0, i64 %1203
  %1207 = getelementptr inbounds [4 x i32]* %1206, i32 0, i64 2
  %1208 = load i32* %1207, align 4
  %1209 = load i32* %cost45, align 4
  %1210 = add i32 %1209, %1208
  store i32 %1210, i32* %cost45, align 4
  %1211 = load i32* %gs, align 4
  %1212 = add nsw i32 %1211, 25
  %1213 = sext i32 %1212 to i64
  %1214 = load i16** %mtfv, align 8
  %1215 = getelementptr inbounds i16* %1214, i64 %1213
  %1216 = load i16* %1215, align 2
  store i16 %1216, i16* %icv, align 2
  %1217 = load i16* %icv, align 2
  %1218 = zext i16 %1217 to i64
  %1219 = load %struct.EState** %1, align 8
  %1220 = getelementptr inbounds %struct.EState* %1219, i32 0, i32 38
  %1221 = getelementptr inbounds [258 x [4 x i32]]* %1220, i32 0, i64 %1218
  %1222 = getelementptr inbounds [4 x i32]* %1221, i32 0, i64 0
  %1223 = load i32* %1222, align 4
  %1224 = load i32* %cost01, align 4
  %1225 = add i32 %1224, %1223
  store i32 %1225, i32* %cost01, align 4
  %1226 = load i16* %icv, align 2
  %1227 = zext i16 %1226 to i64
  %1228 = load %struct.EState** %1, align 8
  %1229 = getelementptr inbounds %struct.EState* %1228, i32 0, i32 38
  %1230 = getelementptr inbounds [258 x [4 x i32]]* %1229, i32 0, i64 %1227
  %1231 = getelementptr inbounds [4 x i32]* %1230, i32 0, i64 1
  %1232 = load i32* %1231, align 4
  %1233 = load i32* %cost23, align 4
  %1234 = add i32 %1233, %1232
  store i32 %1234, i32* %cost23, align 4
  %1235 = load i16* %icv, align 2
  %1236 = zext i16 %1235 to i64
  %1237 = load %struct.EState** %1, align 8
  %1238 = getelementptr inbounds %struct.EState* %1237, i32 0, i32 38
  %1239 = getelementptr inbounds [258 x [4 x i32]]* %1238, i32 0, i64 %1236
  %1240 = getelementptr inbounds [4 x i32]* %1239, i32 0, i64 2
  %1241 = load i32* %1240, align 4
  %1242 = load i32* %cost45, align 4
  %1243 = add i32 %1242, %1241
  store i32 %1243, i32* %cost45, align 4
  %1244 = load i32* %gs, align 4
  %1245 = add nsw i32 %1244, 26
  %1246 = sext i32 %1245 to i64
  %1247 = load i16** %mtfv, align 8
  %1248 = getelementptr inbounds i16* %1247, i64 %1246
  %1249 = load i16* %1248, align 2
  store i16 %1249, i16* %icv, align 2
  %1250 = load i16* %icv, align 2
  %1251 = zext i16 %1250 to i64
  %1252 = load %struct.EState** %1, align 8
  %1253 = getelementptr inbounds %struct.EState* %1252, i32 0, i32 38
  %1254 = getelementptr inbounds [258 x [4 x i32]]* %1253, i32 0, i64 %1251
  %1255 = getelementptr inbounds [4 x i32]* %1254, i32 0, i64 0
  %1256 = load i32* %1255, align 4
  %1257 = load i32* %cost01, align 4
  %1258 = add i32 %1257, %1256
  store i32 %1258, i32* %cost01, align 4
  %1259 = load i16* %icv, align 2
  %1260 = zext i16 %1259 to i64
  %1261 = load %struct.EState** %1, align 8
  %1262 = getelementptr inbounds %struct.EState* %1261, i32 0, i32 38
  %1263 = getelementptr inbounds [258 x [4 x i32]]* %1262, i32 0, i64 %1260
  %1264 = getelementptr inbounds [4 x i32]* %1263, i32 0, i64 1
  %1265 = load i32* %1264, align 4
  %1266 = load i32* %cost23, align 4
  %1267 = add i32 %1266, %1265
  store i32 %1267, i32* %cost23, align 4
  %1268 = load i16* %icv, align 2
  %1269 = zext i16 %1268 to i64
  %1270 = load %struct.EState** %1, align 8
  %1271 = getelementptr inbounds %struct.EState* %1270, i32 0, i32 38
  %1272 = getelementptr inbounds [258 x [4 x i32]]* %1271, i32 0, i64 %1269
  %1273 = getelementptr inbounds [4 x i32]* %1272, i32 0, i64 2
  %1274 = load i32* %1273, align 4
  %1275 = load i32* %cost45, align 4
  %1276 = add i32 %1275, %1274
  store i32 %1276, i32* %cost45, align 4
  %1277 = load i32* %gs, align 4
  %1278 = add nsw i32 %1277, 27
  %1279 = sext i32 %1278 to i64
  %1280 = load i16** %mtfv, align 8
  %1281 = getelementptr inbounds i16* %1280, i64 %1279
  %1282 = load i16* %1281, align 2
  store i16 %1282, i16* %icv, align 2
  %1283 = load i16* %icv, align 2
  %1284 = zext i16 %1283 to i64
  %1285 = load %struct.EState** %1, align 8
  %1286 = getelementptr inbounds %struct.EState* %1285, i32 0, i32 38
  %1287 = getelementptr inbounds [258 x [4 x i32]]* %1286, i32 0, i64 %1284
  %1288 = getelementptr inbounds [4 x i32]* %1287, i32 0, i64 0
  %1289 = load i32* %1288, align 4
  %1290 = load i32* %cost01, align 4
  %1291 = add i32 %1290, %1289
  store i32 %1291, i32* %cost01, align 4
  %1292 = load i16* %icv, align 2
  %1293 = zext i16 %1292 to i64
  %1294 = load %struct.EState** %1, align 8
  %1295 = getelementptr inbounds %struct.EState* %1294, i32 0, i32 38
  %1296 = getelementptr inbounds [258 x [4 x i32]]* %1295, i32 0, i64 %1293
  %1297 = getelementptr inbounds [4 x i32]* %1296, i32 0, i64 1
  %1298 = load i32* %1297, align 4
  %1299 = load i32* %cost23, align 4
  %1300 = add i32 %1299, %1298
  store i32 %1300, i32* %cost23, align 4
  %1301 = load i16* %icv, align 2
  %1302 = zext i16 %1301 to i64
  %1303 = load %struct.EState** %1, align 8
  %1304 = getelementptr inbounds %struct.EState* %1303, i32 0, i32 38
  %1305 = getelementptr inbounds [258 x [4 x i32]]* %1304, i32 0, i64 %1302
  %1306 = getelementptr inbounds [4 x i32]* %1305, i32 0, i64 2
  %1307 = load i32* %1306, align 4
  %1308 = load i32* %cost45, align 4
  %1309 = add i32 %1308, %1307
  store i32 %1309, i32* %cost45, align 4
  %1310 = load i32* %gs, align 4
  %1311 = add nsw i32 %1310, 28
  %1312 = sext i32 %1311 to i64
  %1313 = load i16** %mtfv, align 8
  %1314 = getelementptr inbounds i16* %1313, i64 %1312
  %1315 = load i16* %1314, align 2
  store i16 %1315, i16* %icv, align 2
  %1316 = load i16* %icv, align 2
  %1317 = zext i16 %1316 to i64
  %1318 = load %struct.EState** %1, align 8
  %1319 = getelementptr inbounds %struct.EState* %1318, i32 0, i32 38
  %1320 = getelementptr inbounds [258 x [4 x i32]]* %1319, i32 0, i64 %1317
  %1321 = getelementptr inbounds [4 x i32]* %1320, i32 0, i64 0
  %1322 = load i32* %1321, align 4
  %1323 = load i32* %cost01, align 4
  %1324 = add i32 %1323, %1322
  store i32 %1324, i32* %cost01, align 4
  %1325 = load i16* %icv, align 2
  %1326 = zext i16 %1325 to i64
  %1327 = load %struct.EState** %1, align 8
  %1328 = getelementptr inbounds %struct.EState* %1327, i32 0, i32 38
  %1329 = getelementptr inbounds [258 x [4 x i32]]* %1328, i32 0, i64 %1326
  %1330 = getelementptr inbounds [4 x i32]* %1329, i32 0, i64 1
  %1331 = load i32* %1330, align 4
  %1332 = load i32* %cost23, align 4
  %1333 = add i32 %1332, %1331
  store i32 %1333, i32* %cost23, align 4
  %1334 = load i16* %icv, align 2
  %1335 = zext i16 %1334 to i64
  %1336 = load %struct.EState** %1, align 8
  %1337 = getelementptr inbounds %struct.EState* %1336, i32 0, i32 38
  %1338 = getelementptr inbounds [258 x [4 x i32]]* %1337, i32 0, i64 %1335
  %1339 = getelementptr inbounds [4 x i32]* %1338, i32 0, i64 2
  %1340 = load i32* %1339, align 4
  %1341 = load i32* %cost45, align 4
  %1342 = add i32 %1341, %1340
  store i32 %1342, i32* %cost45, align 4
  %1343 = load i32* %gs, align 4
  %1344 = add nsw i32 %1343, 29
  %1345 = sext i32 %1344 to i64
  %1346 = load i16** %mtfv, align 8
  %1347 = getelementptr inbounds i16* %1346, i64 %1345
  %1348 = load i16* %1347, align 2
  store i16 %1348, i16* %icv, align 2
  %1349 = load i16* %icv, align 2
  %1350 = zext i16 %1349 to i64
  %1351 = load %struct.EState** %1, align 8
  %1352 = getelementptr inbounds %struct.EState* %1351, i32 0, i32 38
  %1353 = getelementptr inbounds [258 x [4 x i32]]* %1352, i32 0, i64 %1350
  %1354 = getelementptr inbounds [4 x i32]* %1353, i32 0, i64 0
  %1355 = load i32* %1354, align 4
  %1356 = load i32* %cost01, align 4
  %1357 = add i32 %1356, %1355
  store i32 %1357, i32* %cost01, align 4
  %1358 = load i16* %icv, align 2
  %1359 = zext i16 %1358 to i64
  %1360 = load %struct.EState** %1, align 8
  %1361 = getelementptr inbounds %struct.EState* %1360, i32 0, i32 38
  %1362 = getelementptr inbounds [258 x [4 x i32]]* %1361, i32 0, i64 %1359
  %1363 = getelementptr inbounds [4 x i32]* %1362, i32 0, i64 1
  %1364 = load i32* %1363, align 4
  %1365 = load i32* %cost23, align 4
  %1366 = add i32 %1365, %1364
  store i32 %1366, i32* %cost23, align 4
  %1367 = load i16* %icv, align 2
  %1368 = zext i16 %1367 to i64
  %1369 = load %struct.EState** %1, align 8
  %1370 = getelementptr inbounds %struct.EState* %1369, i32 0, i32 38
  %1371 = getelementptr inbounds [258 x [4 x i32]]* %1370, i32 0, i64 %1368
  %1372 = getelementptr inbounds [4 x i32]* %1371, i32 0, i64 2
  %1373 = load i32* %1372, align 4
  %1374 = load i32* %cost45, align 4
  %1375 = add i32 %1374, %1373
  store i32 %1375, i32* %cost45, align 4
  %1376 = load i32* %gs, align 4
  %1377 = add nsw i32 %1376, 30
  %1378 = sext i32 %1377 to i64
  %1379 = load i16** %mtfv, align 8
  %1380 = getelementptr inbounds i16* %1379, i64 %1378
  %1381 = load i16* %1380, align 2
  store i16 %1381, i16* %icv, align 2
  %1382 = load i16* %icv, align 2
  %1383 = zext i16 %1382 to i64
  %1384 = load %struct.EState** %1, align 8
  %1385 = getelementptr inbounds %struct.EState* %1384, i32 0, i32 38
  %1386 = getelementptr inbounds [258 x [4 x i32]]* %1385, i32 0, i64 %1383
  %1387 = getelementptr inbounds [4 x i32]* %1386, i32 0, i64 0
  %1388 = load i32* %1387, align 4
  %1389 = load i32* %cost01, align 4
  %1390 = add i32 %1389, %1388
  store i32 %1390, i32* %cost01, align 4
  %1391 = load i16* %icv, align 2
  %1392 = zext i16 %1391 to i64
  %1393 = load %struct.EState** %1, align 8
  %1394 = getelementptr inbounds %struct.EState* %1393, i32 0, i32 38
  %1395 = getelementptr inbounds [258 x [4 x i32]]* %1394, i32 0, i64 %1392
  %1396 = getelementptr inbounds [4 x i32]* %1395, i32 0, i64 1
  %1397 = load i32* %1396, align 4
  %1398 = load i32* %cost23, align 4
  %1399 = add i32 %1398, %1397
  store i32 %1399, i32* %cost23, align 4
  %1400 = load i16* %icv, align 2
  %1401 = zext i16 %1400 to i64
  %1402 = load %struct.EState** %1, align 8
  %1403 = getelementptr inbounds %struct.EState* %1402, i32 0, i32 38
  %1404 = getelementptr inbounds [258 x [4 x i32]]* %1403, i32 0, i64 %1401
  %1405 = getelementptr inbounds [4 x i32]* %1404, i32 0, i64 2
  %1406 = load i32* %1405, align 4
  %1407 = load i32* %cost45, align 4
  %1408 = add i32 %1407, %1406
  store i32 %1408, i32* %cost45, align 4
  %1409 = load i32* %gs, align 4
  %1410 = add nsw i32 %1409, 31
  %1411 = sext i32 %1410 to i64
  %1412 = load i16** %mtfv, align 8
  %1413 = getelementptr inbounds i16* %1412, i64 %1411
  %1414 = load i16* %1413, align 2
  store i16 %1414, i16* %icv, align 2
  %1415 = load i16* %icv, align 2
  %1416 = zext i16 %1415 to i64
  %1417 = load %struct.EState** %1, align 8
  %1418 = getelementptr inbounds %struct.EState* %1417, i32 0, i32 38
  %1419 = getelementptr inbounds [258 x [4 x i32]]* %1418, i32 0, i64 %1416
  %1420 = getelementptr inbounds [4 x i32]* %1419, i32 0, i64 0
  %1421 = load i32* %1420, align 4
  %1422 = load i32* %cost01, align 4
  %1423 = add i32 %1422, %1421
  store i32 %1423, i32* %cost01, align 4
  %1424 = load i16* %icv, align 2
  %1425 = zext i16 %1424 to i64
  %1426 = load %struct.EState** %1, align 8
  %1427 = getelementptr inbounds %struct.EState* %1426, i32 0, i32 38
  %1428 = getelementptr inbounds [258 x [4 x i32]]* %1427, i32 0, i64 %1425
  %1429 = getelementptr inbounds [4 x i32]* %1428, i32 0, i64 1
  %1430 = load i32* %1429, align 4
  %1431 = load i32* %cost23, align 4
  %1432 = add i32 %1431, %1430
  store i32 %1432, i32* %cost23, align 4
  %1433 = load i16* %icv, align 2
  %1434 = zext i16 %1433 to i64
  %1435 = load %struct.EState** %1, align 8
  %1436 = getelementptr inbounds %struct.EState* %1435, i32 0, i32 38
  %1437 = getelementptr inbounds [258 x [4 x i32]]* %1436, i32 0, i64 %1434
  %1438 = getelementptr inbounds [4 x i32]* %1437, i32 0, i64 2
  %1439 = load i32* %1438, align 4
  %1440 = load i32* %cost45, align 4
  %1441 = add i32 %1440, %1439
  store i32 %1441, i32* %cost45, align 4
  %1442 = load i32* %gs, align 4
  %1443 = add nsw i32 %1442, 32
  %1444 = sext i32 %1443 to i64
  %1445 = load i16** %mtfv, align 8
  %1446 = getelementptr inbounds i16* %1445, i64 %1444
  %1447 = load i16* %1446, align 2
  store i16 %1447, i16* %icv, align 2
  %1448 = load i16* %icv, align 2
  %1449 = zext i16 %1448 to i64
  %1450 = load %struct.EState** %1, align 8
  %1451 = getelementptr inbounds %struct.EState* %1450, i32 0, i32 38
  %1452 = getelementptr inbounds [258 x [4 x i32]]* %1451, i32 0, i64 %1449
  %1453 = getelementptr inbounds [4 x i32]* %1452, i32 0, i64 0
  %1454 = load i32* %1453, align 4
  %1455 = load i32* %cost01, align 4
  %1456 = add i32 %1455, %1454
  store i32 %1456, i32* %cost01, align 4
  %1457 = load i16* %icv, align 2
  %1458 = zext i16 %1457 to i64
  %1459 = load %struct.EState** %1, align 8
  %1460 = getelementptr inbounds %struct.EState* %1459, i32 0, i32 38
  %1461 = getelementptr inbounds [258 x [4 x i32]]* %1460, i32 0, i64 %1458
  %1462 = getelementptr inbounds [4 x i32]* %1461, i32 0, i64 1
  %1463 = load i32* %1462, align 4
  %1464 = load i32* %cost23, align 4
  %1465 = add i32 %1464, %1463
  store i32 %1465, i32* %cost23, align 4
  %1466 = load i16* %icv, align 2
  %1467 = zext i16 %1466 to i64
  %1468 = load %struct.EState** %1, align 8
  %1469 = getelementptr inbounds %struct.EState* %1468, i32 0, i32 38
  %1470 = getelementptr inbounds [258 x [4 x i32]]* %1469, i32 0, i64 %1467
  %1471 = getelementptr inbounds [4 x i32]* %1470, i32 0, i64 2
  %1472 = load i32* %1471, align 4
  %1473 = load i32* %cost45, align 4
  %1474 = add i32 %1473, %1472
  store i32 %1474, i32* %cost45, align 4
  %1475 = load i32* %gs, align 4
  %1476 = add nsw i32 %1475, 33
  %1477 = sext i32 %1476 to i64
  %1478 = load i16** %mtfv, align 8
  %1479 = getelementptr inbounds i16* %1478, i64 %1477
  %1480 = load i16* %1479, align 2
  store i16 %1480, i16* %icv, align 2
  %1481 = load i16* %icv, align 2
  %1482 = zext i16 %1481 to i64
  %1483 = load %struct.EState** %1, align 8
  %1484 = getelementptr inbounds %struct.EState* %1483, i32 0, i32 38
  %1485 = getelementptr inbounds [258 x [4 x i32]]* %1484, i32 0, i64 %1482
  %1486 = getelementptr inbounds [4 x i32]* %1485, i32 0, i64 0
  %1487 = load i32* %1486, align 4
  %1488 = load i32* %cost01, align 4
  %1489 = add i32 %1488, %1487
  store i32 %1489, i32* %cost01, align 4
  %1490 = load i16* %icv, align 2
  %1491 = zext i16 %1490 to i64
  %1492 = load %struct.EState** %1, align 8
  %1493 = getelementptr inbounds %struct.EState* %1492, i32 0, i32 38
  %1494 = getelementptr inbounds [258 x [4 x i32]]* %1493, i32 0, i64 %1491
  %1495 = getelementptr inbounds [4 x i32]* %1494, i32 0, i64 1
  %1496 = load i32* %1495, align 4
  %1497 = load i32* %cost23, align 4
  %1498 = add i32 %1497, %1496
  store i32 %1498, i32* %cost23, align 4
  %1499 = load i16* %icv, align 2
  %1500 = zext i16 %1499 to i64
  %1501 = load %struct.EState** %1, align 8
  %1502 = getelementptr inbounds %struct.EState* %1501, i32 0, i32 38
  %1503 = getelementptr inbounds [258 x [4 x i32]]* %1502, i32 0, i64 %1500
  %1504 = getelementptr inbounds [4 x i32]* %1503, i32 0, i64 2
  %1505 = load i32* %1504, align 4
  %1506 = load i32* %cost45, align 4
  %1507 = add i32 %1506, %1505
  store i32 %1507, i32* %cost45, align 4
  %1508 = load i32* %gs, align 4
  %1509 = add nsw i32 %1508, 34
  %1510 = sext i32 %1509 to i64
  %1511 = load i16** %mtfv, align 8
  %1512 = getelementptr inbounds i16* %1511, i64 %1510
  %1513 = load i16* %1512, align 2
  store i16 %1513, i16* %icv, align 2
  %1514 = load i16* %icv, align 2
  %1515 = zext i16 %1514 to i64
  %1516 = load %struct.EState** %1, align 8
  %1517 = getelementptr inbounds %struct.EState* %1516, i32 0, i32 38
  %1518 = getelementptr inbounds [258 x [4 x i32]]* %1517, i32 0, i64 %1515
  %1519 = getelementptr inbounds [4 x i32]* %1518, i32 0, i64 0
  %1520 = load i32* %1519, align 4
  %1521 = load i32* %cost01, align 4
  %1522 = add i32 %1521, %1520
  store i32 %1522, i32* %cost01, align 4
  %1523 = load i16* %icv, align 2
  %1524 = zext i16 %1523 to i64
  %1525 = load %struct.EState** %1, align 8
  %1526 = getelementptr inbounds %struct.EState* %1525, i32 0, i32 38
  %1527 = getelementptr inbounds [258 x [4 x i32]]* %1526, i32 0, i64 %1524
  %1528 = getelementptr inbounds [4 x i32]* %1527, i32 0, i64 1
  %1529 = load i32* %1528, align 4
  %1530 = load i32* %cost23, align 4
  %1531 = add i32 %1530, %1529
  store i32 %1531, i32* %cost23, align 4
  %1532 = load i16* %icv, align 2
  %1533 = zext i16 %1532 to i64
  %1534 = load %struct.EState** %1, align 8
  %1535 = getelementptr inbounds %struct.EState* %1534, i32 0, i32 38
  %1536 = getelementptr inbounds [258 x [4 x i32]]* %1535, i32 0, i64 %1533
  %1537 = getelementptr inbounds [4 x i32]* %1536, i32 0, i64 2
  %1538 = load i32* %1537, align 4
  %1539 = load i32* %cost45, align 4
  %1540 = add i32 %1539, %1538
  store i32 %1540, i32* %cost45, align 4
  %1541 = load i32* %gs, align 4
  %1542 = add nsw i32 %1541, 35
  %1543 = sext i32 %1542 to i64
  %1544 = load i16** %mtfv, align 8
  %1545 = getelementptr inbounds i16* %1544, i64 %1543
  %1546 = load i16* %1545, align 2
  store i16 %1546, i16* %icv, align 2
  %1547 = load i16* %icv, align 2
  %1548 = zext i16 %1547 to i64
  %1549 = load %struct.EState** %1, align 8
  %1550 = getelementptr inbounds %struct.EState* %1549, i32 0, i32 38
  %1551 = getelementptr inbounds [258 x [4 x i32]]* %1550, i32 0, i64 %1548
  %1552 = getelementptr inbounds [4 x i32]* %1551, i32 0, i64 0
  %1553 = load i32* %1552, align 4
  %1554 = load i32* %cost01, align 4
  %1555 = add i32 %1554, %1553
  store i32 %1555, i32* %cost01, align 4
  %1556 = load i16* %icv, align 2
  %1557 = zext i16 %1556 to i64
  %1558 = load %struct.EState** %1, align 8
  %1559 = getelementptr inbounds %struct.EState* %1558, i32 0, i32 38
  %1560 = getelementptr inbounds [258 x [4 x i32]]* %1559, i32 0, i64 %1557
  %1561 = getelementptr inbounds [4 x i32]* %1560, i32 0, i64 1
  %1562 = load i32* %1561, align 4
  %1563 = load i32* %cost23, align 4
  %1564 = add i32 %1563, %1562
  store i32 %1564, i32* %cost23, align 4
  %1565 = load i16* %icv, align 2
  %1566 = zext i16 %1565 to i64
  %1567 = load %struct.EState** %1, align 8
  %1568 = getelementptr inbounds %struct.EState* %1567, i32 0, i32 38
  %1569 = getelementptr inbounds [258 x [4 x i32]]* %1568, i32 0, i64 %1566
  %1570 = getelementptr inbounds [4 x i32]* %1569, i32 0, i64 2
  %1571 = load i32* %1570, align 4
  %1572 = load i32* %cost45, align 4
  %1573 = add i32 %1572, %1571
  store i32 %1573, i32* %cost45, align 4
  %1574 = load i32* %gs, align 4
  %1575 = add nsw i32 %1574, 36
  %1576 = sext i32 %1575 to i64
  %1577 = load i16** %mtfv, align 8
  %1578 = getelementptr inbounds i16* %1577, i64 %1576
  %1579 = load i16* %1578, align 2
  store i16 %1579, i16* %icv, align 2
  %1580 = load i16* %icv, align 2
  %1581 = zext i16 %1580 to i64
  %1582 = load %struct.EState** %1, align 8
  %1583 = getelementptr inbounds %struct.EState* %1582, i32 0, i32 38
  %1584 = getelementptr inbounds [258 x [4 x i32]]* %1583, i32 0, i64 %1581
  %1585 = getelementptr inbounds [4 x i32]* %1584, i32 0, i64 0
  %1586 = load i32* %1585, align 4
  %1587 = load i32* %cost01, align 4
  %1588 = add i32 %1587, %1586
  store i32 %1588, i32* %cost01, align 4
  %1589 = load i16* %icv, align 2
  %1590 = zext i16 %1589 to i64
  %1591 = load %struct.EState** %1, align 8
  %1592 = getelementptr inbounds %struct.EState* %1591, i32 0, i32 38
  %1593 = getelementptr inbounds [258 x [4 x i32]]* %1592, i32 0, i64 %1590
  %1594 = getelementptr inbounds [4 x i32]* %1593, i32 0, i64 1
  %1595 = load i32* %1594, align 4
  %1596 = load i32* %cost23, align 4
  %1597 = add i32 %1596, %1595
  store i32 %1597, i32* %cost23, align 4
  %1598 = load i16* %icv, align 2
  %1599 = zext i16 %1598 to i64
  %1600 = load %struct.EState** %1, align 8
  %1601 = getelementptr inbounds %struct.EState* %1600, i32 0, i32 38
  %1602 = getelementptr inbounds [258 x [4 x i32]]* %1601, i32 0, i64 %1599
  %1603 = getelementptr inbounds [4 x i32]* %1602, i32 0, i64 2
  %1604 = load i32* %1603, align 4
  %1605 = load i32* %cost45, align 4
  %1606 = add i32 %1605, %1604
  store i32 %1606, i32* %cost45, align 4
  %1607 = load i32* %gs, align 4
  %1608 = add nsw i32 %1607, 37
  %1609 = sext i32 %1608 to i64
  %1610 = load i16** %mtfv, align 8
  %1611 = getelementptr inbounds i16* %1610, i64 %1609
  %1612 = load i16* %1611, align 2
  store i16 %1612, i16* %icv, align 2
  %1613 = load i16* %icv, align 2
  %1614 = zext i16 %1613 to i64
  %1615 = load %struct.EState** %1, align 8
  %1616 = getelementptr inbounds %struct.EState* %1615, i32 0, i32 38
  %1617 = getelementptr inbounds [258 x [4 x i32]]* %1616, i32 0, i64 %1614
  %1618 = getelementptr inbounds [4 x i32]* %1617, i32 0, i64 0
  %1619 = load i32* %1618, align 4
  %1620 = load i32* %cost01, align 4
  %1621 = add i32 %1620, %1619
  store i32 %1621, i32* %cost01, align 4
  %1622 = load i16* %icv, align 2
  %1623 = zext i16 %1622 to i64
  %1624 = load %struct.EState** %1, align 8
  %1625 = getelementptr inbounds %struct.EState* %1624, i32 0, i32 38
  %1626 = getelementptr inbounds [258 x [4 x i32]]* %1625, i32 0, i64 %1623
  %1627 = getelementptr inbounds [4 x i32]* %1626, i32 0, i64 1
  %1628 = load i32* %1627, align 4
  %1629 = load i32* %cost23, align 4
  %1630 = add i32 %1629, %1628
  store i32 %1630, i32* %cost23, align 4
  %1631 = load i16* %icv, align 2
  %1632 = zext i16 %1631 to i64
  %1633 = load %struct.EState** %1, align 8
  %1634 = getelementptr inbounds %struct.EState* %1633, i32 0, i32 38
  %1635 = getelementptr inbounds [258 x [4 x i32]]* %1634, i32 0, i64 %1632
  %1636 = getelementptr inbounds [4 x i32]* %1635, i32 0, i64 2
  %1637 = load i32* %1636, align 4
  %1638 = load i32* %cost45, align 4
  %1639 = add i32 %1638, %1637
  store i32 %1639, i32* %cost45, align 4
  %1640 = load i32* %gs, align 4
  %1641 = add nsw i32 %1640, 38
  %1642 = sext i32 %1641 to i64
  %1643 = load i16** %mtfv, align 8
  %1644 = getelementptr inbounds i16* %1643, i64 %1642
  %1645 = load i16* %1644, align 2
  store i16 %1645, i16* %icv, align 2
  %1646 = load i16* %icv, align 2
  %1647 = zext i16 %1646 to i64
  %1648 = load %struct.EState** %1, align 8
  %1649 = getelementptr inbounds %struct.EState* %1648, i32 0, i32 38
  %1650 = getelementptr inbounds [258 x [4 x i32]]* %1649, i32 0, i64 %1647
  %1651 = getelementptr inbounds [4 x i32]* %1650, i32 0, i64 0
  %1652 = load i32* %1651, align 4
  %1653 = load i32* %cost01, align 4
  %1654 = add i32 %1653, %1652
  store i32 %1654, i32* %cost01, align 4
  %1655 = load i16* %icv, align 2
  %1656 = zext i16 %1655 to i64
  %1657 = load %struct.EState** %1, align 8
  %1658 = getelementptr inbounds %struct.EState* %1657, i32 0, i32 38
  %1659 = getelementptr inbounds [258 x [4 x i32]]* %1658, i32 0, i64 %1656
  %1660 = getelementptr inbounds [4 x i32]* %1659, i32 0, i64 1
  %1661 = load i32* %1660, align 4
  %1662 = load i32* %cost23, align 4
  %1663 = add i32 %1662, %1661
  store i32 %1663, i32* %cost23, align 4
  %1664 = load i16* %icv, align 2
  %1665 = zext i16 %1664 to i64
  %1666 = load %struct.EState** %1, align 8
  %1667 = getelementptr inbounds %struct.EState* %1666, i32 0, i32 38
  %1668 = getelementptr inbounds [258 x [4 x i32]]* %1667, i32 0, i64 %1665
  %1669 = getelementptr inbounds [4 x i32]* %1668, i32 0, i64 2
  %1670 = load i32* %1669, align 4
  %1671 = load i32* %cost45, align 4
  %1672 = add i32 %1671, %1670
  store i32 %1672, i32* %cost45, align 4
  %1673 = load i32* %gs, align 4
  %1674 = add nsw i32 %1673, 39
  %1675 = sext i32 %1674 to i64
  %1676 = load i16** %mtfv, align 8
  %1677 = getelementptr inbounds i16* %1676, i64 %1675
  %1678 = load i16* %1677, align 2
  store i16 %1678, i16* %icv, align 2
  %1679 = load i16* %icv, align 2
  %1680 = zext i16 %1679 to i64
  %1681 = load %struct.EState** %1, align 8
  %1682 = getelementptr inbounds %struct.EState* %1681, i32 0, i32 38
  %1683 = getelementptr inbounds [258 x [4 x i32]]* %1682, i32 0, i64 %1680
  %1684 = getelementptr inbounds [4 x i32]* %1683, i32 0, i64 0
  %1685 = load i32* %1684, align 4
  %1686 = load i32* %cost01, align 4
  %1687 = add i32 %1686, %1685
  store i32 %1687, i32* %cost01, align 4
  %1688 = load i16* %icv, align 2
  %1689 = zext i16 %1688 to i64
  %1690 = load %struct.EState** %1, align 8
  %1691 = getelementptr inbounds %struct.EState* %1690, i32 0, i32 38
  %1692 = getelementptr inbounds [258 x [4 x i32]]* %1691, i32 0, i64 %1689
  %1693 = getelementptr inbounds [4 x i32]* %1692, i32 0, i64 1
  %1694 = load i32* %1693, align 4
  %1695 = load i32* %cost23, align 4
  %1696 = add i32 %1695, %1694
  store i32 %1696, i32* %cost23, align 4
  %1697 = load i16* %icv, align 2
  %1698 = zext i16 %1697 to i64
  %1699 = load %struct.EState** %1, align 8
  %1700 = getelementptr inbounds %struct.EState* %1699, i32 0, i32 38
  %1701 = getelementptr inbounds [258 x [4 x i32]]* %1700, i32 0, i64 %1698
  %1702 = getelementptr inbounds [4 x i32]* %1701, i32 0, i64 2
  %1703 = load i32* %1702, align 4
  %1704 = load i32* %cost45, align 4
  %1705 = add i32 %1704, %1703
  store i32 %1705, i32* %cost45, align 4
  %1706 = load i32* %gs, align 4
  %1707 = add nsw i32 %1706, 40
  %1708 = sext i32 %1707 to i64
  %1709 = load i16** %mtfv, align 8
  %1710 = getelementptr inbounds i16* %1709, i64 %1708
  %1711 = load i16* %1710, align 2
  store i16 %1711, i16* %icv, align 2
  %1712 = load i16* %icv, align 2
  %1713 = zext i16 %1712 to i64
  %1714 = load %struct.EState** %1, align 8
  %1715 = getelementptr inbounds %struct.EState* %1714, i32 0, i32 38
  %1716 = getelementptr inbounds [258 x [4 x i32]]* %1715, i32 0, i64 %1713
  %1717 = getelementptr inbounds [4 x i32]* %1716, i32 0, i64 0
  %1718 = load i32* %1717, align 4
  %1719 = load i32* %cost01, align 4
  %1720 = add i32 %1719, %1718
  store i32 %1720, i32* %cost01, align 4
  %1721 = load i16* %icv, align 2
  %1722 = zext i16 %1721 to i64
  %1723 = load %struct.EState** %1, align 8
  %1724 = getelementptr inbounds %struct.EState* %1723, i32 0, i32 38
  %1725 = getelementptr inbounds [258 x [4 x i32]]* %1724, i32 0, i64 %1722
  %1726 = getelementptr inbounds [4 x i32]* %1725, i32 0, i64 1
  %1727 = load i32* %1726, align 4
  %1728 = load i32* %cost23, align 4
  %1729 = add i32 %1728, %1727
  store i32 %1729, i32* %cost23, align 4
  %1730 = load i16* %icv, align 2
  %1731 = zext i16 %1730 to i64
  %1732 = load %struct.EState** %1, align 8
  %1733 = getelementptr inbounds %struct.EState* %1732, i32 0, i32 38
  %1734 = getelementptr inbounds [258 x [4 x i32]]* %1733, i32 0, i64 %1731
  %1735 = getelementptr inbounds [4 x i32]* %1734, i32 0, i64 2
  %1736 = load i32* %1735, align 4
  %1737 = load i32* %cost45, align 4
  %1738 = add i32 %1737, %1736
  store i32 %1738, i32* %cost45, align 4
  %1739 = load i32* %gs, align 4
  %1740 = add nsw i32 %1739, 41
  %1741 = sext i32 %1740 to i64
  %1742 = load i16** %mtfv, align 8
  %1743 = getelementptr inbounds i16* %1742, i64 %1741
  %1744 = load i16* %1743, align 2
  store i16 %1744, i16* %icv, align 2
  %1745 = load i16* %icv, align 2
  %1746 = zext i16 %1745 to i64
  %1747 = load %struct.EState** %1, align 8
  %1748 = getelementptr inbounds %struct.EState* %1747, i32 0, i32 38
  %1749 = getelementptr inbounds [258 x [4 x i32]]* %1748, i32 0, i64 %1746
  %1750 = getelementptr inbounds [4 x i32]* %1749, i32 0, i64 0
  %1751 = load i32* %1750, align 4
  %1752 = load i32* %cost01, align 4
  %1753 = add i32 %1752, %1751
  store i32 %1753, i32* %cost01, align 4
  %1754 = load i16* %icv, align 2
  %1755 = zext i16 %1754 to i64
  %1756 = load %struct.EState** %1, align 8
  %1757 = getelementptr inbounds %struct.EState* %1756, i32 0, i32 38
  %1758 = getelementptr inbounds [258 x [4 x i32]]* %1757, i32 0, i64 %1755
  %1759 = getelementptr inbounds [4 x i32]* %1758, i32 0, i64 1
  %1760 = load i32* %1759, align 4
  %1761 = load i32* %cost23, align 4
  %1762 = add i32 %1761, %1760
  store i32 %1762, i32* %cost23, align 4
  %1763 = load i16* %icv, align 2
  %1764 = zext i16 %1763 to i64
  %1765 = load %struct.EState** %1, align 8
  %1766 = getelementptr inbounds %struct.EState* %1765, i32 0, i32 38
  %1767 = getelementptr inbounds [258 x [4 x i32]]* %1766, i32 0, i64 %1764
  %1768 = getelementptr inbounds [4 x i32]* %1767, i32 0, i64 2
  %1769 = load i32* %1768, align 4
  %1770 = load i32* %cost45, align 4
  %1771 = add i32 %1770, %1769
  store i32 %1771, i32* %cost45, align 4
  %1772 = load i32* %gs, align 4
  %1773 = add nsw i32 %1772, 42
  %1774 = sext i32 %1773 to i64
  %1775 = load i16** %mtfv, align 8
  %1776 = getelementptr inbounds i16* %1775, i64 %1774
  %1777 = load i16* %1776, align 2
  store i16 %1777, i16* %icv, align 2
  %1778 = load i16* %icv, align 2
  %1779 = zext i16 %1778 to i64
  %1780 = load %struct.EState** %1, align 8
  %1781 = getelementptr inbounds %struct.EState* %1780, i32 0, i32 38
  %1782 = getelementptr inbounds [258 x [4 x i32]]* %1781, i32 0, i64 %1779
  %1783 = getelementptr inbounds [4 x i32]* %1782, i32 0, i64 0
  %1784 = load i32* %1783, align 4
  %1785 = load i32* %cost01, align 4
  %1786 = add i32 %1785, %1784
  store i32 %1786, i32* %cost01, align 4
  %1787 = load i16* %icv, align 2
  %1788 = zext i16 %1787 to i64
  %1789 = load %struct.EState** %1, align 8
  %1790 = getelementptr inbounds %struct.EState* %1789, i32 0, i32 38
  %1791 = getelementptr inbounds [258 x [4 x i32]]* %1790, i32 0, i64 %1788
  %1792 = getelementptr inbounds [4 x i32]* %1791, i32 0, i64 1
  %1793 = load i32* %1792, align 4
  %1794 = load i32* %cost23, align 4
  %1795 = add i32 %1794, %1793
  store i32 %1795, i32* %cost23, align 4
  %1796 = load i16* %icv, align 2
  %1797 = zext i16 %1796 to i64
  %1798 = load %struct.EState** %1, align 8
  %1799 = getelementptr inbounds %struct.EState* %1798, i32 0, i32 38
  %1800 = getelementptr inbounds [258 x [4 x i32]]* %1799, i32 0, i64 %1797
  %1801 = getelementptr inbounds [4 x i32]* %1800, i32 0, i64 2
  %1802 = load i32* %1801, align 4
  %1803 = load i32* %cost45, align 4
  %1804 = add i32 %1803, %1802
  store i32 %1804, i32* %cost45, align 4
  %1805 = load i32* %gs, align 4
  %1806 = add nsw i32 %1805, 43
  %1807 = sext i32 %1806 to i64
  %1808 = load i16** %mtfv, align 8
  %1809 = getelementptr inbounds i16* %1808, i64 %1807
  %1810 = load i16* %1809, align 2
  store i16 %1810, i16* %icv, align 2
  %1811 = load i16* %icv, align 2
  %1812 = zext i16 %1811 to i64
  %1813 = load %struct.EState** %1, align 8
  %1814 = getelementptr inbounds %struct.EState* %1813, i32 0, i32 38
  %1815 = getelementptr inbounds [258 x [4 x i32]]* %1814, i32 0, i64 %1812
  %1816 = getelementptr inbounds [4 x i32]* %1815, i32 0, i64 0
  %1817 = load i32* %1816, align 4
  %1818 = load i32* %cost01, align 4
  %1819 = add i32 %1818, %1817
  store i32 %1819, i32* %cost01, align 4
  %1820 = load i16* %icv, align 2
  %1821 = zext i16 %1820 to i64
  %1822 = load %struct.EState** %1, align 8
  %1823 = getelementptr inbounds %struct.EState* %1822, i32 0, i32 38
  %1824 = getelementptr inbounds [258 x [4 x i32]]* %1823, i32 0, i64 %1821
  %1825 = getelementptr inbounds [4 x i32]* %1824, i32 0, i64 1
  %1826 = load i32* %1825, align 4
  %1827 = load i32* %cost23, align 4
  %1828 = add i32 %1827, %1826
  store i32 %1828, i32* %cost23, align 4
  %1829 = load i16* %icv, align 2
  %1830 = zext i16 %1829 to i64
  %1831 = load %struct.EState** %1, align 8
  %1832 = getelementptr inbounds %struct.EState* %1831, i32 0, i32 38
  %1833 = getelementptr inbounds [258 x [4 x i32]]* %1832, i32 0, i64 %1830
  %1834 = getelementptr inbounds [4 x i32]* %1833, i32 0, i64 2
  %1835 = load i32* %1834, align 4
  %1836 = load i32* %cost45, align 4
  %1837 = add i32 %1836, %1835
  store i32 %1837, i32* %cost45, align 4
  %1838 = load i32* %gs, align 4
  %1839 = add nsw i32 %1838, 44
  %1840 = sext i32 %1839 to i64
  %1841 = load i16** %mtfv, align 8
  %1842 = getelementptr inbounds i16* %1841, i64 %1840
  %1843 = load i16* %1842, align 2
  store i16 %1843, i16* %icv, align 2
  %1844 = load i16* %icv, align 2
  %1845 = zext i16 %1844 to i64
  %1846 = load %struct.EState** %1, align 8
  %1847 = getelementptr inbounds %struct.EState* %1846, i32 0, i32 38
  %1848 = getelementptr inbounds [258 x [4 x i32]]* %1847, i32 0, i64 %1845
  %1849 = getelementptr inbounds [4 x i32]* %1848, i32 0, i64 0
  %1850 = load i32* %1849, align 4
  %1851 = load i32* %cost01, align 4
  %1852 = add i32 %1851, %1850
  store i32 %1852, i32* %cost01, align 4
  %1853 = load i16* %icv, align 2
  %1854 = zext i16 %1853 to i64
  %1855 = load %struct.EState** %1, align 8
  %1856 = getelementptr inbounds %struct.EState* %1855, i32 0, i32 38
  %1857 = getelementptr inbounds [258 x [4 x i32]]* %1856, i32 0, i64 %1854
  %1858 = getelementptr inbounds [4 x i32]* %1857, i32 0, i64 1
  %1859 = load i32* %1858, align 4
  %1860 = load i32* %cost23, align 4
  %1861 = add i32 %1860, %1859
  store i32 %1861, i32* %cost23, align 4
  %1862 = load i16* %icv, align 2
  %1863 = zext i16 %1862 to i64
  %1864 = load %struct.EState** %1, align 8
  %1865 = getelementptr inbounds %struct.EState* %1864, i32 0, i32 38
  %1866 = getelementptr inbounds [258 x [4 x i32]]* %1865, i32 0, i64 %1863
  %1867 = getelementptr inbounds [4 x i32]* %1866, i32 0, i64 2
  %1868 = load i32* %1867, align 4
  %1869 = load i32* %cost45, align 4
  %1870 = add i32 %1869, %1868
  store i32 %1870, i32* %cost45, align 4
  %1871 = load i32* %gs, align 4
  %1872 = add nsw i32 %1871, 45
  %1873 = sext i32 %1872 to i64
  %1874 = load i16** %mtfv, align 8
  %1875 = getelementptr inbounds i16* %1874, i64 %1873
  %1876 = load i16* %1875, align 2
  store i16 %1876, i16* %icv, align 2
  %1877 = load i16* %icv, align 2
  %1878 = zext i16 %1877 to i64
  %1879 = load %struct.EState** %1, align 8
  %1880 = getelementptr inbounds %struct.EState* %1879, i32 0, i32 38
  %1881 = getelementptr inbounds [258 x [4 x i32]]* %1880, i32 0, i64 %1878
  %1882 = getelementptr inbounds [4 x i32]* %1881, i32 0, i64 0
  %1883 = load i32* %1882, align 4
  %1884 = load i32* %cost01, align 4
  %1885 = add i32 %1884, %1883
  store i32 %1885, i32* %cost01, align 4
  %1886 = load i16* %icv, align 2
  %1887 = zext i16 %1886 to i64
  %1888 = load %struct.EState** %1, align 8
  %1889 = getelementptr inbounds %struct.EState* %1888, i32 0, i32 38
  %1890 = getelementptr inbounds [258 x [4 x i32]]* %1889, i32 0, i64 %1887
  %1891 = getelementptr inbounds [4 x i32]* %1890, i32 0, i64 1
  %1892 = load i32* %1891, align 4
  %1893 = load i32* %cost23, align 4
  %1894 = add i32 %1893, %1892
  store i32 %1894, i32* %cost23, align 4
  %1895 = load i16* %icv, align 2
  %1896 = zext i16 %1895 to i64
  %1897 = load %struct.EState** %1, align 8
  %1898 = getelementptr inbounds %struct.EState* %1897, i32 0, i32 38
  %1899 = getelementptr inbounds [258 x [4 x i32]]* %1898, i32 0, i64 %1896
  %1900 = getelementptr inbounds [4 x i32]* %1899, i32 0, i64 2
  %1901 = load i32* %1900, align 4
  %1902 = load i32* %cost45, align 4
  %1903 = add i32 %1902, %1901
  store i32 %1903, i32* %cost45, align 4
  %1904 = load i32* %gs, align 4
  %1905 = add nsw i32 %1904, 46
  %1906 = sext i32 %1905 to i64
  %1907 = load i16** %mtfv, align 8
  %1908 = getelementptr inbounds i16* %1907, i64 %1906
  %1909 = load i16* %1908, align 2
  store i16 %1909, i16* %icv, align 2
  %1910 = load i16* %icv, align 2
  %1911 = zext i16 %1910 to i64
  %1912 = load %struct.EState** %1, align 8
  %1913 = getelementptr inbounds %struct.EState* %1912, i32 0, i32 38
  %1914 = getelementptr inbounds [258 x [4 x i32]]* %1913, i32 0, i64 %1911
  %1915 = getelementptr inbounds [4 x i32]* %1914, i32 0, i64 0
  %1916 = load i32* %1915, align 4
  %1917 = load i32* %cost01, align 4
  %1918 = add i32 %1917, %1916
  store i32 %1918, i32* %cost01, align 4
  %1919 = load i16* %icv, align 2
  %1920 = zext i16 %1919 to i64
  %1921 = load %struct.EState** %1, align 8
  %1922 = getelementptr inbounds %struct.EState* %1921, i32 0, i32 38
  %1923 = getelementptr inbounds [258 x [4 x i32]]* %1922, i32 0, i64 %1920
  %1924 = getelementptr inbounds [4 x i32]* %1923, i32 0, i64 1
  %1925 = load i32* %1924, align 4
  %1926 = load i32* %cost23, align 4
  %1927 = add i32 %1926, %1925
  store i32 %1927, i32* %cost23, align 4
  %1928 = load i16* %icv, align 2
  %1929 = zext i16 %1928 to i64
  %1930 = load %struct.EState** %1, align 8
  %1931 = getelementptr inbounds %struct.EState* %1930, i32 0, i32 38
  %1932 = getelementptr inbounds [258 x [4 x i32]]* %1931, i32 0, i64 %1929
  %1933 = getelementptr inbounds [4 x i32]* %1932, i32 0, i64 2
  %1934 = load i32* %1933, align 4
  %1935 = load i32* %cost45, align 4
  %1936 = add i32 %1935, %1934
  store i32 %1936, i32* %cost45, align 4
  %1937 = load i32* %gs, align 4
  %1938 = add nsw i32 %1937, 47
  %1939 = sext i32 %1938 to i64
  %1940 = load i16** %mtfv, align 8
  %1941 = getelementptr inbounds i16* %1940, i64 %1939
  %1942 = load i16* %1941, align 2
  store i16 %1942, i16* %icv, align 2
  %1943 = load i16* %icv, align 2
  %1944 = zext i16 %1943 to i64
  %1945 = load %struct.EState** %1, align 8
  %1946 = getelementptr inbounds %struct.EState* %1945, i32 0, i32 38
  %1947 = getelementptr inbounds [258 x [4 x i32]]* %1946, i32 0, i64 %1944
  %1948 = getelementptr inbounds [4 x i32]* %1947, i32 0, i64 0
  %1949 = load i32* %1948, align 4
  %1950 = load i32* %cost01, align 4
  %1951 = add i32 %1950, %1949
  store i32 %1951, i32* %cost01, align 4
  %1952 = load i16* %icv, align 2
  %1953 = zext i16 %1952 to i64
  %1954 = load %struct.EState** %1, align 8
  %1955 = getelementptr inbounds %struct.EState* %1954, i32 0, i32 38
  %1956 = getelementptr inbounds [258 x [4 x i32]]* %1955, i32 0, i64 %1953
  %1957 = getelementptr inbounds [4 x i32]* %1956, i32 0, i64 1
  %1958 = load i32* %1957, align 4
  %1959 = load i32* %cost23, align 4
  %1960 = add i32 %1959, %1958
  store i32 %1960, i32* %cost23, align 4
  %1961 = load i16* %icv, align 2
  %1962 = zext i16 %1961 to i64
  %1963 = load %struct.EState** %1, align 8
  %1964 = getelementptr inbounds %struct.EState* %1963, i32 0, i32 38
  %1965 = getelementptr inbounds [258 x [4 x i32]]* %1964, i32 0, i64 %1962
  %1966 = getelementptr inbounds [4 x i32]* %1965, i32 0, i64 2
  %1967 = load i32* %1966, align 4
  %1968 = load i32* %cost45, align 4
  %1969 = add i32 %1968, %1967
  store i32 %1969, i32* %cost45, align 4
  %1970 = load i32* %gs, align 4
  %1971 = add nsw i32 %1970, 48
  %1972 = sext i32 %1971 to i64
  %1973 = load i16** %mtfv, align 8
  %1974 = getelementptr inbounds i16* %1973, i64 %1972
  %1975 = load i16* %1974, align 2
  store i16 %1975, i16* %icv, align 2
  %1976 = load i16* %icv, align 2
  %1977 = zext i16 %1976 to i64
  %1978 = load %struct.EState** %1, align 8
  %1979 = getelementptr inbounds %struct.EState* %1978, i32 0, i32 38
  %1980 = getelementptr inbounds [258 x [4 x i32]]* %1979, i32 0, i64 %1977
  %1981 = getelementptr inbounds [4 x i32]* %1980, i32 0, i64 0
  %1982 = load i32* %1981, align 4
  %1983 = load i32* %cost01, align 4
  %1984 = add i32 %1983, %1982
  store i32 %1984, i32* %cost01, align 4
  %1985 = load i16* %icv, align 2
  %1986 = zext i16 %1985 to i64
  %1987 = load %struct.EState** %1, align 8
  %1988 = getelementptr inbounds %struct.EState* %1987, i32 0, i32 38
  %1989 = getelementptr inbounds [258 x [4 x i32]]* %1988, i32 0, i64 %1986
  %1990 = getelementptr inbounds [4 x i32]* %1989, i32 0, i64 1
  %1991 = load i32* %1990, align 4
  %1992 = load i32* %cost23, align 4
  %1993 = add i32 %1992, %1991
  store i32 %1993, i32* %cost23, align 4
  %1994 = load i16* %icv, align 2
  %1995 = zext i16 %1994 to i64
  %1996 = load %struct.EState** %1, align 8
  %1997 = getelementptr inbounds %struct.EState* %1996, i32 0, i32 38
  %1998 = getelementptr inbounds [258 x [4 x i32]]* %1997, i32 0, i64 %1995
  %1999 = getelementptr inbounds [4 x i32]* %1998, i32 0, i64 2
  %2000 = load i32* %1999, align 4
  %2001 = load i32* %cost45, align 4
  %2002 = add i32 %2001, %2000
  store i32 %2002, i32* %cost45, align 4
  %2003 = load i32* %gs, align 4
  %2004 = add nsw i32 %2003, 49
  %2005 = sext i32 %2004 to i64
  %2006 = load i16** %mtfv, align 8
  %2007 = getelementptr inbounds i16* %2006, i64 %2005
  %2008 = load i16* %2007, align 2
  store i16 %2008, i16* %icv, align 2
  %2009 = load i16* %icv, align 2
  %2010 = zext i16 %2009 to i64
  %2011 = load %struct.EState** %1, align 8
  %2012 = getelementptr inbounds %struct.EState* %2011, i32 0, i32 38
  %2013 = getelementptr inbounds [258 x [4 x i32]]* %2012, i32 0, i64 %2010
  %2014 = getelementptr inbounds [4 x i32]* %2013, i32 0, i64 0
  %2015 = load i32* %2014, align 4
  %2016 = load i32* %cost01, align 4
  %2017 = add i32 %2016, %2015
  store i32 %2017, i32* %cost01, align 4
  %2018 = load i16* %icv, align 2
  %2019 = zext i16 %2018 to i64
  %2020 = load %struct.EState** %1, align 8
  %2021 = getelementptr inbounds %struct.EState* %2020, i32 0, i32 38
  %2022 = getelementptr inbounds [258 x [4 x i32]]* %2021, i32 0, i64 %2019
  %2023 = getelementptr inbounds [4 x i32]* %2022, i32 0, i64 1
  %2024 = load i32* %2023, align 4
  %2025 = load i32* %cost23, align 4
  %2026 = add i32 %2025, %2024
  store i32 %2026, i32* %cost23, align 4
  %2027 = load i16* %icv, align 2
  %2028 = zext i16 %2027 to i64
  %2029 = load %struct.EState** %1, align 8
  %2030 = getelementptr inbounds %struct.EState* %2029, i32 0, i32 38
  %2031 = getelementptr inbounds [258 x [4 x i32]]* %2030, i32 0, i64 %2028
  %2032 = getelementptr inbounds [4 x i32]* %2031, i32 0, i64 2
  %2033 = load i32* %2032, align 4
  %2034 = load i32* %cost45, align 4
  %2035 = add i32 %2034, %2033
  store i32 %2035, i32* %cost45, align 4
  %2036 = load i32* %cost01, align 4
  %2037 = and i32 %2036, 65535
  %2038 = trunc i32 %2037 to i16
  %2039 = getelementptr inbounds [6 x i16]* %cost, i32 0, i64 0
  store i16 %2038, i16* %2039, align 2
  %2040 = load i32* %cost01, align 4
  %2041 = lshr i32 %2040, 16
  %2042 = trunc i32 %2041 to i16
  %2043 = getelementptr inbounds [6 x i16]* %cost, i32 0, i64 1
  store i16 %2042, i16* %2043, align 2
  %2044 = load i32* %cost23, align 4
  %2045 = and i32 %2044, 65535
  %2046 = trunc i32 %2045 to i16
  %2047 = getelementptr inbounds [6 x i16]* %cost, i32 0, i64 2
  store i16 %2046, i16* %2047, align 2
  %2048 = load i32* %cost23, align 4
  %2049 = lshr i32 %2048, 16
  %2050 = trunc i32 %2049 to i16
  %2051 = getelementptr inbounds [6 x i16]* %cost, i32 0, i64 3
  store i16 %2050, i16* %2051, align 2
  %2052 = load i32* %cost45, align 4
  %2053 = and i32 %2052, 65535
  %2054 = trunc i32 %2053 to i16
  %2055 = getelementptr inbounds [6 x i16]* %cost, i32 0, i64 4
  store i16 %2054, i16* %2055, align 2
  %2056 = load i32* %cost45, align 4
  %2057 = lshr i32 %2056, 16
  %2058 = trunc i32 %2057 to i16
  %2059 = getelementptr inbounds [6 x i16]* %cost, i32 0, i64 5
  store i16 %2058, i16* %2059, align 2
  br label %2102

; <label>:2060                                    ; preds = %379, %376
  %2061 = load i32* %gs, align 4
  store i32 %2061, i32* %i, align 4
  br label %2062

; <label>:2062                                    ; preds = %2098, %2060
  %2063 = load i32* %i, align 4
  %2064 = load i32* %ge, align 4
  %2065 = icmp sle i32 %2063, %2064
  br i1 %2065, label %2066, label %2101

; <label>:2066                                    ; preds = %2062
  %2067 = load i32* %i, align 4
  %2068 = sext i32 %2067 to i64
  %2069 = load i16** %mtfv, align 8
  %2070 = getelementptr inbounds i16* %2069, i64 %2068
  %2071 = load i16* %2070, align 2
  store i16 %2071, i16* %icv1, align 2
  store i32 0, i32* %t, align 4
  br label %2072

; <label>:2072                                    ; preds = %2094, %2066
  %2073 = load i32* %t, align 4
  %2074 = load i32* %nGroups, align 4
  %2075 = icmp slt i32 %2073, %2074
  br i1 %2075, label %2076, label %2097

; <label>:2076                                    ; preds = %2072
  %2077 = load i16* %icv1, align 2
  %2078 = zext i16 %2077 to i64
  %2079 = load i32* %t, align 4
  %2080 = sext i32 %2079 to i64
  %2081 = load %struct.EState** %1, align 8
  %2082 = getelementptr inbounds %struct.EState* %2081, i32 0, i32 35
  %2083 = getelementptr inbounds [6 x [258 x i8]]* %2082, i32 0, i64 %2080
  %2084 = getelementptr inbounds [258 x i8]* %2083, i32 0, i64 %2078
  %2085 = load i8* %2084, align 1
  %2086 = zext i8 %2085 to i32
  %2087 = load i32* %t, align 4
  %2088 = sext i32 %2087 to i64
  %2089 = getelementptr inbounds [6 x i16]* %cost, i32 0, i64 %2088
  %2090 = load i16* %2089, align 2
  %2091 = zext i16 %2090 to i32
  %2092 = add nsw i32 %2091, %2086
  %2093 = trunc i32 %2092 to i16
  store i16 %2093, i16* %2089, align 2
  br label %2094

; <label>:2094                                    ; preds = %2076
  %2095 = load i32* %t, align 4
  %2096 = add nsw i32 %2095, 1
  store i32 %2096, i32* %t, align 4
  br label %2072

; <label>:2097                                    ; preds = %2072
  br label %2098

; <label>:2098                                    ; preds = %2097
  %2099 = load i32* %i, align 4
  %2100 = add nsw i32 %2099, 1
  store i32 %2100, i32* %i, align 4
  br label %2062

; <label>:2101                                    ; preds = %2062
  br label %2102

; <label>:2102                                    ; preds = %2101, %385
  store i32 999999999, i32* %bc, align 4
  store i32 -1, i32* %bt, align 4
  store i32 0, i32* %t, align 4
  br label %2103

; <label>:2103                                    ; preds = %2123, %2102
  %2104 = load i32* %t, align 4
  %2105 = load i32* %nGroups, align 4
  %2106 = icmp slt i32 %2104, %2105
  br i1 %2106, label %2107, label %2126

; <label>:2107                                    ; preds = %2103
  %2108 = load i32* %t, align 4
  %2109 = sext i32 %2108 to i64
  %2110 = getelementptr inbounds [6 x i16]* %cost, i32 0, i64 %2109
  %2111 = load i16* %2110, align 2
  %2112 = zext i16 %2111 to i32
  %2113 = load i32* %bc, align 4
  %2114 = icmp slt i32 %2112, %2113
  br i1 %2114, label %2115, label %2122

; <label>:2115                                    ; preds = %2107
  %2116 = load i32* %t, align 4
  %2117 = sext i32 %2116 to i64
  %2118 = getelementptr inbounds [6 x i16]* %cost, i32 0, i64 %2117
  %2119 = load i16* %2118, align 2
  %2120 = zext i16 %2119 to i32
  store i32 %2120, i32* %bc, align 4
  %2121 = load i32* %t, align 4
  store i32 %2121, i32* %bt, align 4
  br label %2122

; <label>:2122                                    ; preds = %2115, %2107
  br label %2123

; <label>:2123                                    ; preds = %2122
  %2124 = load i32* %t, align 4
  %2125 = add nsw i32 %2124, 1
  store i32 %2125, i32* %t, align 4
  br label %2103

; <label>:2126                                    ; preds = %2103
  %2127 = load i32* %bc, align 4
  %2128 = load i32* %totc, align 4
  %2129 = add nsw i32 %2128, %2127
  store i32 %2129, i32* %totc, align 4
  %2130 = load i32* %bt, align 4
  %2131 = sext i32 %2130 to i64
  %2132 = getelementptr inbounds [6 x i32]* %fave, i32 0, i64 %2131
  %2133 = load i32* %2132, align 4
  %2134 = add nsw i32 %2133, 1
  store i32 %2134, i32* %2132, align 4
  %2135 = load i32* %bt, align 4
  %2136 = trunc i32 %2135 to i8
  %2137 = load i32* %nSelectors, align 4
  %2138 = sext i32 %2137 to i64
  %2139 = load %struct.EState** %1, align 8
  %2140 = getelementptr inbounds %struct.EState* %2139, i32 0, i32 33
  %2141 = getelementptr inbounds [18002 x i8]* %2140, i32 0, i64 %2138
  store i8 %2136, i8* %2141, align 1
  %2142 = load i32* %nSelectors, align 4
  %2143 = add nsw i32 %2142, 1
  store i32 %2143, i32* %nSelectors, align 4
  %2144 = load i32* %nGroups, align 4
  %2145 = icmp eq i32 %2144, 6
  br i1 %2145, label %2146, label %2903

; <label>:2146                                    ; preds = %2126
  %2147 = load i32* %ge, align 4
  %2148 = load i32* %gs, align 4
  %2149 = sub nsw i32 %2147, %2148
  %2150 = add nsw i32 %2149, 1
  %2151 = icmp eq i32 50, %2150
  br i1 %2151, label %2152, label %2903

; <label>:2152                                    ; preds = %2146
  %2153 = load i32* %gs, align 4
  %2154 = add nsw i32 %2153, 0
  %2155 = sext i32 %2154 to i64
  %2156 = load i16** %mtfv, align 8
  %2157 = getelementptr inbounds i16* %2156, i64 %2155
  %2158 = load i16* %2157, align 2
  %2159 = zext i16 %2158 to i64
  %2160 = load i32* %bt, align 4
  %2161 = sext i32 %2160 to i64
  %2162 = load %struct.EState** %1, align 8
  %2163 = getelementptr inbounds %struct.EState* %2162, i32 0, i32 37
  %2164 = getelementptr inbounds [6 x [258 x i32]]* %2163, i32 0, i64 %2161
  %2165 = getelementptr inbounds [258 x i32]* %2164, i32 0, i64 %2159
  %2166 = load i32* %2165, align 4
  %2167 = add nsw i32 %2166, 1
  store i32 %2167, i32* %2165, align 4
  %2168 = load i32* %gs, align 4
  %2169 = add nsw i32 %2168, 1
  %2170 = sext i32 %2169 to i64
  %2171 = load i16** %mtfv, align 8
  %2172 = getelementptr inbounds i16* %2171, i64 %2170
  %2173 = load i16* %2172, align 2
  %2174 = zext i16 %2173 to i64
  %2175 = load i32* %bt, align 4
  %2176 = sext i32 %2175 to i64
  %2177 = load %struct.EState** %1, align 8
  %2178 = getelementptr inbounds %struct.EState* %2177, i32 0, i32 37
  %2179 = getelementptr inbounds [6 x [258 x i32]]* %2178, i32 0, i64 %2176
  %2180 = getelementptr inbounds [258 x i32]* %2179, i32 0, i64 %2174
  %2181 = load i32* %2180, align 4
  %2182 = add nsw i32 %2181, 1
  store i32 %2182, i32* %2180, align 4
  %2183 = load i32* %gs, align 4
  %2184 = add nsw i32 %2183, 2
  %2185 = sext i32 %2184 to i64
  %2186 = load i16** %mtfv, align 8
  %2187 = getelementptr inbounds i16* %2186, i64 %2185
  %2188 = load i16* %2187, align 2
  %2189 = zext i16 %2188 to i64
  %2190 = load i32* %bt, align 4
  %2191 = sext i32 %2190 to i64
  %2192 = load %struct.EState** %1, align 8
  %2193 = getelementptr inbounds %struct.EState* %2192, i32 0, i32 37
  %2194 = getelementptr inbounds [6 x [258 x i32]]* %2193, i32 0, i64 %2191
  %2195 = getelementptr inbounds [258 x i32]* %2194, i32 0, i64 %2189
  %2196 = load i32* %2195, align 4
  %2197 = add nsw i32 %2196, 1
  store i32 %2197, i32* %2195, align 4
  %2198 = load i32* %gs, align 4
  %2199 = add nsw i32 %2198, 3
  %2200 = sext i32 %2199 to i64
  %2201 = load i16** %mtfv, align 8
  %2202 = getelementptr inbounds i16* %2201, i64 %2200
  %2203 = load i16* %2202, align 2
  %2204 = zext i16 %2203 to i64
  %2205 = load i32* %bt, align 4
  %2206 = sext i32 %2205 to i64
  %2207 = load %struct.EState** %1, align 8
  %2208 = getelementptr inbounds %struct.EState* %2207, i32 0, i32 37
  %2209 = getelementptr inbounds [6 x [258 x i32]]* %2208, i32 0, i64 %2206
  %2210 = getelementptr inbounds [258 x i32]* %2209, i32 0, i64 %2204
  %2211 = load i32* %2210, align 4
  %2212 = add nsw i32 %2211, 1
  store i32 %2212, i32* %2210, align 4
  %2213 = load i32* %gs, align 4
  %2214 = add nsw i32 %2213, 4
  %2215 = sext i32 %2214 to i64
  %2216 = load i16** %mtfv, align 8
  %2217 = getelementptr inbounds i16* %2216, i64 %2215
  %2218 = load i16* %2217, align 2
  %2219 = zext i16 %2218 to i64
  %2220 = load i32* %bt, align 4
  %2221 = sext i32 %2220 to i64
  %2222 = load %struct.EState** %1, align 8
  %2223 = getelementptr inbounds %struct.EState* %2222, i32 0, i32 37
  %2224 = getelementptr inbounds [6 x [258 x i32]]* %2223, i32 0, i64 %2221
  %2225 = getelementptr inbounds [258 x i32]* %2224, i32 0, i64 %2219
  %2226 = load i32* %2225, align 4
  %2227 = add nsw i32 %2226, 1
  store i32 %2227, i32* %2225, align 4
  %2228 = load i32* %gs, align 4
  %2229 = add nsw i32 %2228, 5
  %2230 = sext i32 %2229 to i64
  %2231 = load i16** %mtfv, align 8
  %2232 = getelementptr inbounds i16* %2231, i64 %2230
  %2233 = load i16* %2232, align 2
  %2234 = zext i16 %2233 to i64
  %2235 = load i32* %bt, align 4
  %2236 = sext i32 %2235 to i64
  %2237 = load %struct.EState** %1, align 8
  %2238 = getelementptr inbounds %struct.EState* %2237, i32 0, i32 37
  %2239 = getelementptr inbounds [6 x [258 x i32]]* %2238, i32 0, i64 %2236
  %2240 = getelementptr inbounds [258 x i32]* %2239, i32 0, i64 %2234
  %2241 = load i32* %2240, align 4
  %2242 = add nsw i32 %2241, 1
  store i32 %2242, i32* %2240, align 4
  %2243 = load i32* %gs, align 4
  %2244 = add nsw i32 %2243, 6
  %2245 = sext i32 %2244 to i64
  %2246 = load i16** %mtfv, align 8
  %2247 = getelementptr inbounds i16* %2246, i64 %2245
  %2248 = load i16* %2247, align 2
  %2249 = zext i16 %2248 to i64
  %2250 = load i32* %bt, align 4
  %2251 = sext i32 %2250 to i64
  %2252 = load %struct.EState** %1, align 8
  %2253 = getelementptr inbounds %struct.EState* %2252, i32 0, i32 37
  %2254 = getelementptr inbounds [6 x [258 x i32]]* %2253, i32 0, i64 %2251
  %2255 = getelementptr inbounds [258 x i32]* %2254, i32 0, i64 %2249
  %2256 = load i32* %2255, align 4
  %2257 = add nsw i32 %2256, 1
  store i32 %2257, i32* %2255, align 4
  %2258 = load i32* %gs, align 4
  %2259 = add nsw i32 %2258, 7
  %2260 = sext i32 %2259 to i64
  %2261 = load i16** %mtfv, align 8
  %2262 = getelementptr inbounds i16* %2261, i64 %2260
  %2263 = load i16* %2262, align 2
  %2264 = zext i16 %2263 to i64
  %2265 = load i32* %bt, align 4
  %2266 = sext i32 %2265 to i64
  %2267 = load %struct.EState** %1, align 8
  %2268 = getelementptr inbounds %struct.EState* %2267, i32 0, i32 37
  %2269 = getelementptr inbounds [6 x [258 x i32]]* %2268, i32 0, i64 %2266
  %2270 = getelementptr inbounds [258 x i32]* %2269, i32 0, i64 %2264
  %2271 = load i32* %2270, align 4
  %2272 = add nsw i32 %2271, 1
  store i32 %2272, i32* %2270, align 4
  %2273 = load i32* %gs, align 4
  %2274 = add nsw i32 %2273, 8
  %2275 = sext i32 %2274 to i64
  %2276 = load i16** %mtfv, align 8
  %2277 = getelementptr inbounds i16* %2276, i64 %2275
  %2278 = load i16* %2277, align 2
  %2279 = zext i16 %2278 to i64
  %2280 = load i32* %bt, align 4
  %2281 = sext i32 %2280 to i64
  %2282 = load %struct.EState** %1, align 8
  %2283 = getelementptr inbounds %struct.EState* %2282, i32 0, i32 37
  %2284 = getelementptr inbounds [6 x [258 x i32]]* %2283, i32 0, i64 %2281
  %2285 = getelementptr inbounds [258 x i32]* %2284, i32 0, i64 %2279
  %2286 = load i32* %2285, align 4
  %2287 = add nsw i32 %2286, 1
  store i32 %2287, i32* %2285, align 4
  %2288 = load i32* %gs, align 4
  %2289 = add nsw i32 %2288, 9
  %2290 = sext i32 %2289 to i64
  %2291 = load i16** %mtfv, align 8
  %2292 = getelementptr inbounds i16* %2291, i64 %2290
  %2293 = load i16* %2292, align 2
  %2294 = zext i16 %2293 to i64
  %2295 = load i32* %bt, align 4
  %2296 = sext i32 %2295 to i64
  %2297 = load %struct.EState** %1, align 8
  %2298 = getelementptr inbounds %struct.EState* %2297, i32 0, i32 37
  %2299 = getelementptr inbounds [6 x [258 x i32]]* %2298, i32 0, i64 %2296
  %2300 = getelementptr inbounds [258 x i32]* %2299, i32 0, i64 %2294
  %2301 = load i32* %2300, align 4
  %2302 = add nsw i32 %2301, 1
  store i32 %2302, i32* %2300, align 4
  %2303 = load i32* %gs, align 4
  %2304 = add nsw i32 %2303, 10
  %2305 = sext i32 %2304 to i64
  %2306 = load i16** %mtfv, align 8
  %2307 = getelementptr inbounds i16* %2306, i64 %2305
  %2308 = load i16* %2307, align 2
  %2309 = zext i16 %2308 to i64
  %2310 = load i32* %bt, align 4
  %2311 = sext i32 %2310 to i64
  %2312 = load %struct.EState** %1, align 8
  %2313 = getelementptr inbounds %struct.EState* %2312, i32 0, i32 37
  %2314 = getelementptr inbounds [6 x [258 x i32]]* %2313, i32 0, i64 %2311
  %2315 = getelementptr inbounds [258 x i32]* %2314, i32 0, i64 %2309
  %2316 = load i32* %2315, align 4
  %2317 = add nsw i32 %2316, 1
  store i32 %2317, i32* %2315, align 4
  %2318 = load i32* %gs, align 4
  %2319 = add nsw i32 %2318, 11
  %2320 = sext i32 %2319 to i64
  %2321 = load i16** %mtfv, align 8
  %2322 = getelementptr inbounds i16* %2321, i64 %2320
  %2323 = load i16* %2322, align 2
  %2324 = zext i16 %2323 to i64
  %2325 = load i32* %bt, align 4
  %2326 = sext i32 %2325 to i64
  %2327 = load %struct.EState** %1, align 8
  %2328 = getelementptr inbounds %struct.EState* %2327, i32 0, i32 37
  %2329 = getelementptr inbounds [6 x [258 x i32]]* %2328, i32 0, i64 %2326
  %2330 = getelementptr inbounds [258 x i32]* %2329, i32 0, i64 %2324
  %2331 = load i32* %2330, align 4
  %2332 = add nsw i32 %2331, 1
  store i32 %2332, i32* %2330, align 4
  %2333 = load i32* %gs, align 4
  %2334 = add nsw i32 %2333, 12
  %2335 = sext i32 %2334 to i64
  %2336 = load i16** %mtfv, align 8
  %2337 = getelementptr inbounds i16* %2336, i64 %2335
  %2338 = load i16* %2337, align 2
  %2339 = zext i16 %2338 to i64
  %2340 = load i32* %bt, align 4
  %2341 = sext i32 %2340 to i64
  %2342 = load %struct.EState** %1, align 8
  %2343 = getelementptr inbounds %struct.EState* %2342, i32 0, i32 37
  %2344 = getelementptr inbounds [6 x [258 x i32]]* %2343, i32 0, i64 %2341
  %2345 = getelementptr inbounds [258 x i32]* %2344, i32 0, i64 %2339
  %2346 = load i32* %2345, align 4
  %2347 = add nsw i32 %2346, 1
  store i32 %2347, i32* %2345, align 4
  %2348 = load i32* %gs, align 4
  %2349 = add nsw i32 %2348, 13
  %2350 = sext i32 %2349 to i64
  %2351 = load i16** %mtfv, align 8
  %2352 = getelementptr inbounds i16* %2351, i64 %2350
  %2353 = load i16* %2352, align 2
  %2354 = zext i16 %2353 to i64
  %2355 = load i32* %bt, align 4
  %2356 = sext i32 %2355 to i64
  %2357 = load %struct.EState** %1, align 8
  %2358 = getelementptr inbounds %struct.EState* %2357, i32 0, i32 37
  %2359 = getelementptr inbounds [6 x [258 x i32]]* %2358, i32 0, i64 %2356
  %2360 = getelementptr inbounds [258 x i32]* %2359, i32 0, i64 %2354
  %2361 = load i32* %2360, align 4
  %2362 = add nsw i32 %2361, 1
  store i32 %2362, i32* %2360, align 4
  %2363 = load i32* %gs, align 4
  %2364 = add nsw i32 %2363, 14
  %2365 = sext i32 %2364 to i64
  %2366 = load i16** %mtfv, align 8
  %2367 = getelementptr inbounds i16* %2366, i64 %2365
  %2368 = load i16* %2367, align 2
  %2369 = zext i16 %2368 to i64
  %2370 = load i32* %bt, align 4
  %2371 = sext i32 %2370 to i64
  %2372 = load %struct.EState** %1, align 8
  %2373 = getelementptr inbounds %struct.EState* %2372, i32 0, i32 37
  %2374 = getelementptr inbounds [6 x [258 x i32]]* %2373, i32 0, i64 %2371
  %2375 = getelementptr inbounds [258 x i32]* %2374, i32 0, i64 %2369
  %2376 = load i32* %2375, align 4
  %2377 = add nsw i32 %2376, 1
  store i32 %2377, i32* %2375, align 4
  %2378 = load i32* %gs, align 4
  %2379 = add nsw i32 %2378, 15
  %2380 = sext i32 %2379 to i64
  %2381 = load i16** %mtfv, align 8
  %2382 = getelementptr inbounds i16* %2381, i64 %2380
  %2383 = load i16* %2382, align 2
  %2384 = zext i16 %2383 to i64
  %2385 = load i32* %bt, align 4
  %2386 = sext i32 %2385 to i64
  %2387 = load %struct.EState** %1, align 8
  %2388 = getelementptr inbounds %struct.EState* %2387, i32 0, i32 37
  %2389 = getelementptr inbounds [6 x [258 x i32]]* %2388, i32 0, i64 %2386
  %2390 = getelementptr inbounds [258 x i32]* %2389, i32 0, i64 %2384
  %2391 = load i32* %2390, align 4
  %2392 = add nsw i32 %2391, 1
  store i32 %2392, i32* %2390, align 4
  %2393 = load i32* %gs, align 4
  %2394 = add nsw i32 %2393, 16
  %2395 = sext i32 %2394 to i64
  %2396 = load i16** %mtfv, align 8
  %2397 = getelementptr inbounds i16* %2396, i64 %2395
  %2398 = load i16* %2397, align 2
  %2399 = zext i16 %2398 to i64
  %2400 = load i32* %bt, align 4
  %2401 = sext i32 %2400 to i64
  %2402 = load %struct.EState** %1, align 8
  %2403 = getelementptr inbounds %struct.EState* %2402, i32 0, i32 37
  %2404 = getelementptr inbounds [6 x [258 x i32]]* %2403, i32 0, i64 %2401
  %2405 = getelementptr inbounds [258 x i32]* %2404, i32 0, i64 %2399
  %2406 = load i32* %2405, align 4
  %2407 = add nsw i32 %2406, 1
  store i32 %2407, i32* %2405, align 4
  %2408 = load i32* %gs, align 4
  %2409 = add nsw i32 %2408, 17
  %2410 = sext i32 %2409 to i64
  %2411 = load i16** %mtfv, align 8
  %2412 = getelementptr inbounds i16* %2411, i64 %2410
  %2413 = load i16* %2412, align 2
  %2414 = zext i16 %2413 to i64
  %2415 = load i32* %bt, align 4
  %2416 = sext i32 %2415 to i64
  %2417 = load %struct.EState** %1, align 8
  %2418 = getelementptr inbounds %struct.EState* %2417, i32 0, i32 37
  %2419 = getelementptr inbounds [6 x [258 x i32]]* %2418, i32 0, i64 %2416
  %2420 = getelementptr inbounds [258 x i32]* %2419, i32 0, i64 %2414
  %2421 = load i32* %2420, align 4
  %2422 = add nsw i32 %2421, 1
  store i32 %2422, i32* %2420, align 4
  %2423 = load i32* %gs, align 4
  %2424 = add nsw i32 %2423, 18
  %2425 = sext i32 %2424 to i64
  %2426 = load i16** %mtfv, align 8
  %2427 = getelementptr inbounds i16* %2426, i64 %2425
  %2428 = load i16* %2427, align 2
  %2429 = zext i16 %2428 to i64
  %2430 = load i32* %bt, align 4
  %2431 = sext i32 %2430 to i64
  %2432 = load %struct.EState** %1, align 8
  %2433 = getelementptr inbounds %struct.EState* %2432, i32 0, i32 37
  %2434 = getelementptr inbounds [6 x [258 x i32]]* %2433, i32 0, i64 %2431
  %2435 = getelementptr inbounds [258 x i32]* %2434, i32 0, i64 %2429
  %2436 = load i32* %2435, align 4
  %2437 = add nsw i32 %2436, 1
  store i32 %2437, i32* %2435, align 4
  %2438 = load i32* %gs, align 4
  %2439 = add nsw i32 %2438, 19
  %2440 = sext i32 %2439 to i64
  %2441 = load i16** %mtfv, align 8
  %2442 = getelementptr inbounds i16* %2441, i64 %2440
  %2443 = load i16* %2442, align 2
  %2444 = zext i16 %2443 to i64
  %2445 = load i32* %bt, align 4
  %2446 = sext i32 %2445 to i64
  %2447 = load %struct.EState** %1, align 8
  %2448 = getelementptr inbounds %struct.EState* %2447, i32 0, i32 37
  %2449 = getelementptr inbounds [6 x [258 x i32]]* %2448, i32 0, i64 %2446
  %2450 = getelementptr inbounds [258 x i32]* %2449, i32 0, i64 %2444
  %2451 = load i32* %2450, align 4
  %2452 = add nsw i32 %2451, 1
  store i32 %2452, i32* %2450, align 4
  %2453 = load i32* %gs, align 4
  %2454 = add nsw i32 %2453, 20
  %2455 = sext i32 %2454 to i64
  %2456 = load i16** %mtfv, align 8
  %2457 = getelementptr inbounds i16* %2456, i64 %2455
  %2458 = load i16* %2457, align 2
  %2459 = zext i16 %2458 to i64
  %2460 = load i32* %bt, align 4
  %2461 = sext i32 %2460 to i64
  %2462 = load %struct.EState** %1, align 8
  %2463 = getelementptr inbounds %struct.EState* %2462, i32 0, i32 37
  %2464 = getelementptr inbounds [6 x [258 x i32]]* %2463, i32 0, i64 %2461
  %2465 = getelementptr inbounds [258 x i32]* %2464, i32 0, i64 %2459
  %2466 = load i32* %2465, align 4
  %2467 = add nsw i32 %2466, 1
  store i32 %2467, i32* %2465, align 4
  %2468 = load i32* %gs, align 4
  %2469 = add nsw i32 %2468, 21
  %2470 = sext i32 %2469 to i64
  %2471 = load i16** %mtfv, align 8
  %2472 = getelementptr inbounds i16* %2471, i64 %2470
  %2473 = load i16* %2472, align 2
  %2474 = zext i16 %2473 to i64
  %2475 = load i32* %bt, align 4
  %2476 = sext i32 %2475 to i64
  %2477 = load %struct.EState** %1, align 8
  %2478 = getelementptr inbounds %struct.EState* %2477, i32 0, i32 37
  %2479 = getelementptr inbounds [6 x [258 x i32]]* %2478, i32 0, i64 %2476
  %2480 = getelementptr inbounds [258 x i32]* %2479, i32 0, i64 %2474
  %2481 = load i32* %2480, align 4
  %2482 = add nsw i32 %2481, 1
  store i32 %2482, i32* %2480, align 4
  %2483 = load i32* %gs, align 4
  %2484 = add nsw i32 %2483, 22
  %2485 = sext i32 %2484 to i64
  %2486 = load i16** %mtfv, align 8
  %2487 = getelementptr inbounds i16* %2486, i64 %2485
  %2488 = load i16* %2487, align 2
  %2489 = zext i16 %2488 to i64
  %2490 = load i32* %bt, align 4
  %2491 = sext i32 %2490 to i64
  %2492 = load %struct.EState** %1, align 8
  %2493 = getelementptr inbounds %struct.EState* %2492, i32 0, i32 37
  %2494 = getelementptr inbounds [6 x [258 x i32]]* %2493, i32 0, i64 %2491
  %2495 = getelementptr inbounds [258 x i32]* %2494, i32 0, i64 %2489
  %2496 = load i32* %2495, align 4
  %2497 = add nsw i32 %2496, 1
  store i32 %2497, i32* %2495, align 4
  %2498 = load i32* %gs, align 4
  %2499 = add nsw i32 %2498, 23
  %2500 = sext i32 %2499 to i64
  %2501 = load i16** %mtfv, align 8
  %2502 = getelementptr inbounds i16* %2501, i64 %2500
  %2503 = load i16* %2502, align 2
  %2504 = zext i16 %2503 to i64
  %2505 = load i32* %bt, align 4
  %2506 = sext i32 %2505 to i64
  %2507 = load %struct.EState** %1, align 8
  %2508 = getelementptr inbounds %struct.EState* %2507, i32 0, i32 37
  %2509 = getelementptr inbounds [6 x [258 x i32]]* %2508, i32 0, i64 %2506
  %2510 = getelementptr inbounds [258 x i32]* %2509, i32 0, i64 %2504
  %2511 = load i32* %2510, align 4
  %2512 = add nsw i32 %2511, 1
  store i32 %2512, i32* %2510, align 4
  %2513 = load i32* %gs, align 4
  %2514 = add nsw i32 %2513, 24
  %2515 = sext i32 %2514 to i64
  %2516 = load i16** %mtfv, align 8
  %2517 = getelementptr inbounds i16* %2516, i64 %2515
  %2518 = load i16* %2517, align 2
  %2519 = zext i16 %2518 to i64
  %2520 = load i32* %bt, align 4
  %2521 = sext i32 %2520 to i64
  %2522 = load %struct.EState** %1, align 8
  %2523 = getelementptr inbounds %struct.EState* %2522, i32 0, i32 37
  %2524 = getelementptr inbounds [6 x [258 x i32]]* %2523, i32 0, i64 %2521
  %2525 = getelementptr inbounds [258 x i32]* %2524, i32 0, i64 %2519
  %2526 = load i32* %2525, align 4
  %2527 = add nsw i32 %2526, 1
  store i32 %2527, i32* %2525, align 4
  %2528 = load i32* %gs, align 4
  %2529 = add nsw i32 %2528, 25
  %2530 = sext i32 %2529 to i64
  %2531 = load i16** %mtfv, align 8
  %2532 = getelementptr inbounds i16* %2531, i64 %2530
  %2533 = load i16* %2532, align 2
  %2534 = zext i16 %2533 to i64
  %2535 = load i32* %bt, align 4
  %2536 = sext i32 %2535 to i64
  %2537 = load %struct.EState** %1, align 8
  %2538 = getelementptr inbounds %struct.EState* %2537, i32 0, i32 37
  %2539 = getelementptr inbounds [6 x [258 x i32]]* %2538, i32 0, i64 %2536
  %2540 = getelementptr inbounds [258 x i32]* %2539, i32 0, i64 %2534
  %2541 = load i32* %2540, align 4
  %2542 = add nsw i32 %2541, 1
  store i32 %2542, i32* %2540, align 4
  %2543 = load i32* %gs, align 4
  %2544 = add nsw i32 %2543, 26
  %2545 = sext i32 %2544 to i64
  %2546 = load i16** %mtfv, align 8
  %2547 = getelementptr inbounds i16* %2546, i64 %2545
  %2548 = load i16* %2547, align 2
  %2549 = zext i16 %2548 to i64
  %2550 = load i32* %bt, align 4
  %2551 = sext i32 %2550 to i64
  %2552 = load %struct.EState** %1, align 8
  %2553 = getelementptr inbounds %struct.EState* %2552, i32 0, i32 37
  %2554 = getelementptr inbounds [6 x [258 x i32]]* %2553, i32 0, i64 %2551
  %2555 = getelementptr inbounds [258 x i32]* %2554, i32 0, i64 %2549
  %2556 = load i32* %2555, align 4
  %2557 = add nsw i32 %2556, 1
  store i32 %2557, i32* %2555, align 4
  %2558 = load i32* %gs, align 4
  %2559 = add nsw i32 %2558, 27
  %2560 = sext i32 %2559 to i64
  %2561 = load i16** %mtfv, align 8
  %2562 = getelementptr inbounds i16* %2561, i64 %2560
  %2563 = load i16* %2562, align 2
  %2564 = zext i16 %2563 to i64
  %2565 = load i32* %bt, align 4
  %2566 = sext i32 %2565 to i64
  %2567 = load %struct.EState** %1, align 8
  %2568 = getelementptr inbounds %struct.EState* %2567, i32 0, i32 37
  %2569 = getelementptr inbounds [6 x [258 x i32]]* %2568, i32 0, i64 %2566
  %2570 = getelementptr inbounds [258 x i32]* %2569, i32 0, i64 %2564
  %2571 = load i32* %2570, align 4
  %2572 = add nsw i32 %2571, 1
  store i32 %2572, i32* %2570, align 4
  %2573 = load i32* %gs, align 4
  %2574 = add nsw i32 %2573, 28
  %2575 = sext i32 %2574 to i64
  %2576 = load i16** %mtfv, align 8
  %2577 = getelementptr inbounds i16* %2576, i64 %2575
  %2578 = load i16* %2577, align 2
  %2579 = zext i16 %2578 to i64
  %2580 = load i32* %bt, align 4
  %2581 = sext i32 %2580 to i64
  %2582 = load %struct.EState** %1, align 8
  %2583 = getelementptr inbounds %struct.EState* %2582, i32 0, i32 37
  %2584 = getelementptr inbounds [6 x [258 x i32]]* %2583, i32 0, i64 %2581
  %2585 = getelementptr inbounds [258 x i32]* %2584, i32 0, i64 %2579
  %2586 = load i32* %2585, align 4
  %2587 = add nsw i32 %2586, 1
  store i32 %2587, i32* %2585, align 4
  %2588 = load i32* %gs, align 4
  %2589 = add nsw i32 %2588, 29
  %2590 = sext i32 %2589 to i64
  %2591 = load i16** %mtfv, align 8
  %2592 = getelementptr inbounds i16* %2591, i64 %2590
  %2593 = load i16* %2592, align 2
  %2594 = zext i16 %2593 to i64
  %2595 = load i32* %bt, align 4
  %2596 = sext i32 %2595 to i64
  %2597 = load %struct.EState** %1, align 8
  %2598 = getelementptr inbounds %struct.EState* %2597, i32 0, i32 37
  %2599 = getelementptr inbounds [6 x [258 x i32]]* %2598, i32 0, i64 %2596
  %2600 = getelementptr inbounds [258 x i32]* %2599, i32 0, i64 %2594
  %2601 = load i32* %2600, align 4
  %2602 = add nsw i32 %2601, 1
  store i32 %2602, i32* %2600, align 4
  %2603 = load i32* %gs, align 4
  %2604 = add nsw i32 %2603, 30
  %2605 = sext i32 %2604 to i64
  %2606 = load i16** %mtfv, align 8
  %2607 = getelementptr inbounds i16* %2606, i64 %2605
  %2608 = load i16* %2607, align 2
  %2609 = zext i16 %2608 to i64
  %2610 = load i32* %bt, align 4
  %2611 = sext i32 %2610 to i64
  %2612 = load %struct.EState** %1, align 8
  %2613 = getelementptr inbounds %struct.EState* %2612, i32 0, i32 37
  %2614 = getelementptr inbounds [6 x [258 x i32]]* %2613, i32 0, i64 %2611
  %2615 = getelementptr inbounds [258 x i32]* %2614, i32 0, i64 %2609
  %2616 = load i32* %2615, align 4
  %2617 = add nsw i32 %2616, 1
  store i32 %2617, i32* %2615, align 4
  %2618 = load i32* %gs, align 4
  %2619 = add nsw i32 %2618, 31
  %2620 = sext i32 %2619 to i64
  %2621 = load i16** %mtfv, align 8
  %2622 = getelementptr inbounds i16* %2621, i64 %2620
  %2623 = load i16* %2622, align 2
  %2624 = zext i16 %2623 to i64
  %2625 = load i32* %bt, align 4
  %2626 = sext i32 %2625 to i64
  %2627 = load %struct.EState** %1, align 8
  %2628 = getelementptr inbounds %struct.EState* %2627, i32 0, i32 37
  %2629 = getelementptr inbounds [6 x [258 x i32]]* %2628, i32 0, i64 %2626
  %2630 = getelementptr inbounds [258 x i32]* %2629, i32 0, i64 %2624
  %2631 = load i32* %2630, align 4
  %2632 = add nsw i32 %2631, 1
  store i32 %2632, i32* %2630, align 4
  %2633 = load i32* %gs, align 4
  %2634 = add nsw i32 %2633, 32
  %2635 = sext i32 %2634 to i64
  %2636 = load i16** %mtfv, align 8
  %2637 = getelementptr inbounds i16* %2636, i64 %2635
  %2638 = load i16* %2637, align 2
  %2639 = zext i16 %2638 to i64
  %2640 = load i32* %bt, align 4
  %2641 = sext i32 %2640 to i64
  %2642 = load %struct.EState** %1, align 8
  %2643 = getelementptr inbounds %struct.EState* %2642, i32 0, i32 37
  %2644 = getelementptr inbounds [6 x [258 x i32]]* %2643, i32 0, i64 %2641
  %2645 = getelementptr inbounds [258 x i32]* %2644, i32 0, i64 %2639
  %2646 = load i32* %2645, align 4
  %2647 = add nsw i32 %2646, 1
  store i32 %2647, i32* %2645, align 4
  %2648 = load i32* %gs, align 4
  %2649 = add nsw i32 %2648, 33
  %2650 = sext i32 %2649 to i64
  %2651 = load i16** %mtfv, align 8
  %2652 = getelementptr inbounds i16* %2651, i64 %2650
  %2653 = load i16* %2652, align 2
  %2654 = zext i16 %2653 to i64
  %2655 = load i32* %bt, align 4
  %2656 = sext i32 %2655 to i64
  %2657 = load %struct.EState** %1, align 8
  %2658 = getelementptr inbounds %struct.EState* %2657, i32 0, i32 37
  %2659 = getelementptr inbounds [6 x [258 x i32]]* %2658, i32 0, i64 %2656
  %2660 = getelementptr inbounds [258 x i32]* %2659, i32 0, i64 %2654
  %2661 = load i32* %2660, align 4
  %2662 = add nsw i32 %2661, 1
  store i32 %2662, i32* %2660, align 4
  %2663 = load i32* %gs, align 4
  %2664 = add nsw i32 %2663, 34
  %2665 = sext i32 %2664 to i64
  %2666 = load i16** %mtfv, align 8
  %2667 = getelementptr inbounds i16* %2666, i64 %2665
  %2668 = load i16* %2667, align 2
  %2669 = zext i16 %2668 to i64
  %2670 = load i32* %bt, align 4
  %2671 = sext i32 %2670 to i64
  %2672 = load %struct.EState** %1, align 8
  %2673 = getelementptr inbounds %struct.EState* %2672, i32 0, i32 37
  %2674 = getelementptr inbounds [6 x [258 x i32]]* %2673, i32 0, i64 %2671
  %2675 = getelementptr inbounds [258 x i32]* %2674, i32 0, i64 %2669
  %2676 = load i32* %2675, align 4
  %2677 = add nsw i32 %2676, 1
  store i32 %2677, i32* %2675, align 4
  %2678 = load i32* %gs, align 4
  %2679 = add nsw i32 %2678, 35
  %2680 = sext i32 %2679 to i64
  %2681 = load i16** %mtfv, align 8
  %2682 = getelementptr inbounds i16* %2681, i64 %2680
  %2683 = load i16* %2682, align 2
  %2684 = zext i16 %2683 to i64
  %2685 = load i32* %bt, align 4
  %2686 = sext i32 %2685 to i64
  %2687 = load %struct.EState** %1, align 8
  %2688 = getelementptr inbounds %struct.EState* %2687, i32 0, i32 37
  %2689 = getelementptr inbounds [6 x [258 x i32]]* %2688, i32 0, i64 %2686
  %2690 = getelementptr inbounds [258 x i32]* %2689, i32 0, i64 %2684
  %2691 = load i32* %2690, align 4
  %2692 = add nsw i32 %2691, 1
  store i32 %2692, i32* %2690, align 4
  %2693 = load i32* %gs, align 4
  %2694 = add nsw i32 %2693, 36
  %2695 = sext i32 %2694 to i64
  %2696 = load i16** %mtfv, align 8
  %2697 = getelementptr inbounds i16* %2696, i64 %2695
  %2698 = load i16* %2697, align 2
  %2699 = zext i16 %2698 to i64
  %2700 = load i32* %bt, align 4
  %2701 = sext i32 %2700 to i64
  %2702 = load %struct.EState** %1, align 8
  %2703 = getelementptr inbounds %struct.EState* %2702, i32 0, i32 37
  %2704 = getelementptr inbounds [6 x [258 x i32]]* %2703, i32 0, i64 %2701
  %2705 = getelementptr inbounds [258 x i32]* %2704, i32 0, i64 %2699
  %2706 = load i32* %2705, align 4
  %2707 = add nsw i32 %2706, 1
  store i32 %2707, i32* %2705, align 4
  %2708 = load i32* %gs, align 4
  %2709 = add nsw i32 %2708, 37
  %2710 = sext i32 %2709 to i64
  %2711 = load i16** %mtfv, align 8
  %2712 = getelementptr inbounds i16* %2711, i64 %2710
  %2713 = load i16* %2712, align 2
  %2714 = zext i16 %2713 to i64
  %2715 = load i32* %bt, align 4
  %2716 = sext i32 %2715 to i64
  %2717 = load %struct.EState** %1, align 8
  %2718 = getelementptr inbounds %struct.EState* %2717, i32 0, i32 37
  %2719 = getelementptr inbounds [6 x [258 x i32]]* %2718, i32 0, i64 %2716
  %2720 = getelementptr inbounds [258 x i32]* %2719, i32 0, i64 %2714
  %2721 = load i32* %2720, align 4
  %2722 = add nsw i32 %2721, 1
  store i32 %2722, i32* %2720, align 4
  %2723 = load i32* %gs, align 4
  %2724 = add nsw i32 %2723, 38
  %2725 = sext i32 %2724 to i64
  %2726 = load i16** %mtfv, align 8
  %2727 = getelementptr inbounds i16* %2726, i64 %2725
  %2728 = load i16* %2727, align 2
  %2729 = zext i16 %2728 to i64
  %2730 = load i32* %bt, align 4
  %2731 = sext i32 %2730 to i64
  %2732 = load %struct.EState** %1, align 8
  %2733 = getelementptr inbounds %struct.EState* %2732, i32 0, i32 37
  %2734 = getelementptr inbounds [6 x [258 x i32]]* %2733, i32 0, i64 %2731
  %2735 = getelementptr inbounds [258 x i32]* %2734, i32 0, i64 %2729
  %2736 = load i32* %2735, align 4
  %2737 = add nsw i32 %2736, 1
  store i32 %2737, i32* %2735, align 4
  %2738 = load i32* %gs, align 4
  %2739 = add nsw i32 %2738, 39
  %2740 = sext i32 %2739 to i64
  %2741 = load i16** %mtfv, align 8
  %2742 = getelementptr inbounds i16* %2741, i64 %2740
  %2743 = load i16* %2742, align 2
  %2744 = zext i16 %2743 to i64
  %2745 = load i32* %bt, align 4
  %2746 = sext i32 %2745 to i64
  %2747 = load %struct.EState** %1, align 8
  %2748 = getelementptr inbounds %struct.EState* %2747, i32 0, i32 37
  %2749 = getelementptr inbounds [6 x [258 x i32]]* %2748, i32 0, i64 %2746
  %2750 = getelementptr inbounds [258 x i32]* %2749, i32 0, i64 %2744
  %2751 = load i32* %2750, align 4
  %2752 = add nsw i32 %2751, 1
  store i32 %2752, i32* %2750, align 4
  %2753 = load i32* %gs, align 4
  %2754 = add nsw i32 %2753, 40
  %2755 = sext i32 %2754 to i64
  %2756 = load i16** %mtfv, align 8
  %2757 = getelementptr inbounds i16* %2756, i64 %2755
  %2758 = load i16* %2757, align 2
  %2759 = zext i16 %2758 to i64
  %2760 = load i32* %bt, align 4
  %2761 = sext i32 %2760 to i64
  %2762 = load %struct.EState** %1, align 8
  %2763 = getelementptr inbounds %struct.EState* %2762, i32 0, i32 37
  %2764 = getelementptr inbounds [6 x [258 x i32]]* %2763, i32 0, i64 %2761
  %2765 = getelementptr inbounds [258 x i32]* %2764, i32 0, i64 %2759
  %2766 = load i32* %2765, align 4
  %2767 = add nsw i32 %2766, 1
  store i32 %2767, i32* %2765, align 4
  %2768 = load i32* %gs, align 4
  %2769 = add nsw i32 %2768, 41
  %2770 = sext i32 %2769 to i64
  %2771 = load i16** %mtfv, align 8
  %2772 = getelementptr inbounds i16* %2771, i64 %2770
  %2773 = load i16* %2772, align 2
  %2774 = zext i16 %2773 to i64
  %2775 = load i32* %bt, align 4
  %2776 = sext i32 %2775 to i64
  %2777 = load %struct.EState** %1, align 8
  %2778 = getelementptr inbounds %struct.EState* %2777, i32 0, i32 37
  %2779 = getelementptr inbounds [6 x [258 x i32]]* %2778, i32 0, i64 %2776
  %2780 = getelementptr inbounds [258 x i32]* %2779, i32 0, i64 %2774
  %2781 = load i32* %2780, align 4
  %2782 = add nsw i32 %2781, 1
  store i32 %2782, i32* %2780, align 4
  %2783 = load i32* %gs, align 4
  %2784 = add nsw i32 %2783, 42
  %2785 = sext i32 %2784 to i64
  %2786 = load i16** %mtfv, align 8
  %2787 = getelementptr inbounds i16* %2786, i64 %2785
  %2788 = load i16* %2787, align 2
  %2789 = zext i16 %2788 to i64
  %2790 = load i32* %bt, align 4
  %2791 = sext i32 %2790 to i64
  %2792 = load %struct.EState** %1, align 8
  %2793 = getelementptr inbounds %struct.EState* %2792, i32 0, i32 37
  %2794 = getelementptr inbounds [6 x [258 x i32]]* %2793, i32 0, i64 %2791
  %2795 = getelementptr inbounds [258 x i32]* %2794, i32 0, i64 %2789
  %2796 = load i32* %2795, align 4
  %2797 = add nsw i32 %2796, 1
  store i32 %2797, i32* %2795, align 4
  %2798 = load i32* %gs, align 4
  %2799 = add nsw i32 %2798, 43
  %2800 = sext i32 %2799 to i64
  %2801 = load i16** %mtfv, align 8
  %2802 = getelementptr inbounds i16* %2801, i64 %2800
  %2803 = load i16* %2802, align 2
  %2804 = zext i16 %2803 to i64
  %2805 = load i32* %bt, align 4
  %2806 = sext i32 %2805 to i64
  %2807 = load %struct.EState** %1, align 8
  %2808 = getelementptr inbounds %struct.EState* %2807, i32 0, i32 37
  %2809 = getelementptr inbounds [6 x [258 x i32]]* %2808, i32 0, i64 %2806
  %2810 = getelementptr inbounds [258 x i32]* %2809, i32 0, i64 %2804
  %2811 = load i32* %2810, align 4
  %2812 = add nsw i32 %2811, 1
  store i32 %2812, i32* %2810, align 4
  %2813 = load i32* %gs, align 4
  %2814 = add nsw i32 %2813, 44
  %2815 = sext i32 %2814 to i64
  %2816 = load i16** %mtfv, align 8
  %2817 = getelementptr inbounds i16* %2816, i64 %2815
  %2818 = load i16* %2817, align 2
  %2819 = zext i16 %2818 to i64
  %2820 = load i32* %bt, align 4
  %2821 = sext i32 %2820 to i64
  %2822 = load %struct.EState** %1, align 8
  %2823 = getelementptr inbounds %struct.EState* %2822, i32 0, i32 37
  %2824 = getelementptr inbounds [6 x [258 x i32]]* %2823, i32 0, i64 %2821
  %2825 = getelementptr inbounds [258 x i32]* %2824, i32 0, i64 %2819
  %2826 = load i32* %2825, align 4
  %2827 = add nsw i32 %2826, 1
  store i32 %2827, i32* %2825, align 4
  %2828 = load i32* %gs, align 4
  %2829 = add nsw i32 %2828, 45
  %2830 = sext i32 %2829 to i64
  %2831 = load i16** %mtfv, align 8
  %2832 = getelementptr inbounds i16* %2831, i64 %2830
  %2833 = load i16* %2832, align 2
  %2834 = zext i16 %2833 to i64
  %2835 = load i32* %bt, align 4
  %2836 = sext i32 %2835 to i64
  %2837 = load %struct.EState** %1, align 8
  %2838 = getelementptr inbounds %struct.EState* %2837, i32 0, i32 37
  %2839 = getelementptr inbounds [6 x [258 x i32]]* %2838, i32 0, i64 %2836
  %2840 = getelementptr inbounds [258 x i32]* %2839, i32 0, i64 %2834
  %2841 = load i32* %2840, align 4
  %2842 = add nsw i32 %2841, 1
  store i32 %2842, i32* %2840, align 4
  %2843 = load i32* %gs, align 4
  %2844 = add nsw i32 %2843, 46
  %2845 = sext i32 %2844 to i64
  %2846 = load i16** %mtfv, align 8
  %2847 = getelementptr inbounds i16* %2846, i64 %2845
  %2848 = load i16* %2847, align 2
  %2849 = zext i16 %2848 to i64
  %2850 = load i32* %bt, align 4
  %2851 = sext i32 %2850 to i64
  %2852 = load %struct.EState** %1, align 8
  %2853 = getelementptr inbounds %struct.EState* %2852, i32 0, i32 37
  %2854 = getelementptr inbounds [6 x [258 x i32]]* %2853, i32 0, i64 %2851
  %2855 = getelementptr inbounds [258 x i32]* %2854, i32 0, i64 %2849
  %2856 = load i32* %2855, align 4
  %2857 = add nsw i32 %2856, 1
  store i32 %2857, i32* %2855, align 4
  %2858 = load i32* %gs, align 4
  %2859 = add nsw i32 %2858, 47
  %2860 = sext i32 %2859 to i64
  %2861 = load i16** %mtfv, align 8
  %2862 = getelementptr inbounds i16* %2861, i64 %2860
  %2863 = load i16* %2862, align 2
  %2864 = zext i16 %2863 to i64
  %2865 = load i32* %bt, align 4
  %2866 = sext i32 %2865 to i64
  %2867 = load %struct.EState** %1, align 8
  %2868 = getelementptr inbounds %struct.EState* %2867, i32 0, i32 37
  %2869 = getelementptr inbounds [6 x [258 x i32]]* %2868, i32 0, i64 %2866
  %2870 = getelementptr inbounds [258 x i32]* %2869, i32 0, i64 %2864
  %2871 = load i32* %2870, align 4
  %2872 = add nsw i32 %2871, 1
  store i32 %2872, i32* %2870, align 4
  %2873 = load i32* %gs, align 4
  %2874 = add nsw i32 %2873, 48
  %2875 = sext i32 %2874 to i64
  %2876 = load i16** %mtfv, align 8
  %2877 = getelementptr inbounds i16* %2876, i64 %2875
  %2878 = load i16* %2877, align 2
  %2879 = zext i16 %2878 to i64
  %2880 = load i32* %bt, align 4
  %2881 = sext i32 %2880 to i64
  %2882 = load %struct.EState** %1, align 8
  %2883 = getelementptr inbounds %struct.EState* %2882, i32 0, i32 37
  %2884 = getelementptr inbounds [6 x [258 x i32]]* %2883, i32 0, i64 %2881
  %2885 = getelementptr inbounds [258 x i32]* %2884, i32 0, i64 %2879
  %2886 = load i32* %2885, align 4
  %2887 = add nsw i32 %2886, 1
  store i32 %2887, i32* %2885, align 4
  %2888 = load i32* %gs, align 4
  %2889 = add nsw i32 %2888, 49
  %2890 = sext i32 %2889 to i64
  %2891 = load i16** %mtfv, align 8
  %2892 = getelementptr inbounds i16* %2891, i64 %2890
  %2893 = load i16* %2892, align 2
  %2894 = zext i16 %2893 to i64
  %2895 = load i32* %bt, align 4
  %2896 = sext i32 %2895 to i64
  %2897 = load %struct.EState** %1, align 8
  %2898 = getelementptr inbounds %struct.EState* %2897, i32 0, i32 37
  %2899 = getelementptr inbounds [6 x [258 x i32]]* %2898, i32 0, i64 %2896
  %2900 = getelementptr inbounds [258 x i32]* %2899, i32 0, i64 %2894
  %2901 = load i32* %2900, align 4
  %2902 = add nsw i32 %2901, 1
  store i32 %2902, i32* %2900, align 4
  br label %2928

; <label>:2903                                    ; preds = %2146, %2126
  %2904 = load i32* %gs, align 4
  store i32 %2904, i32* %i, align 4
  br label %2905

; <label>:2905                                    ; preds = %2924, %2903
  %2906 = load i32* %i, align 4
  %2907 = load i32* %ge, align 4
  %2908 = icmp sle i32 %2906, %2907
  br i1 %2908, label %2909, label %2927

; <label>:2909                                    ; preds = %2905
  %2910 = load i32* %i, align 4
  %2911 = sext i32 %2910 to i64
  %2912 = load i16** %mtfv, align 8
  %2913 = getelementptr inbounds i16* %2912, i64 %2911
  %2914 = load i16* %2913, align 2
  %2915 = zext i16 %2914 to i64
  %2916 = load i32* %bt, align 4
  %2917 = sext i32 %2916 to i64
  %2918 = load %struct.EState** %1, align 8
  %2919 = getelementptr inbounds %struct.EState* %2918, i32 0, i32 37
  %2920 = getelementptr inbounds [6 x [258 x i32]]* %2919, i32 0, i64 %2917
  %2921 = getelementptr inbounds [258 x i32]* %2920, i32 0, i64 %2915
  %2922 = load i32* %2921, align 4
  %2923 = add nsw i32 %2922, 1
  store i32 %2923, i32* %2921, align 4
  br label %2924

; <label>:2924                                    ; preds = %2909
  %2925 = load i32* %i, align 4
  %2926 = add nsw i32 %2925, 1
  store i32 %2926, i32* %i, align 4
  br label %2905

; <label>:2927                                    ; preds = %2905
  br label %2928

; <label>:2928                                    ; preds = %2927, %2152
  %2929 = load i32* %ge, align 4
  %2930 = add nsw i32 %2929, 1
  store i32 %2930, i32* %gs, align 4
  br label %343

; <label>:2931                                    ; preds = %349
  %2932 = load %struct.EState** %1, align 8
  %2933 = getelementptr inbounds %struct.EState* %2932, i32 0, i32 28
  %2934 = load i32* %2933, align 4
  %2935 = icmp sge i32 %2934, 3
  br i1 %2935, label %2936, label %2960

; <label>:2936                                    ; preds = %2931
  %2937 = load %struct._IO_FILE** @stderr, align 8
  %2938 = load i32* %iter, align 4
  %2939 = add nsw i32 %2938, 1
  %2940 = load i32* %totc, align 4
  %2941 = sdiv i32 %2940, 8
  %2942 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2937, i8* getelementptr inbounds ([41 x i8]* @.str133, i32 0, i32 0), i32 %2939, i32 %2941)
  store i32 0, i32* %t, align 4
  br label %2943

; <label>:2943                                    ; preds = %2954, %2936
  %2944 = load i32* %t, align 4
  %2945 = load i32* %nGroups, align 4
  %2946 = icmp slt i32 %2944, %2945
  br i1 %2946, label %2947, label %2957

; <label>:2947                                    ; preds = %2943
  %2948 = load %struct._IO_FILE** @stderr, align 8
  %2949 = load i32* %t, align 4
  %2950 = sext i32 %2949 to i64
  %2951 = getelementptr inbounds [6 x i32]* %fave, i32 0, i64 %2950
  %2952 = load i32* %2951, align 4
  %2953 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2948, i8* getelementptr inbounds ([4 x i8]* @.str134, i32 0, i32 0), i32 %2952)
  br label %2954

; <label>:2954                                    ; preds = %2947
  %2955 = load i32* %t, align 4
  %2956 = add nsw i32 %2955, 1
  store i32 %2956, i32* %t, align 4
  br label %2943

; <label>:2957                                    ; preds = %2943
  %2958 = load %struct._IO_FILE** @stderr, align 8
  %2959 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2958, i8* getelementptr inbounds ([2 x i8]* @.str106, i32 0, i32 0))
  br label %2960

; <label>:2960                                    ; preds = %2957, %2931
  store i32 0, i32* %t, align 4
  br label %2961

; <label>:2961                                    ; preds = %2979, %2960
  %2962 = load i32* %t, align 4
  %2963 = load i32* %nGroups, align 4
  %2964 = icmp slt i32 %2962, %2963
  br i1 %2964, label %2965, label %2982

; <label>:2965                                    ; preds = %2961
  %2966 = load i32* %t, align 4
  %2967 = sext i32 %2966 to i64
  %2968 = load %struct.EState** %1, align 8
  %2969 = getelementptr inbounds %struct.EState* %2968, i32 0, i32 35
  %2970 = getelementptr inbounds [6 x [258 x i8]]* %2969, i32 0, i64 %2967
  %2971 = getelementptr inbounds [258 x i8]* %2970, i32 0, i64 0
  %2972 = load i32* %t, align 4
  %2973 = sext i32 %2972 to i64
  %2974 = load %struct.EState** %1, align 8
  %2975 = getelementptr inbounds %struct.EState* %2974, i32 0, i32 37
  %2976 = getelementptr inbounds [6 x [258 x i32]]* %2975, i32 0, i64 %2973
  %2977 = getelementptr inbounds [258 x i32]* %2976, i32 0, i64 0
  %2978 = load i32* %alphaSize, align 4
  call void @BZ2_hbMakeCodeLengths(i8* %2971, i32* %2977, i32 %2978, i32 20)
  br label %2979

; <label>:2979                                    ; preds = %2965
  %2980 = load i32* %t, align 4
  %2981 = add nsw i32 %2980, 1
  store i32 %2981, i32* %t, align 4
  br label %2961

; <label>:2982                                    ; preds = %2961
  br label %2983

; <label>:2983                                    ; preds = %2982
  %2984 = load i32* %iter, align 4
  %2985 = add nsw i32 %2984, 1
  store i32 %2985, i32* %iter, align 4
  br label %216

; <label>:2986                                    ; preds = %216
  %2987 = load i32* %nGroups, align 4
  %2988 = icmp slt i32 %2987, 8
  br i1 %2988, label %2990, label %2989

; <label>:2989                                    ; preds = %2986
  call void @BZ2_bz__AssertH__fail(i32 3002)
  br label %2990

; <label>:2990                                    ; preds = %2989, %2986
  %2991 = load i32* %nSelectors, align 4
  %2992 = icmp slt i32 %2991, 32768
  br i1 %2992, label %2993, label %2996

; <label>:2993                                    ; preds = %2990
  %2994 = load i32* %nSelectors, align 4
  %2995 = icmp sle i32 %2994, 18002
  br i1 %2995, label %2997, label %2996

; <label>:2996                                    ; preds = %2993, %2990
  call void @BZ2_bz__AssertH__fail(i32 3003)
  br label %2997

; <label>:2997                                    ; preds = %2996, %2993
  store i32 0, i32* %i, align 4
  br label %2998

; <label>:2998                                    ; preds = %3008, %2997
  %2999 = load i32* %i, align 4
  %3000 = load i32* %nGroups, align 4
  %3001 = icmp slt i32 %2999, %3000
  br i1 %3001, label %3002, label %3011

; <label>:3002                                    ; preds = %2998
  %3003 = load i32* %i, align 4
  %3004 = trunc i32 %3003 to i8
  %3005 = load i32* %i, align 4
  %3006 = sext i32 %3005 to i64
  %3007 = getelementptr inbounds [6 x i8]* %pos, i32 0, i64 %3006
  store i8 %3004, i8* %3007, align 1
  br label %3008

; <label>:3008                                    ; preds = %3002
  %3009 = load i32* %i, align 4
  %3010 = add nsw i32 %3009, 1
  store i32 %3010, i32* %i, align 4
  br label %2998

; <label>:3011                                    ; preds = %2998
  store i32 0, i32* %i, align 4
  br label %3012

; <label>:3012                                    ; preds = %3055, %3011
  %3013 = load i32* %i, align 4
  %3014 = load i32* %nSelectors, align 4
  %3015 = icmp slt i32 %3013, %3014
  br i1 %3015, label %3016, label %3058

; <label>:3016                                    ; preds = %3012
  %3017 = load i32* %i, align 4
  %3018 = sext i32 %3017 to i64
  %3019 = load %struct.EState** %1, align 8
  %3020 = getelementptr inbounds %struct.EState* %3019, i32 0, i32 33
  %3021 = getelementptr inbounds [18002 x i8]* %3020, i32 0, i64 %3018
  %3022 = load i8* %3021, align 1
  store i8 %3022, i8* %ll_i, align 1
  store i32 0, i32* %j, align 4
  %3023 = load i32* %j, align 4
  %3024 = sext i32 %3023 to i64
  %3025 = getelementptr inbounds [6 x i8]* %pos, i32 0, i64 %3024
  %3026 = load i8* %3025, align 1
  store i8 %3026, i8* %tmp, align 1
  br label %3027

; <label>:3027                                    ; preds = %3033, %3016
  %3028 = load i8* %ll_i, align 1
  %3029 = zext i8 %3028 to i32
  %3030 = load i8* %tmp, align 1
  %3031 = zext i8 %3030 to i32
  %3032 = icmp ne i32 %3029, %3031
  br i1 %3032, label %3033, label %3045

; <label>:3033                                    ; preds = %3027
  %3034 = load i32* %j, align 4
  %3035 = add nsw i32 %3034, 1
  store i32 %3035, i32* %j, align 4
  %3036 = load i8* %tmp, align 1
  store i8 %3036, i8* %tmp2, align 1
  %3037 = load i32* %j, align 4
  %3038 = sext i32 %3037 to i64
  %3039 = getelementptr inbounds [6 x i8]* %pos, i32 0, i64 %3038
  %3040 = load i8* %3039, align 1
  store i8 %3040, i8* %tmp, align 1
  %3041 = load i8* %tmp2, align 1
  %3042 = load i32* %j, align 4
  %3043 = sext i32 %3042 to i64
  %3044 = getelementptr inbounds [6 x i8]* %pos, i32 0, i64 %3043
  store i8 %3041, i8* %3044, align 1
  br label %3027

; <label>:3045                                    ; preds = %3027
  %3046 = load i8* %tmp, align 1
  %3047 = getelementptr inbounds [6 x i8]* %pos, i32 0, i64 0
  store i8 %3046, i8* %3047, align 1
  %3048 = load i32* %j, align 4
  %3049 = trunc i32 %3048 to i8
  %3050 = load i32* %i, align 4
  %3051 = sext i32 %3050 to i64
  %3052 = load %struct.EState** %1, align 8
  %3053 = getelementptr inbounds %struct.EState* %3052, i32 0, i32 34
  %3054 = getelementptr inbounds [18002 x i8]* %3053, i32 0, i64 %3051
  store i8 %3049, i8* %3054, align 1
  br label %3055

; <label>:3055                                    ; preds = %3045
  %3056 = load i32* %i, align 4
  %3057 = add nsw i32 %3056, 1
  store i32 %3057, i32* %i, align 4
  br label %3012

; <label>:3058                                    ; preds = %3012
  store i32 0, i32* %t, align 4
  br label %3059

; <label>:3059                                    ; preds = %3144, %3058
  %3060 = load i32* %t, align 4
  %3061 = load i32* %nGroups, align 4
  %3062 = icmp slt i32 %3060, %3061
  br i1 %3062, label %3063, label %3147

; <label>:3063                                    ; preds = %3059
  store i32 32, i32* %minLen, align 4
  store i32 0, i32* %maxLen, align 4
  store i32 0, i32* %i, align 4
  br label %3064

; <label>:3064                                    ; preds = %3117, %3063
  %3065 = load i32* %i, align 4
  %3066 = load i32* %alphaSize, align 4
  %3067 = icmp slt i32 %3065, %3066
  br i1 %3067, label %3068, label %3120

; <label>:3068                                    ; preds = %3064
  %3069 = load i32* %i, align 4
  %3070 = sext i32 %3069 to i64
  %3071 = load i32* %t, align 4
  %3072 = sext i32 %3071 to i64
  %3073 = load %struct.EState** %1, align 8
  %3074 = getelementptr inbounds %struct.EState* %3073, i32 0, i32 35
  %3075 = getelementptr inbounds [6 x [258 x i8]]* %3074, i32 0, i64 %3072
  %3076 = getelementptr inbounds [258 x i8]* %3075, i32 0, i64 %3070
  %3077 = load i8* %3076, align 1
  %3078 = zext i8 %3077 to i32
  %3079 = load i32* %maxLen, align 4
  %3080 = icmp sgt i32 %3078, %3079
  br i1 %3080, label %3081, label %3092

; <label>:3081                                    ; preds = %3068
  %3082 = load i32* %i, align 4
  %3083 = sext i32 %3082 to i64
  %3084 = load i32* %t, align 4
  %3085 = sext i32 %3084 to i64
  %3086 = load %struct.EState** %1, align 8
  %3087 = getelementptr inbounds %struct.EState* %3086, i32 0, i32 35
  %3088 = getelementptr inbounds [6 x [258 x i8]]* %3087, i32 0, i64 %3085
  %3089 = getelementptr inbounds [258 x i8]* %3088, i32 0, i64 %3083
  %3090 = load i8* %3089, align 1
  %3091 = zext i8 %3090 to i32
  store i32 %3091, i32* %maxLen, align 4
  br label %3092

; <label>:3092                                    ; preds = %3081, %3068
  %3093 = load i32* %i, align 4
  %3094 = sext i32 %3093 to i64
  %3095 = load i32* %t, align 4
  %3096 = sext i32 %3095 to i64
  %3097 = load %struct.EState** %1, align 8
  %3098 = getelementptr inbounds %struct.EState* %3097, i32 0, i32 35
  %3099 = getelementptr inbounds [6 x [258 x i8]]* %3098, i32 0, i64 %3096
  %3100 = getelementptr inbounds [258 x i8]* %3099, i32 0, i64 %3094
  %3101 = load i8* %3100, align 1
  %3102 = zext i8 %3101 to i32
  %3103 = load i32* %minLen, align 4
  %3104 = icmp slt i32 %3102, %3103
  br i1 %3104, label %3105, label %3116

; <label>:3105                                    ; preds = %3092
  %3106 = load i32* %i, align 4
  %3107 = sext i32 %3106 to i64
  %3108 = load i32* %t, align 4
  %3109 = sext i32 %3108 to i64
  %3110 = load %struct.EState** %1, align 8
  %3111 = getelementptr inbounds %struct.EState* %3110, i32 0, i32 35
  %3112 = getelementptr inbounds [6 x [258 x i8]]* %3111, i32 0, i64 %3109
  %3113 = getelementptr inbounds [258 x i8]* %3112, i32 0, i64 %3107
  %3114 = load i8* %3113, align 1
  %3115 = zext i8 %3114 to i32
  store i32 %3115, i32* %minLen, align 4
  br label %3116

; <label>:3116                                    ; preds = %3105, %3092
  br label %3117

; <label>:3117                                    ; preds = %3116
  %3118 = load i32* %i, align 4
  %3119 = add nsw i32 %3118, 1
  store i32 %3119, i32* %i, align 4
  br label %3064

; <label>:3120                                    ; preds = %3064
  %3121 = load i32* %maxLen, align 4
  %3122 = icmp sgt i32 %3121, 20
  br i1 %3122, label %3123, label %3124

; <label>:3123                                    ; preds = %3120
  call void @BZ2_bz__AssertH__fail(i32 3004)
  br label %3124

; <label>:3124                                    ; preds = %3123, %3120
  %3125 = load i32* %minLen, align 4
  %3126 = icmp slt i32 %3125, 1
  br i1 %3126, label %3127, label %3128

; <label>:3127                                    ; preds = %3124
  call void @BZ2_bz__AssertH__fail(i32 3005)
  br label %3128

; <label>:3128                                    ; preds = %3127, %3124
  %3129 = load i32* %t, align 4
  %3130 = sext i32 %3129 to i64
  %3131 = load %struct.EState** %1, align 8
  %3132 = getelementptr inbounds %struct.EState* %3131, i32 0, i32 36
  %3133 = getelementptr inbounds [6 x [258 x i32]]* %3132, i32 0, i64 %3130
  %3134 = getelementptr inbounds [258 x i32]* %3133, i32 0, i64 0
  %3135 = load i32* %t, align 4
  %3136 = sext i32 %3135 to i64
  %3137 = load %struct.EState** %1, align 8
  %3138 = getelementptr inbounds %struct.EState* %3137, i32 0, i32 35
  %3139 = getelementptr inbounds [6 x [258 x i8]]* %3138, i32 0, i64 %3136
  %3140 = getelementptr inbounds [258 x i8]* %3139, i32 0, i64 0
  %3141 = load i32* %minLen, align 4
  %3142 = load i32* %maxLen, align 4
  %3143 = load i32* %alphaSize, align 4
  call void @BZ2_hbAssignCodes(i32* %3134, i8* %3140, i32 %3141, i32 %3142, i32 %3143)
  br label %3144

; <label>:3144                                    ; preds = %3128
  %3145 = load i32* %t, align 4
  %3146 = add nsw i32 %3145, 1
  store i32 %3146, i32* %t, align 4
  br label %3059

; <label>:3147                                    ; preds = %3059
  store i32 0, i32* %i, align 4
  br label %3148

; <label>:3148                                    ; preds = %3178, %3147
  %3149 = load i32* %i, align 4
  %3150 = icmp slt i32 %3149, 16
  br i1 %3150, label %3151, label %3181

; <label>:3151                                    ; preds = %3148
  %3152 = load i32* %i, align 4
  %3153 = sext i32 %3152 to i64
  %3154 = getelementptr inbounds [16 x i8]* %inUse16, i32 0, i64 %3153
  store i8 0, i8* %3154, align 1
  store i32 0, i32* %j, align 4
  br label %3155

; <label>:3155                                    ; preds = %3174, %3151
  %3156 = load i32* %j, align 4
  %3157 = icmp slt i32 %3156, 16
  br i1 %3157, label %3158, label %3177

; <label>:3158                                    ; preds = %3155
  %3159 = load i32* %i, align 4
  %3160 = mul nsw i32 %3159, 16
  %3161 = load i32* %j, align 4
  %3162 = add nsw i32 %3160, %3161
  %3163 = sext i32 %3162 to i64
  %3164 = load %struct.EState** %1, align 8
  %3165 = getelementptr inbounds %struct.EState* %3164, i32 0, i32 22
  %3166 = getelementptr inbounds [256 x i8]* %3165, i32 0, i64 %3163
  %3167 = load i8* %3166, align 1
  %3168 = icmp ne i8 %3167, 0
  br i1 %3168, label %3169, label %3173

; <label>:3169                                    ; preds = %3158
  %3170 = load i32* %i, align 4
  %3171 = sext i32 %3170 to i64
  %3172 = getelementptr inbounds [16 x i8]* %inUse16, i32 0, i64 %3171
  store i8 1, i8* %3172, align 1
  br label %3173

; <label>:3173                                    ; preds = %3169, %3158
  br label %3174

; <label>:3174                                    ; preds = %3173
  %3175 = load i32* %j, align 4
  %3176 = add nsw i32 %3175, 1
  store i32 %3176, i32* %j, align 4
  br label %3155

; <label>:3177                                    ; preds = %3155
  br label %3178

; <label>:3178                                    ; preds = %3177
  %3179 = load i32* %i, align 4
  %3180 = add nsw i32 %3179, 1
  store i32 %3180, i32* %i, align 4
  br label %3148

; <label>:3181                                    ; preds = %3148
  %3182 = load %struct.EState** %1, align 8
  %3183 = getelementptr inbounds %struct.EState* %3182, i32 0, i32 19
  %3184 = load i32* %3183, align 4
  store i32 %3184, i32* %nBytes, align 4
  store i32 0, i32* %i, align 4
  br label %3185

; <label>:3185                                    ; preds = %3199, %3181
  %3186 = load i32* %i, align 4
  %3187 = icmp slt i32 %3186, 16
  br i1 %3187, label %3188, label %3202

; <label>:3188                                    ; preds = %3185
  %3189 = load i32* %i, align 4
  %3190 = sext i32 %3189 to i64
  %3191 = getelementptr inbounds [16 x i8]* %inUse16, i32 0, i64 %3190
  %3192 = load i8* %3191, align 1
  %3193 = icmp ne i8 %3192, 0
  br i1 %3193, label %3194, label %3196

; <label>:3194                                    ; preds = %3188
  %3195 = load %struct.EState** %1, align 8
  call void @bsW(%struct.EState* %3195, i32 1, i32 1)
  br label %3198

; <label>:3196                                    ; preds = %3188
  %3197 = load %struct.EState** %1, align 8
  call void @bsW(%struct.EState* %3197, i32 1, i32 0)
  br label %3198

; <label>:3198                                    ; preds = %3196, %3194
  br label %3199

; <label>:3199                                    ; preds = %3198
  %3200 = load i32* %i, align 4
  %3201 = add nsw i32 %3200, 1
  store i32 %3201, i32* %i, align 4
  br label %3185

; <label>:3202                                    ; preds = %3185
  store i32 0, i32* %i, align 4
  br label %3203

; <label>:3203                                    ; preds = %3237, %3202
  %3204 = load i32* %i, align 4
  %3205 = icmp slt i32 %3204, 16
  br i1 %3205, label %3206, label %3240

; <label>:3206                                    ; preds = %3203
  %3207 = load i32* %i, align 4
  %3208 = sext i32 %3207 to i64
  %3209 = getelementptr inbounds [16 x i8]* %inUse16, i32 0, i64 %3208
  %3210 = load i8* %3209, align 1
  %3211 = icmp ne i8 %3210, 0
  br i1 %3211, label %3212, label %3236

; <label>:3212                                    ; preds = %3206
  store i32 0, i32* %j, align 4
  br label %3213

; <label>:3213                                    ; preds = %3232, %3212
  %3214 = load i32* %j, align 4
  %3215 = icmp slt i32 %3214, 16
  br i1 %3215, label %3216, label %3235

; <label>:3216                                    ; preds = %3213
  %3217 = load i32* %i, align 4
  %3218 = mul nsw i32 %3217, 16
  %3219 = load i32* %j, align 4
  %3220 = add nsw i32 %3218, %3219
  %3221 = sext i32 %3220 to i64
  %3222 = load %struct.EState** %1, align 8
  %3223 = getelementptr inbounds %struct.EState* %3222, i32 0, i32 22
  %3224 = getelementptr inbounds [256 x i8]* %3223, i32 0, i64 %3221
  %3225 = load i8* %3224, align 1
  %3226 = icmp ne i8 %3225, 0
  br i1 %3226, label %3227, label %3229

; <label>:3227                                    ; preds = %3216
  %3228 = load %struct.EState** %1, align 8
  call void @bsW(%struct.EState* %3228, i32 1, i32 1)
  br label %3231

; <label>:3229                                    ; preds = %3216
  %3230 = load %struct.EState** %1, align 8
  call void @bsW(%struct.EState* %3230, i32 1, i32 0)
  br label %3231

; <label>:3231                                    ; preds = %3229, %3227
  br label %3232

; <label>:3232                                    ; preds = %3231
  %3233 = load i32* %j, align 4
  %3234 = add nsw i32 %3233, 1
  store i32 %3234, i32* %j, align 4
  br label %3213

; <label>:3235                                    ; preds = %3213
  br label %3236

; <label>:3236                                    ; preds = %3235, %3206
  br label %3237

; <label>:3237                                    ; preds = %3236
  %3238 = load i32* %i, align 4
  %3239 = add nsw i32 %3238, 1
  store i32 %3239, i32* %i, align 4
  br label %3203

; <label>:3240                                    ; preds = %3203
  %3241 = load %struct.EState** %1, align 8
  %3242 = getelementptr inbounds %struct.EState* %3241, i32 0, i32 28
  %3243 = load i32* %3242, align 4
  %3244 = icmp sge i32 %3243, 3
  br i1 %3244, label %3245, label %3253

; <label>:3245                                    ; preds = %3240
  %3246 = load %struct._IO_FILE** @stderr, align 8
  %3247 = load %struct.EState** %1, align 8
  %3248 = getelementptr inbounds %struct.EState* %3247, i32 0, i32 19
  %3249 = load i32* %3248, align 4
  %3250 = load i32* %nBytes, align 4
  %3251 = sub nsw i32 %3249, %3250
  %3252 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %3246, i8* getelementptr inbounds ([26 x i8]* @.str135, i32 0, i32 0), i32 %3251)
  br label %3253

; <label>:3253                                    ; preds = %3245, %3240
  %3254 = load %struct.EState** %1, align 8
  %3255 = getelementptr inbounds %struct.EState* %3254, i32 0, i32 19
  %3256 = load i32* %3255, align 4
  store i32 %3256, i32* %nBytes, align 4
  %3257 = load %struct.EState** %1, align 8
  %3258 = load i32* %nGroups, align 4
  call void @bsW(%struct.EState* %3257, i32 3, i32 %3258)
  %3259 = load %struct.EState** %1, align 8
  %3260 = load i32* %nSelectors, align 4
  call void @bsW(%struct.EState* %3259, i32 15, i32 %3260)
  store i32 0, i32* %i, align 4
  br label %3261

; <label>:3261                                    ; preds = %3283, %3253
  %3262 = load i32* %i, align 4
  %3263 = load i32* %nSelectors, align 4
  %3264 = icmp slt i32 %3262, %3263
  br i1 %3264, label %3265, label %3286

; <label>:3265                                    ; preds = %3261
  store i32 0, i32* %j, align 4
  br label %3266

; <label>:3266                                    ; preds = %3278, %3265
  %3267 = load i32* %j, align 4
  %3268 = load i32* %i, align 4
  %3269 = sext i32 %3268 to i64
  %3270 = load %struct.EState** %1, align 8
  %3271 = getelementptr inbounds %struct.EState* %3270, i32 0, i32 34
  %3272 = getelementptr inbounds [18002 x i8]* %3271, i32 0, i64 %3269
  %3273 = load i8* %3272, align 1
  %3274 = zext i8 %3273 to i32
  %3275 = icmp slt i32 %3267, %3274
  br i1 %3275, label %3276, label %3281

; <label>:3276                                    ; preds = %3266
  %3277 = load %struct.EState** %1, align 8
  call void @bsW(%struct.EState* %3277, i32 1, i32 1)
  br label %3278

; <label>:3278                                    ; preds = %3276
  %3279 = load i32* %j, align 4
  %3280 = add nsw i32 %3279, 1
  store i32 %3280, i32* %j, align 4
  br label %3266

; <label>:3281                                    ; preds = %3266
  %3282 = load %struct.EState** %1, align 8
  call void @bsW(%struct.EState* %3282, i32 1, i32 0)
  br label %3283

; <label>:3283                                    ; preds = %3281
  %3284 = load i32* %i, align 4
  %3285 = add nsw i32 %3284, 1
  store i32 %3285, i32* %i, align 4
  br label %3261

; <label>:3286                                    ; preds = %3261
  %3287 = load %struct.EState** %1, align 8
  %3288 = getelementptr inbounds %struct.EState* %3287, i32 0, i32 28
  %3289 = load i32* %3288, align 4
  %3290 = icmp sge i32 %3289, 3
  br i1 %3290, label %3291, label %3299

; <label>:3291                                    ; preds = %3286
  %3292 = load %struct._IO_FILE** @stderr, align 8
  %3293 = load %struct.EState** %1, align 8
  %3294 = getelementptr inbounds %struct.EState* %3293, i32 0, i32 19
  %3295 = load i32* %3294, align 4
  %3296 = load i32* %nBytes, align 4
  %3297 = sub nsw i32 %3295, %3296
  %3298 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %3292, i8* getelementptr inbounds ([15 x i8]* @.str136, i32 0, i32 0), i32 %3297)
  br label %3299

; <label>:3299                                    ; preds = %3291, %3286
  %3300 = load %struct.EState** %1, align 8
  %3301 = getelementptr inbounds %struct.EState* %3300, i32 0, i32 19
  %3302 = load i32* %3301, align 4
  store i32 %3302, i32* %nBytes, align 4
  store i32 0, i32* %t, align 4
  br label %3303

; <label>:3303                                    ; preds = %3364, %3299
  %3304 = load i32* %t, align 4
  %3305 = load i32* %nGroups, align 4
  %3306 = icmp slt i32 %3304, %3305
  br i1 %3306, label %3307, label %3367

; <label>:3307                                    ; preds = %3303
  %3308 = load i32* %t, align 4
  %3309 = sext i32 %3308 to i64
  %3310 = load %struct.EState** %1, align 8
  %3311 = getelementptr inbounds %struct.EState* %3310, i32 0, i32 35
  %3312 = getelementptr inbounds [6 x [258 x i8]]* %3311, i32 0, i64 %3309
  %3313 = getelementptr inbounds [258 x i8]* %3312, i32 0, i64 0
  %3314 = load i8* %3313, align 1
  %3315 = zext i8 %3314 to i32
  store i32 %3315, i32* %curr, align 4
  %3316 = load %struct.EState** %1, align 8
  %3317 = load i32* %curr, align 4
  call void @bsW(%struct.EState* %3316, i32 5, i32 %3317)
  store i32 0, i32* %i, align 4
  br label %3318

; <label>:3318                                    ; preds = %3360, %3307
  %3319 = load i32* %i, align 4
  %3320 = load i32* %alphaSize, align 4
  %3321 = icmp slt i32 %3319, %3320
  br i1 %3321, label %3322, label %3363

; <label>:3322                                    ; preds = %3318
  br label %3323

; <label>:3323                                    ; preds = %3336, %3322
  %3324 = load i32* %curr, align 4
  %3325 = load i32* %i, align 4
  %3326 = sext i32 %3325 to i64
  %3327 = load i32* %t, align 4
  %3328 = sext i32 %3327 to i64
  %3329 = load %struct.EState** %1, align 8
  %3330 = getelementptr inbounds %struct.EState* %3329, i32 0, i32 35
  %3331 = getelementptr inbounds [6 x [258 x i8]]* %3330, i32 0, i64 %3328
  %3332 = getelementptr inbounds [258 x i8]* %3331, i32 0, i64 %3326
  %3333 = load i8* %3332, align 1
  %3334 = zext i8 %3333 to i32
  %3335 = icmp slt i32 %3324, %3334
  br i1 %3335, label %3336, label %3340

; <label>:3336                                    ; preds = %3323
  %3337 = load %struct.EState** %1, align 8
  call void @bsW(%struct.EState* %3337, i32 2, i32 2)
  %3338 = load i32* %curr, align 4
  %3339 = add nsw i32 %3338, 1
  store i32 %3339, i32* %curr, align 4
  br label %3323

; <label>:3340                                    ; preds = %3323
  br label %3341

; <label>:3341                                    ; preds = %3354, %3340
  %3342 = load i32* %curr, align 4
  %3343 = load i32* %i, align 4
  %3344 = sext i32 %3343 to i64
  %3345 = load i32* %t, align 4
  %3346 = sext i32 %3345 to i64
  %3347 = load %struct.EState** %1, align 8
  %3348 = getelementptr inbounds %struct.EState* %3347, i32 0, i32 35
  %3349 = getelementptr inbounds [6 x [258 x i8]]* %3348, i32 0, i64 %3346
  %3350 = getelementptr inbounds [258 x i8]* %3349, i32 0, i64 %3344
  %3351 = load i8* %3350, align 1
  %3352 = zext i8 %3351 to i32
  %3353 = icmp sgt i32 %3342, %3352
  br i1 %3353, label %3354, label %3358

; <label>:3354                                    ; preds = %3341
  %3355 = load %struct.EState** %1, align 8
  call void @bsW(%struct.EState* %3355, i32 2, i32 3)
  %3356 = load i32* %curr, align 4
  %3357 = add nsw i32 %3356, -1
  store i32 %3357, i32* %curr, align 4
  br label %3341

; <label>:3358                                    ; preds = %3341
  %3359 = load %struct.EState** %1, align 8
  call void @bsW(%struct.EState* %3359, i32 1, i32 0)
  br label %3360

; <label>:3360                                    ; preds = %3358
  %3361 = load i32* %i, align 4
  %3362 = add nsw i32 %3361, 1
  store i32 %3362, i32* %i, align 4
  br label %3318

; <label>:3363                                    ; preds = %3318
  br label %3364

; <label>:3364                                    ; preds = %3363
  %3365 = load i32* %t, align 4
  %3366 = add nsw i32 %3365, 1
  store i32 %3366, i32* %t, align 4
  br label %3303

; <label>:3367                                    ; preds = %3303
  %3368 = load %struct.EState** %1, align 8
  %3369 = getelementptr inbounds %struct.EState* %3368, i32 0, i32 28
  %3370 = load i32* %3369, align 4
  %3371 = icmp sge i32 %3370, 3
  br i1 %3371, label %3372, label %3380

; <label>:3372                                    ; preds = %3367
  %3373 = load %struct._IO_FILE** @stderr, align 8
  %3374 = load %struct.EState** %1, align 8
  %3375 = getelementptr inbounds %struct.EState* %3374, i32 0, i32 19
  %3376 = load i32* %3375, align 4
  %3377 = load i32* %nBytes, align 4
  %3378 = sub nsw i32 %3376, %3377
  %3379 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %3373, i8* getelementptr inbounds ([18 x i8]* @.str137, i32 0, i32 0), i32 %3378)
  br label %3380

; <label>:3380                                    ; preds = %3372, %3367
  %3381 = load %struct.EState** %1, align 8
  %3382 = getelementptr inbounds %struct.EState* %3381, i32 0, i32 19
  %3383 = load i32* %3382, align 4
  store i32 %3383, i32* %nBytes, align 4
  store i32 0, i32* %selCtr, align 4
  store i32 0, i32* %gs, align 4
  br label %3384

; <label>:3384                                    ; preds = %3380, %4397
  %3385 = load i32* %gs, align 4
  %3386 = load %struct.EState** %1, align 8
  %3387 = getelementptr inbounds %struct.EState* %3386, i32 0, i32 31
  %3388 = load i32* %3387, align 4
  %3389 = icmp sge i32 %3385, %3388
  br i1 %3389, label %3390, label %3391

; <label>:3390                                    ; preds = %3384
  br label %4402

; <label>:3391                                    ; preds = %3384
  %3392 = load i32* %gs, align 4
  %3393 = add nsw i32 %3392, 50
  %3394 = sub nsw i32 %3393, 1
  store i32 %3394, i32* %ge, align 4
  %3395 = load i32* %ge, align 4
  %3396 = load %struct.EState** %1, align 8
  %3397 = getelementptr inbounds %struct.EState* %3396, i32 0, i32 31
  %3398 = load i32* %3397, align 4
  %3399 = icmp sge i32 %3395, %3398
  br i1 %3399, label %3400, label %3405

; <label>:3400                                    ; preds = %3391
  %3401 = load %struct.EState** %1, align 8
  %3402 = getelementptr inbounds %struct.EState* %3401, i32 0, i32 31
  %3403 = load i32* %3402, align 4
  %3404 = sub nsw i32 %3403, 1
  store i32 %3404, i32* %ge, align 4
  br label %3405

; <label>:3405                                    ; preds = %3400, %3391
  %3406 = load i32* %selCtr, align 4
  %3407 = sext i32 %3406 to i64
  %3408 = load %struct.EState** %1, align 8
  %3409 = getelementptr inbounds %struct.EState* %3408, i32 0, i32 33
  %3410 = getelementptr inbounds [18002 x i8]* %3409, i32 0, i64 %3407
  %3411 = load i8* %3410, align 1
  %3412 = zext i8 %3411 to i32
  %3413 = load i32* %nGroups, align 4
  %3414 = icmp slt i32 %3412, %3413
  br i1 %3414, label %3416, label %3415

; <label>:3415                                    ; preds = %3405
  call void @BZ2_bz__AssertH__fail(i32 3006)
  br label %3416

; <label>:3416                                    ; preds = %3415, %3405
  %3417 = load i32* %nGroups, align 4
  %3418 = icmp eq i32 %3417, 6
  br i1 %3418, label %3419, label %4348

; <label>:3419                                    ; preds = %3416
  %3420 = load i32* %ge, align 4
  %3421 = load i32* %gs, align 4
  %3422 = sub nsw i32 %3420, %3421
  %3423 = add nsw i32 %3422, 1
  %3424 = icmp eq i32 50, %3423
  br i1 %3424, label %3425, label %4348

; <label>:3425                                    ; preds = %3419
  %3426 = load i32* %selCtr, align 4
  %3427 = sext i32 %3426 to i64
  %3428 = load %struct.EState** %1, align 8
  %3429 = getelementptr inbounds %struct.EState* %3428, i32 0, i32 33
  %3430 = getelementptr inbounds [18002 x i8]* %3429, i32 0, i64 %3427
  %3431 = load i8* %3430, align 1
  %3432 = zext i8 %3431 to i64
  %3433 = load %struct.EState** %1, align 8
  %3434 = getelementptr inbounds %struct.EState* %3433, i32 0, i32 35
  %3435 = getelementptr inbounds [6 x [258 x i8]]* %3434, i32 0, i64 %3432
  %3436 = getelementptr inbounds [258 x i8]* %3435, i32 0, i64 0
  store i8* %3436, i8** %s_len_sel_selCtr, align 8
  %3437 = load i32* %selCtr, align 4
  %3438 = sext i32 %3437 to i64
  %3439 = load %struct.EState** %1, align 8
  %3440 = getelementptr inbounds %struct.EState* %3439, i32 0, i32 33
  %3441 = getelementptr inbounds [18002 x i8]* %3440, i32 0, i64 %3438
  %3442 = load i8* %3441, align 1
  %3443 = zext i8 %3442 to i64
  %3444 = load %struct.EState** %1, align 8
  %3445 = getelementptr inbounds %struct.EState* %3444, i32 0, i32 36
  %3446 = getelementptr inbounds [6 x [258 x i32]]* %3445, i32 0, i64 %3443
  %3447 = getelementptr inbounds [258 x i32]* %3446, i32 0, i64 0
  store i32* %3447, i32** %s_code_sel_selCtr, align 8
  %3448 = load i32* %gs, align 4
  %3449 = add nsw i32 %3448, 0
  %3450 = sext i32 %3449 to i64
  %3451 = load i16** %mtfv, align 8
  %3452 = getelementptr inbounds i16* %3451, i64 %3450
  %3453 = load i16* %3452, align 2
  store i16 %3453, i16* %mtfv_i, align 2
  %3454 = load %struct.EState** %1, align 8
  %3455 = load i16* %mtfv_i, align 2
  %3456 = zext i16 %3455 to i64
  %3457 = load i8** %s_len_sel_selCtr, align 8
  %3458 = getelementptr inbounds i8* %3457, i64 %3456
  %3459 = load i8* %3458, align 1
  %3460 = zext i8 %3459 to i32
  %3461 = load i16* %mtfv_i, align 2
  %3462 = zext i16 %3461 to i64
  %3463 = load i32** %s_code_sel_selCtr, align 8
  %3464 = getelementptr inbounds i32* %3463, i64 %3462
  %3465 = load i32* %3464, align 4
  call void @bsW(%struct.EState* %3454, i32 %3460, i32 %3465)
  %3466 = load i32* %gs, align 4
  %3467 = add nsw i32 %3466, 1
  %3468 = sext i32 %3467 to i64
  %3469 = load i16** %mtfv, align 8
  %3470 = getelementptr inbounds i16* %3469, i64 %3468
  %3471 = load i16* %3470, align 2
  store i16 %3471, i16* %mtfv_i, align 2
  %3472 = load %struct.EState** %1, align 8
  %3473 = load i16* %mtfv_i, align 2
  %3474 = zext i16 %3473 to i64
  %3475 = load i8** %s_len_sel_selCtr, align 8
  %3476 = getelementptr inbounds i8* %3475, i64 %3474
  %3477 = load i8* %3476, align 1
  %3478 = zext i8 %3477 to i32
  %3479 = load i16* %mtfv_i, align 2
  %3480 = zext i16 %3479 to i64
  %3481 = load i32** %s_code_sel_selCtr, align 8
  %3482 = getelementptr inbounds i32* %3481, i64 %3480
  %3483 = load i32* %3482, align 4
  call void @bsW(%struct.EState* %3472, i32 %3478, i32 %3483)
  %3484 = load i32* %gs, align 4
  %3485 = add nsw i32 %3484, 2
  %3486 = sext i32 %3485 to i64
  %3487 = load i16** %mtfv, align 8
  %3488 = getelementptr inbounds i16* %3487, i64 %3486
  %3489 = load i16* %3488, align 2
  store i16 %3489, i16* %mtfv_i, align 2
  %3490 = load %struct.EState** %1, align 8
  %3491 = load i16* %mtfv_i, align 2
  %3492 = zext i16 %3491 to i64
  %3493 = load i8** %s_len_sel_selCtr, align 8
  %3494 = getelementptr inbounds i8* %3493, i64 %3492
  %3495 = load i8* %3494, align 1
  %3496 = zext i8 %3495 to i32
  %3497 = load i16* %mtfv_i, align 2
  %3498 = zext i16 %3497 to i64
  %3499 = load i32** %s_code_sel_selCtr, align 8
  %3500 = getelementptr inbounds i32* %3499, i64 %3498
  %3501 = load i32* %3500, align 4
  call void @bsW(%struct.EState* %3490, i32 %3496, i32 %3501)
  %3502 = load i32* %gs, align 4
  %3503 = add nsw i32 %3502, 3
  %3504 = sext i32 %3503 to i64
  %3505 = load i16** %mtfv, align 8
  %3506 = getelementptr inbounds i16* %3505, i64 %3504
  %3507 = load i16* %3506, align 2
  store i16 %3507, i16* %mtfv_i, align 2
  %3508 = load %struct.EState** %1, align 8
  %3509 = load i16* %mtfv_i, align 2
  %3510 = zext i16 %3509 to i64
  %3511 = load i8** %s_len_sel_selCtr, align 8
  %3512 = getelementptr inbounds i8* %3511, i64 %3510
  %3513 = load i8* %3512, align 1
  %3514 = zext i8 %3513 to i32
  %3515 = load i16* %mtfv_i, align 2
  %3516 = zext i16 %3515 to i64
  %3517 = load i32** %s_code_sel_selCtr, align 8
  %3518 = getelementptr inbounds i32* %3517, i64 %3516
  %3519 = load i32* %3518, align 4
  call void @bsW(%struct.EState* %3508, i32 %3514, i32 %3519)
  %3520 = load i32* %gs, align 4
  %3521 = add nsw i32 %3520, 4
  %3522 = sext i32 %3521 to i64
  %3523 = load i16** %mtfv, align 8
  %3524 = getelementptr inbounds i16* %3523, i64 %3522
  %3525 = load i16* %3524, align 2
  store i16 %3525, i16* %mtfv_i, align 2
  %3526 = load %struct.EState** %1, align 8
  %3527 = load i16* %mtfv_i, align 2
  %3528 = zext i16 %3527 to i64
  %3529 = load i8** %s_len_sel_selCtr, align 8
  %3530 = getelementptr inbounds i8* %3529, i64 %3528
  %3531 = load i8* %3530, align 1
  %3532 = zext i8 %3531 to i32
  %3533 = load i16* %mtfv_i, align 2
  %3534 = zext i16 %3533 to i64
  %3535 = load i32** %s_code_sel_selCtr, align 8
  %3536 = getelementptr inbounds i32* %3535, i64 %3534
  %3537 = load i32* %3536, align 4
  call void @bsW(%struct.EState* %3526, i32 %3532, i32 %3537)
  %3538 = load i32* %gs, align 4
  %3539 = add nsw i32 %3538, 5
  %3540 = sext i32 %3539 to i64
  %3541 = load i16** %mtfv, align 8
  %3542 = getelementptr inbounds i16* %3541, i64 %3540
  %3543 = load i16* %3542, align 2
  store i16 %3543, i16* %mtfv_i, align 2
  %3544 = load %struct.EState** %1, align 8
  %3545 = load i16* %mtfv_i, align 2
  %3546 = zext i16 %3545 to i64
  %3547 = load i8** %s_len_sel_selCtr, align 8
  %3548 = getelementptr inbounds i8* %3547, i64 %3546
  %3549 = load i8* %3548, align 1
  %3550 = zext i8 %3549 to i32
  %3551 = load i16* %mtfv_i, align 2
  %3552 = zext i16 %3551 to i64
  %3553 = load i32** %s_code_sel_selCtr, align 8
  %3554 = getelementptr inbounds i32* %3553, i64 %3552
  %3555 = load i32* %3554, align 4
  call void @bsW(%struct.EState* %3544, i32 %3550, i32 %3555)
  %3556 = load i32* %gs, align 4
  %3557 = add nsw i32 %3556, 6
  %3558 = sext i32 %3557 to i64
  %3559 = load i16** %mtfv, align 8
  %3560 = getelementptr inbounds i16* %3559, i64 %3558
  %3561 = load i16* %3560, align 2
  store i16 %3561, i16* %mtfv_i, align 2
  %3562 = load %struct.EState** %1, align 8
  %3563 = load i16* %mtfv_i, align 2
  %3564 = zext i16 %3563 to i64
  %3565 = load i8** %s_len_sel_selCtr, align 8
  %3566 = getelementptr inbounds i8* %3565, i64 %3564
  %3567 = load i8* %3566, align 1
  %3568 = zext i8 %3567 to i32
  %3569 = load i16* %mtfv_i, align 2
  %3570 = zext i16 %3569 to i64
  %3571 = load i32** %s_code_sel_selCtr, align 8
  %3572 = getelementptr inbounds i32* %3571, i64 %3570
  %3573 = load i32* %3572, align 4
  call void @bsW(%struct.EState* %3562, i32 %3568, i32 %3573)
  %3574 = load i32* %gs, align 4
  %3575 = add nsw i32 %3574, 7
  %3576 = sext i32 %3575 to i64
  %3577 = load i16** %mtfv, align 8
  %3578 = getelementptr inbounds i16* %3577, i64 %3576
  %3579 = load i16* %3578, align 2
  store i16 %3579, i16* %mtfv_i, align 2
  %3580 = load %struct.EState** %1, align 8
  %3581 = load i16* %mtfv_i, align 2
  %3582 = zext i16 %3581 to i64
  %3583 = load i8** %s_len_sel_selCtr, align 8
  %3584 = getelementptr inbounds i8* %3583, i64 %3582
  %3585 = load i8* %3584, align 1
  %3586 = zext i8 %3585 to i32
  %3587 = load i16* %mtfv_i, align 2
  %3588 = zext i16 %3587 to i64
  %3589 = load i32** %s_code_sel_selCtr, align 8
  %3590 = getelementptr inbounds i32* %3589, i64 %3588
  %3591 = load i32* %3590, align 4
  call void @bsW(%struct.EState* %3580, i32 %3586, i32 %3591)
  %3592 = load i32* %gs, align 4
  %3593 = add nsw i32 %3592, 8
  %3594 = sext i32 %3593 to i64
  %3595 = load i16** %mtfv, align 8
  %3596 = getelementptr inbounds i16* %3595, i64 %3594
  %3597 = load i16* %3596, align 2
  store i16 %3597, i16* %mtfv_i, align 2
  %3598 = load %struct.EState** %1, align 8
  %3599 = load i16* %mtfv_i, align 2
  %3600 = zext i16 %3599 to i64
  %3601 = load i8** %s_len_sel_selCtr, align 8
  %3602 = getelementptr inbounds i8* %3601, i64 %3600
  %3603 = load i8* %3602, align 1
  %3604 = zext i8 %3603 to i32
  %3605 = load i16* %mtfv_i, align 2
  %3606 = zext i16 %3605 to i64
  %3607 = load i32** %s_code_sel_selCtr, align 8
  %3608 = getelementptr inbounds i32* %3607, i64 %3606
  %3609 = load i32* %3608, align 4
  call void @bsW(%struct.EState* %3598, i32 %3604, i32 %3609)
  %3610 = load i32* %gs, align 4
  %3611 = add nsw i32 %3610, 9
  %3612 = sext i32 %3611 to i64
  %3613 = load i16** %mtfv, align 8
  %3614 = getelementptr inbounds i16* %3613, i64 %3612
  %3615 = load i16* %3614, align 2
  store i16 %3615, i16* %mtfv_i, align 2
  %3616 = load %struct.EState** %1, align 8
  %3617 = load i16* %mtfv_i, align 2
  %3618 = zext i16 %3617 to i64
  %3619 = load i8** %s_len_sel_selCtr, align 8
  %3620 = getelementptr inbounds i8* %3619, i64 %3618
  %3621 = load i8* %3620, align 1
  %3622 = zext i8 %3621 to i32
  %3623 = load i16* %mtfv_i, align 2
  %3624 = zext i16 %3623 to i64
  %3625 = load i32** %s_code_sel_selCtr, align 8
  %3626 = getelementptr inbounds i32* %3625, i64 %3624
  %3627 = load i32* %3626, align 4
  call void @bsW(%struct.EState* %3616, i32 %3622, i32 %3627)
  %3628 = load i32* %gs, align 4
  %3629 = add nsw i32 %3628, 10
  %3630 = sext i32 %3629 to i64
  %3631 = load i16** %mtfv, align 8
  %3632 = getelementptr inbounds i16* %3631, i64 %3630
  %3633 = load i16* %3632, align 2
  store i16 %3633, i16* %mtfv_i, align 2
  %3634 = load %struct.EState** %1, align 8
  %3635 = load i16* %mtfv_i, align 2
  %3636 = zext i16 %3635 to i64
  %3637 = load i8** %s_len_sel_selCtr, align 8
  %3638 = getelementptr inbounds i8* %3637, i64 %3636
  %3639 = load i8* %3638, align 1
  %3640 = zext i8 %3639 to i32
  %3641 = load i16* %mtfv_i, align 2
  %3642 = zext i16 %3641 to i64
  %3643 = load i32** %s_code_sel_selCtr, align 8
  %3644 = getelementptr inbounds i32* %3643, i64 %3642
  %3645 = load i32* %3644, align 4
  call void @bsW(%struct.EState* %3634, i32 %3640, i32 %3645)
  %3646 = load i32* %gs, align 4
  %3647 = add nsw i32 %3646, 11
  %3648 = sext i32 %3647 to i64
  %3649 = load i16** %mtfv, align 8
  %3650 = getelementptr inbounds i16* %3649, i64 %3648
  %3651 = load i16* %3650, align 2
  store i16 %3651, i16* %mtfv_i, align 2
  %3652 = load %struct.EState** %1, align 8
  %3653 = load i16* %mtfv_i, align 2
  %3654 = zext i16 %3653 to i64
  %3655 = load i8** %s_len_sel_selCtr, align 8
  %3656 = getelementptr inbounds i8* %3655, i64 %3654
  %3657 = load i8* %3656, align 1
  %3658 = zext i8 %3657 to i32
  %3659 = load i16* %mtfv_i, align 2
  %3660 = zext i16 %3659 to i64
  %3661 = load i32** %s_code_sel_selCtr, align 8
  %3662 = getelementptr inbounds i32* %3661, i64 %3660
  %3663 = load i32* %3662, align 4
  call void @bsW(%struct.EState* %3652, i32 %3658, i32 %3663)
  %3664 = load i32* %gs, align 4
  %3665 = add nsw i32 %3664, 12
  %3666 = sext i32 %3665 to i64
  %3667 = load i16** %mtfv, align 8
  %3668 = getelementptr inbounds i16* %3667, i64 %3666
  %3669 = load i16* %3668, align 2
  store i16 %3669, i16* %mtfv_i, align 2
  %3670 = load %struct.EState** %1, align 8
  %3671 = load i16* %mtfv_i, align 2
  %3672 = zext i16 %3671 to i64
  %3673 = load i8** %s_len_sel_selCtr, align 8
  %3674 = getelementptr inbounds i8* %3673, i64 %3672
  %3675 = load i8* %3674, align 1
  %3676 = zext i8 %3675 to i32
  %3677 = load i16* %mtfv_i, align 2
  %3678 = zext i16 %3677 to i64
  %3679 = load i32** %s_code_sel_selCtr, align 8
  %3680 = getelementptr inbounds i32* %3679, i64 %3678
  %3681 = load i32* %3680, align 4
  call void @bsW(%struct.EState* %3670, i32 %3676, i32 %3681)
  %3682 = load i32* %gs, align 4
  %3683 = add nsw i32 %3682, 13
  %3684 = sext i32 %3683 to i64
  %3685 = load i16** %mtfv, align 8
  %3686 = getelementptr inbounds i16* %3685, i64 %3684
  %3687 = load i16* %3686, align 2
  store i16 %3687, i16* %mtfv_i, align 2
  %3688 = load %struct.EState** %1, align 8
  %3689 = load i16* %mtfv_i, align 2
  %3690 = zext i16 %3689 to i64
  %3691 = load i8** %s_len_sel_selCtr, align 8
  %3692 = getelementptr inbounds i8* %3691, i64 %3690
  %3693 = load i8* %3692, align 1
  %3694 = zext i8 %3693 to i32
  %3695 = load i16* %mtfv_i, align 2
  %3696 = zext i16 %3695 to i64
  %3697 = load i32** %s_code_sel_selCtr, align 8
  %3698 = getelementptr inbounds i32* %3697, i64 %3696
  %3699 = load i32* %3698, align 4
  call void @bsW(%struct.EState* %3688, i32 %3694, i32 %3699)
  %3700 = load i32* %gs, align 4
  %3701 = add nsw i32 %3700, 14
  %3702 = sext i32 %3701 to i64
  %3703 = load i16** %mtfv, align 8
  %3704 = getelementptr inbounds i16* %3703, i64 %3702
  %3705 = load i16* %3704, align 2
  store i16 %3705, i16* %mtfv_i, align 2
  %3706 = load %struct.EState** %1, align 8
  %3707 = load i16* %mtfv_i, align 2
  %3708 = zext i16 %3707 to i64
  %3709 = load i8** %s_len_sel_selCtr, align 8
  %3710 = getelementptr inbounds i8* %3709, i64 %3708
  %3711 = load i8* %3710, align 1
  %3712 = zext i8 %3711 to i32
  %3713 = load i16* %mtfv_i, align 2
  %3714 = zext i16 %3713 to i64
  %3715 = load i32** %s_code_sel_selCtr, align 8
  %3716 = getelementptr inbounds i32* %3715, i64 %3714
  %3717 = load i32* %3716, align 4
  call void @bsW(%struct.EState* %3706, i32 %3712, i32 %3717)
  %3718 = load i32* %gs, align 4
  %3719 = add nsw i32 %3718, 15
  %3720 = sext i32 %3719 to i64
  %3721 = load i16** %mtfv, align 8
  %3722 = getelementptr inbounds i16* %3721, i64 %3720
  %3723 = load i16* %3722, align 2
  store i16 %3723, i16* %mtfv_i, align 2
  %3724 = load %struct.EState** %1, align 8
  %3725 = load i16* %mtfv_i, align 2
  %3726 = zext i16 %3725 to i64
  %3727 = load i8** %s_len_sel_selCtr, align 8
  %3728 = getelementptr inbounds i8* %3727, i64 %3726
  %3729 = load i8* %3728, align 1
  %3730 = zext i8 %3729 to i32
  %3731 = load i16* %mtfv_i, align 2
  %3732 = zext i16 %3731 to i64
  %3733 = load i32** %s_code_sel_selCtr, align 8
  %3734 = getelementptr inbounds i32* %3733, i64 %3732
  %3735 = load i32* %3734, align 4
  call void @bsW(%struct.EState* %3724, i32 %3730, i32 %3735)
  %3736 = load i32* %gs, align 4
  %3737 = add nsw i32 %3736, 16
  %3738 = sext i32 %3737 to i64
  %3739 = load i16** %mtfv, align 8
  %3740 = getelementptr inbounds i16* %3739, i64 %3738
  %3741 = load i16* %3740, align 2
  store i16 %3741, i16* %mtfv_i, align 2
  %3742 = load %struct.EState** %1, align 8
  %3743 = load i16* %mtfv_i, align 2
  %3744 = zext i16 %3743 to i64
  %3745 = load i8** %s_len_sel_selCtr, align 8
  %3746 = getelementptr inbounds i8* %3745, i64 %3744
  %3747 = load i8* %3746, align 1
  %3748 = zext i8 %3747 to i32
  %3749 = load i16* %mtfv_i, align 2
  %3750 = zext i16 %3749 to i64
  %3751 = load i32** %s_code_sel_selCtr, align 8
  %3752 = getelementptr inbounds i32* %3751, i64 %3750
  %3753 = load i32* %3752, align 4
  call void @bsW(%struct.EState* %3742, i32 %3748, i32 %3753)
  %3754 = load i32* %gs, align 4
  %3755 = add nsw i32 %3754, 17
  %3756 = sext i32 %3755 to i64
  %3757 = load i16** %mtfv, align 8
  %3758 = getelementptr inbounds i16* %3757, i64 %3756
  %3759 = load i16* %3758, align 2
  store i16 %3759, i16* %mtfv_i, align 2
  %3760 = load %struct.EState** %1, align 8
  %3761 = load i16* %mtfv_i, align 2
  %3762 = zext i16 %3761 to i64
  %3763 = load i8** %s_len_sel_selCtr, align 8
  %3764 = getelementptr inbounds i8* %3763, i64 %3762
  %3765 = load i8* %3764, align 1
  %3766 = zext i8 %3765 to i32
  %3767 = load i16* %mtfv_i, align 2
  %3768 = zext i16 %3767 to i64
  %3769 = load i32** %s_code_sel_selCtr, align 8
  %3770 = getelementptr inbounds i32* %3769, i64 %3768
  %3771 = load i32* %3770, align 4
  call void @bsW(%struct.EState* %3760, i32 %3766, i32 %3771)
  %3772 = load i32* %gs, align 4
  %3773 = add nsw i32 %3772, 18
  %3774 = sext i32 %3773 to i64
  %3775 = load i16** %mtfv, align 8
  %3776 = getelementptr inbounds i16* %3775, i64 %3774
  %3777 = load i16* %3776, align 2
  store i16 %3777, i16* %mtfv_i, align 2
  %3778 = load %struct.EState** %1, align 8
  %3779 = load i16* %mtfv_i, align 2
  %3780 = zext i16 %3779 to i64
  %3781 = load i8** %s_len_sel_selCtr, align 8
  %3782 = getelementptr inbounds i8* %3781, i64 %3780
  %3783 = load i8* %3782, align 1
  %3784 = zext i8 %3783 to i32
  %3785 = load i16* %mtfv_i, align 2
  %3786 = zext i16 %3785 to i64
  %3787 = load i32** %s_code_sel_selCtr, align 8
  %3788 = getelementptr inbounds i32* %3787, i64 %3786
  %3789 = load i32* %3788, align 4
  call void @bsW(%struct.EState* %3778, i32 %3784, i32 %3789)
  %3790 = load i32* %gs, align 4
  %3791 = add nsw i32 %3790, 19
  %3792 = sext i32 %3791 to i64
  %3793 = load i16** %mtfv, align 8
  %3794 = getelementptr inbounds i16* %3793, i64 %3792
  %3795 = load i16* %3794, align 2
  store i16 %3795, i16* %mtfv_i, align 2
  %3796 = load %struct.EState** %1, align 8
  %3797 = load i16* %mtfv_i, align 2
  %3798 = zext i16 %3797 to i64
  %3799 = load i8** %s_len_sel_selCtr, align 8
  %3800 = getelementptr inbounds i8* %3799, i64 %3798
  %3801 = load i8* %3800, align 1
  %3802 = zext i8 %3801 to i32
  %3803 = load i16* %mtfv_i, align 2
  %3804 = zext i16 %3803 to i64
  %3805 = load i32** %s_code_sel_selCtr, align 8
  %3806 = getelementptr inbounds i32* %3805, i64 %3804
  %3807 = load i32* %3806, align 4
  call void @bsW(%struct.EState* %3796, i32 %3802, i32 %3807)
  %3808 = load i32* %gs, align 4
  %3809 = add nsw i32 %3808, 20
  %3810 = sext i32 %3809 to i64
  %3811 = load i16** %mtfv, align 8
  %3812 = getelementptr inbounds i16* %3811, i64 %3810
  %3813 = load i16* %3812, align 2
  store i16 %3813, i16* %mtfv_i, align 2
  %3814 = load %struct.EState** %1, align 8
  %3815 = load i16* %mtfv_i, align 2
  %3816 = zext i16 %3815 to i64
  %3817 = load i8** %s_len_sel_selCtr, align 8
  %3818 = getelementptr inbounds i8* %3817, i64 %3816
  %3819 = load i8* %3818, align 1
  %3820 = zext i8 %3819 to i32
  %3821 = load i16* %mtfv_i, align 2
  %3822 = zext i16 %3821 to i64
  %3823 = load i32** %s_code_sel_selCtr, align 8
  %3824 = getelementptr inbounds i32* %3823, i64 %3822
  %3825 = load i32* %3824, align 4
  call void @bsW(%struct.EState* %3814, i32 %3820, i32 %3825)
  %3826 = load i32* %gs, align 4
  %3827 = add nsw i32 %3826, 21
  %3828 = sext i32 %3827 to i64
  %3829 = load i16** %mtfv, align 8
  %3830 = getelementptr inbounds i16* %3829, i64 %3828
  %3831 = load i16* %3830, align 2
  store i16 %3831, i16* %mtfv_i, align 2
  %3832 = load %struct.EState** %1, align 8
  %3833 = load i16* %mtfv_i, align 2
  %3834 = zext i16 %3833 to i64
  %3835 = load i8** %s_len_sel_selCtr, align 8
  %3836 = getelementptr inbounds i8* %3835, i64 %3834
  %3837 = load i8* %3836, align 1
  %3838 = zext i8 %3837 to i32
  %3839 = load i16* %mtfv_i, align 2
  %3840 = zext i16 %3839 to i64
  %3841 = load i32** %s_code_sel_selCtr, align 8
  %3842 = getelementptr inbounds i32* %3841, i64 %3840
  %3843 = load i32* %3842, align 4
  call void @bsW(%struct.EState* %3832, i32 %3838, i32 %3843)
  %3844 = load i32* %gs, align 4
  %3845 = add nsw i32 %3844, 22
  %3846 = sext i32 %3845 to i64
  %3847 = load i16** %mtfv, align 8
  %3848 = getelementptr inbounds i16* %3847, i64 %3846
  %3849 = load i16* %3848, align 2
  store i16 %3849, i16* %mtfv_i, align 2
  %3850 = load %struct.EState** %1, align 8
  %3851 = load i16* %mtfv_i, align 2
  %3852 = zext i16 %3851 to i64
  %3853 = load i8** %s_len_sel_selCtr, align 8
  %3854 = getelementptr inbounds i8* %3853, i64 %3852
  %3855 = load i8* %3854, align 1
  %3856 = zext i8 %3855 to i32
  %3857 = load i16* %mtfv_i, align 2
  %3858 = zext i16 %3857 to i64
  %3859 = load i32** %s_code_sel_selCtr, align 8
  %3860 = getelementptr inbounds i32* %3859, i64 %3858
  %3861 = load i32* %3860, align 4
  call void @bsW(%struct.EState* %3850, i32 %3856, i32 %3861)
  %3862 = load i32* %gs, align 4
  %3863 = add nsw i32 %3862, 23
  %3864 = sext i32 %3863 to i64
  %3865 = load i16** %mtfv, align 8
  %3866 = getelementptr inbounds i16* %3865, i64 %3864
  %3867 = load i16* %3866, align 2
  store i16 %3867, i16* %mtfv_i, align 2
  %3868 = load %struct.EState** %1, align 8
  %3869 = load i16* %mtfv_i, align 2
  %3870 = zext i16 %3869 to i64
  %3871 = load i8** %s_len_sel_selCtr, align 8
  %3872 = getelementptr inbounds i8* %3871, i64 %3870
  %3873 = load i8* %3872, align 1
  %3874 = zext i8 %3873 to i32
  %3875 = load i16* %mtfv_i, align 2
  %3876 = zext i16 %3875 to i64
  %3877 = load i32** %s_code_sel_selCtr, align 8
  %3878 = getelementptr inbounds i32* %3877, i64 %3876
  %3879 = load i32* %3878, align 4
  call void @bsW(%struct.EState* %3868, i32 %3874, i32 %3879)
  %3880 = load i32* %gs, align 4
  %3881 = add nsw i32 %3880, 24
  %3882 = sext i32 %3881 to i64
  %3883 = load i16** %mtfv, align 8
  %3884 = getelementptr inbounds i16* %3883, i64 %3882
  %3885 = load i16* %3884, align 2
  store i16 %3885, i16* %mtfv_i, align 2
  %3886 = load %struct.EState** %1, align 8
  %3887 = load i16* %mtfv_i, align 2
  %3888 = zext i16 %3887 to i64
  %3889 = load i8** %s_len_sel_selCtr, align 8
  %3890 = getelementptr inbounds i8* %3889, i64 %3888
  %3891 = load i8* %3890, align 1
  %3892 = zext i8 %3891 to i32
  %3893 = load i16* %mtfv_i, align 2
  %3894 = zext i16 %3893 to i64
  %3895 = load i32** %s_code_sel_selCtr, align 8
  %3896 = getelementptr inbounds i32* %3895, i64 %3894
  %3897 = load i32* %3896, align 4
  call void @bsW(%struct.EState* %3886, i32 %3892, i32 %3897)
  %3898 = load i32* %gs, align 4
  %3899 = add nsw i32 %3898, 25
  %3900 = sext i32 %3899 to i64
  %3901 = load i16** %mtfv, align 8
  %3902 = getelementptr inbounds i16* %3901, i64 %3900
  %3903 = load i16* %3902, align 2
  store i16 %3903, i16* %mtfv_i, align 2
  %3904 = load %struct.EState** %1, align 8
  %3905 = load i16* %mtfv_i, align 2
  %3906 = zext i16 %3905 to i64
  %3907 = load i8** %s_len_sel_selCtr, align 8
  %3908 = getelementptr inbounds i8* %3907, i64 %3906
  %3909 = load i8* %3908, align 1
  %3910 = zext i8 %3909 to i32
  %3911 = load i16* %mtfv_i, align 2
  %3912 = zext i16 %3911 to i64
  %3913 = load i32** %s_code_sel_selCtr, align 8
  %3914 = getelementptr inbounds i32* %3913, i64 %3912
  %3915 = load i32* %3914, align 4
  call void @bsW(%struct.EState* %3904, i32 %3910, i32 %3915)
  %3916 = load i32* %gs, align 4
  %3917 = add nsw i32 %3916, 26
  %3918 = sext i32 %3917 to i64
  %3919 = load i16** %mtfv, align 8
  %3920 = getelementptr inbounds i16* %3919, i64 %3918
  %3921 = load i16* %3920, align 2
  store i16 %3921, i16* %mtfv_i, align 2
  %3922 = load %struct.EState** %1, align 8
  %3923 = load i16* %mtfv_i, align 2
  %3924 = zext i16 %3923 to i64
  %3925 = load i8** %s_len_sel_selCtr, align 8
  %3926 = getelementptr inbounds i8* %3925, i64 %3924
  %3927 = load i8* %3926, align 1
  %3928 = zext i8 %3927 to i32
  %3929 = load i16* %mtfv_i, align 2
  %3930 = zext i16 %3929 to i64
  %3931 = load i32** %s_code_sel_selCtr, align 8
  %3932 = getelementptr inbounds i32* %3931, i64 %3930
  %3933 = load i32* %3932, align 4
  call void @bsW(%struct.EState* %3922, i32 %3928, i32 %3933)
  %3934 = load i32* %gs, align 4
  %3935 = add nsw i32 %3934, 27
  %3936 = sext i32 %3935 to i64
  %3937 = load i16** %mtfv, align 8
  %3938 = getelementptr inbounds i16* %3937, i64 %3936
  %3939 = load i16* %3938, align 2
  store i16 %3939, i16* %mtfv_i, align 2
  %3940 = load %struct.EState** %1, align 8
  %3941 = load i16* %mtfv_i, align 2
  %3942 = zext i16 %3941 to i64
  %3943 = load i8** %s_len_sel_selCtr, align 8
  %3944 = getelementptr inbounds i8* %3943, i64 %3942
  %3945 = load i8* %3944, align 1
  %3946 = zext i8 %3945 to i32
  %3947 = load i16* %mtfv_i, align 2
  %3948 = zext i16 %3947 to i64
  %3949 = load i32** %s_code_sel_selCtr, align 8
  %3950 = getelementptr inbounds i32* %3949, i64 %3948
  %3951 = load i32* %3950, align 4
  call void @bsW(%struct.EState* %3940, i32 %3946, i32 %3951)
  %3952 = load i32* %gs, align 4
  %3953 = add nsw i32 %3952, 28
  %3954 = sext i32 %3953 to i64
  %3955 = load i16** %mtfv, align 8
  %3956 = getelementptr inbounds i16* %3955, i64 %3954
  %3957 = load i16* %3956, align 2
  store i16 %3957, i16* %mtfv_i, align 2
  %3958 = load %struct.EState** %1, align 8
  %3959 = load i16* %mtfv_i, align 2
  %3960 = zext i16 %3959 to i64
  %3961 = load i8** %s_len_sel_selCtr, align 8
  %3962 = getelementptr inbounds i8* %3961, i64 %3960
  %3963 = load i8* %3962, align 1
  %3964 = zext i8 %3963 to i32
  %3965 = load i16* %mtfv_i, align 2
  %3966 = zext i16 %3965 to i64
  %3967 = load i32** %s_code_sel_selCtr, align 8
  %3968 = getelementptr inbounds i32* %3967, i64 %3966
  %3969 = load i32* %3968, align 4
  call void @bsW(%struct.EState* %3958, i32 %3964, i32 %3969)
  %3970 = load i32* %gs, align 4
  %3971 = add nsw i32 %3970, 29
  %3972 = sext i32 %3971 to i64
  %3973 = load i16** %mtfv, align 8
  %3974 = getelementptr inbounds i16* %3973, i64 %3972
  %3975 = load i16* %3974, align 2
  store i16 %3975, i16* %mtfv_i, align 2
  %3976 = load %struct.EState** %1, align 8
  %3977 = load i16* %mtfv_i, align 2
  %3978 = zext i16 %3977 to i64
  %3979 = load i8** %s_len_sel_selCtr, align 8
  %3980 = getelementptr inbounds i8* %3979, i64 %3978
  %3981 = load i8* %3980, align 1
  %3982 = zext i8 %3981 to i32
  %3983 = load i16* %mtfv_i, align 2
  %3984 = zext i16 %3983 to i64
  %3985 = load i32** %s_code_sel_selCtr, align 8
  %3986 = getelementptr inbounds i32* %3985, i64 %3984
  %3987 = load i32* %3986, align 4
  call void @bsW(%struct.EState* %3976, i32 %3982, i32 %3987)
  %3988 = load i32* %gs, align 4
  %3989 = add nsw i32 %3988, 30
  %3990 = sext i32 %3989 to i64
  %3991 = load i16** %mtfv, align 8
  %3992 = getelementptr inbounds i16* %3991, i64 %3990
  %3993 = load i16* %3992, align 2
  store i16 %3993, i16* %mtfv_i, align 2
  %3994 = load %struct.EState** %1, align 8
  %3995 = load i16* %mtfv_i, align 2
  %3996 = zext i16 %3995 to i64
  %3997 = load i8** %s_len_sel_selCtr, align 8
  %3998 = getelementptr inbounds i8* %3997, i64 %3996
  %3999 = load i8* %3998, align 1
  %4000 = zext i8 %3999 to i32
  %4001 = load i16* %mtfv_i, align 2
  %4002 = zext i16 %4001 to i64
  %4003 = load i32** %s_code_sel_selCtr, align 8
  %4004 = getelementptr inbounds i32* %4003, i64 %4002
  %4005 = load i32* %4004, align 4
  call void @bsW(%struct.EState* %3994, i32 %4000, i32 %4005)
  %4006 = load i32* %gs, align 4
  %4007 = add nsw i32 %4006, 31
  %4008 = sext i32 %4007 to i64
  %4009 = load i16** %mtfv, align 8
  %4010 = getelementptr inbounds i16* %4009, i64 %4008
  %4011 = load i16* %4010, align 2
  store i16 %4011, i16* %mtfv_i, align 2
  %4012 = load %struct.EState** %1, align 8
  %4013 = load i16* %mtfv_i, align 2
  %4014 = zext i16 %4013 to i64
  %4015 = load i8** %s_len_sel_selCtr, align 8
  %4016 = getelementptr inbounds i8* %4015, i64 %4014
  %4017 = load i8* %4016, align 1
  %4018 = zext i8 %4017 to i32
  %4019 = load i16* %mtfv_i, align 2
  %4020 = zext i16 %4019 to i64
  %4021 = load i32** %s_code_sel_selCtr, align 8
  %4022 = getelementptr inbounds i32* %4021, i64 %4020
  %4023 = load i32* %4022, align 4
  call void @bsW(%struct.EState* %4012, i32 %4018, i32 %4023)
  %4024 = load i32* %gs, align 4
  %4025 = add nsw i32 %4024, 32
  %4026 = sext i32 %4025 to i64
  %4027 = load i16** %mtfv, align 8
  %4028 = getelementptr inbounds i16* %4027, i64 %4026
  %4029 = load i16* %4028, align 2
  store i16 %4029, i16* %mtfv_i, align 2
  %4030 = load %struct.EState** %1, align 8
  %4031 = load i16* %mtfv_i, align 2
  %4032 = zext i16 %4031 to i64
  %4033 = load i8** %s_len_sel_selCtr, align 8
  %4034 = getelementptr inbounds i8* %4033, i64 %4032
  %4035 = load i8* %4034, align 1
  %4036 = zext i8 %4035 to i32
  %4037 = load i16* %mtfv_i, align 2
  %4038 = zext i16 %4037 to i64
  %4039 = load i32** %s_code_sel_selCtr, align 8
  %4040 = getelementptr inbounds i32* %4039, i64 %4038
  %4041 = load i32* %4040, align 4
  call void @bsW(%struct.EState* %4030, i32 %4036, i32 %4041)
  %4042 = load i32* %gs, align 4
  %4043 = add nsw i32 %4042, 33
  %4044 = sext i32 %4043 to i64
  %4045 = load i16** %mtfv, align 8
  %4046 = getelementptr inbounds i16* %4045, i64 %4044
  %4047 = load i16* %4046, align 2
  store i16 %4047, i16* %mtfv_i, align 2
  %4048 = load %struct.EState** %1, align 8
  %4049 = load i16* %mtfv_i, align 2
  %4050 = zext i16 %4049 to i64
  %4051 = load i8** %s_len_sel_selCtr, align 8
  %4052 = getelementptr inbounds i8* %4051, i64 %4050
  %4053 = load i8* %4052, align 1
  %4054 = zext i8 %4053 to i32
  %4055 = load i16* %mtfv_i, align 2
  %4056 = zext i16 %4055 to i64
  %4057 = load i32** %s_code_sel_selCtr, align 8
  %4058 = getelementptr inbounds i32* %4057, i64 %4056
  %4059 = load i32* %4058, align 4
  call void @bsW(%struct.EState* %4048, i32 %4054, i32 %4059)
  %4060 = load i32* %gs, align 4
  %4061 = add nsw i32 %4060, 34
  %4062 = sext i32 %4061 to i64
  %4063 = load i16** %mtfv, align 8
  %4064 = getelementptr inbounds i16* %4063, i64 %4062
  %4065 = load i16* %4064, align 2
  store i16 %4065, i16* %mtfv_i, align 2
  %4066 = load %struct.EState** %1, align 8
  %4067 = load i16* %mtfv_i, align 2
  %4068 = zext i16 %4067 to i64
  %4069 = load i8** %s_len_sel_selCtr, align 8
  %4070 = getelementptr inbounds i8* %4069, i64 %4068
  %4071 = load i8* %4070, align 1
  %4072 = zext i8 %4071 to i32
  %4073 = load i16* %mtfv_i, align 2
  %4074 = zext i16 %4073 to i64
  %4075 = load i32** %s_code_sel_selCtr, align 8
  %4076 = getelementptr inbounds i32* %4075, i64 %4074
  %4077 = load i32* %4076, align 4
  call void @bsW(%struct.EState* %4066, i32 %4072, i32 %4077)
  %4078 = load i32* %gs, align 4
  %4079 = add nsw i32 %4078, 35
  %4080 = sext i32 %4079 to i64
  %4081 = load i16** %mtfv, align 8
  %4082 = getelementptr inbounds i16* %4081, i64 %4080
  %4083 = load i16* %4082, align 2
  store i16 %4083, i16* %mtfv_i, align 2
  %4084 = load %struct.EState** %1, align 8
  %4085 = load i16* %mtfv_i, align 2
  %4086 = zext i16 %4085 to i64
  %4087 = load i8** %s_len_sel_selCtr, align 8
  %4088 = getelementptr inbounds i8* %4087, i64 %4086
  %4089 = load i8* %4088, align 1
  %4090 = zext i8 %4089 to i32
  %4091 = load i16* %mtfv_i, align 2
  %4092 = zext i16 %4091 to i64
  %4093 = load i32** %s_code_sel_selCtr, align 8
  %4094 = getelementptr inbounds i32* %4093, i64 %4092
  %4095 = load i32* %4094, align 4
  call void @bsW(%struct.EState* %4084, i32 %4090, i32 %4095)
  %4096 = load i32* %gs, align 4
  %4097 = add nsw i32 %4096, 36
  %4098 = sext i32 %4097 to i64
  %4099 = load i16** %mtfv, align 8
  %4100 = getelementptr inbounds i16* %4099, i64 %4098
  %4101 = load i16* %4100, align 2
  store i16 %4101, i16* %mtfv_i, align 2
  %4102 = load %struct.EState** %1, align 8
  %4103 = load i16* %mtfv_i, align 2
  %4104 = zext i16 %4103 to i64
  %4105 = load i8** %s_len_sel_selCtr, align 8
  %4106 = getelementptr inbounds i8* %4105, i64 %4104
  %4107 = load i8* %4106, align 1
  %4108 = zext i8 %4107 to i32
  %4109 = load i16* %mtfv_i, align 2
  %4110 = zext i16 %4109 to i64
  %4111 = load i32** %s_code_sel_selCtr, align 8
  %4112 = getelementptr inbounds i32* %4111, i64 %4110
  %4113 = load i32* %4112, align 4
  call void @bsW(%struct.EState* %4102, i32 %4108, i32 %4113)
  %4114 = load i32* %gs, align 4
  %4115 = add nsw i32 %4114, 37
  %4116 = sext i32 %4115 to i64
  %4117 = load i16** %mtfv, align 8
  %4118 = getelementptr inbounds i16* %4117, i64 %4116
  %4119 = load i16* %4118, align 2
  store i16 %4119, i16* %mtfv_i, align 2
  %4120 = load %struct.EState** %1, align 8
  %4121 = load i16* %mtfv_i, align 2
  %4122 = zext i16 %4121 to i64
  %4123 = load i8** %s_len_sel_selCtr, align 8
  %4124 = getelementptr inbounds i8* %4123, i64 %4122
  %4125 = load i8* %4124, align 1
  %4126 = zext i8 %4125 to i32
  %4127 = load i16* %mtfv_i, align 2
  %4128 = zext i16 %4127 to i64
  %4129 = load i32** %s_code_sel_selCtr, align 8
  %4130 = getelementptr inbounds i32* %4129, i64 %4128
  %4131 = load i32* %4130, align 4
  call void @bsW(%struct.EState* %4120, i32 %4126, i32 %4131)
  %4132 = load i32* %gs, align 4
  %4133 = add nsw i32 %4132, 38
  %4134 = sext i32 %4133 to i64
  %4135 = load i16** %mtfv, align 8
  %4136 = getelementptr inbounds i16* %4135, i64 %4134
  %4137 = load i16* %4136, align 2
  store i16 %4137, i16* %mtfv_i, align 2
  %4138 = load %struct.EState** %1, align 8
  %4139 = load i16* %mtfv_i, align 2
  %4140 = zext i16 %4139 to i64
  %4141 = load i8** %s_len_sel_selCtr, align 8
  %4142 = getelementptr inbounds i8* %4141, i64 %4140
  %4143 = load i8* %4142, align 1
  %4144 = zext i8 %4143 to i32
  %4145 = load i16* %mtfv_i, align 2
  %4146 = zext i16 %4145 to i64
  %4147 = load i32** %s_code_sel_selCtr, align 8
  %4148 = getelementptr inbounds i32* %4147, i64 %4146
  %4149 = load i32* %4148, align 4
  call void @bsW(%struct.EState* %4138, i32 %4144, i32 %4149)
  %4150 = load i32* %gs, align 4
  %4151 = add nsw i32 %4150, 39
  %4152 = sext i32 %4151 to i64
  %4153 = load i16** %mtfv, align 8
  %4154 = getelementptr inbounds i16* %4153, i64 %4152
  %4155 = load i16* %4154, align 2
  store i16 %4155, i16* %mtfv_i, align 2
  %4156 = load %struct.EState** %1, align 8
  %4157 = load i16* %mtfv_i, align 2
  %4158 = zext i16 %4157 to i64
  %4159 = load i8** %s_len_sel_selCtr, align 8
  %4160 = getelementptr inbounds i8* %4159, i64 %4158
  %4161 = load i8* %4160, align 1
  %4162 = zext i8 %4161 to i32
  %4163 = load i16* %mtfv_i, align 2
  %4164 = zext i16 %4163 to i64
  %4165 = load i32** %s_code_sel_selCtr, align 8
  %4166 = getelementptr inbounds i32* %4165, i64 %4164
  %4167 = load i32* %4166, align 4
  call void @bsW(%struct.EState* %4156, i32 %4162, i32 %4167)
  %4168 = load i32* %gs, align 4
  %4169 = add nsw i32 %4168, 40
  %4170 = sext i32 %4169 to i64
  %4171 = load i16** %mtfv, align 8
  %4172 = getelementptr inbounds i16* %4171, i64 %4170
  %4173 = load i16* %4172, align 2
  store i16 %4173, i16* %mtfv_i, align 2
  %4174 = load %struct.EState** %1, align 8
  %4175 = load i16* %mtfv_i, align 2
  %4176 = zext i16 %4175 to i64
  %4177 = load i8** %s_len_sel_selCtr, align 8
  %4178 = getelementptr inbounds i8* %4177, i64 %4176
  %4179 = load i8* %4178, align 1
  %4180 = zext i8 %4179 to i32
  %4181 = load i16* %mtfv_i, align 2
  %4182 = zext i16 %4181 to i64
  %4183 = load i32** %s_code_sel_selCtr, align 8
  %4184 = getelementptr inbounds i32* %4183, i64 %4182
  %4185 = load i32* %4184, align 4
  call void @bsW(%struct.EState* %4174, i32 %4180, i32 %4185)
  %4186 = load i32* %gs, align 4
  %4187 = add nsw i32 %4186, 41
  %4188 = sext i32 %4187 to i64
  %4189 = load i16** %mtfv, align 8
  %4190 = getelementptr inbounds i16* %4189, i64 %4188
  %4191 = load i16* %4190, align 2
  store i16 %4191, i16* %mtfv_i, align 2
  %4192 = load %struct.EState** %1, align 8
  %4193 = load i16* %mtfv_i, align 2
  %4194 = zext i16 %4193 to i64
  %4195 = load i8** %s_len_sel_selCtr, align 8
  %4196 = getelementptr inbounds i8* %4195, i64 %4194
  %4197 = load i8* %4196, align 1
  %4198 = zext i8 %4197 to i32
  %4199 = load i16* %mtfv_i, align 2
  %4200 = zext i16 %4199 to i64
  %4201 = load i32** %s_code_sel_selCtr, align 8
  %4202 = getelementptr inbounds i32* %4201, i64 %4200
  %4203 = load i32* %4202, align 4
  call void @bsW(%struct.EState* %4192, i32 %4198, i32 %4203)
  %4204 = load i32* %gs, align 4
  %4205 = add nsw i32 %4204, 42
  %4206 = sext i32 %4205 to i64
  %4207 = load i16** %mtfv, align 8
  %4208 = getelementptr inbounds i16* %4207, i64 %4206
  %4209 = load i16* %4208, align 2
  store i16 %4209, i16* %mtfv_i, align 2
  %4210 = load %struct.EState** %1, align 8
  %4211 = load i16* %mtfv_i, align 2
  %4212 = zext i16 %4211 to i64
  %4213 = load i8** %s_len_sel_selCtr, align 8
  %4214 = getelementptr inbounds i8* %4213, i64 %4212
  %4215 = load i8* %4214, align 1
  %4216 = zext i8 %4215 to i32
  %4217 = load i16* %mtfv_i, align 2
  %4218 = zext i16 %4217 to i64
  %4219 = load i32** %s_code_sel_selCtr, align 8
  %4220 = getelementptr inbounds i32* %4219, i64 %4218
  %4221 = load i32* %4220, align 4
  call void @bsW(%struct.EState* %4210, i32 %4216, i32 %4221)
  %4222 = load i32* %gs, align 4
  %4223 = add nsw i32 %4222, 43
  %4224 = sext i32 %4223 to i64
  %4225 = load i16** %mtfv, align 8
  %4226 = getelementptr inbounds i16* %4225, i64 %4224
  %4227 = load i16* %4226, align 2
  store i16 %4227, i16* %mtfv_i, align 2
  %4228 = load %struct.EState** %1, align 8
  %4229 = load i16* %mtfv_i, align 2
  %4230 = zext i16 %4229 to i64
  %4231 = load i8** %s_len_sel_selCtr, align 8
  %4232 = getelementptr inbounds i8* %4231, i64 %4230
  %4233 = load i8* %4232, align 1
  %4234 = zext i8 %4233 to i32
  %4235 = load i16* %mtfv_i, align 2
  %4236 = zext i16 %4235 to i64
  %4237 = load i32** %s_code_sel_selCtr, align 8
  %4238 = getelementptr inbounds i32* %4237, i64 %4236
  %4239 = load i32* %4238, align 4
  call void @bsW(%struct.EState* %4228, i32 %4234, i32 %4239)
  %4240 = load i32* %gs, align 4
  %4241 = add nsw i32 %4240, 44
  %4242 = sext i32 %4241 to i64
  %4243 = load i16** %mtfv, align 8
  %4244 = getelementptr inbounds i16* %4243, i64 %4242
  %4245 = load i16* %4244, align 2
  store i16 %4245, i16* %mtfv_i, align 2
  %4246 = load %struct.EState** %1, align 8
  %4247 = load i16* %mtfv_i, align 2
  %4248 = zext i16 %4247 to i64
  %4249 = load i8** %s_len_sel_selCtr, align 8
  %4250 = getelementptr inbounds i8* %4249, i64 %4248
  %4251 = load i8* %4250, align 1
  %4252 = zext i8 %4251 to i32
  %4253 = load i16* %mtfv_i, align 2
  %4254 = zext i16 %4253 to i64
  %4255 = load i32** %s_code_sel_selCtr, align 8
  %4256 = getelementptr inbounds i32* %4255, i64 %4254
  %4257 = load i32* %4256, align 4
  call void @bsW(%struct.EState* %4246, i32 %4252, i32 %4257)
  %4258 = load i32* %gs, align 4
  %4259 = add nsw i32 %4258, 45
  %4260 = sext i32 %4259 to i64
  %4261 = load i16** %mtfv, align 8
  %4262 = getelementptr inbounds i16* %4261, i64 %4260
  %4263 = load i16* %4262, align 2
  store i16 %4263, i16* %mtfv_i, align 2
  %4264 = load %struct.EState** %1, align 8
  %4265 = load i16* %mtfv_i, align 2
  %4266 = zext i16 %4265 to i64
  %4267 = load i8** %s_len_sel_selCtr, align 8
  %4268 = getelementptr inbounds i8* %4267, i64 %4266
  %4269 = load i8* %4268, align 1
  %4270 = zext i8 %4269 to i32
  %4271 = load i16* %mtfv_i, align 2
  %4272 = zext i16 %4271 to i64
  %4273 = load i32** %s_code_sel_selCtr, align 8
  %4274 = getelementptr inbounds i32* %4273, i64 %4272
  %4275 = load i32* %4274, align 4
  call void @bsW(%struct.EState* %4264, i32 %4270, i32 %4275)
  %4276 = load i32* %gs, align 4
  %4277 = add nsw i32 %4276, 46
  %4278 = sext i32 %4277 to i64
  %4279 = load i16** %mtfv, align 8
  %4280 = getelementptr inbounds i16* %4279, i64 %4278
  %4281 = load i16* %4280, align 2
  store i16 %4281, i16* %mtfv_i, align 2
  %4282 = load %struct.EState** %1, align 8
  %4283 = load i16* %mtfv_i, align 2
  %4284 = zext i16 %4283 to i64
  %4285 = load i8** %s_len_sel_selCtr, align 8
  %4286 = getelementptr inbounds i8* %4285, i64 %4284
  %4287 = load i8* %4286, align 1
  %4288 = zext i8 %4287 to i32
  %4289 = load i16* %mtfv_i, align 2
  %4290 = zext i16 %4289 to i64
  %4291 = load i32** %s_code_sel_selCtr, align 8
  %4292 = getelementptr inbounds i32* %4291, i64 %4290
  %4293 = load i32* %4292, align 4
  call void @bsW(%struct.EState* %4282, i32 %4288, i32 %4293)
  %4294 = load i32* %gs, align 4
  %4295 = add nsw i32 %4294, 47
  %4296 = sext i32 %4295 to i64
  %4297 = load i16** %mtfv, align 8
  %4298 = getelementptr inbounds i16* %4297, i64 %4296
  %4299 = load i16* %4298, align 2
  store i16 %4299, i16* %mtfv_i, align 2
  %4300 = load %struct.EState** %1, align 8
  %4301 = load i16* %mtfv_i, align 2
  %4302 = zext i16 %4301 to i64
  %4303 = load i8** %s_len_sel_selCtr, align 8
  %4304 = getelementptr inbounds i8* %4303, i64 %4302
  %4305 = load i8* %4304, align 1
  %4306 = zext i8 %4305 to i32
  %4307 = load i16* %mtfv_i, align 2
  %4308 = zext i16 %4307 to i64
  %4309 = load i32** %s_code_sel_selCtr, align 8
  %4310 = getelementptr inbounds i32* %4309, i64 %4308
  %4311 = load i32* %4310, align 4
  call void @bsW(%struct.EState* %4300, i32 %4306, i32 %4311)
  %4312 = load i32* %gs, align 4
  %4313 = add nsw i32 %4312, 48
  %4314 = sext i32 %4313 to i64
  %4315 = load i16** %mtfv, align 8
  %4316 = getelementptr inbounds i16* %4315, i64 %4314
  %4317 = load i16* %4316, align 2
  store i16 %4317, i16* %mtfv_i, align 2
  %4318 = load %struct.EState** %1, align 8
  %4319 = load i16* %mtfv_i, align 2
  %4320 = zext i16 %4319 to i64
  %4321 = load i8** %s_len_sel_selCtr, align 8
  %4322 = getelementptr inbounds i8* %4321, i64 %4320
  %4323 = load i8* %4322, align 1
  %4324 = zext i8 %4323 to i32
  %4325 = load i16* %mtfv_i, align 2
  %4326 = zext i16 %4325 to i64
  %4327 = load i32** %s_code_sel_selCtr, align 8
  %4328 = getelementptr inbounds i32* %4327, i64 %4326
  %4329 = load i32* %4328, align 4
  call void @bsW(%struct.EState* %4318, i32 %4324, i32 %4329)
  %4330 = load i32* %gs, align 4
  %4331 = add nsw i32 %4330, 49
  %4332 = sext i32 %4331 to i64
  %4333 = load i16** %mtfv, align 8
  %4334 = getelementptr inbounds i16* %4333, i64 %4332
  %4335 = load i16* %4334, align 2
  store i16 %4335, i16* %mtfv_i, align 2
  %4336 = load %struct.EState** %1, align 8
  %4337 = load i16* %mtfv_i, align 2
  %4338 = zext i16 %4337 to i64
  %4339 = load i8** %s_len_sel_selCtr, align 8
  %4340 = getelementptr inbounds i8* %4339, i64 %4338
  %4341 = load i8* %4340, align 1
  %4342 = zext i8 %4341 to i32
  %4343 = load i16* %mtfv_i, align 2
  %4344 = zext i16 %4343 to i64
  %4345 = load i32** %s_code_sel_selCtr, align 8
  %4346 = getelementptr inbounds i32* %4345, i64 %4344
  %4347 = load i32* %4346, align 4
  call void @bsW(%struct.EState* %4336, i32 %4342, i32 %4347)
  br label %4397

; <label>:4348                                    ; preds = %3419, %3416
  %4349 = load i32* %gs, align 4
  store i32 %4349, i32* %i, align 4
  br label %4350

; <label>:4350                                    ; preds = %4393, %4348
  %4351 = load i32* %i, align 4
  %4352 = load i32* %ge, align 4
  %4353 = icmp sle i32 %4351, %4352
  br i1 %4353, label %4354, label %4396

; <label>:4354                                    ; preds = %4350
  %4355 = load %struct.EState** %1, align 8
  %4356 = load i32* %i, align 4
  %4357 = sext i32 %4356 to i64
  %4358 = load i16** %mtfv, align 8
  %4359 = getelementptr inbounds i16* %4358, i64 %4357
  %4360 = load i16* %4359, align 2
  %4361 = zext i16 %4360 to i64
  %4362 = load i32* %selCtr, align 4
  %4363 = sext i32 %4362 to i64
  %4364 = load %struct.EState** %1, align 8
  %4365 = getelementptr inbounds %struct.EState* %4364, i32 0, i32 33
  %4366 = getelementptr inbounds [18002 x i8]* %4365, i32 0, i64 %4363
  %4367 = load i8* %4366, align 1
  %4368 = zext i8 %4367 to i64
  %4369 = load %struct.EState** %1, align 8
  %4370 = getelementptr inbounds %struct.EState* %4369, i32 0, i32 35
  %4371 = getelementptr inbounds [6 x [258 x i8]]* %4370, i32 0, i64 %4368
  %4372 = getelementptr inbounds [258 x i8]* %4371, i32 0, i64 %4361
  %4373 = load i8* %4372, align 1
  %4374 = zext i8 %4373 to i32
  %4375 = load i32* %i, align 4
  %4376 = sext i32 %4375 to i64
  %4377 = load i16** %mtfv, align 8
  %4378 = getelementptr inbounds i16* %4377, i64 %4376
  %4379 = load i16* %4378, align 2
  %4380 = zext i16 %4379 to i64
  %4381 = load i32* %selCtr, align 4
  %4382 = sext i32 %4381 to i64
  %4383 = load %struct.EState** %1, align 8
  %4384 = getelementptr inbounds %struct.EState* %4383, i32 0, i32 33
  %4385 = getelementptr inbounds [18002 x i8]* %4384, i32 0, i64 %4382
  %4386 = load i8* %4385, align 1
  %4387 = zext i8 %4386 to i64
  %4388 = load %struct.EState** %1, align 8
  %4389 = getelementptr inbounds %struct.EState* %4388, i32 0, i32 36
  %4390 = getelementptr inbounds [6 x [258 x i32]]* %4389, i32 0, i64 %4387
  %4391 = getelementptr inbounds [258 x i32]* %4390, i32 0, i64 %4380
  %4392 = load i32* %4391, align 4
  call void @bsW(%struct.EState* %4355, i32 %4374, i32 %4392)
  br label %4393

; <label>:4393                                    ; preds = %4354
  %4394 = load i32* %i, align 4
  %4395 = add nsw i32 %4394, 1
  store i32 %4395, i32* %i, align 4
  br label %4350

; <label>:4396                                    ; preds = %4350
  br label %4397

; <label>:4397                                    ; preds = %4396, %3425
  %4398 = load i32* %ge, align 4
  %4399 = add nsw i32 %4398, 1
  store i32 %4399, i32* %gs, align 4
  %4400 = load i32* %selCtr, align 4
  %4401 = add nsw i32 %4400, 1
  store i32 %4401, i32* %selCtr, align 4
  br label %3384

; <label>:4402                                    ; preds = %3390
  %4403 = load i32* %selCtr, align 4
  %4404 = load i32* %nSelectors, align 4
  %4405 = icmp eq i32 %4403, %4404
  br i1 %4405, label %4407, label %4406

; <label>:4406                                    ; preds = %4402
  call void @BZ2_bz__AssertH__fail(i32 3007)
  br label %4407

; <label>:4407                                    ; preds = %4406, %4402
  %4408 = load %struct.EState** %1, align 8
  %4409 = getelementptr inbounds %struct.EState* %4408, i32 0, i32 28
  %4410 = load i32* %4409, align 4
  %4411 = icmp sge i32 %4410, 3
  br i1 %4411, label %4412, label %4420

; <label>:4412                                    ; preds = %4407
  %4413 = load %struct._IO_FILE** @stderr, align 8
  %4414 = load %struct.EState** %1, align 8
  %4415 = getelementptr inbounds %struct.EState* %4414, i32 0, i32 19
  %4416 = load i32* %4415, align 4
  %4417 = load i32* %nBytes, align 4
  %4418 = sub nsw i32 %4416, %4417
  %4419 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4413, i8* getelementptr inbounds ([10 x i8]* @.str138, i32 0, i32 0), i32 %4418)
  br label %4420

; <label>:4420                                    ; preds = %4412, %4407
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @bsFinishWrite(%struct.EState* %s) #0 {
  %1 = alloca %struct.EState*, align 8
  store %struct.EState* %s, %struct.EState** %1, align 8
  br label %2

; <label>:2                                       ; preds = %7, %0
  %3 = load %struct.EState** %1, align 8
  %4 = getelementptr inbounds %struct.EState* %3, i32 0, i32 25
  %5 = load i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %33

; <label>:7                                       ; preds = %2
  %8 = load %struct.EState** %1, align 8
  %9 = getelementptr inbounds %struct.EState* %8, i32 0, i32 24
  %10 = load i32* %9, align 4
  %11 = lshr i32 %10, 24
  %12 = trunc i32 %11 to i8
  %13 = load %struct.EState** %1, align 8
  %14 = getelementptr inbounds %struct.EState* %13, i32 0, i32 19
  %15 = load i32* %14, align 4
  %16 = sext i32 %15 to i64
  %17 = load %struct.EState** %1, align 8
  %18 = getelementptr inbounds %struct.EState* %17, i32 0, i32 11
  %19 = load i8** %18, align 8
  %20 = getelementptr inbounds i8* %19, i64 %16
  store i8 %12, i8* %20, align 1
  %21 = load %struct.EState** %1, align 8
  %22 = getelementptr inbounds %struct.EState* %21, i32 0, i32 19
  %23 = load i32* %22, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %22, align 4
  %25 = load %struct.EState** %1, align 8
  %26 = getelementptr inbounds %struct.EState* %25, i32 0, i32 24
  %27 = load i32* %26, align 4
  %28 = shl i32 %27, 8
  store i32 %28, i32* %26, align 4
  %29 = load %struct.EState** %1, align 8
  %30 = getelementptr inbounds %struct.EState* %29, i32 0, i32 25
  %31 = load i32* %30, align 4
  %32 = sub nsw i32 %31, 8
  store i32 %32, i32* %30, align 4
  br label %2

; <label>:33                                      ; preds = %2
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_decompress(%struct.DState* %s) #0 {
  %1 = alloca %struct.DState*, align 8
  %uc = alloca i8, align 1
  %retVal = alloca i32, align 4
  %minLen = alloca i32, align 4
  %maxLen = alloca i32, align 4
  %strm = alloca %struct.bz_stream*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %t = alloca i32, align 4
  %alphaSize = alloca i32, align 4
  %nGroups = alloca i32, align 4
  %nSelectors = alloca i32, align 4
  %EOB = alloca i32, align 4
  %groupNo = alloca i32, align 4
  %groupPos = alloca i32, align 4
  %nextSym = alloca i32, align 4
  %nblockMAX = alloca i32, align 4
  %nblock = alloca i32, align 4
  %es = alloca i32, align 4
  %N = alloca i32, align 4
  %curr = alloca i32, align 4
  %zt = alloca i32, align 4
  %zn = alloca i32, align 4
  %zvec = alloca i32, align 4
  %zj = alloca i32, align 4
  %gSel = alloca i32, align 4
  %gMinlen = alloca i32, align 4
  %gLimit = alloca i32*, align 8
  %gBase = alloca i32*, align 8
  %gPerm = alloca i32*, align 8
  %v = alloca i32, align 4
  %v1 = alloca i32, align 4
  %v2 = alloca i32, align 4
  %v3 = alloca i32, align 4
  %v4 = alloca i32, align 4
  %v5 = alloca i32, align 4
  %v6 = alloca i32, align 4
  %v7 = alloca i32, align 4
  %v8 = alloca i32, align 4
  %v9 = alloca i32, align 4
  %v10 = alloca i32, align 4
  %v11 = alloca i32, align 4
  %v12 = alloca i32, align 4
  %v13 = alloca i32, align 4
  %v14 = alloca i32, align 4
  %v15 = alloca i32, align 4
  %v16 = alloca i32, align 4
  %v17 = alloca i32, align 4
  %v18 = alloca i32, align 4
  %v19 = alloca i32, align 4
  %v20 = alloca i32, align 4
  %v21 = alloca i32, align 4
  %v22 = alloca i32, align 4
  %pos = alloca [6 x i8], align 1
  %tmp = alloca i8, align 1
  %v23 = alloca i8, align 1
  %v24 = alloca i32, align 4
  %v25 = alloca i32, align 4
  %v26 = alloca i32, align 4
  %ii = alloca i32, align 4
  %jj = alloca i32, align 4
  %kk = alloca i32, align 4
  %v27 = alloca i32, align 4
  %v28 = alloca i32, align 4
  %v29 = alloca i32, align 4
  %v30 = alloca i32, align 4
  %ii31 = alloca i32, align 4
  %jj32 = alloca i32, align 4
  %kk33 = alloca i32, align 4
  %pp = alloca i32, align 4
  %lno = alloca i32, align 4
  %off = alloca i32, align 4
  %nn = alloca i32, align 4
  %z = alloca i32, align 4
  %v34 = alloca i32, align 4
  %v35 = alloca i32, align 4
  %tmp36 = alloca i32, align 4
  %v37 = alloca i32, align 4
  %v38 = alloca i32, align 4
  %v39 = alloca i32, align 4
  %v40 = alloca i32, align 4
  %v41 = alloca i32, align 4
  %v42 = alloca i32, align 4
  %v43 = alloca i32, align 4
  %v44 = alloca i32, align 4
  %v45 = alloca i32, align 4
  store %struct.DState* %s, %struct.DState** %1, align 8
  %2 = load %struct.DState** %1, align 8
  %3 = getelementptr inbounds %struct.DState* %2, i32 0, i32 0
  %4 = load %struct.bz_stream** %3, align 8
  store %struct.bz_stream* %4, %struct.bz_stream** %strm, align 8
  %5 = load %struct.DState** %1, align 8
  %6 = getelementptr inbounds %struct.DState* %5, i32 0, i32 1
  %7 = load i32* %6, align 4
  %8 = icmp eq i32 %7, 10
  br i1 %8, label %9, label %58

; <label>:9                                       ; preds = %0
  %10 = load %struct.DState** %1, align 8
  %11 = getelementptr inbounds %struct.DState* %10, i32 0, i32 40
  store i32 0, i32* %11, align 4
  %12 = load %struct.DState** %1, align 8
  %13 = getelementptr inbounds %struct.DState* %12, i32 0, i32 41
  store i32 0, i32* %13, align 4
  %14 = load %struct.DState** %1, align 8
  %15 = getelementptr inbounds %struct.DState* %14, i32 0, i32 42
  store i32 0, i32* %15, align 4
  %16 = load %struct.DState** %1, align 8
  %17 = getelementptr inbounds %struct.DState* %16, i32 0, i32 43
  store i32 0, i32* %17, align 4
  %18 = load %struct.DState** %1, align 8
  %19 = getelementptr inbounds %struct.DState* %18, i32 0, i32 44
  store i32 0, i32* %19, align 4
  %20 = load %struct.DState** %1, align 8
  %21 = getelementptr inbounds %struct.DState* %20, i32 0, i32 45
  store i32 0, i32* %21, align 4
  %22 = load %struct.DState** %1, align 8
  %23 = getelementptr inbounds %struct.DState* %22, i32 0, i32 46
  store i32 0, i32* %23, align 4
  %24 = load %struct.DState** %1, align 8
  %25 = getelementptr inbounds %struct.DState* %24, i32 0, i32 47
  store i32 0, i32* %25, align 4
  %26 = load %struct.DState** %1, align 8
  %27 = getelementptr inbounds %struct.DState* %26, i32 0, i32 48
  store i32 0, i32* %27, align 4
  %28 = load %struct.DState** %1, align 8
  %29 = getelementptr inbounds %struct.DState* %28, i32 0, i32 49
  store i32 0, i32* %29, align 4
  %30 = load %struct.DState** %1, align 8
  %31 = getelementptr inbounds %struct.DState* %30, i32 0, i32 50
  store i32 0, i32* %31, align 4
  %32 = load %struct.DState** %1, align 8
  %33 = getelementptr inbounds %struct.DState* %32, i32 0, i32 51
  store i32 0, i32* %33, align 4
  %34 = load %struct.DState** %1, align 8
  %35 = getelementptr inbounds %struct.DState* %34, i32 0, i32 52
  store i32 0, i32* %35, align 4
  %36 = load %struct.DState** %1, align 8
  %37 = getelementptr inbounds %struct.DState* %36, i32 0, i32 53
  store i32 0, i32* %37, align 4
  %38 = load %struct.DState** %1, align 8
  %39 = getelementptr inbounds %struct.DState* %38, i32 0, i32 54
  store i32 0, i32* %39, align 4
  %40 = load %struct.DState** %1, align 8
  %41 = getelementptr inbounds %struct.DState* %40, i32 0, i32 55
  store i32 0, i32* %41, align 4
  %42 = load %struct.DState** %1, align 8
  %43 = getelementptr inbounds %struct.DState* %42, i32 0, i32 56
  store i32 0, i32* %43, align 4
  %44 = load %struct.DState** %1, align 8
  %45 = getelementptr inbounds %struct.DState* %44, i32 0, i32 57
  store i32 0, i32* %45, align 4
  %46 = load %struct.DState** %1, align 8
  %47 = getelementptr inbounds %struct.DState* %46, i32 0, i32 58
  store i32 0, i32* %47, align 4
  %48 = load %struct.DState** %1, align 8
  %49 = getelementptr inbounds %struct.DState* %48, i32 0, i32 59
  store i32 0, i32* %49, align 4
  %50 = load %struct.DState** %1, align 8
  %51 = getelementptr inbounds %struct.DState* %50, i32 0, i32 60
  store i32 0, i32* %51, align 4
  %52 = load %struct.DState** %1, align 8
  %53 = getelementptr inbounds %struct.DState* %52, i32 0, i32 61
  store i32* null, i32** %53, align 8
  %54 = load %struct.DState** %1, align 8
  %55 = getelementptr inbounds %struct.DState* %54, i32 0, i32 62
  store i32* null, i32** %55, align 8
  %56 = load %struct.DState** %1, align 8
  %57 = getelementptr inbounds %struct.DState* %56, i32 0, i32 63
  store i32* null, i32** %57, align 8
  br label %58

; <label>:58                                      ; preds = %9, %0
  %59 = load %struct.DState** %1, align 8
  %60 = getelementptr inbounds %struct.DState* %59, i32 0, i32 40
  %61 = load i32* %60, align 4
  store i32 %61, i32* %i, align 4
  %62 = load %struct.DState** %1, align 8
  %63 = getelementptr inbounds %struct.DState* %62, i32 0, i32 41
  %64 = load i32* %63, align 4
  store i32 %64, i32* %j, align 4
  %65 = load %struct.DState** %1, align 8
  %66 = getelementptr inbounds %struct.DState* %65, i32 0, i32 42
  %67 = load i32* %66, align 4
  store i32 %67, i32* %t, align 4
  %68 = load %struct.DState** %1, align 8
  %69 = getelementptr inbounds %struct.DState* %68, i32 0, i32 43
  %70 = load i32* %69, align 4
  store i32 %70, i32* %alphaSize, align 4
  %71 = load %struct.DState** %1, align 8
  %72 = getelementptr inbounds %struct.DState* %71, i32 0, i32 44
  %73 = load i32* %72, align 4
  store i32 %73, i32* %nGroups, align 4
  %74 = load %struct.DState** %1, align 8
  %75 = getelementptr inbounds %struct.DState* %74, i32 0, i32 45
  %76 = load i32* %75, align 4
  store i32 %76, i32* %nSelectors, align 4
  %77 = load %struct.DState** %1, align 8
  %78 = getelementptr inbounds %struct.DState* %77, i32 0, i32 46
  %79 = load i32* %78, align 4
  store i32 %79, i32* %EOB, align 4
  %80 = load %struct.DState** %1, align 8
  %81 = getelementptr inbounds %struct.DState* %80, i32 0, i32 47
  %82 = load i32* %81, align 4
  store i32 %82, i32* %groupNo, align 4
  %83 = load %struct.DState** %1, align 8
  %84 = getelementptr inbounds %struct.DState* %83, i32 0, i32 48
  %85 = load i32* %84, align 4
  store i32 %85, i32* %groupPos, align 4
  %86 = load %struct.DState** %1, align 8
  %87 = getelementptr inbounds %struct.DState* %86, i32 0, i32 49
  %88 = load i32* %87, align 4
  store i32 %88, i32* %nextSym, align 4
  %89 = load %struct.DState** %1, align 8
  %90 = getelementptr inbounds %struct.DState* %89, i32 0, i32 50
  %91 = load i32* %90, align 4
  store i32 %91, i32* %nblockMAX, align 4
  %92 = load %struct.DState** %1, align 8
  %93 = getelementptr inbounds %struct.DState* %92, i32 0, i32 51
  %94 = load i32* %93, align 4
  store i32 %94, i32* %nblock, align 4
  %95 = load %struct.DState** %1, align 8
  %96 = getelementptr inbounds %struct.DState* %95, i32 0, i32 52
  %97 = load i32* %96, align 4
  store i32 %97, i32* %es, align 4
  %98 = load %struct.DState** %1, align 8
  %99 = getelementptr inbounds %struct.DState* %98, i32 0, i32 53
  %100 = load i32* %99, align 4
  store i32 %100, i32* %N, align 4
  %101 = load %struct.DState** %1, align 8
  %102 = getelementptr inbounds %struct.DState* %101, i32 0, i32 54
  %103 = load i32* %102, align 4
  store i32 %103, i32* %curr, align 4
  %104 = load %struct.DState** %1, align 8
  %105 = getelementptr inbounds %struct.DState* %104, i32 0, i32 55
  %106 = load i32* %105, align 4
  store i32 %106, i32* %zt, align 4
  %107 = load %struct.DState** %1, align 8
  %108 = getelementptr inbounds %struct.DState* %107, i32 0, i32 56
  %109 = load i32* %108, align 4
  store i32 %109, i32* %zn, align 4
  %110 = load %struct.DState** %1, align 8
  %111 = getelementptr inbounds %struct.DState* %110, i32 0, i32 57
  %112 = load i32* %111, align 4
  store i32 %112, i32* %zvec, align 4
  %113 = load %struct.DState** %1, align 8
  %114 = getelementptr inbounds %struct.DState* %113, i32 0, i32 58
  %115 = load i32* %114, align 4
  store i32 %115, i32* %zj, align 4
  %116 = load %struct.DState** %1, align 8
  %117 = getelementptr inbounds %struct.DState* %116, i32 0, i32 59
  %118 = load i32* %117, align 4
  store i32 %118, i32* %gSel, align 4
  %119 = load %struct.DState** %1, align 8
  %120 = getelementptr inbounds %struct.DState* %119, i32 0, i32 60
  %121 = load i32* %120, align 4
  store i32 %121, i32* %gMinlen, align 4
  %122 = load %struct.DState** %1, align 8
  %123 = getelementptr inbounds %struct.DState* %122, i32 0, i32 61
  %124 = load i32** %123, align 8
  store i32* %124, i32** %gLimit, align 8
  %125 = load %struct.DState** %1, align 8
  %126 = getelementptr inbounds %struct.DState* %125, i32 0, i32 62
  %127 = load i32** %126, align 8
  store i32* %127, i32** %gBase, align 8
  %128 = load %struct.DState** %1, align 8
  %129 = getelementptr inbounds %struct.DState* %128, i32 0, i32 63
  %130 = load i32** %129, align 8
  store i32* %130, i32** %gPerm, align 8
  store i32 0, i32* %retVal, align 4
  %131 = load %struct.DState** %1, align 8
  %132 = getelementptr inbounds %struct.DState* %131, i32 0, i32 1
  %133 = load i32* %132, align 4
  switch i32 %133, label %5627 [
    i32 10, label %134
    i32 11, label %223
    i32 12, label %312
    i32 13, label %401
    i32 14, label %577
    i32 15, label %671
    i32 16, label %760
    i32 17, label %849
    i32 18, label %938
    i32 19, label %1027
    i32 20, label %1133
    i32 21, label %1226
    i32 22, label %1319
    i32 23, label %1412
    i32 24, label %1505
    i32 25, label %1593
    i32 26, label %1686
    i32 27, label %1779
    i32 28, label %1893
    i32 29, label %2026
    i32 30, label %2143
    i32 31, label %2233
    i32 32, label %2326
    i32 33, label %2497
    i32 34, label %2593
    i32 35, label %2682
    i32 36, label %2995
    i32 37, label %3100
    i32 38, label %3295
    i32 39, label %3400
    i32 40, label %3961
    i32 41, label %4066
    i32 42, label %4806
    i32 43, label %4895
    i32 44, label %4984
    i32 45, label %5073
    i32 46, label %5162
    i32 47, label %5253
    i32 48, label %5346
    i32 49, label %5439
    i32 50, label %5532
  ]

; <label>:134                                     ; preds = %58
  %135 = load %struct.DState** %1, align 8
  %136 = getelementptr inbounds %struct.DState* %135, i32 0, i32 1
  store i32 10, i32* %136, align 4
  br label %137

; <label>:137                                     ; preds = %134, %216
  %138 = load %struct.DState** %1, align 8
  %139 = getelementptr inbounds %struct.DState* %138, i32 0, i32 8
  %140 = load i32* %139, align 4
  %141 = icmp sge i32 %140, 8
  br i1 %141, label %142, label %158

; <label>:142                                     ; preds = %137
  %143 = load %struct.DState** %1, align 8
  %144 = getelementptr inbounds %struct.DState* %143, i32 0, i32 7
  %145 = load i32* %144, align 4
  %146 = load %struct.DState** %1, align 8
  %147 = getelementptr inbounds %struct.DState* %146, i32 0, i32 8
  %148 = load i32* %147, align 4
  %149 = sub nsw i32 %148, 8
  %150 = lshr i32 %145, %149
  %151 = and i32 %150, 255
  store i32 %151, i32* %v, align 4
  %152 = load %struct.DState** %1, align 8
  %153 = getelementptr inbounds %struct.DState* %152, i32 0, i32 8
  %154 = load i32* %153, align 4
  %155 = sub nsw i32 %154, 8
  store i32 %155, i32* %153, align 4
  %156 = load i32* %v, align 4
  %157 = trunc i32 %156 to i8
  store i8 %157, i8* %uc, align 1
  br label %217

; <label>:158                                     ; preds = %137
  %159 = load %struct.DState** %1, align 8
  %160 = getelementptr inbounds %struct.DState* %159, i32 0, i32 0
  %161 = load %struct.bz_stream** %160, align 8
  %162 = getelementptr inbounds %struct.bz_stream* %161, i32 0, i32 1
  %163 = load i32* %162, align 4
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %166

; <label>:165                                     ; preds = %158
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:166                                     ; preds = %158
  %167 = load %struct.DState** %1, align 8
  %168 = getelementptr inbounds %struct.DState* %167, i32 0, i32 7
  %169 = load i32* %168, align 4
  %170 = shl i32 %169, 8
  %171 = load %struct.DState** %1, align 8
  %172 = getelementptr inbounds %struct.DState* %171, i32 0, i32 0
  %173 = load %struct.bz_stream** %172, align 8
  %174 = getelementptr inbounds %struct.bz_stream* %173, i32 0, i32 0
  %175 = load i8** %174, align 8
  %176 = load i8* %175, align 1
  %177 = zext i8 %176 to i32
  %178 = or i32 %170, %177
  %179 = load %struct.DState** %1, align 8
  %180 = getelementptr inbounds %struct.DState* %179, i32 0, i32 7
  store i32 %178, i32* %180, align 4
  %181 = load %struct.DState** %1, align 8
  %182 = getelementptr inbounds %struct.DState* %181, i32 0, i32 8
  %183 = load i32* %182, align 4
  %184 = add nsw i32 %183, 8
  store i32 %184, i32* %182, align 4
  %185 = load %struct.DState** %1, align 8
  %186 = getelementptr inbounds %struct.DState* %185, i32 0, i32 0
  %187 = load %struct.bz_stream** %186, align 8
  %188 = getelementptr inbounds %struct.bz_stream* %187, i32 0, i32 0
  %189 = load i8** %188, align 8
  %190 = getelementptr inbounds i8* %189, i32 1
  store i8* %190, i8** %188, align 8
  %191 = load %struct.DState** %1, align 8
  %192 = getelementptr inbounds %struct.DState* %191, i32 0, i32 0
  %193 = load %struct.bz_stream** %192, align 8
  %194 = getelementptr inbounds %struct.bz_stream* %193, i32 0, i32 1
  %195 = load i32* %194, align 4
  %196 = add i32 %195, -1
  store i32 %196, i32* %194, align 4
  %197 = load %struct.DState** %1, align 8
  %198 = getelementptr inbounds %struct.DState* %197, i32 0, i32 0
  %199 = load %struct.bz_stream** %198, align 8
  %200 = getelementptr inbounds %struct.bz_stream* %199, i32 0, i32 2
  %201 = load i32* %200, align 4
  %202 = add i32 %201, 1
  store i32 %202, i32* %200, align 4
  %203 = load %struct.DState** %1, align 8
  %204 = getelementptr inbounds %struct.DState* %203, i32 0, i32 0
  %205 = load %struct.bz_stream** %204, align 8
  %206 = getelementptr inbounds %struct.bz_stream* %205, i32 0, i32 2
  %207 = load i32* %206, align 4
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %216

; <label>:209                                     ; preds = %166
  %210 = load %struct.DState** %1, align 8
  %211 = getelementptr inbounds %struct.DState* %210, i32 0, i32 0
  %212 = load %struct.bz_stream** %211, align 8
  %213 = getelementptr inbounds %struct.bz_stream* %212, i32 0, i32 3
  %214 = load i32* %213, align 4
  %215 = add i32 %214, 1
  store i32 %215, i32* %213, align 4
  br label %216

; <label>:216                                     ; preds = %209, %166
  br label %137

; <label>:217                                     ; preds = %142
  %218 = load i8* %uc, align 1
  %219 = zext i8 %218 to i32
  %220 = icmp ne i32 %219, 66
  br i1 %220, label %221, label %222

; <label>:221                                     ; preds = %217
  store i32 -5, i32* %retVal, align 4
  br label %5629

; <label>:222                                     ; preds = %217
  br label %223

; <label>:223                                     ; preds = %58, %222
  %224 = load %struct.DState** %1, align 8
  %225 = getelementptr inbounds %struct.DState* %224, i32 0, i32 1
  store i32 11, i32* %225, align 4
  br label %226

; <label>:226                                     ; preds = %223, %305
  %227 = load %struct.DState** %1, align 8
  %228 = getelementptr inbounds %struct.DState* %227, i32 0, i32 8
  %229 = load i32* %228, align 4
  %230 = icmp sge i32 %229, 8
  br i1 %230, label %231, label %247

; <label>:231                                     ; preds = %226
  %232 = load %struct.DState** %1, align 8
  %233 = getelementptr inbounds %struct.DState* %232, i32 0, i32 7
  %234 = load i32* %233, align 4
  %235 = load %struct.DState** %1, align 8
  %236 = getelementptr inbounds %struct.DState* %235, i32 0, i32 8
  %237 = load i32* %236, align 4
  %238 = sub nsw i32 %237, 8
  %239 = lshr i32 %234, %238
  %240 = and i32 %239, 255
  store i32 %240, i32* %v1, align 4
  %241 = load %struct.DState** %1, align 8
  %242 = getelementptr inbounds %struct.DState* %241, i32 0, i32 8
  %243 = load i32* %242, align 4
  %244 = sub nsw i32 %243, 8
  store i32 %244, i32* %242, align 4
  %245 = load i32* %v1, align 4
  %246 = trunc i32 %245 to i8
  store i8 %246, i8* %uc, align 1
  br label %306

; <label>:247                                     ; preds = %226
  %248 = load %struct.DState** %1, align 8
  %249 = getelementptr inbounds %struct.DState* %248, i32 0, i32 0
  %250 = load %struct.bz_stream** %249, align 8
  %251 = getelementptr inbounds %struct.bz_stream* %250, i32 0, i32 1
  %252 = load i32* %251, align 4
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %255

; <label>:254                                     ; preds = %247
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:255                                     ; preds = %247
  %256 = load %struct.DState** %1, align 8
  %257 = getelementptr inbounds %struct.DState* %256, i32 0, i32 7
  %258 = load i32* %257, align 4
  %259 = shl i32 %258, 8
  %260 = load %struct.DState** %1, align 8
  %261 = getelementptr inbounds %struct.DState* %260, i32 0, i32 0
  %262 = load %struct.bz_stream** %261, align 8
  %263 = getelementptr inbounds %struct.bz_stream* %262, i32 0, i32 0
  %264 = load i8** %263, align 8
  %265 = load i8* %264, align 1
  %266 = zext i8 %265 to i32
  %267 = or i32 %259, %266
  %268 = load %struct.DState** %1, align 8
  %269 = getelementptr inbounds %struct.DState* %268, i32 0, i32 7
  store i32 %267, i32* %269, align 4
  %270 = load %struct.DState** %1, align 8
  %271 = getelementptr inbounds %struct.DState* %270, i32 0, i32 8
  %272 = load i32* %271, align 4
  %273 = add nsw i32 %272, 8
  store i32 %273, i32* %271, align 4
  %274 = load %struct.DState** %1, align 8
  %275 = getelementptr inbounds %struct.DState* %274, i32 0, i32 0
  %276 = load %struct.bz_stream** %275, align 8
  %277 = getelementptr inbounds %struct.bz_stream* %276, i32 0, i32 0
  %278 = load i8** %277, align 8
  %279 = getelementptr inbounds i8* %278, i32 1
  store i8* %279, i8** %277, align 8
  %280 = load %struct.DState** %1, align 8
  %281 = getelementptr inbounds %struct.DState* %280, i32 0, i32 0
  %282 = load %struct.bz_stream** %281, align 8
  %283 = getelementptr inbounds %struct.bz_stream* %282, i32 0, i32 1
  %284 = load i32* %283, align 4
  %285 = add i32 %284, -1
  store i32 %285, i32* %283, align 4
  %286 = load %struct.DState** %1, align 8
  %287 = getelementptr inbounds %struct.DState* %286, i32 0, i32 0
  %288 = load %struct.bz_stream** %287, align 8
  %289 = getelementptr inbounds %struct.bz_stream* %288, i32 0, i32 2
  %290 = load i32* %289, align 4
  %291 = add i32 %290, 1
  store i32 %291, i32* %289, align 4
  %292 = load %struct.DState** %1, align 8
  %293 = getelementptr inbounds %struct.DState* %292, i32 0, i32 0
  %294 = load %struct.bz_stream** %293, align 8
  %295 = getelementptr inbounds %struct.bz_stream* %294, i32 0, i32 2
  %296 = load i32* %295, align 4
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %305

; <label>:298                                     ; preds = %255
  %299 = load %struct.DState** %1, align 8
  %300 = getelementptr inbounds %struct.DState* %299, i32 0, i32 0
  %301 = load %struct.bz_stream** %300, align 8
  %302 = getelementptr inbounds %struct.bz_stream* %301, i32 0, i32 3
  %303 = load i32* %302, align 4
  %304 = add i32 %303, 1
  store i32 %304, i32* %302, align 4
  br label %305

; <label>:305                                     ; preds = %298, %255
  br label %226

; <label>:306                                     ; preds = %231
  %307 = load i8* %uc, align 1
  %308 = zext i8 %307 to i32
  %309 = icmp ne i32 %308, 90
  br i1 %309, label %310, label %311

; <label>:310                                     ; preds = %306
  store i32 -5, i32* %retVal, align 4
  br label %5629

; <label>:311                                     ; preds = %306
  br label %312

; <label>:312                                     ; preds = %58, %311
  %313 = load %struct.DState** %1, align 8
  %314 = getelementptr inbounds %struct.DState* %313, i32 0, i32 1
  store i32 12, i32* %314, align 4
  br label %315

; <label>:315                                     ; preds = %312, %394
  %316 = load %struct.DState** %1, align 8
  %317 = getelementptr inbounds %struct.DState* %316, i32 0, i32 8
  %318 = load i32* %317, align 4
  %319 = icmp sge i32 %318, 8
  br i1 %319, label %320, label %336

; <label>:320                                     ; preds = %315
  %321 = load %struct.DState** %1, align 8
  %322 = getelementptr inbounds %struct.DState* %321, i32 0, i32 7
  %323 = load i32* %322, align 4
  %324 = load %struct.DState** %1, align 8
  %325 = getelementptr inbounds %struct.DState* %324, i32 0, i32 8
  %326 = load i32* %325, align 4
  %327 = sub nsw i32 %326, 8
  %328 = lshr i32 %323, %327
  %329 = and i32 %328, 255
  store i32 %329, i32* %v2, align 4
  %330 = load %struct.DState** %1, align 8
  %331 = getelementptr inbounds %struct.DState* %330, i32 0, i32 8
  %332 = load i32* %331, align 4
  %333 = sub nsw i32 %332, 8
  store i32 %333, i32* %331, align 4
  %334 = load i32* %v2, align 4
  %335 = trunc i32 %334 to i8
  store i8 %335, i8* %uc, align 1
  br label %395

; <label>:336                                     ; preds = %315
  %337 = load %struct.DState** %1, align 8
  %338 = getelementptr inbounds %struct.DState* %337, i32 0, i32 0
  %339 = load %struct.bz_stream** %338, align 8
  %340 = getelementptr inbounds %struct.bz_stream* %339, i32 0, i32 1
  %341 = load i32* %340, align 4
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

; <label>:343                                     ; preds = %336
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:344                                     ; preds = %336
  %345 = load %struct.DState** %1, align 8
  %346 = getelementptr inbounds %struct.DState* %345, i32 0, i32 7
  %347 = load i32* %346, align 4
  %348 = shl i32 %347, 8
  %349 = load %struct.DState** %1, align 8
  %350 = getelementptr inbounds %struct.DState* %349, i32 0, i32 0
  %351 = load %struct.bz_stream** %350, align 8
  %352 = getelementptr inbounds %struct.bz_stream* %351, i32 0, i32 0
  %353 = load i8** %352, align 8
  %354 = load i8* %353, align 1
  %355 = zext i8 %354 to i32
  %356 = or i32 %348, %355
  %357 = load %struct.DState** %1, align 8
  %358 = getelementptr inbounds %struct.DState* %357, i32 0, i32 7
  store i32 %356, i32* %358, align 4
  %359 = load %struct.DState** %1, align 8
  %360 = getelementptr inbounds %struct.DState* %359, i32 0, i32 8
  %361 = load i32* %360, align 4
  %362 = add nsw i32 %361, 8
  store i32 %362, i32* %360, align 4
  %363 = load %struct.DState** %1, align 8
  %364 = getelementptr inbounds %struct.DState* %363, i32 0, i32 0
  %365 = load %struct.bz_stream** %364, align 8
  %366 = getelementptr inbounds %struct.bz_stream* %365, i32 0, i32 0
  %367 = load i8** %366, align 8
  %368 = getelementptr inbounds i8* %367, i32 1
  store i8* %368, i8** %366, align 8
  %369 = load %struct.DState** %1, align 8
  %370 = getelementptr inbounds %struct.DState* %369, i32 0, i32 0
  %371 = load %struct.bz_stream** %370, align 8
  %372 = getelementptr inbounds %struct.bz_stream* %371, i32 0, i32 1
  %373 = load i32* %372, align 4
  %374 = add i32 %373, -1
  store i32 %374, i32* %372, align 4
  %375 = load %struct.DState** %1, align 8
  %376 = getelementptr inbounds %struct.DState* %375, i32 0, i32 0
  %377 = load %struct.bz_stream** %376, align 8
  %378 = getelementptr inbounds %struct.bz_stream* %377, i32 0, i32 2
  %379 = load i32* %378, align 4
  %380 = add i32 %379, 1
  store i32 %380, i32* %378, align 4
  %381 = load %struct.DState** %1, align 8
  %382 = getelementptr inbounds %struct.DState* %381, i32 0, i32 0
  %383 = load %struct.bz_stream** %382, align 8
  %384 = getelementptr inbounds %struct.bz_stream* %383, i32 0, i32 2
  %385 = load i32* %384, align 4
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %387, label %394

; <label>:387                                     ; preds = %344
  %388 = load %struct.DState** %1, align 8
  %389 = getelementptr inbounds %struct.DState* %388, i32 0, i32 0
  %390 = load %struct.bz_stream** %389, align 8
  %391 = getelementptr inbounds %struct.bz_stream* %390, i32 0, i32 3
  %392 = load i32* %391, align 4
  %393 = add i32 %392, 1
  store i32 %393, i32* %391, align 4
  br label %394

; <label>:394                                     ; preds = %387, %344
  br label %315

; <label>:395                                     ; preds = %320
  %396 = load i8* %uc, align 1
  %397 = zext i8 %396 to i32
  %398 = icmp ne i32 %397, 104
  br i1 %398, label %399, label %400

; <label>:399                                     ; preds = %395
  store i32 -5, i32* %retVal, align 4
  br label %5629

; <label>:400                                     ; preds = %395
  br label %401

; <label>:401                                     ; preds = %58, %400
  %402 = load %struct.DState** %1, align 8
  %403 = getelementptr inbounds %struct.DState* %402, i32 0, i32 1
  store i32 13, i32* %403, align 4
  br label %404

; <label>:404                                     ; preds = %401, %484
  %405 = load %struct.DState** %1, align 8
  %406 = getelementptr inbounds %struct.DState* %405, i32 0, i32 8
  %407 = load i32* %406, align 4
  %408 = icmp sge i32 %407, 8
  br i1 %408, label %409, label %426

; <label>:409                                     ; preds = %404
  %410 = load %struct.DState** %1, align 8
  %411 = getelementptr inbounds %struct.DState* %410, i32 0, i32 7
  %412 = load i32* %411, align 4
  %413 = load %struct.DState** %1, align 8
  %414 = getelementptr inbounds %struct.DState* %413, i32 0, i32 8
  %415 = load i32* %414, align 4
  %416 = sub nsw i32 %415, 8
  %417 = lshr i32 %412, %416
  %418 = and i32 %417, 255
  store i32 %418, i32* %v3, align 4
  %419 = load %struct.DState** %1, align 8
  %420 = getelementptr inbounds %struct.DState* %419, i32 0, i32 8
  %421 = load i32* %420, align 4
  %422 = sub nsw i32 %421, 8
  store i32 %422, i32* %420, align 4
  %423 = load i32* %v3, align 4
  %424 = load %struct.DState** %1, align 8
  %425 = getelementptr inbounds %struct.DState* %424, i32 0, i32 9
  store i32 %423, i32* %425, align 4
  br label %485

; <label>:426                                     ; preds = %404
  %427 = load %struct.DState** %1, align 8
  %428 = getelementptr inbounds %struct.DState* %427, i32 0, i32 0
  %429 = load %struct.bz_stream** %428, align 8
  %430 = getelementptr inbounds %struct.bz_stream* %429, i32 0, i32 1
  %431 = load i32* %430, align 4
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %433, label %434

; <label>:433                                     ; preds = %426
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:434                                     ; preds = %426
  %435 = load %struct.DState** %1, align 8
  %436 = getelementptr inbounds %struct.DState* %435, i32 0, i32 7
  %437 = load i32* %436, align 4
  %438 = shl i32 %437, 8
  %439 = load %struct.DState** %1, align 8
  %440 = getelementptr inbounds %struct.DState* %439, i32 0, i32 0
  %441 = load %struct.bz_stream** %440, align 8
  %442 = getelementptr inbounds %struct.bz_stream* %441, i32 0, i32 0
  %443 = load i8** %442, align 8
  %444 = load i8* %443, align 1
  %445 = zext i8 %444 to i32
  %446 = or i32 %438, %445
  %447 = load %struct.DState** %1, align 8
  %448 = getelementptr inbounds %struct.DState* %447, i32 0, i32 7
  store i32 %446, i32* %448, align 4
  %449 = load %struct.DState** %1, align 8
  %450 = getelementptr inbounds %struct.DState* %449, i32 0, i32 8
  %451 = load i32* %450, align 4
  %452 = add nsw i32 %451, 8
  store i32 %452, i32* %450, align 4
  %453 = load %struct.DState** %1, align 8
  %454 = getelementptr inbounds %struct.DState* %453, i32 0, i32 0
  %455 = load %struct.bz_stream** %454, align 8
  %456 = getelementptr inbounds %struct.bz_stream* %455, i32 0, i32 0
  %457 = load i8** %456, align 8
  %458 = getelementptr inbounds i8* %457, i32 1
  store i8* %458, i8** %456, align 8
  %459 = load %struct.DState** %1, align 8
  %460 = getelementptr inbounds %struct.DState* %459, i32 0, i32 0
  %461 = load %struct.bz_stream** %460, align 8
  %462 = getelementptr inbounds %struct.bz_stream* %461, i32 0, i32 1
  %463 = load i32* %462, align 4
  %464 = add i32 %463, -1
  store i32 %464, i32* %462, align 4
  %465 = load %struct.DState** %1, align 8
  %466 = getelementptr inbounds %struct.DState* %465, i32 0, i32 0
  %467 = load %struct.bz_stream** %466, align 8
  %468 = getelementptr inbounds %struct.bz_stream* %467, i32 0, i32 2
  %469 = load i32* %468, align 4
  %470 = add i32 %469, 1
  store i32 %470, i32* %468, align 4
  %471 = load %struct.DState** %1, align 8
  %472 = getelementptr inbounds %struct.DState* %471, i32 0, i32 0
  %473 = load %struct.bz_stream** %472, align 8
  %474 = getelementptr inbounds %struct.bz_stream* %473, i32 0, i32 2
  %475 = load i32* %474, align 4
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %477, label %484

; <label>:477                                     ; preds = %434
  %478 = load %struct.DState** %1, align 8
  %479 = getelementptr inbounds %struct.DState* %478, i32 0, i32 0
  %480 = load %struct.bz_stream** %479, align 8
  %481 = getelementptr inbounds %struct.bz_stream* %480, i32 0, i32 3
  %482 = load i32* %481, align 4
  %483 = add i32 %482, 1
  store i32 %483, i32* %481, align 4
  br label %484

; <label>:484                                     ; preds = %477, %434
  br label %404

; <label>:485                                     ; preds = %409
  %486 = load %struct.DState** %1, align 8
  %487 = getelementptr inbounds %struct.DState* %486, i32 0, i32 9
  %488 = load i32* %487, align 4
  %489 = icmp slt i32 %488, 49
  br i1 %489, label %495, label %490

; <label>:490                                     ; preds = %485
  %491 = load %struct.DState** %1, align 8
  %492 = getelementptr inbounds %struct.DState* %491, i32 0, i32 9
  %493 = load i32* %492, align 4
  %494 = icmp sgt i32 %493, 57
  br i1 %494, label %495, label %496

; <label>:495                                     ; preds = %490, %485
  store i32 -5, i32* %retVal, align 4
  br label %5629

; <label>:496                                     ; preds = %490
  %497 = load %struct.DState** %1, align 8
  %498 = getelementptr inbounds %struct.DState* %497, i32 0, i32 9
  %499 = load i32* %498, align 4
  %500 = sub nsw i32 %499, 48
  store i32 %500, i32* %498, align 4
  %501 = load %struct.DState** %1, align 8
  %502 = getelementptr inbounds %struct.DState* %501, i32 0, i32 10
  %503 = load i8* %502, align 1
  %504 = icmp ne i8 %503, 0
  br i1 %504, label %505, label %552

; <label>:505                                     ; preds = %496
  %506 = load %struct.bz_stream** %strm, align 8
  %507 = getelementptr inbounds %struct.bz_stream* %506, i32 0, i32 9
  %508 = load i8* (i8*, i32, i32)** %507, align 8
  %509 = load %struct.bz_stream** %strm, align 8
  %510 = getelementptr inbounds %struct.bz_stream* %509, i32 0, i32 11
  %511 = load i8** %510, align 8
  %512 = load %struct.DState** %1, align 8
  %513 = getelementptr inbounds %struct.DState* %512, i32 0, i32 9
  %514 = load i32* %513, align 4
  %515 = mul nsw i32 %514, 100000
  %516 = sext i32 %515 to i64
  %517 = mul i64 %516, 2
  %518 = trunc i64 %517 to i32
  %519 = call i8* %508(i8* %511, i32 %518, i32 1)
  %520 = bitcast i8* %519 to i16*
  %521 = load %struct.DState** %1, align 8
  %522 = getelementptr inbounds %struct.DState* %521, i32 0, i32 21
  store i16* %520, i16** %522, align 8
  %523 = load %struct.bz_stream** %strm, align 8
  %524 = getelementptr inbounds %struct.bz_stream* %523, i32 0, i32 9
  %525 = load i8* (i8*, i32, i32)** %524, align 8
  %526 = load %struct.bz_stream** %strm, align 8
  %527 = getelementptr inbounds %struct.bz_stream* %526, i32 0, i32 11
  %528 = load i8** %527, align 8
  %529 = load %struct.DState** %1, align 8
  %530 = getelementptr inbounds %struct.DState* %529, i32 0, i32 9
  %531 = load i32* %530, align 4
  %532 = mul nsw i32 %531, 100000
  %533 = add nsw i32 1, %532
  %534 = ashr i32 %533, 1
  %535 = sext i32 %534 to i64
  %536 = mul i64 %535, 1
  %537 = trunc i64 %536 to i32
  %538 = call i8* %525(i8* %528, i32 %537, i32 1)
  %539 = load %struct.DState** %1, align 8
  %540 = getelementptr inbounds %struct.DState* %539, i32 0, i32 22
  store i8* %538, i8** %540, align 8
  %541 = load %struct.DState** %1, align 8
  %542 = getelementptr inbounds %struct.DState* %541, i32 0, i32 21
  %543 = load i16** %542, align 8
  %544 = icmp eq i16* %543, null
  br i1 %544, label %550, label %545

; <label>:545                                     ; preds = %505
  %546 = load %struct.DState** %1, align 8
  %547 = getelementptr inbounds %struct.DState* %546, i32 0, i32 22
  %548 = load i8** %547, align 8
  %549 = icmp eq i8* %548, null
  br i1 %549, label %550, label %551

; <label>:550                                     ; preds = %545, %505
  store i32 -3, i32* %retVal, align 4
  br label %5629

; <label>:551                                     ; preds = %545
  br label %576

; <label>:552                                     ; preds = %496
  %553 = load %struct.bz_stream** %strm, align 8
  %554 = getelementptr inbounds %struct.bz_stream* %553, i32 0, i32 9
  %555 = load i8* (i8*, i32, i32)** %554, align 8
  %556 = load %struct.bz_stream** %strm, align 8
  %557 = getelementptr inbounds %struct.bz_stream* %556, i32 0, i32 11
  %558 = load i8** %557, align 8
  %559 = load %struct.DState** %1, align 8
  %560 = getelementptr inbounds %struct.DState* %559, i32 0, i32 9
  %561 = load i32* %560, align 4
  %562 = mul nsw i32 %561, 100000
  %563 = sext i32 %562 to i64
  %564 = mul i64 %563, 4
  %565 = trunc i64 %564 to i32
  %566 = call i8* %555(i8* %558, i32 %565, i32 1)
  %567 = bitcast i8* %566 to i32*
  %568 = load %struct.DState** %1, align 8
  %569 = getelementptr inbounds %struct.DState* %568, i32 0, i32 20
  store i32* %567, i32** %569, align 8
  %570 = load %struct.DState** %1, align 8
  %571 = getelementptr inbounds %struct.DState* %570, i32 0, i32 20
  %572 = load i32** %571, align 8
  %573 = icmp eq i32* %572, null
  br i1 %573, label %574, label %575

; <label>:574                                     ; preds = %552
  store i32 -3, i32* %retVal, align 4
  br label %5629

; <label>:575                                     ; preds = %552
  br label %576

; <label>:576                                     ; preds = %575, %551
  br label %577

; <label>:577                                     ; preds = %58, %576
  %578 = load %struct.DState** %1, align 8
  %579 = getelementptr inbounds %struct.DState* %578, i32 0, i32 1
  store i32 14, i32* %579, align 4
  br label %580

; <label>:580                                     ; preds = %577, %659
  %581 = load %struct.DState** %1, align 8
  %582 = getelementptr inbounds %struct.DState* %581, i32 0, i32 8
  %583 = load i32* %582, align 4
  %584 = icmp sge i32 %583, 8
  br i1 %584, label %585, label %601

; <label>:585                                     ; preds = %580
  %586 = load %struct.DState** %1, align 8
  %587 = getelementptr inbounds %struct.DState* %586, i32 0, i32 7
  %588 = load i32* %587, align 4
  %589 = load %struct.DState** %1, align 8
  %590 = getelementptr inbounds %struct.DState* %589, i32 0, i32 8
  %591 = load i32* %590, align 4
  %592 = sub nsw i32 %591, 8
  %593 = lshr i32 %588, %592
  %594 = and i32 %593, 255
  store i32 %594, i32* %v4, align 4
  %595 = load %struct.DState** %1, align 8
  %596 = getelementptr inbounds %struct.DState* %595, i32 0, i32 8
  %597 = load i32* %596, align 4
  %598 = sub nsw i32 %597, 8
  store i32 %598, i32* %596, align 4
  %599 = load i32* %v4, align 4
  %600 = trunc i32 %599 to i8
  store i8 %600, i8* %uc, align 1
  br label %660

; <label>:601                                     ; preds = %580
  %602 = load %struct.DState** %1, align 8
  %603 = getelementptr inbounds %struct.DState* %602, i32 0, i32 0
  %604 = load %struct.bz_stream** %603, align 8
  %605 = getelementptr inbounds %struct.bz_stream* %604, i32 0, i32 1
  %606 = load i32* %605, align 4
  %607 = icmp eq i32 %606, 0
  br i1 %607, label %608, label %609

; <label>:608                                     ; preds = %601
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:609                                     ; preds = %601
  %610 = load %struct.DState** %1, align 8
  %611 = getelementptr inbounds %struct.DState* %610, i32 0, i32 7
  %612 = load i32* %611, align 4
  %613 = shl i32 %612, 8
  %614 = load %struct.DState** %1, align 8
  %615 = getelementptr inbounds %struct.DState* %614, i32 0, i32 0
  %616 = load %struct.bz_stream** %615, align 8
  %617 = getelementptr inbounds %struct.bz_stream* %616, i32 0, i32 0
  %618 = load i8** %617, align 8
  %619 = load i8* %618, align 1
  %620 = zext i8 %619 to i32
  %621 = or i32 %613, %620
  %622 = load %struct.DState** %1, align 8
  %623 = getelementptr inbounds %struct.DState* %622, i32 0, i32 7
  store i32 %621, i32* %623, align 4
  %624 = load %struct.DState** %1, align 8
  %625 = getelementptr inbounds %struct.DState* %624, i32 0, i32 8
  %626 = load i32* %625, align 4
  %627 = add nsw i32 %626, 8
  store i32 %627, i32* %625, align 4
  %628 = load %struct.DState** %1, align 8
  %629 = getelementptr inbounds %struct.DState* %628, i32 0, i32 0
  %630 = load %struct.bz_stream** %629, align 8
  %631 = getelementptr inbounds %struct.bz_stream* %630, i32 0, i32 0
  %632 = load i8** %631, align 8
  %633 = getelementptr inbounds i8* %632, i32 1
  store i8* %633, i8** %631, align 8
  %634 = load %struct.DState** %1, align 8
  %635 = getelementptr inbounds %struct.DState* %634, i32 0, i32 0
  %636 = load %struct.bz_stream** %635, align 8
  %637 = getelementptr inbounds %struct.bz_stream* %636, i32 0, i32 1
  %638 = load i32* %637, align 4
  %639 = add i32 %638, -1
  store i32 %639, i32* %637, align 4
  %640 = load %struct.DState** %1, align 8
  %641 = getelementptr inbounds %struct.DState* %640, i32 0, i32 0
  %642 = load %struct.bz_stream** %641, align 8
  %643 = getelementptr inbounds %struct.bz_stream* %642, i32 0, i32 2
  %644 = load i32* %643, align 4
  %645 = add i32 %644, 1
  store i32 %645, i32* %643, align 4
  %646 = load %struct.DState** %1, align 8
  %647 = getelementptr inbounds %struct.DState* %646, i32 0, i32 0
  %648 = load %struct.bz_stream** %647, align 8
  %649 = getelementptr inbounds %struct.bz_stream* %648, i32 0, i32 2
  %650 = load i32* %649, align 4
  %651 = icmp eq i32 %650, 0
  br i1 %651, label %652, label %659

; <label>:652                                     ; preds = %609
  %653 = load %struct.DState** %1, align 8
  %654 = getelementptr inbounds %struct.DState* %653, i32 0, i32 0
  %655 = load %struct.bz_stream** %654, align 8
  %656 = getelementptr inbounds %struct.bz_stream* %655, i32 0, i32 3
  %657 = load i32* %656, align 4
  %658 = add i32 %657, 1
  store i32 %658, i32* %656, align 4
  br label %659

; <label>:659                                     ; preds = %652, %609
  br label %580

; <label>:660                                     ; preds = %585
  %661 = load i8* %uc, align 1
  %662 = zext i8 %661 to i32
  %663 = icmp eq i32 %662, 23
  br i1 %663, label %664, label %665

; <label>:664                                     ; preds = %660
  br label %4805

; <label>:665                                     ; preds = %660
  %666 = load i8* %uc, align 1
  %667 = zext i8 %666 to i32
  %668 = icmp ne i32 %667, 49
  br i1 %668, label %669, label %670

; <label>:669                                     ; preds = %665
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:670                                     ; preds = %665
  br label %671

; <label>:671                                     ; preds = %58, %670
  %672 = load %struct.DState** %1, align 8
  %673 = getelementptr inbounds %struct.DState* %672, i32 0, i32 1
  store i32 15, i32* %673, align 4
  br label %674

; <label>:674                                     ; preds = %671, %753
  %675 = load %struct.DState** %1, align 8
  %676 = getelementptr inbounds %struct.DState* %675, i32 0, i32 8
  %677 = load i32* %676, align 4
  %678 = icmp sge i32 %677, 8
  br i1 %678, label %679, label %695

; <label>:679                                     ; preds = %674
  %680 = load %struct.DState** %1, align 8
  %681 = getelementptr inbounds %struct.DState* %680, i32 0, i32 7
  %682 = load i32* %681, align 4
  %683 = load %struct.DState** %1, align 8
  %684 = getelementptr inbounds %struct.DState* %683, i32 0, i32 8
  %685 = load i32* %684, align 4
  %686 = sub nsw i32 %685, 8
  %687 = lshr i32 %682, %686
  %688 = and i32 %687, 255
  store i32 %688, i32* %v5, align 4
  %689 = load %struct.DState** %1, align 8
  %690 = getelementptr inbounds %struct.DState* %689, i32 0, i32 8
  %691 = load i32* %690, align 4
  %692 = sub nsw i32 %691, 8
  store i32 %692, i32* %690, align 4
  %693 = load i32* %v5, align 4
  %694 = trunc i32 %693 to i8
  store i8 %694, i8* %uc, align 1
  br label %754

; <label>:695                                     ; preds = %674
  %696 = load %struct.DState** %1, align 8
  %697 = getelementptr inbounds %struct.DState* %696, i32 0, i32 0
  %698 = load %struct.bz_stream** %697, align 8
  %699 = getelementptr inbounds %struct.bz_stream* %698, i32 0, i32 1
  %700 = load i32* %699, align 4
  %701 = icmp eq i32 %700, 0
  br i1 %701, label %702, label %703

; <label>:702                                     ; preds = %695
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:703                                     ; preds = %695
  %704 = load %struct.DState** %1, align 8
  %705 = getelementptr inbounds %struct.DState* %704, i32 0, i32 7
  %706 = load i32* %705, align 4
  %707 = shl i32 %706, 8
  %708 = load %struct.DState** %1, align 8
  %709 = getelementptr inbounds %struct.DState* %708, i32 0, i32 0
  %710 = load %struct.bz_stream** %709, align 8
  %711 = getelementptr inbounds %struct.bz_stream* %710, i32 0, i32 0
  %712 = load i8** %711, align 8
  %713 = load i8* %712, align 1
  %714 = zext i8 %713 to i32
  %715 = or i32 %707, %714
  %716 = load %struct.DState** %1, align 8
  %717 = getelementptr inbounds %struct.DState* %716, i32 0, i32 7
  store i32 %715, i32* %717, align 4
  %718 = load %struct.DState** %1, align 8
  %719 = getelementptr inbounds %struct.DState* %718, i32 0, i32 8
  %720 = load i32* %719, align 4
  %721 = add nsw i32 %720, 8
  store i32 %721, i32* %719, align 4
  %722 = load %struct.DState** %1, align 8
  %723 = getelementptr inbounds %struct.DState* %722, i32 0, i32 0
  %724 = load %struct.bz_stream** %723, align 8
  %725 = getelementptr inbounds %struct.bz_stream* %724, i32 0, i32 0
  %726 = load i8** %725, align 8
  %727 = getelementptr inbounds i8* %726, i32 1
  store i8* %727, i8** %725, align 8
  %728 = load %struct.DState** %1, align 8
  %729 = getelementptr inbounds %struct.DState* %728, i32 0, i32 0
  %730 = load %struct.bz_stream** %729, align 8
  %731 = getelementptr inbounds %struct.bz_stream* %730, i32 0, i32 1
  %732 = load i32* %731, align 4
  %733 = add i32 %732, -1
  store i32 %733, i32* %731, align 4
  %734 = load %struct.DState** %1, align 8
  %735 = getelementptr inbounds %struct.DState* %734, i32 0, i32 0
  %736 = load %struct.bz_stream** %735, align 8
  %737 = getelementptr inbounds %struct.bz_stream* %736, i32 0, i32 2
  %738 = load i32* %737, align 4
  %739 = add i32 %738, 1
  store i32 %739, i32* %737, align 4
  %740 = load %struct.DState** %1, align 8
  %741 = getelementptr inbounds %struct.DState* %740, i32 0, i32 0
  %742 = load %struct.bz_stream** %741, align 8
  %743 = getelementptr inbounds %struct.bz_stream* %742, i32 0, i32 2
  %744 = load i32* %743, align 4
  %745 = icmp eq i32 %744, 0
  br i1 %745, label %746, label %753

; <label>:746                                     ; preds = %703
  %747 = load %struct.DState** %1, align 8
  %748 = getelementptr inbounds %struct.DState* %747, i32 0, i32 0
  %749 = load %struct.bz_stream** %748, align 8
  %750 = getelementptr inbounds %struct.bz_stream* %749, i32 0, i32 3
  %751 = load i32* %750, align 4
  %752 = add i32 %751, 1
  store i32 %752, i32* %750, align 4
  br label %753

; <label>:753                                     ; preds = %746, %703
  br label %674

; <label>:754                                     ; preds = %679
  %755 = load i8* %uc, align 1
  %756 = zext i8 %755 to i32
  %757 = icmp ne i32 %756, 65
  br i1 %757, label %758, label %759

; <label>:758                                     ; preds = %754
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:759                                     ; preds = %754
  br label %760

; <label>:760                                     ; preds = %58, %759
  %761 = load %struct.DState** %1, align 8
  %762 = getelementptr inbounds %struct.DState* %761, i32 0, i32 1
  store i32 16, i32* %762, align 4
  br label %763

; <label>:763                                     ; preds = %760, %842
  %764 = load %struct.DState** %1, align 8
  %765 = getelementptr inbounds %struct.DState* %764, i32 0, i32 8
  %766 = load i32* %765, align 4
  %767 = icmp sge i32 %766, 8
  br i1 %767, label %768, label %784

; <label>:768                                     ; preds = %763
  %769 = load %struct.DState** %1, align 8
  %770 = getelementptr inbounds %struct.DState* %769, i32 0, i32 7
  %771 = load i32* %770, align 4
  %772 = load %struct.DState** %1, align 8
  %773 = getelementptr inbounds %struct.DState* %772, i32 0, i32 8
  %774 = load i32* %773, align 4
  %775 = sub nsw i32 %774, 8
  %776 = lshr i32 %771, %775
  %777 = and i32 %776, 255
  store i32 %777, i32* %v6, align 4
  %778 = load %struct.DState** %1, align 8
  %779 = getelementptr inbounds %struct.DState* %778, i32 0, i32 8
  %780 = load i32* %779, align 4
  %781 = sub nsw i32 %780, 8
  store i32 %781, i32* %779, align 4
  %782 = load i32* %v6, align 4
  %783 = trunc i32 %782 to i8
  store i8 %783, i8* %uc, align 1
  br label %843

; <label>:784                                     ; preds = %763
  %785 = load %struct.DState** %1, align 8
  %786 = getelementptr inbounds %struct.DState* %785, i32 0, i32 0
  %787 = load %struct.bz_stream** %786, align 8
  %788 = getelementptr inbounds %struct.bz_stream* %787, i32 0, i32 1
  %789 = load i32* %788, align 4
  %790 = icmp eq i32 %789, 0
  br i1 %790, label %791, label %792

; <label>:791                                     ; preds = %784
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:792                                     ; preds = %784
  %793 = load %struct.DState** %1, align 8
  %794 = getelementptr inbounds %struct.DState* %793, i32 0, i32 7
  %795 = load i32* %794, align 4
  %796 = shl i32 %795, 8
  %797 = load %struct.DState** %1, align 8
  %798 = getelementptr inbounds %struct.DState* %797, i32 0, i32 0
  %799 = load %struct.bz_stream** %798, align 8
  %800 = getelementptr inbounds %struct.bz_stream* %799, i32 0, i32 0
  %801 = load i8** %800, align 8
  %802 = load i8* %801, align 1
  %803 = zext i8 %802 to i32
  %804 = or i32 %796, %803
  %805 = load %struct.DState** %1, align 8
  %806 = getelementptr inbounds %struct.DState* %805, i32 0, i32 7
  store i32 %804, i32* %806, align 4
  %807 = load %struct.DState** %1, align 8
  %808 = getelementptr inbounds %struct.DState* %807, i32 0, i32 8
  %809 = load i32* %808, align 4
  %810 = add nsw i32 %809, 8
  store i32 %810, i32* %808, align 4
  %811 = load %struct.DState** %1, align 8
  %812 = getelementptr inbounds %struct.DState* %811, i32 0, i32 0
  %813 = load %struct.bz_stream** %812, align 8
  %814 = getelementptr inbounds %struct.bz_stream* %813, i32 0, i32 0
  %815 = load i8** %814, align 8
  %816 = getelementptr inbounds i8* %815, i32 1
  store i8* %816, i8** %814, align 8
  %817 = load %struct.DState** %1, align 8
  %818 = getelementptr inbounds %struct.DState* %817, i32 0, i32 0
  %819 = load %struct.bz_stream** %818, align 8
  %820 = getelementptr inbounds %struct.bz_stream* %819, i32 0, i32 1
  %821 = load i32* %820, align 4
  %822 = add i32 %821, -1
  store i32 %822, i32* %820, align 4
  %823 = load %struct.DState** %1, align 8
  %824 = getelementptr inbounds %struct.DState* %823, i32 0, i32 0
  %825 = load %struct.bz_stream** %824, align 8
  %826 = getelementptr inbounds %struct.bz_stream* %825, i32 0, i32 2
  %827 = load i32* %826, align 4
  %828 = add i32 %827, 1
  store i32 %828, i32* %826, align 4
  %829 = load %struct.DState** %1, align 8
  %830 = getelementptr inbounds %struct.DState* %829, i32 0, i32 0
  %831 = load %struct.bz_stream** %830, align 8
  %832 = getelementptr inbounds %struct.bz_stream* %831, i32 0, i32 2
  %833 = load i32* %832, align 4
  %834 = icmp eq i32 %833, 0
  br i1 %834, label %835, label %842

; <label>:835                                     ; preds = %792
  %836 = load %struct.DState** %1, align 8
  %837 = getelementptr inbounds %struct.DState* %836, i32 0, i32 0
  %838 = load %struct.bz_stream** %837, align 8
  %839 = getelementptr inbounds %struct.bz_stream* %838, i32 0, i32 3
  %840 = load i32* %839, align 4
  %841 = add i32 %840, 1
  store i32 %841, i32* %839, align 4
  br label %842

; <label>:842                                     ; preds = %835, %792
  br label %763

; <label>:843                                     ; preds = %768
  %844 = load i8* %uc, align 1
  %845 = zext i8 %844 to i32
  %846 = icmp ne i32 %845, 89
  br i1 %846, label %847, label %848

; <label>:847                                     ; preds = %843
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:848                                     ; preds = %843
  br label %849

; <label>:849                                     ; preds = %58, %848
  %850 = load %struct.DState** %1, align 8
  %851 = getelementptr inbounds %struct.DState* %850, i32 0, i32 1
  store i32 17, i32* %851, align 4
  br label %852

; <label>:852                                     ; preds = %849, %931
  %853 = load %struct.DState** %1, align 8
  %854 = getelementptr inbounds %struct.DState* %853, i32 0, i32 8
  %855 = load i32* %854, align 4
  %856 = icmp sge i32 %855, 8
  br i1 %856, label %857, label %873

; <label>:857                                     ; preds = %852
  %858 = load %struct.DState** %1, align 8
  %859 = getelementptr inbounds %struct.DState* %858, i32 0, i32 7
  %860 = load i32* %859, align 4
  %861 = load %struct.DState** %1, align 8
  %862 = getelementptr inbounds %struct.DState* %861, i32 0, i32 8
  %863 = load i32* %862, align 4
  %864 = sub nsw i32 %863, 8
  %865 = lshr i32 %860, %864
  %866 = and i32 %865, 255
  store i32 %866, i32* %v7, align 4
  %867 = load %struct.DState** %1, align 8
  %868 = getelementptr inbounds %struct.DState* %867, i32 0, i32 8
  %869 = load i32* %868, align 4
  %870 = sub nsw i32 %869, 8
  store i32 %870, i32* %868, align 4
  %871 = load i32* %v7, align 4
  %872 = trunc i32 %871 to i8
  store i8 %872, i8* %uc, align 1
  br label %932

; <label>:873                                     ; preds = %852
  %874 = load %struct.DState** %1, align 8
  %875 = getelementptr inbounds %struct.DState* %874, i32 0, i32 0
  %876 = load %struct.bz_stream** %875, align 8
  %877 = getelementptr inbounds %struct.bz_stream* %876, i32 0, i32 1
  %878 = load i32* %877, align 4
  %879 = icmp eq i32 %878, 0
  br i1 %879, label %880, label %881

; <label>:880                                     ; preds = %873
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:881                                     ; preds = %873
  %882 = load %struct.DState** %1, align 8
  %883 = getelementptr inbounds %struct.DState* %882, i32 0, i32 7
  %884 = load i32* %883, align 4
  %885 = shl i32 %884, 8
  %886 = load %struct.DState** %1, align 8
  %887 = getelementptr inbounds %struct.DState* %886, i32 0, i32 0
  %888 = load %struct.bz_stream** %887, align 8
  %889 = getelementptr inbounds %struct.bz_stream* %888, i32 0, i32 0
  %890 = load i8** %889, align 8
  %891 = load i8* %890, align 1
  %892 = zext i8 %891 to i32
  %893 = or i32 %885, %892
  %894 = load %struct.DState** %1, align 8
  %895 = getelementptr inbounds %struct.DState* %894, i32 0, i32 7
  store i32 %893, i32* %895, align 4
  %896 = load %struct.DState** %1, align 8
  %897 = getelementptr inbounds %struct.DState* %896, i32 0, i32 8
  %898 = load i32* %897, align 4
  %899 = add nsw i32 %898, 8
  store i32 %899, i32* %897, align 4
  %900 = load %struct.DState** %1, align 8
  %901 = getelementptr inbounds %struct.DState* %900, i32 0, i32 0
  %902 = load %struct.bz_stream** %901, align 8
  %903 = getelementptr inbounds %struct.bz_stream* %902, i32 0, i32 0
  %904 = load i8** %903, align 8
  %905 = getelementptr inbounds i8* %904, i32 1
  store i8* %905, i8** %903, align 8
  %906 = load %struct.DState** %1, align 8
  %907 = getelementptr inbounds %struct.DState* %906, i32 0, i32 0
  %908 = load %struct.bz_stream** %907, align 8
  %909 = getelementptr inbounds %struct.bz_stream* %908, i32 0, i32 1
  %910 = load i32* %909, align 4
  %911 = add i32 %910, -1
  store i32 %911, i32* %909, align 4
  %912 = load %struct.DState** %1, align 8
  %913 = getelementptr inbounds %struct.DState* %912, i32 0, i32 0
  %914 = load %struct.bz_stream** %913, align 8
  %915 = getelementptr inbounds %struct.bz_stream* %914, i32 0, i32 2
  %916 = load i32* %915, align 4
  %917 = add i32 %916, 1
  store i32 %917, i32* %915, align 4
  %918 = load %struct.DState** %1, align 8
  %919 = getelementptr inbounds %struct.DState* %918, i32 0, i32 0
  %920 = load %struct.bz_stream** %919, align 8
  %921 = getelementptr inbounds %struct.bz_stream* %920, i32 0, i32 2
  %922 = load i32* %921, align 4
  %923 = icmp eq i32 %922, 0
  br i1 %923, label %924, label %931

; <label>:924                                     ; preds = %881
  %925 = load %struct.DState** %1, align 8
  %926 = getelementptr inbounds %struct.DState* %925, i32 0, i32 0
  %927 = load %struct.bz_stream** %926, align 8
  %928 = getelementptr inbounds %struct.bz_stream* %927, i32 0, i32 3
  %929 = load i32* %928, align 4
  %930 = add i32 %929, 1
  store i32 %930, i32* %928, align 4
  br label %931

; <label>:931                                     ; preds = %924, %881
  br label %852

; <label>:932                                     ; preds = %857
  %933 = load i8* %uc, align 1
  %934 = zext i8 %933 to i32
  %935 = icmp ne i32 %934, 38
  br i1 %935, label %936, label %937

; <label>:936                                     ; preds = %932
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:937                                     ; preds = %932
  br label %938

; <label>:938                                     ; preds = %58, %937
  %939 = load %struct.DState** %1, align 8
  %940 = getelementptr inbounds %struct.DState* %939, i32 0, i32 1
  store i32 18, i32* %940, align 4
  br label %941

; <label>:941                                     ; preds = %938, %1020
  %942 = load %struct.DState** %1, align 8
  %943 = getelementptr inbounds %struct.DState* %942, i32 0, i32 8
  %944 = load i32* %943, align 4
  %945 = icmp sge i32 %944, 8
  br i1 %945, label %946, label %962

; <label>:946                                     ; preds = %941
  %947 = load %struct.DState** %1, align 8
  %948 = getelementptr inbounds %struct.DState* %947, i32 0, i32 7
  %949 = load i32* %948, align 4
  %950 = load %struct.DState** %1, align 8
  %951 = getelementptr inbounds %struct.DState* %950, i32 0, i32 8
  %952 = load i32* %951, align 4
  %953 = sub nsw i32 %952, 8
  %954 = lshr i32 %949, %953
  %955 = and i32 %954, 255
  store i32 %955, i32* %v8, align 4
  %956 = load %struct.DState** %1, align 8
  %957 = getelementptr inbounds %struct.DState* %956, i32 0, i32 8
  %958 = load i32* %957, align 4
  %959 = sub nsw i32 %958, 8
  store i32 %959, i32* %957, align 4
  %960 = load i32* %v8, align 4
  %961 = trunc i32 %960 to i8
  store i8 %961, i8* %uc, align 1
  br label %1021

; <label>:962                                     ; preds = %941
  %963 = load %struct.DState** %1, align 8
  %964 = getelementptr inbounds %struct.DState* %963, i32 0, i32 0
  %965 = load %struct.bz_stream** %964, align 8
  %966 = getelementptr inbounds %struct.bz_stream* %965, i32 0, i32 1
  %967 = load i32* %966, align 4
  %968 = icmp eq i32 %967, 0
  br i1 %968, label %969, label %970

; <label>:969                                     ; preds = %962
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:970                                     ; preds = %962
  %971 = load %struct.DState** %1, align 8
  %972 = getelementptr inbounds %struct.DState* %971, i32 0, i32 7
  %973 = load i32* %972, align 4
  %974 = shl i32 %973, 8
  %975 = load %struct.DState** %1, align 8
  %976 = getelementptr inbounds %struct.DState* %975, i32 0, i32 0
  %977 = load %struct.bz_stream** %976, align 8
  %978 = getelementptr inbounds %struct.bz_stream* %977, i32 0, i32 0
  %979 = load i8** %978, align 8
  %980 = load i8* %979, align 1
  %981 = zext i8 %980 to i32
  %982 = or i32 %974, %981
  %983 = load %struct.DState** %1, align 8
  %984 = getelementptr inbounds %struct.DState* %983, i32 0, i32 7
  store i32 %982, i32* %984, align 4
  %985 = load %struct.DState** %1, align 8
  %986 = getelementptr inbounds %struct.DState* %985, i32 0, i32 8
  %987 = load i32* %986, align 4
  %988 = add nsw i32 %987, 8
  store i32 %988, i32* %986, align 4
  %989 = load %struct.DState** %1, align 8
  %990 = getelementptr inbounds %struct.DState* %989, i32 0, i32 0
  %991 = load %struct.bz_stream** %990, align 8
  %992 = getelementptr inbounds %struct.bz_stream* %991, i32 0, i32 0
  %993 = load i8** %992, align 8
  %994 = getelementptr inbounds i8* %993, i32 1
  store i8* %994, i8** %992, align 8
  %995 = load %struct.DState** %1, align 8
  %996 = getelementptr inbounds %struct.DState* %995, i32 0, i32 0
  %997 = load %struct.bz_stream** %996, align 8
  %998 = getelementptr inbounds %struct.bz_stream* %997, i32 0, i32 1
  %999 = load i32* %998, align 4
  %1000 = add i32 %999, -1
  store i32 %1000, i32* %998, align 4
  %1001 = load %struct.DState** %1, align 8
  %1002 = getelementptr inbounds %struct.DState* %1001, i32 0, i32 0
  %1003 = load %struct.bz_stream** %1002, align 8
  %1004 = getelementptr inbounds %struct.bz_stream* %1003, i32 0, i32 2
  %1005 = load i32* %1004, align 4
  %1006 = add i32 %1005, 1
  store i32 %1006, i32* %1004, align 4
  %1007 = load %struct.DState** %1, align 8
  %1008 = getelementptr inbounds %struct.DState* %1007, i32 0, i32 0
  %1009 = load %struct.bz_stream** %1008, align 8
  %1010 = getelementptr inbounds %struct.bz_stream* %1009, i32 0, i32 2
  %1011 = load i32* %1010, align 4
  %1012 = icmp eq i32 %1011, 0
  br i1 %1012, label %1013, label %1020

; <label>:1013                                    ; preds = %970
  %1014 = load %struct.DState** %1, align 8
  %1015 = getelementptr inbounds %struct.DState* %1014, i32 0, i32 0
  %1016 = load %struct.bz_stream** %1015, align 8
  %1017 = getelementptr inbounds %struct.bz_stream* %1016, i32 0, i32 3
  %1018 = load i32* %1017, align 4
  %1019 = add i32 %1018, 1
  store i32 %1019, i32* %1017, align 4
  br label %1020

; <label>:1020                                    ; preds = %1013, %970
  br label %941

; <label>:1021                                    ; preds = %946
  %1022 = load i8* %uc, align 1
  %1023 = zext i8 %1022 to i32
  %1024 = icmp ne i32 %1023, 83
  br i1 %1024, label %1025, label %1026

; <label>:1025                                    ; preds = %1021
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:1026                                    ; preds = %1021
  br label %1027

; <label>:1027                                    ; preds = %58, %1026
  %1028 = load %struct.DState** %1, align 8
  %1029 = getelementptr inbounds %struct.DState* %1028, i32 0, i32 1
  store i32 19, i32* %1029, align 4
  br label %1030

; <label>:1030                                    ; preds = %1027, %1109
  %1031 = load %struct.DState** %1, align 8
  %1032 = getelementptr inbounds %struct.DState* %1031, i32 0, i32 8
  %1033 = load i32* %1032, align 4
  %1034 = icmp sge i32 %1033, 8
  br i1 %1034, label %1035, label %1051

; <label>:1035                                    ; preds = %1030
  %1036 = load %struct.DState** %1, align 8
  %1037 = getelementptr inbounds %struct.DState* %1036, i32 0, i32 7
  %1038 = load i32* %1037, align 4
  %1039 = load %struct.DState** %1, align 8
  %1040 = getelementptr inbounds %struct.DState* %1039, i32 0, i32 8
  %1041 = load i32* %1040, align 4
  %1042 = sub nsw i32 %1041, 8
  %1043 = lshr i32 %1038, %1042
  %1044 = and i32 %1043, 255
  store i32 %1044, i32* %v9, align 4
  %1045 = load %struct.DState** %1, align 8
  %1046 = getelementptr inbounds %struct.DState* %1045, i32 0, i32 8
  %1047 = load i32* %1046, align 4
  %1048 = sub nsw i32 %1047, 8
  store i32 %1048, i32* %1046, align 4
  %1049 = load i32* %v9, align 4
  %1050 = trunc i32 %1049 to i8
  store i8 %1050, i8* %uc, align 1
  br label %1110

; <label>:1051                                    ; preds = %1030
  %1052 = load %struct.DState** %1, align 8
  %1053 = getelementptr inbounds %struct.DState* %1052, i32 0, i32 0
  %1054 = load %struct.bz_stream** %1053, align 8
  %1055 = getelementptr inbounds %struct.bz_stream* %1054, i32 0, i32 1
  %1056 = load i32* %1055, align 4
  %1057 = icmp eq i32 %1056, 0
  br i1 %1057, label %1058, label %1059

; <label>:1058                                    ; preds = %1051
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:1059                                    ; preds = %1051
  %1060 = load %struct.DState** %1, align 8
  %1061 = getelementptr inbounds %struct.DState* %1060, i32 0, i32 7
  %1062 = load i32* %1061, align 4
  %1063 = shl i32 %1062, 8
  %1064 = load %struct.DState** %1, align 8
  %1065 = getelementptr inbounds %struct.DState* %1064, i32 0, i32 0
  %1066 = load %struct.bz_stream** %1065, align 8
  %1067 = getelementptr inbounds %struct.bz_stream* %1066, i32 0, i32 0
  %1068 = load i8** %1067, align 8
  %1069 = load i8* %1068, align 1
  %1070 = zext i8 %1069 to i32
  %1071 = or i32 %1063, %1070
  %1072 = load %struct.DState** %1, align 8
  %1073 = getelementptr inbounds %struct.DState* %1072, i32 0, i32 7
  store i32 %1071, i32* %1073, align 4
  %1074 = load %struct.DState** %1, align 8
  %1075 = getelementptr inbounds %struct.DState* %1074, i32 0, i32 8
  %1076 = load i32* %1075, align 4
  %1077 = add nsw i32 %1076, 8
  store i32 %1077, i32* %1075, align 4
  %1078 = load %struct.DState** %1, align 8
  %1079 = getelementptr inbounds %struct.DState* %1078, i32 0, i32 0
  %1080 = load %struct.bz_stream** %1079, align 8
  %1081 = getelementptr inbounds %struct.bz_stream* %1080, i32 0, i32 0
  %1082 = load i8** %1081, align 8
  %1083 = getelementptr inbounds i8* %1082, i32 1
  store i8* %1083, i8** %1081, align 8
  %1084 = load %struct.DState** %1, align 8
  %1085 = getelementptr inbounds %struct.DState* %1084, i32 0, i32 0
  %1086 = load %struct.bz_stream** %1085, align 8
  %1087 = getelementptr inbounds %struct.bz_stream* %1086, i32 0, i32 1
  %1088 = load i32* %1087, align 4
  %1089 = add i32 %1088, -1
  store i32 %1089, i32* %1087, align 4
  %1090 = load %struct.DState** %1, align 8
  %1091 = getelementptr inbounds %struct.DState* %1090, i32 0, i32 0
  %1092 = load %struct.bz_stream** %1091, align 8
  %1093 = getelementptr inbounds %struct.bz_stream* %1092, i32 0, i32 2
  %1094 = load i32* %1093, align 4
  %1095 = add i32 %1094, 1
  store i32 %1095, i32* %1093, align 4
  %1096 = load %struct.DState** %1, align 8
  %1097 = getelementptr inbounds %struct.DState* %1096, i32 0, i32 0
  %1098 = load %struct.bz_stream** %1097, align 8
  %1099 = getelementptr inbounds %struct.bz_stream* %1098, i32 0, i32 2
  %1100 = load i32* %1099, align 4
  %1101 = icmp eq i32 %1100, 0
  br i1 %1101, label %1102, label %1109

; <label>:1102                                    ; preds = %1059
  %1103 = load %struct.DState** %1, align 8
  %1104 = getelementptr inbounds %struct.DState* %1103, i32 0, i32 0
  %1105 = load %struct.bz_stream** %1104, align 8
  %1106 = getelementptr inbounds %struct.bz_stream* %1105, i32 0, i32 3
  %1107 = load i32* %1106, align 4
  %1108 = add i32 %1107, 1
  store i32 %1108, i32* %1106, align 4
  br label %1109

; <label>:1109                                    ; preds = %1102, %1059
  br label %1030

; <label>:1110                                    ; preds = %1035
  %1111 = load i8* %uc, align 1
  %1112 = zext i8 %1111 to i32
  %1113 = icmp ne i32 %1112, 89
  br i1 %1113, label %1114, label %1115

; <label>:1114                                    ; preds = %1110
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:1115                                    ; preds = %1110
  %1116 = load %struct.DState** %1, align 8
  %1117 = getelementptr inbounds %struct.DState* %1116, i32 0, i32 11
  %1118 = load i32* %1117, align 4
  %1119 = add nsw i32 %1118, 1
  store i32 %1119, i32* %1117, align 4
  %1120 = load %struct.DState** %1, align 8
  %1121 = getelementptr inbounds %struct.DState* %1120, i32 0, i32 12
  %1122 = load i32* %1121, align 4
  %1123 = icmp sge i32 %1122, 2
  br i1 %1123, label %1124, label %1130

; <label>:1124                                    ; preds = %1115
  %1125 = load %struct._IO_FILE** @stderr, align 8
  %1126 = load %struct.DState** %1, align 8
  %1127 = getelementptr inbounds %struct.DState* %1126, i32 0, i32 11
  %1128 = load i32* %1127, align 4
  %1129 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1125, i8* getelementptr inbounds ([20 x i8]* @.str4, i32 0, i32 0), i32 %1128)
  br label %1130

; <label>:1130                                    ; preds = %1124, %1115
  %1131 = load %struct.DState** %1, align 8
  %1132 = getelementptr inbounds %struct.DState* %1131, i32 0, i32 23
  store i32 0, i32* %1132, align 4
  br label %1133

; <label>:1133                                    ; preds = %58, %1130
  %1134 = load %struct.DState** %1, align 8
  %1135 = getelementptr inbounds %struct.DState* %1134, i32 0, i32 1
  store i32 20, i32* %1135, align 4
  br label %1136

; <label>:1136                                    ; preds = %1133, %1215
  %1137 = load %struct.DState** %1, align 8
  %1138 = getelementptr inbounds %struct.DState* %1137, i32 0, i32 8
  %1139 = load i32* %1138, align 4
  %1140 = icmp sge i32 %1139, 8
  br i1 %1140, label %1141, label %1157

; <label>:1141                                    ; preds = %1136
  %1142 = load %struct.DState** %1, align 8
  %1143 = getelementptr inbounds %struct.DState* %1142, i32 0, i32 7
  %1144 = load i32* %1143, align 4
  %1145 = load %struct.DState** %1, align 8
  %1146 = getelementptr inbounds %struct.DState* %1145, i32 0, i32 8
  %1147 = load i32* %1146, align 4
  %1148 = sub nsw i32 %1147, 8
  %1149 = lshr i32 %1144, %1148
  %1150 = and i32 %1149, 255
  store i32 %1150, i32* %v10, align 4
  %1151 = load %struct.DState** %1, align 8
  %1152 = getelementptr inbounds %struct.DState* %1151, i32 0, i32 8
  %1153 = load i32* %1152, align 4
  %1154 = sub nsw i32 %1153, 8
  store i32 %1154, i32* %1152, align 4
  %1155 = load i32* %v10, align 4
  %1156 = trunc i32 %1155 to i8
  store i8 %1156, i8* %uc, align 1
  br label %1216

; <label>:1157                                    ; preds = %1136
  %1158 = load %struct.DState** %1, align 8
  %1159 = getelementptr inbounds %struct.DState* %1158, i32 0, i32 0
  %1160 = load %struct.bz_stream** %1159, align 8
  %1161 = getelementptr inbounds %struct.bz_stream* %1160, i32 0, i32 1
  %1162 = load i32* %1161, align 4
  %1163 = icmp eq i32 %1162, 0
  br i1 %1163, label %1164, label %1165

; <label>:1164                                    ; preds = %1157
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:1165                                    ; preds = %1157
  %1166 = load %struct.DState** %1, align 8
  %1167 = getelementptr inbounds %struct.DState* %1166, i32 0, i32 7
  %1168 = load i32* %1167, align 4
  %1169 = shl i32 %1168, 8
  %1170 = load %struct.DState** %1, align 8
  %1171 = getelementptr inbounds %struct.DState* %1170, i32 0, i32 0
  %1172 = load %struct.bz_stream** %1171, align 8
  %1173 = getelementptr inbounds %struct.bz_stream* %1172, i32 0, i32 0
  %1174 = load i8** %1173, align 8
  %1175 = load i8* %1174, align 1
  %1176 = zext i8 %1175 to i32
  %1177 = or i32 %1169, %1176
  %1178 = load %struct.DState** %1, align 8
  %1179 = getelementptr inbounds %struct.DState* %1178, i32 0, i32 7
  store i32 %1177, i32* %1179, align 4
  %1180 = load %struct.DState** %1, align 8
  %1181 = getelementptr inbounds %struct.DState* %1180, i32 0, i32 8
  %1182 = load i32* %1181, align 4
  %1183 = add nsw i32 %1182, 8
  store i32 %1183, i32* %1181, align 4
  %1184 = load %struct.DState** %1, align 8
  %1185 = getelementptr inbounds %struct.DState* %1184, i32 0, i32 0
  %1186 = load %struct.bz_stream** %1185, align 8
  %1187 = getelementptr inbounds %struct.bz_stream* %1186, i32 0, i32 0
  %1188 = load i8** %1187, align 8
  %1189 = getelementptr inbounds i8* %1188, i32 1
  store i8* %1189, i8** %1187, align 8
  %1190 = load %struct.DState** %1, align 8
  %1191 = getelementptr inbounds %struct.DState* %1190, i32 0, i32 0
  %1192 = load %struct.bz_stream** %1191, align 8
  %1193 = getelementptr inbounds %struct.bz_stream* %1192, i32 0, i32 1
  %1194 = load i32* %1193, align 4
  %1195 = add i32 %1194, -1
  store i32 %1195, i32* %1193, align 4
  %1196 = load %struct.DState** %1, align 8
  %1197 = getelementptr inbounds %struct.DState* %1196, i32 0, i32 0
  %1198 = load %struct.bz_stream** %1197, align 8
  %1199 = getelementptr inbounds %struct.bz_stream* %1198, i32 0, i32 2
  %1200 = load i32* %1199, align 4
  %1201 = add i32 %1200, 1
  store i32 %1201, i32* %1199, align 4
  %1202 = load %struct.DState** %1, align 8
  %1203 = getelementptr inbounds %struct.DState* %1202, i32 0, i32 0
  %1204 = load %struct.bz_stream** %1203, align 8
  %1205 = getelementptr inbounds %struct.bz_stream* %1204, i32 0, i32 2
  %1206 = load i32* %1205, align 4
  %1207 = icmp eq i32 %1206, 0
  br i1 %1207, label %1208, label %1215

; <label>:1208                                    ; preds = %1165
  %1209 = load %struct.DState** %1, align 8
  %1210 = getelementptr inbounds %struct.DState* %1209, i32 0, i32 0
  %1211 = load %struct.bz_stream** %1210, align 8
  %1212 = getelementptr inbounds %struct.bz_stream* %1211, i32 0, i32 3
  %1213 = load i32* %1212, align 4
  %1214 = add i32 %1213, 1
  store i32 %1214, i32* %1212, align 4
  br label %1215

; <label>:1215                                    ; preds = %1208, %1165
  br label %1136

; <label>:1216                                    ; preds = %1141
  %1217 = load %struct.DState** %1, align 8
  %1218 = getelementptr inbounds %struct.DState* %1217, i32 0, i32 23
  %1219 = load i32* %1218, align 4
  %1220 = shl i32 %1219, 8
  %1221 = load i8* %uc, align 1
  %1222 = zext i8 %1221 to i32
  %1223 = or i32 %1220, %1222
  %1224 = load %struct.DState** %1, align 8
  %1225 = getelementptr inbounds %struct.DState* %1224, i32 0, i32 23
  store i32 %1223, i32* %1225, align 4
  br label %1226

; <label>:1226                                    ; preds = %58, %1216
  %1227 = load %struct.DState** %1, align 8
  %1228 = getelementptr inbounds %struct.DState* %1227, i32 0, i32 1
  store i32 21, i32* %1228, align 4
  br label %1229

; <label>:1229                                    ; preds = %1226, %1308
  %1230 = load %struct.DState** %1, align 8
  %1231 = getelementptr inbounds %struct.DState* %1230, i32 0, i32 8
  %1232 = load i32* %1231, align 4
  %1233 = icmp sge i32 %1232, 8
  br i1 %1233, label %1234, label %1250

; <label>:1234                                    ; preds = %1229
  %1235 = load %struct.DState** %1, align 8
  %1236 = getelementptr inbounds %struct.DState* %1235, i32 0, i32 7
  %1237 = load i32* %1236, align 4
  %1238 = load %struct.DState** %1, align 8
  %1239 = getelementptr inbounds %struct.DState* %1238, i32 0, i32 8
  %1240 = load i32* %1239, align 4
  %1241 = sub nsw i32 %1240, 8
  %1242 = lshr i32 %1237, %1241
  %1243 = and i32 %1242, 255
  store i32 %1243, i32* %v11, align 4
  %1244 = load %struct.DState** %1, align 8
  %1245 = getelementptr inbounds %struct.DState* %1244, i32 0, i32 8
  %1246 = load i32* %1245, align 4
  %1247 = sub nsw i32 %1246, 8
  store i32 %1247, i32* %1245, align 4
  %1248 = load i32* %v11, align 4
  %1249 = trunc i32 %1248 to i8
  store i8 %1249, i8* %uc, align 1
  br label %1309

; <label>:1250                                    ; preds = %1229
  %1251 = load %struct.DState** %1, align 8
  %1252 = getelementptr inbounds %struct.DState* %1251, i32 0, i32 0
  %1253 = load %struct.bz_stream** %1252, align 8
  %1254 = getelementptr inbounds %struct.bz_stream* %1253, i32 0, i32 1
  %1255 = load i32* %1254, align 4
  %1256 = icmp eq i32 %1255, 0
  br i1 %1256, label %1257, label %1258

; <label>:1257                                    ; preds = %1250
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:1258                                    ; preds = %1250
  %1259 = load %struct.DState** %1, align 8
  %1260 = getelementptr inbounds %struct.DState* %1259, i32 0, i32 7
  %1261 = load i32* %1260, align 4
  %1262 = shl i32 %1261, 8
  %1263 = load %struct.DState** %1, align 8
  %1264 = getelementptr inbounds %struct.DState* %1263, i32 0, i32 0
  %1265 = load %struct.bz_stream** %1264, align 8
  %1266 = getelementptr inbounds %struct.bz_stream* %1265, i32 0, i32 0
  %1267 = load i8** %1266, align 8
  %1268 = load i8* %1267, align 1
  %1269 = zext i8 %1268 to i32
  %1270 = or i32 %1262, %1269
  %1271 = load %struct.DState** %1, align 8
  %1272 = getelementptr inbounds %struct.DState* %1271, i32 0, i32 7
  store i32 %1270, i32* %1272, align 4
  %1273 = load %struct.DState** %1, align 8
  %1274 = getelementptr inbounds %struct.DState* %1273, i32 0, i32 8
  %1275 = load i32* %1274, align 4
  %1276 = add nsw i32 %1275, 8
  store i32 %1276, i32* %1274, align 4
  %1277 = load %struct.DState** %1, align 8
  %1278 = getelementptr inbounds %struct.DState* %1277, i32 0, i32 0
  %1279 = load %struct.bz_stream** %1278, align 8
  %1280 = getelementptr inbounds %struct.bz_stream* %1279, i32 0, i32 0
  %1281 = load i8** %1280, align 8
  %1282 = getelementptr inbounds i8* %1281, i32 1
  store i8* %1282, i8** %1280, align 8
  %1283 = load %struct.DState** %1, align 8
  %1284 = getelementptr inbounds %struct.DState* %1283, i32 0, i32 0
  %1285 = load %struct.bz_stream** %1284, align 8
  %1286 = getelementptr inbounds %struct.bz_stream* %1285, i32 0, i32 1
  %1287 = load i32* %1286, align 4
  %1288 = add i32 %1287, -1
  store i32 %1288, i32* %1286, align 4
  %1289 = load %struct.DState** %1, align 8
  %1290 = getelementptr inbounds %struct.DState* %1289, i32 0, i32 0
  %1291 = load %struct.bz_stream** %1290, align 8
  %1292 = getelementptr inbounds %struct.bz_stream* %1291, i32 0, i32 2
  %1293 = load i32* %1292, align 4
  %1294 = add i32 %1293, 1
  store i32 %1294, i32* %1292, align 4
  %1295 = load %struct.DState** %1, align 8
  %1296 = getelementptr inbounds %struct.DState* %1295, i32 0, i32 0
  %1297 = load %struct.bz_stream** %1296, align 8
  %1298 = getelementptr inbounds %struct.bz_stream* %1297, i32 0, i32 2
  %1299 = load i32* %1298, align 4
  %1300 = icmp eq i32 %1299, 0
  br i1 %1300, label %1301, label %1308

; <label>:1301                                    ; preds = %1258
  %1302 = load %struct.DState** %1, align 8
  %1303 = getelementptr inbounds %struct.DState* %1302, i32 0, i32 0
  %1304 = load %struct.bz_stream** %1303, align 8
  %1305 = getelementptr inbounds %struct.bz_stream* %1304, i32 0, i32 3
  %1306 = load i32* %1305, align 4
  %1307 = add i32 %1306, 1
  store i32 %1307, i32* %1305, align 4
  br label %1308

; <label>:1308                                    ; preds = %1301, %1258
  br label %1229

; <label>:1309                                    ; preds = %1234
  %1310 = load %struct.DState** %1, align 8
  %1311 = getelementptr inbounds %struct.DState* %1310, i32 0, i32 23
  %1312 = load i32* %1311, align 4
  %1313 = shl i32 %1312, 8
  %1314 = load i8* %uc, align 1
  %1315 = zext i8 %1314 to i32
  %1316 = or i32 %1313, %1315
  %1317 = load %struct.DState** %1, align 8
  %1318 = getelementptr inbounds %struct.DState* %1317, i32 0, i32 23
  store i32 %1316, i32* %1318, align 4
  br label %1319

; <label>:1319                                    ; preds = %58, %1309
  %1320 = load %struct.DState** %1, align 8
  %1321 = getelementptr inbounds %struct.DState* %1320, i32 0, i32 1
  store i32 22, i32* %1321, align 4
  br label %1322

; <label>:1322                                    ; preds = %1319, %1401
  %1323 = load %struct.DState** %1, align 8
  %1324 = getelementptr inbounds %struct.DState* %1323, i32 0, i32 8
  %1325 = load i32* %1324, align 4
  %1326 = icmp sge i32 %1325, 8
  br i1 %1326, label %1327, label %1343

; <label>:1327                                    ; preds = %1322
  %1328 = load %struct.DState** %1, align 8
  %1329 = getelementptr inbounds %struct.DState* %1328, i32 0, i32 7
  %1330 = load i32* %1329, align 4
  %1331 = load %struct.DState** %1, align 8
  %1332 = getelementptr inbounds %struct.DState* %1331, i32 0, i32 8
  %1333 = load i32* %1332, align 4
  %1334 = sub nsw i32 %1333, 8
  %1335 = lshr i32 %1330, %1334
  %1336 = and i32 %1335, 255
  store i32 %1336, i32* %v12, align 4
  %1337 = load %struct.DState** %1, align 8
  %1338 = getelementptr inbounds %struct.DState* %1337, i32 0, i32 8
  %1339 = load i32* %1338, align 4
  %1340 = sub nsw i32 %1339, 8
  store i32 %1340, i32* %1338, align 4
  %1341 = load i32* %v12, align 4
  %1342 = trunc i32 %1341 to i8
  store i8 %1342, i8* %uc, align 1
  br label %1402

; <label>:1343                                    ; preds = %1322
  %1344 = load %struct.DState** %1, align 8
  %1345 = getelementptr inbounds %struct.DState* %1344, i32 0, i32 0
  %1346 = load %struct.bz_stream** %1345, align 8
  %1347 = getelementptr inbounds %struct.bz_stream* %1346, i32 0, i32 1
  %1348 = load i32* %1347, align 4
  %1349 = icmp eq i32 %1348, 0
  br i1 %1349, label %1350, label %1351

; <label>:1350                                    ; preds = %1343
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:1351                                    ; preds = %1343
  %1352 = load %struct.DState** %1, align 8
  %1353 = getelementptr inbounds %struct.DState* %1352, i32 0, i32 7
  %1354 = load i32* %1353, align 4
  %1355 = shl i32 %1354, 8
  %1356 = load %struct.DState** %1, align 8
  %1357 = getelementptr inbounds %struct.DState* %1356, i32 0, i32 0
  %1358 = load %struct.bz_stream** %1357, align 8
  %1359 = getelementptr inbounds %struct.bz_stream* %1358, i32 0, i32 0
  %1360 = load i8** %1359, align 8
  %1361 = load i8* %1360, align 1
  %1362 = zext i8 %1361 to i32
  %1363 = or i32 %1355, %1362
  %1364 = load %struct.DState** %1, align 8
  %1365 = getelementptr inbounds %struct.DState* %1364, i32 0, i32 7
  store i32 %1363, i32* %1365, align 4
  %1366 = load %struct.DState** %1, align 8
  %1367 = getelementptr inbounds %struct.DState* %1366, i32 0, i32 8
  %1368 = load i32* %1367, align 4
  %1369 = add nsw i32 %1368, 8
  store i32 %1369, i32* %1367, align 4
  %1370 = load %struct.DState** %1, align 8
  %1371 = getelementptr inbounds %struct.DState* %1370, i32 0, i32 0
  %1372 = load %struct.bz_stream** %1371, align 8
  %1373 = getelementptr inbounds %struct.bz_stream* %1372, i32 0, i32 0
  %1374 = load i8** %1373, align 8
  %1375 = getelementptr inbounds i8* %1374, i32 1
  store i8* %1375, i8** %1373, align 8
  %1376 = load %struct.DState** %1, align 8
  %1377 = getelementptr inbounds %struct.DState* %1376, i32 0, i32 0
  %1378 = load %struct.bz_stream** %1377, align 8
  %1379 = getelementptr inbounds %struct.bz_stream* %1378, i32 0, i32 1
  %1380 = load i32* %1379, align 4
  %1381 = add i32 %1380, -1
  store i32 %1381, i32* %1379, align 4
  %1382 = load %struct.DState** %1, align 8
  %1383 = getelementptr inbounds %struct.DState* %1382, i32 0, i32 0
  %1384 = load %struct.bz_stream** %1383, align 8
  %1385 = getelementptr inbounds %struct.bz_stream* %1384, i32 0, i32 2
  %1386 = load i32* %1385, align 4
  %1387 = add i32 %1386, 1
  store i32 %1387, i32* %1385, align 4
  %1388 = load %struct.DState** %1, align 8
  %1389 = getelementptr inbounds %struct.DState* %1388, i32 0, i32 0
  %1390 = load %struct.bz_stream** %1389, align 8
  %1391 = getelementptr inbounds %struct.bz_stream* %1390, i32 0, i32 2
  %1392 = load i32* %1391, align 4
  %1393 = icmp eq i32 %1392, 0
  br i1 %1393, label %1394, label %1401

; <label>:1394                                    ; preds = %1351
  %1395 = load %struct.DState** %1, align 8
  %1396 = getelementptr inbounds %struct.DState* %1395, i32 0, i32 0
  %1397 = load %struct.bz_stream** %1396, align 8
  %1398 = getelementptr inbounds %struct.bz_stream* %1397, i32 0, i32 3
  %1399 = load i32* %1398, align 4
  %1400 = add i32 %1399, 1
  store i32 %1400, i32* %1398, align 4
  br label %1401

; <label>:1401                                    ; preds = %1394, %1351
  br label %1322

; <label>:1402                                    ; preds = %1327
  %1403 = load %struct.DState** %1, align 8
  %1404 = getelementptr inbounds %struct.DState* %1403, i32 0, i32 23
  %1405 = load i32* %1404, align 4
  %1406 = shl i32 %1405, 8
  %1407 = load i8* %uc, align 1
  %1408 = zext i8 %1407 to i32
  %1409 = or i32 %1406, %1408
  %1410 = load %struct.DState** %1, align 8
  %1411 = getelementptr inbounds %struct.DState* %1410, i32 0, i32 23
  store i32 %1409, i32* %1411, align 4
  br label %1412

; <label>:1412                                    ; preds = %58, %1402
  %1413 = load %struct.DState** %1, align 8
  %1414 = getelementptr inbounds %struct.DState* %1413, i32 0, i32 1
  store i32 23, i32* %1414, align 4
  br label %1415

; <label>:1415                                    ; preds = %1412, %1494
  %1416 = load %struct.DState** %1, align 8
  %1417 = getelementptr inbounds %struct.DState* %1416, i32 0, i32 8
  %1418 = load i32* %1417, align 4
  %1419 = icmp sge i32 %1418, 8
  br i1 %1419, label %1420, label %1436

; <label>:1420                                    ; preds = %1415
  %1421 = load %struct.DState** %1, align 8
  %1422 = getelementptr inbounds %struct.DState* %1421, i32 0, i32 7
  %1423 = load i32* %1422, align 4
  %1424 = load %struct.DState** %1, align 8
  %1425 = getelementptr inbounds %struct.DState* %1424, i32 0, i32 8
  %1426 = load i32* %1425, align 4
  %1427 = sub nsw i32 %1426, 8
  %1428 = lshr i32 %1423, %1427
  %1429 = and i32 %1428, 255
  store i32 %1429, i32* %v13, align 4
  %1430 = load %struct.DState** %1, align 8
  %1431 = getelementptr inbounds %struct.DState* %1430, i32 0, i32 8
  %1432 = load i32* %1431, align 4
  %1433 = sub nsw i32 %1432, 8
  store i32 %1433, i32* %1431, align 4
  %1434 = load i32* %v13, align 4
  %1435 = trunc i32 %1434 to i8
  store i8 %1435, i8* %uc, align 1
  br label %1495

; <label>:1436                                    ; preds = %1415
  %1437 = load %struct.DState** %1, align 8
  %1438 = getelementptr inbounds %struct.DState* %1437, i32 0, i32 0
  %1439 = load %struct.bz_stream** %1438, align 8
  %1440 = getelementptr inbounds %struct.bz_stream* %1439, i32 0, i32 1
  %1441 = load i32* %1440, align 4
  %1442 = icmp eq i32 %1441, 0
  br i1 %1442, label %1443, label %1444

; <label>:1443                                    ; preds = %1436
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:1444                                    ; preds = %1436
  %1445 = load %struct.DState** %1, align 8
  %1446 = getelementptr inbounds %struct.DState* %1445, i32 0, i32 7
  %1447 = load i32* %1446, align 4
  %1448 = shl i32 %1447, 8
  %1449 = load %struct.DState** %1, align 8
  %1450 = getelementptr inbounds %struct.DState* %1449, i32 0, i32 0
  %1451 = load %struct.bz_stream** %1450, align 8
  %1452 = getelementptr inbounds %struct.bz_stream* %1451, i32 0, i32 0
  %1453 = load i8** %1452, align 8
  %1454 = load i8* %1453, align 1
  %1455 = zext i8 %1454 to i32
  %1456 = or i32 %1448, %1455
  %1457 = load %struct.DState** %1, align 8
  %1458 = getelementptr inbounds %struct.DState* %1457, i32 0, i32 7
  store i32 %1456, i32* %1458, align 4
  %1459 = load %struct.DState** %1, align 8
  %1460 = getelementptr inbounds %struct.DState* %1459, i32 0, i32 8
  %1461 = load i32* %1460, align 4
  %1462 = add nsw i32 %1461, 8
  store i32 %1462, i32* %1460, align 4
  %1463 = load %struct.DState** %1, align 8
  %1464 = getelementptr inbounds %struct.DState* %1463, i32 0, i32 0
  %1465 = load %struct.bz_stream** %1464, align 8
  %1466 = getelementptr inbounds %struct.bz_stream* %1465, i32 0, i32 0
  %1467 = load i8** %1466, align 8
  %1468 = getelementptr inbounds i8* %1467, i32 1
  store i8* %1468, i8** %1466, align 8
  %1469 = load %struct.DState** %1, align 8
  %1470 = getelementptr inbounds %struct.DState* %1469, i32 0, i32 0
  %1471 = load %struct.bz_stream** %1470, align 8
  %1472 = getelementptr inbounds %struct.bz_stream* %1471, i32 0, i32 1
  %1473 = load i32* %1472, align 4
  %1474 = add i32 %1473, -1
  store i32 %1474, i32* %1472, align 4
  %1475 = load %struct.DState** %1, align 8
  %1476 = getelementptr inbounds %struct.DState* %1475, i32 0, i32 0
  %1477 = load %struct.bz_stream** %1476, align 8
  %1478 = getelementptr inbounds %struct.bz_stream* %1477, i32 0, i32 2
  %1479 = load i32* %1478, align 4
  %1480 = add i32 %1479, 1
  store i32 %1480, i32* %1478, align 4
  %1481 = load %struct.DState** %1, align 8
  %1482 = getelementptr inbounds %struct.DState* %1481, i32 0, i32 0
  %1483 = load %struct.bz_stream** %1482, align 8
  %1484 = getelementptr inbounds %struct.bz_stream* %1483, i32 0, i32 2
  %1485 = load i32* %1484, align 4
  %1486 = icmp eq i32 %1485, 0
  br i1 %1486, label %1487, label %1494

; <label>:1487                                    ; preds = %1444
  %1488 = load %struct.DState** %1, align 8
  %1489 = getelementptr inbounds %struct.DState* %1488, i32 0, i32 0
  %1490 = load %struct.bz_stream** %1489, align 8
  %1491 = getelementptr inbounds %struct.bz_stream* %1490, i32 0, i32 3
  %1492 = load i32* %1491, align 4
  %1493 = add i32 %1492, 1
  store i32 %1493, i32* %1491, align 4
  br label %1494

; <label>:1494                                    ; preds = %1487, %1444
  br label %1415

; <label>:1495                                    ; preds = %1420
  %1496 = load %struct.DState** %1, align 8
  %1497 = getelementptr inbounds %struct.DState* %1496, i32 0, i32 23
  %1498 = load i32* %1497, align 4
  %1499 = shl i32 %1498, 8
  %1500 = load i8* %uc, align 1
  %1501 = zext i8 %1500 to i32
  %1502 = or i32 %1499, %1501
  %1503 = load %struct.DState** %1, align 8
  %1504 = getelementptr inbounds %struct.DState* %1503, i32 0, i32 23
  store i32 %1502, i32* %1504, align 4
  br label %1505

; <label>:1505                                    ; preds = %58, %1495
  %1506 = load %struct.DState** %1, align 8
  %1507 = getelementptr inbounds %struct.DState* %1506, i32 0, i32 1
  store i32 24, i32* %1507, align 4
  br label %1508

; <label>:1508                                    ; preds = %1505, %1589
  %1509 = load %struct.DState** %1, align 8
  %1510 = getelementptr inbounds %struct.DState* %1509, i32 0, i32 8
  %1511 = load i32* %1510, align 4
  %1512 = icmp sge i32 %1511, 1
  br i1 %1512, label %1513, label %1531

; <label>:1513                                    ; preds = %1508
  %1514 = load %struct.DState** %1, align 8
  %1515 = getelementptr inbounds %struct.DState* %1514, i32 0, i32 7
  %1516 = load i32* %1515, align 4
  %1517 = load %struct.DState** %1, align 8
  %1518 = getelementptr inbounds %struct.DState* %1517, i32 0, i32 8
  %1519 = load i32* %1518, align 4
  %1520 = sub nsw i32 %1519, 1
  %1521 = lshr i32 %1516, %1520
  %1522 = and i32 %1521, 1
  store i32 %1522, i32* %v14, align 4
  %1523 = load %struct.DState** %1, align 8
  %1524 = getelementptr inbounds %struct.DState* %1523, i32 0, i32 8
  %1525 = load i32* %1524, align 4
  %1526 = sub nsw i32 %1525, 1
  store i32 %1526, i32* %1524, align 4
  %1527 = load i32* %v14, align 4
  %1528 = trunc i32 %1527 to i8
  %1529 = load %struct.DState** %1, align 8
  %1530 = getelementptr inbounds %struct.DState* %1529, i32 0, i32 4
  store i8 %1528, i8* %1530, align 1
  br label %1590

; <label>:1531                                    ; preds = %1508
  %1532 = load %struct.DState** %1, align 8
  %1533 = getelementptr inbounds %struct.DState* %1532, i32 0, i32 0
  %1534 = load %struct.bz_stream** %1533, align 8
  %1535 = getelementptr inbounds %struct.bz_stream* %1534, i32 0, i32 1
  %1536 = load i32* %1535, align 4
  %1537 = icmp eq i32 %1536, 0
  br i1 %1537, label %1538, label %1539

; <label>:1538                                    ; preds = %1531
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:1539                                    ; preds = %1531
  %1540 = load %struct.DState** %1, align 8
  %1541 = getelementptr inbounds %struct.DState* %1540, i32 0, i32 7
  %1542 = load i32* %1541, align 4
  %1543 = shl i32 %1542, 8
  %1544 = load %struct.DState** %1, align 8
  %1545 = getelementptr inbounds %struct.DState* %1544, i32 0, i32 0
  %1546 = load %struct.bz_stream** %1545, align 8
  %1547 = getelementptr inbounds %struct.bz_stream* %1546, i32 0, i32 0
  %1548 = load i8** %1547, align 8
  %1549 = load i8* %1548, align 1
  %1550 = zext i8 %1549 to i32
  %1551 = or i32 %1543, %1550
  %1552 = load %struct.DState** %1, align 8
  %1553 = getelementptr inbounds %struct.DState* %1552, i32 0, i32 7
  store i32 %1551, i32* %1553, align 4
  %1554 = load %struct.DState** %1, align 8
  %1555 = getelementptr inbounds %struct.DState* %1554, i32 0, i32 8
  %1556 = load i32* %1555, align 4
  %1557 = add nsw i32 %1556, 8
  store i32 %1557, i32* %1555, align 4
  %1558 = load %struct.DState** %1, align 8
  %1559 = getelementptr inbounds %struct.DState* %1558, i32 0, i32 0
  %1560 = load %struct.bz_stream** %1559, align 8
  %1561 = getelementptr inbounds %struct.bz_stream* %1560, i32 0, i32 0
  %1562 = load i8** %1561, align 8
  %1563 = getelementptr inbounds i8* %1562, i32 1
  store i8* %1563, i8** %1561, align 8
  %1564 = load %struct.DState** %1, align 8
  %1565 = getelementptr inbounds %struct.DState* %1564, i32 0, i32 0
  %1566 = load %struct.bz_stream** %1565, align 8
  %1567 = getelementptr inbounds %struct.bz_stream* %1566, i32 0, i32 1
  %1568 = load i32* %1567, align 4
  %1569 = add i32 %1568, -1
  store i32 %1569, i32* %1567, align 4
  %1570 = load %struct.DState** %1, align 8
  %1571 = getelementptr inbounds %struct.DState* %1570, i32 0, i32 0
  %1572 = load %struct.bz_stream** %1571, align 8
  %1573 = getelementptr inbounds %struct.bz_stream* %1572, i32 0, i32 2
  %1574 = load i32* %1573, align 4
  %1575 = add i32 %1574, 1
  store i32 %1575, i32* %1573, align 4
  %1576 = load %struct.DState** %1, align 8
  %1577 = getelementptr inbounds %struct.DState* %1576, i32 0, i32 0
  %1578 = load %struct.bz_stream** %1577, align 8
  %1579 = getelementptr inbounds %struct.bz_stream* %1578, i32 0, i32 2
  %1580 = load i32* %1579, align 4
  %1581 = icmp eq i32 %1580, 0
  br i1 %1581, label %1582, label %1589

; <label>:1582                                    ; preds = %1539
  %1583 = load %struct.DState** %1, align 8
  %1584 = getelementptr inbounds %struct.DState* %1583, i32 0, i32 0
  %1585 = load %struct.bz_stream** %1584, align 8
  %1586 = getelementptr inbounds %struct.bz_stream* %1585, i32 0, i32 3
  %1587 = load i32* %1586, align 4
  %1588 = add i32 %1587, 1
  store i32 %1588, i32* %1586, align 4
  br label %1589

; <label>:1589                                    ; preds = %1582, %1539
  br label %1508

; <label>:1590                                    ; preds = %1513
  %1591 = load %struct.DState** %1, align 8
  %1592 = getelementptr inbounds %struct.DState* %1591, i32 0, i32 13
  store i32 0, i32* %1592, align 4
  br label %1593

; <label>:1593                                    ; preds = %58, %1590
  %1594 = load %struct.DState** %1, align 8
  %1595 = getelementptr inbounds %struct.DState* %1594, i32 0, i32 1
  store i32 25, i32* %1595, align 4
  br label %1596

; <label>:1596                                    ; preds = %1593, %1675
  %1597 = load %struct.DState** %1, align 8
  %1598 = getelementptr inbounds %struct.DState* %1597, i32 0, i32 8
  %1599 = load i32* %1598, align 4
  %1600 = icmp sge i32 %1599, 8
  br i1 %1600, label %1601, label %1617

; <label>:1601                                    ; preds = %1596
  %1602 = load %struct.DState** %1, align 8
  %1603 = getelementptr inbounds %struct.DState* %1602, i32 0, i32 7
  %1604 = load i32* %1603, align 4
  %1605 = load %struct.DState** %1, align 8
  %1606 = getelementptr inbounds %struct.DState* %1605, i32 0, i32 8
  %1607 = load i32* %1606, align 4
  %1608 = sub nsw i32 %1607, 8
  %1609 = lshr i32 %1604, %1608
  %1610 = and i32 %1609, 255
  store i32 %1610, i32* %v15, align 4
  %1611 = load %struct.DState** %1, align 8
  %1612 = getelementptr inbounds %struct.DState* %1611, i32 0, i32 8
  %1613 = load i32* %1612, align 4
  %1614 = sub nsw i32 %1613, 8
  store i32 %1614, i32* %1612, align 4
  %1615 = load i32* %v15, align 4
  %1616 = trunc i32 %1615 to i8
  store i8 %1616, i8* %uc, align 1
  br label %1676

; <label>:1617                                    ; preds = %1596
  %1618 = load %struct.DState** %1, align 8
  %1619 = getelementptr inbounds %struct.DState* %1618, i32 0, i32 0
  %1620 = load %struct.bz_stream** %1619, align 8
  %1621 = getelementptr inbounds %struct.bz_stream* %1620, i32 0, i32 1
  %1622 = load i32* %1621, align 4
  %1623 = icmp eq i32 %1622, 0
  br i1 %1623, label %1624, label %1625

; <label>:1624                                    ; preds = %1617
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:1625                                    ; preds = %1617
  %1626 = load %struct.DState** %1, align 8
  %1627 = getelementptr inbounds %struct.DState* %1626, i32 0, i32 7
  %1628 = load i32* %1627, align 4
  %1629 = shl i32 %1628, 8
  %1630 = load %struct.DState** %1, align 8
  %1631 = getelementptr inbounds %struct.DState* %1630, i32 0, i32 0
  %1632 = load %struct.bz_stream** %1631, align 8
  %1633 = getelementptr inbounds %struct.bz_stream* %1632, i32 0, i32 0
  %1634 = load i8** %1633, align 8
  %1635 = load i8* %1634, align 1
  %1636 = zext i8 %1635 to i32
  %1637 = or i32 %1629, %1636
  %1638 = load %struct.DState** %1, align 8
  %1639 = getelementptr inbounds %struct.DState* %1638, i32 0, i32 7
  store i32 %1637, i32* %1639, align 4
  %1640 = load %struct.DState** %1, align 8
  %1641 = getelementptr inbounds %struct.DState* %1640, i32 0, i32 8
  %1642 = load i32* %1641, align 4
  %1643 = add nsw i32 %1642, 8
  store i32 %1643, i32* %1641, align 4
  %1644 = load %struct.DState** %1, align 8
  %1645 = getelementptr inbounds %struct.DState* %1644, i32 0, i32 0
  %1646 = load %struct.bz_stream** %1645, align 8
  %1647 = getelementptr inbounds %struct.bz_stream* %1646, i32 0, i32 0
  %1648 = load i8** %1647, align 8
  %1649 = getelementptr inbounds i8* %1648, i32 1
  store i8* %1649, i8** %1647, align 8
  %1650 = load %struct.DState** %1, align 8
  %1651 = getelementptr inbounds %struct.DState* %1650, i32 0, i32 0
  %1652 = load %struct.bz_stream** %1651, align 8
  %1653 = getelementptr inbounds %struct.bz_stream* %1652, i32 0, i32 1
  %1654 = load i32* %1653, align 4
  %1655 = add i32 %1654, -1
  store i32 %1655, i32* %1653, align 4
  %1656 = load %struct.DState** %1, align 8
  %1657 = getelementptr inbounds %struct.DState* %1656, i32 0, i32 0
  %1658 = load %struct.bz_stream** %1657, align 8
  %1659 = getelementptr inbounds %struct.bz_stream* %1658, i32 0, i32 2
  %1660 = load i32* %1659, align 4
  %1661 = add i32 %1660, 1
  store i32 %1661, i32* %1659, align 4
  %1662 = load %struct.DState** %1, align 8
  %1663 = getelementptr inbounds %struct.DState* %1662, i32 0, i32 0
  %1664 = load %struct.bz_stream** %1663, align 8
  %1665 = getelementptr inbounds %struct.bz_stream* %1664, i32 0, i32 2
  %1666 = load i32* %1665, align 4
  %1667 = icmp eq i32 %1666, 0
  br i1 %1667, label %1668, label %1675

; <label>:1668                                    ; preds = %1625
  %1669 = load %struct.DState** %1, align 8
  %1670 = getelementptr inbounds %struct.DState* %1669, i32 0, i32 0
  %1671 = load %struct.bz_stream** %1670, align 8
  %1672 = getelementptr inbounds %struct.bz_stream* %1671, i32 0, i32 3
  %1673 = load i32* %1672, align 4
  %1674 = add i32 %1673, 1
  store i32 %1674, i32* %1672, align 4
  br label %1675

; <label>:1675                                    ; preds = %1668, %1625
  br label %1596

; <label>:1676                                    ; preds = %1601
  %1677 = load %struct.DState** %1, align 8
  %1678 = getelementptr inbounds %struct.DState* %1677, i32 0, i32 13
  %1679 = load i32* %1678, align 4
  %1680 = shl i32 %1679, 8
  %1681 = load i8* %uc, align 1
  %1682 = zext i8 %1681 to i32
  %1683 = or i32 %1680, %1682
  %1684 = load %struct.DState** %1, align 8
  %1685 = getelementptr inbounds %struct.DState* %1684, i32 0, i32 13
  store i32 %1683, i32* %1685, align 4
  br label %1686

; <label>:1686                                    ; preds = %58, %1676
  %1687 = load %struct.DState** %1, align 8
  %1688 = getelementptr inbounds %struct.DState* %1687, i32 0, i32 1
  store i32 26, i32* %1688, align 4
  br label %1689

; <label>:1689                                    ; preds = %1686, %1768
  %1690 = load %struct.DState** %1, align 8
  %1691 = getelementptr inbounds %struct.DState* %1690, i32 0, i32 8
  %1692 = load i32* %1691, align 4
  %1693 = icmp sge i32 %1692, 8
  br i1 %1693, label %1694, label %1710

; <label>:1694                                    ; preds = %1689
  %1695 = load %struct.DState** %1, align 8
  %1696 = getelementptr inbounds %struct.DState* %1695, i32 0, i32 7
  %1697 = load i32* %1696, align 4
  %1698 = load %struct.DState** %1, align 8
  %1699 = getelementptr inbounds %struct.DState* %1698, i32 0, i32 8
  %1700 = load i32* %1699, align 4
  %1701 = sub nsw i32 %1700, 8
  %1702 = lshr i32 %1697, %1701
  %1703 = and i32 %1702, 255
  store i32 %1703, i32* %v16, align 4
  %1704 = load %struct.DState** %1, align 8
  %1705 = getelementptr inbounds %struct.DState* %1704, i32 0, i32 8
  %1706 = load i32* %1705, align 4
  %1707 = sub nsw i32 %1706, 8
  store i32 %1707, i32* %1705, align 4
  %1708 = load i32* %v16, align 4
  %1709 = trunc i32 %1708 to i8
  store i8 %1709, i8* %uc, align 1
  br label %1769

; <label>:1710                                    ; preds = %1689
  %1711 = load %struct.DState** %1, align 8
  %1712 = getelementptr inbounds %struct.DState* %1711, i32 0, i32 0
  %1713 = load %struct.bz_stream** %1712, align 8
  %1714 = getelementptr inbounds %struct.bz_stream* %1713, i32 0, i32 1
  %1715 = load i32* %1714, align 4
  %1716 = icmp eq i32 %1715, 0
  br i1 %1716, label %1717, label %1718

; <label>:1717                                    ; preds = %1710
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:1718                                    ; preds = %1710
  %1719 = load %struct.DState** %1, align 8
  %1720 = getelementptr inbounds %struct.DState* %1719, i32 0, i32 7
  %1721 = load i32* %1720, align 4
  %1722 = shl i32 %1721, 8
  %1723 = load %struct.DState** %1, align 8
  %1724 = getelementptr inbounds %struct.DState* %1723, i32 0, i32 0
  %1725 = load %struct.bz_stream** %1724, align 8
  %1726 = getelementptr inbounds %struct.bz_stream* %1725, i32 0, i32 0
  %1727 = load i8** %1726, align 8
  %1728 = load i8* %1727, align 1
  %1729 = zext i8 %1728 to i32
  %1730 = or i32 %1722, %1729
  %1731 = load %struct.DState** %1, align 8
  %1732 = getelementptr inbounds %struct.DState* %1731, i32 0, i32 7
  store i32 %1730, i32* %1732, align 4
  %1733 = load %struct.DState** %1, align 8
  %1734 = getelementptr inbounds %struct.DState* %1733, i32 0, i32 8
  %1735 = load i32* %1734, align 4
  %1736 = add nsw i32 %1735, 8
  store i32 %1736, i32* %1734, align 4
  %1737 = load %struct.DState** %1, align 8
  %1738 = getelementptr inbounds %struct.DState* %1737, i32 0, i32 0
  %1739 = load %struct.bz_stream** %1738, align 8
  %1740 = getelementptr inbounds %struct.bz_stream* %1739, i32 0, i32 0
  %1741 = load i8** %1740, align 8
  %1742 = getelementptr inbounds i8* %1741, i32 1
  store i8* %1742, i8** %1740, align 8
  %1743 = load %struct.DState** %1, align 8
  %1744 = getelementptr inbounds %struct.DState* %1743, i32 0, i32 0
  %1745 = load %struct.bz_stream** %1744, align 8
  %1746 = getelementptr inbounds %struct.bz_stream* %1745, i32 0, i32 1
  %1747 = load i32* %1746, align 4
  %1748 = add i32 %1747, -1
  store i32 %1748, i32* %1746, align 4
  %1749 = load %struct.DState** %1, align 8
  %1750 = getelementptr inbounds %struct.DState* %1749, i32 0, i32 0
  %1751 = load %struct.bz_stream** %1750, align 8
  %1752 = getelementptr inbounds %struct.bz_stream* %1751, i32 0, i32 2
  %1753 = load i32* %1752, align 4
  %1754 = add i32 %1753, 1
  store i32 %1754, i32* %1752, align 4
  %1755 = load %struct.DState** %1, align 8
  %1756 = getelementptr inbounds %struct.DState* %1755, i32 0, i32 0
  %1757 = load %struct.bz_stream** %1756, align 8
  %1758 = getelementptr inbounds %struct.bz_stream* %1757, i32 0, i32 2
  %1759 = load i32* %1758, align 4
  %1760 = icmp eq i32 %1759, 0
  br i1 %1760, label %1761, label %1768

; <label>:1761                                    ; preds = %1718
  %1762 = load %struct.DState** %1, align 8
  %1763 = getelementptr inbounds %struct.DState* %1762, i32 0, i32 0
  %1764 = load %struct.bz_stream** %1763, align 8
  %1765 = getelementptr inbounds %struct.bz_stream* %1764, i32 0, i32 3
  %1766 = load i32* %1765, align 4
  %1767 = add i32 %1766, 1
  store i32 %1767, i32* %1765, align 4
  br label %1768

; <label>:1768                                    ; preds = %1761, %1718
  br label %1689

; <label>:1769                                    ; preds = %1694
  %1770 = load %struct.DState** %1, align 8
  %1771 = getelementptr inbounds %struct.DState* %1770, i32 0, i32 13
  %1772 = load i32* %1771, align 4
  %1773 = shl i32 %1772, 8
  %1774 = load i8* %uc, align 1
  %1775 = zext i8 %1774 to i32
  %1776 = or i32 %1773, %1775
  %1777 = load %struct.DState** %1, align 8
  %1778 = getelementptr inbounds %struct.DState* %1777, i32 0, i32 13
  store i32 %1776, i32* %1778, align 4
  br label %1779

; <label>:1779                                    ; preds = %58, %1769
  %1780 = load %struct.DState** %1, align 8
  %1781 = getelementptr inbounds %struct.DState* %1780, i32 0, i32 1
  store i32 27, i32* %1781, align 4
  br label %1782

; <label>:1782                                    ; preds = %1779, %1861
  %1783 = load %struct.DState** %1, align 8
  %1784 = getelementptr inbounds %struct.DState* %1783, i32 0, i32 8
  %1785 = load i32* %1784, align 4
  %1786 = icmp sge i32 %1785, 8
  br i1 %1786, label %1787, label %1803

; <label>:1787                                    ; preds = %1782
  %1788 = load %struct.DState** %1, align 8
  %1789 = getelementptr inbounds %struct.DState* %1788, i32 0, i32 7
  %1790 = load i32* %1789, align 4
  %1791 = load %struct.DState** %1, align 8
  %1792 = getelementptr inbounds %struct.DState* %1791, i32 0, i32 8
  %1793 = load i32* %1792, align 4
  %1794 = sub nsw i32 %1793, 8
  %1795 = lshr i32 %1790, %1794
  %1796 = and i32 %1795, 255
  store i32 %1796, i32* %v17, align 4
  %1797 = load %struct.DState** %1, align 8
  %1798 = getelementptr inbounds %struct.DState* %1797, i32 0, i32 8
  %1799 = load i32* %1798, align 4
  %1800 = sub nsw i32 %1799, 8
  store i32 %1800, i32* %1798, align 4
  %1801 = load i32* %v17, align 4
  %1802 = trunc i32 %1801 to i8
  store i8 %1802, i8* %uc, align 1
  br label %1862

; <label>:1803                                    ; preds = %1782
  %1804 = load %struct.DState** %1, align 8
  %1805 = getelementptr inbounds %struct.DState* %1804, i32 0, i32 0
  %1806 = load %struct.bz_stream** %1805, align 8
  %1807 = getelementptr inbounds %struct.bz_stream* %1806, i32 0, i32 1
  %1808 = load i32* %1807, align 4
  %1809 = icmp eq i32 %1808, 0
  br i1 %1809, label %1810, label %1811

; <label>:1810                                    ; preds = %1803
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:1811                                    ; preds = %1803
  %1812 = load %struct.DState** %1, align 8
  %1813 = getelementptr inbounds %struct.DState* %1812, i32 0, i32 7
  %1814 = load i32* %1813, align 4
  %1815 = shl i32 %1814, 8
  %1816 = load %struct.DState** %1, align 8
  %1817 = getelementptr inbounds %struct.DState* %1816, i32 0, i32 0
  %1818 = load %struct.bz_stream** %1817, align 8
  %1819 = getelementptr inbounds %struct.bz_stream* %1818, i32 0, i32 0
  %1820 = load i8** %1819, align 8
  %1821 = load i8* %1820, align 1
  %1822 = zext i8 %1821 to i32
  %1823 = or i32 %1815, %1822
  %1824 = load %struct.DState** %1, align 8
  %1825 = getelementptr inbounds %struct.DState* %1824, i32 0, i32 7
  store i32 %1823, i32* %1825, align 4
  %1826 = load %struct.DState** %1, align 8
  %1827 = getelementptr inbounds %struct.DState* %1826, i32 0, i32 8
  %1828 = load i32* %1827, align 4
  %1829 = add nsw i32 %1828, 8
  store i32 %1829, i32* %1827, align 4
  %1830 = load %struct.DState** %1, align 8
  %1831 = getelementptr inbounds %struct.DState* %1830, i32 0, i32 0
  %1832 = load %struct.bz_stream** %1831, align 8
  %1833 = getelementptr inbounds %struct.bz_stream* %1832, i32 0, i32 0
  %1834 = load i8** %1833, align 8
  %1835 = getelementptr inbounds i8* %1834, i32 1
  store i8* %1835, i8** %1833, align 8
  %1836 = load %struct.DState** %1, align 8
  %1837 = getelementptr inbounds %struct.DState* %1836, i32 0, i32 0
  %1838 = load %struct.bz_stream** %1837, align 8
  %1839 = getelementptr inbounds %struct.bz_stream* %1838, i32 0, i32 1
  %1840 = load i32* %1839, align 4
  %1841 = add i32 %1840, -1
  store i32 %1841, i32* %1839, align 4
  %1842 = load %struct.DState** %1, align 8
  %1843 = getelementptr inbounds %struct.DState* %1842, i32 0, i32 0
  %1844 = load %struct.bz_stream** %1843, align 8
  %1845 = getelementptr inbounds %struct.bz_stream* %1844, i32 0, i32 2
  %1846 = load i32* %1845, align 4
  %1847 = add i32 %1846, 1
  store i32 %1847, i32* %1845, align 4
  %1848 = load %struct.DState** %1, align 8
  %1849 = getelementptr inbounds %struct.DState* %1848, i32 0, i32 0
  %1850 = load %struct.bz_stream** %1849, align 8
  %1851 = getelementptr inbounds %struct.bz_stream* %1850, i32 0, i32 2
  %1852 = load i32* %1851, align 4
  %1853 = icmp eq i32 %1852, 0
  br i1 %1853, label %1854, label %1861

; <label>:1854                                    ; preds = %1811
  %1855 = load %struct.DState** %1, align 8
  %1856 = getelementptr inbounds %struct.DState* %1855, i32 0, i32 0
  %1857 = load %struct.bz_stream** %1856, align 8
  %1858 = getelementptr inbounds %struct.bz_stream* %1857, i32 0, i32 3
  %1859 = load i32* %1858, align 4
  %1860 = add i32 %1859, 1
  store i32 %1860, i32* %1858, align 4
  br label %1861

; <label>:1861                                    ; preds = %1854, %1811
  br label %1782

; <label>:1862                                    ; preds = %1787
  %1863 = load %struct.DState** %1, align 8
  %1864 = getelementptr inbounds %struct.DState* %1863, i32 0, i32 13
  %1865 = load i32* %1864, align 4
  %1866 = shl i32 %1865, 8
  %1867 = load i8* %uc, align 1
  %1868 = zext i8 %1867 to i32
  %1869 = or i32 %1866, %1868
  %1870 = load %struct.DState** %1, align 8
  %1871 = getelementptr inbounds %struct.DState* %1870, i32 0, i32 13
  store i32 %1869, i32* %1871, align 4
  %1872 = load %struct.DState** %1, align 8
  %1873 = getelementptr inbounds %struct.DState* %1872, i32 0, i32 13
  %1874 = load i32* %1873, align 4
  %1875 = icmp slt i32 %1874, 0
  br i1 %1875, label %1876, label %1877

; <label>:1876                                    ; preds = %1862
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:1877                                    ; preds = %1862
  %1878 = load %struct.DState** %1, align 8
  %1879 = getelementptr inbounds %struct.DState* %1878, i32 0, i32 13
  %1880 = load i32* %1879, align 4
  %1881 = load %struct.DState** %1, align 8
  %1882 = getelementptr inbounds %struct.DState* %1881, i32 0, i32 9
  %1883 = load i32* %1882, align 4
  %1884 = mul nsw i32 100000, %1883
  %1885 = add nsw i32 10, %1884
  %1886 = icmp sgt i32 %1880, %1885
  br i1 %1886, label %1887, label %1888

; <label>:1887                                    ; preds = %1877
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:1888                                    ; preds = %1877
  store i32 0, i32* %i, align 4
  br label %1889

; <label>:1889                                    ; preds = %1993, %1888
  %1890 = load i32* %i, align 4
  %1891 = icmp slt i32 %1890, 16
  br i1 %1891, label %1892, label %1996

; <label>:1892                                    ; preds = %1889
  br label %1893

; <label>:1893                                    ; preds = %58, %1892
  %1894 = load %struct.DState** %1, align 8
  %1895 = getelementptr inbounds %struct.DState* %1894, i32 0, i32 1
  store i32 28, i32* %1895, align 4
  br label %1896

; <label>:1896                                    ; preds = %1893, %1975
  %1897 = load %struct.DState** %1, align 8
  %1898 = getelementptr inbounds %struct.DState* %1897, i32 0, i32 8
  %1899 = load i32* %1898, align 4
  %1900 = icmp sge i32 %1899, 1
  br i1 %1900, label %1901, label %1917

; <label>:1901                                    ; preds = %1896
  %1902 = load %struct.DState** %1, align 8
  %1903 = getelementptr inbounds %struct.DState* %1902, i32 0, i32 7
  %1904 = load i32* %1903, align 4
  %1905 = load %struct.DState** %1, align 8
  %1906 = getelementptr inbounds %struct.DState* %1905, i32 0, i32 8
  %1907 = load i32* %1906, align 4
  %1908 = sub nsw i32 %1907, 1
  %1909 = lshr i32 %1904, %1908
  %1910 = and i32 %1909, 1
  store i32 %1910, i32* %v18, align 4
  %1911 = load %struct.DState** %1, align 8
  %1912 = getelementptr inbounds %struct.DState* %1911, i32 0, i32 8
  %1913 = load i32* %1912, align 4
  %1914 = sub nsw i32 %1913, 1
  store i32 %1914, i32* %1912, align 4
  %1915 = load i32* %v18, align 4
  %1916 = trunc i32 %1915 to i8
  store i8 %1916, i8* %uc, align 1
  br label %1976

; <label>:1917                                    ; preds = %1896
  %1918 = load %struct.DState** %1, align 8
  %1919 = getelementptr inbounds %struct.DState* %1918, i32 0, i32 0
  %1920 = load %struct.bz_stream** %1919, align 8
  %1921 = getelementptr inbounds %struct.bz_stream* %1920, i32 0, i32 1
  %1922 = load i32* %1921, align 4
  %1923 = icmp eq i32 %1922, 0
  br i1 %1923, label %1924, label %1925

; <label>:1924                                    ; preds = %1917
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:1925                                    ; preds = %1917
  %1926 = load %struct.DState** %1, align 8
  %1927 = getelementptr inbounds %struct.DState* %1926, i32 0, i32 7
  %1928 = load i32* %1927, align 4
  %1929 = shl i32 %1928, 8
  %1930 = load %struct.DState** %1, align 8
  %1931 = getelementptr inbounds %struct.DState* %1930, i32 0, i32 0
  %1932 = load %struct.bz_stream** %1931, align 8
  %1933 = getelementptr inbounds %struct.bz_stream* %1932, i32 0, i32 0
  %1934 = load i8** %1933, align 8
  %1935 = load i8* %1934, align 1
  %1936 = zext i8 %1935 to i32
  %1937 = or i32 %1929, %1936
  %1938 = load %struct.DState** %1, align 8
  %1939 = getelementptr inbounds %struct.DState* %1938, i32 0, i32 7
  store i32 %1937, i32* %1939, align 4
  %1940 = load %struct.DState** %1, align 8
  %1941 = getelementptr inbounds %struct.DState* %1940, i32 0, i32 8
  %1942 = load i32* %1941, align 4
  %1943 = add nsw i32 %1942, 8
  store i32 %1943, i32* %1941, align 4
  %1944 = load %struct.DState** %1, align 8
  %1945 = getelementptr inbounds %struct.DState* %1944, i32 0, i32 0
  %1946 = load %struct.bz_stream** %1945, align 8
  %1947 = getelementptr inbounds %struct.bz_stream* %1946, i32 0, i32 0
  %1948 = load i8** %1947, align 8
  %1949 = getelementptr inbounds i8* %1948, i32 1
  store i8* %1949, i8** %1947, align 8
  %1950 = load %struct.DState** %1, align 8
  %1951 = getelementptr inbounds %struct.DState* %1950, i32 0, i32 0
  %1952 = load %struct.bz_stream** %1951, align 8
  %1953 = getelementptr inbounds %struct.bz_stream* %1952, i32 0, i32 1
  %1954 = load i32* %1953, align 4
  %1955 = add i32 %1954, -1
  store i32 %1955, i32* %1953, align 4
  %1956 = load %struct.DState** %1, align 8
  %1957 = getelementptr inbounds %struct.DState* %1956, i32 0, i32 0
  %1958 = load %struct.bz_stream** %1957, align 8
  %1959 = getelementptr inbounds %struct.bz_stream* %1958, i32 0, i32 2
  %1960 = load i32* %1959, align 4
  %1961 = add i32 %1960, 1
  store i32 %1961, i32* %1959, align 4
  %1962 = load %struct.DState** %1, align 8
  %1963 = getelementptr inbounds %struct.DState* %1962, i32 0, i32 0
  %1964 = load %struct.bz_stream** %1963, align 8
  %1965 = getelementptr inbounds %struct.bz_stream* %1964, i32 0, i32 2
  %1966 = load i32* %1965, align 4
  %1967 = icmp eq i32 %1966, 0
  br i1 %1967, label %1968, label %1975

; <label>:1968                                    ; preds = %1925
  %1969 = load %struct.DState** %1, align 8
  %1970 = getelementptr inbounds %struct.DState* %1969, i32 0, i32 0
  %1971 = load %struct.bz_stream** %1970, align 8
  %1972 = getelementptr inbounds %struct.bz_stream* %1971, i32 0, i32 3
  %1973 = load i32* %1972, align 4
  %1974 = add i32 %1973, 1
  store i32 %1974, i32* %1972, align 4
  br label %1975

; <label>:1975                                    ; preds = %1968, %1925
  br label %1896

; <label>:1976                                    ; preds = %1901
  %1977 = load i8* %uc, align 1
  %1978 = zext i8 %1977 to i32
  %1979 = icmp eq i32 %1978, 1
  br i1 %1979, label %1980, label %1986

; <label>:1980                                    ; preds = %1976
  %1981 = load i32* %i, align 4
  %1982 = sext i32 %1981 to i64
  %1983 = load %struct.DState** %1, align 8
  %1984 = getelementptr inbounds %struct.DState* %1983, i32 0, i32 29
  %1985 = getelementptr inbounds [16 x i8]* %1984, i32 0, i64 %1982
  store i8 1, i8* %1985, align 1
  br label %1992

; <label>:1986                                    ; preds = %1976
  %1987 = load i32* %i, align 4
  %1988 = sext i32 %1987 to i64
  %1989 = load %struct.DState** %1, align 8
  %1990 = getelementptr inbounds %struct.DState* %1989, i32 0, i32 29
  %1991 = getelementptr inbounds [16 x i8]* %1990, i32 0, i64 %1988
  store i8 0, i8* %1991, align 1
  br label %1992

; <label>:1992                                    ; preds = %1986, %1980
  br label %1993

; <label>:1993                                    ; preds = %1992
  %1994 = load i32* %i, align 4
  %1995 = add nsw i32 %1994, 1
  store i32 %1995, i32* %i, align 4
  br label %1889

; <label>:1996                                    ; preds = %1889
  store i32 0, i32* %i, align 4
  br label %1997

; <label>:1997                                    ; preds = %2006, %1996
  %1998 = load i32* %i, align 4
  %1999 = icmp slt i32 %1998, 256
  br i1 %1999, label %2000, label %2009

; <label>:2000                                    ; preds = %1997
  %2001 = load i32* %i, align 4
  %2002 = sext i32 %2001 to i64
  %2003 = load %struct.DState** %1, align 8
  %2004 = getelementptr inbounds %struct.DState* %2003, i32 0, i32 28
  %2005 = getelementptr inbounds [256 x i8]* %2004, i32 0, i64 %2002
  store i8 0, i8* %2005, align 1
  br label %2006

; <label>:2006                                    ; preds = %2000
  %2007 = load i32* %i, align 4
  %2008 = add nsw i32 %2007, 1
  store i32 %2008, i32* %i, align 4
  br label %1997

; <label>:2009                                    ; preds = %1997
  store i32 0, i32* %i, align 4
  br label %2010

; <label>:2010                                    ; preds = %2128, %2009
  %2011 = load i32* %i, align 4
  %2012 = icmp slt i32 %2011, 16
  br i1 %2012, label %2013, label %2131

; <label>:2013                                    ; preds = %2010
  %2014 = load i32* %i, align 4
  %2015 = sext i32 %2014 to i64
  %2016 = load %struct.DState** %1, align 8
  %2017 = getelementptr inbounds %struct.DState* %2016, i32 0, i32 29
  %2018 = getelementptr inbounds [16 x i8]* %2017, i32 0, i64 %2015
  %2019 = load i8* %2018, align 1
  %2020 = icmp ne i8 %2019, 0
  br i1 %2020, label %2021, label %2127

; <label>:2021                                    ; preds = %2013
  store i32 0, i32* %j, align 4
  br label %2022

; <label>:2022                                    ; preds = %2123, %2021
  %2023 = load i32* %j, align 4
  %2024 = icmp slt i32 %2023, 16
  br i1 %2024, label %2025, label %2126

; <label>:2025                                    ; preds = %2022
  br label %2026

; <label>:2026                                    ; preds = %58, %2025
  %2027 = load %struct.DState** %1, align 8
  %2028 = getelementptr inbounds %struct.DState* %2027, i32 0, i32 1
  store i32 29, i32* %2028, align 4
  br label %2029

; <label>:2029                                    ; preds = %2026, %2108
  %2030 = load %struct.DState** %1, align 8
  %2031 = getelementptr inbounds %struct.DState* %2030, i32 0, i32 8
  %2032 = load i32* %2031, align 4
  %2033 = icmp sge i32 %2032, 1
  br i1 %2033, label %2034, label %2050

; <label>:2034                                    ; preds = %2029
  %2035 = load %struct.DState** %1, align 8
  %2036 = getelementptr inbounds %struct.DState* %2035, i32 0, i32 7
  %2037 = load i32* %2036, align 4
  %2038 = load %struct.DState** %1, align 8
  %2039 = getelementptr inbounds %struct.DState* %2038, i32 0, i32 8
  %2040 = load i32* %2039, align 4
  %2041 = sub nsw i32 %2040, 1
  %2042 = lshr i32 %2037, %2041
  %2043 = and i32 %2042, 1
  store i32 %2043, i32* %v19, align 4
  %2044 = load %struct.DState** %1, align 8
  %2045 = getelementptr inbounds %struct.DState* %2044, i32 0, i32 8
  %2046 = load i32* %2045, align 4
  %2047 = sub nsw i32 %2046, 1
  store i32 %2047, i32* %2045, align 4
  %2048 = load i32* %v19, align 4
  %2049 = trunc i32 %2048 to i8
  store i8 %2049, i8* %uc, align 1
  br label %2109

; <label>:2050                                    ; preds = %2029
  %2051 = load %struct.DState** %1, align 8
  %2052 = getelementptr inbounds %struct.DState* %2051, i32 0, i32 0
  %2053 = load %struct.bz_stream** %2052, align 8
  %2054 = getelementptr inbounds %struct.bz_stream* %2053, i32 0, i32 1
  %2055 = load i32* %2054, align 4
  %2056 = icmp eq i32 %2055, 0
  br i1 %2056, label %2057, label %2058

; <label>:2057                                    ; preds = %2050
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:2058                                    ; preds = %2050
  %2059 = load %struct.DState** %1, align 8
  %2060 = getelementptr inbounds %struct.DState* %2059, i32 0, i32 7
  %2061 = load i32* %2060, align 4
  %2062 = shl i32 %2061, 8
  %2063 = load %struct.DState** %1, align 8
  %2064 = getelementptr inbounds %struct.DState* %2063, i32 0, i32 0
  %2065 = load %struct.bz_stream** %2064, align 8
  %2066 = getelementptr inbounds %struct.bz_stream* %2065, i32 0, i32 0
  %2067 = load i8** %2066, align 8
  %2068 = load i8* %2067, align 1
  %2069 = zext i8 %2068 to i32
  %2070 = or i32 %2062, %2069
  %2071 = load %struct.DState** %1, align 8
  %2072 = getelementptr inbounds %struct.DState* %2071, i32 0, i32 7
  store i32 %2070, i32* %2072, align 4
  %2073 = load %struct.DState** %1, align 8
  %2074 = getelementptr inbounds %struct.DState* %2073, i32 0, i32 8
  %2075 = load i32* %2074, align 4
  %2076 = add nsw i32 %2075, 8
  store i32 %2076, i32* %2074, align 4
  %2077 = load %struct.DState** %1, align 8
  %2078 = getelementptr inbounds %struct.DState* %2077, i32 0, i32 0
  %2079 = load %struct.bz_stream** %2078, align 8
  %2080 = getelementptr inbounds %struct.bz_stream* %2079, i32 0, i32 0
  %2081 = load i8** %2080, align 8
  %2082 = getelementptr inbounds i8* %2081, i32 1
  store i8* %2082, i8** %2080, align 8
  %2083 = load %struct.DState** %1, align 8
  %2084 = getelementptr inbounds %struct.DState* %2083, i32 0, i32 0
  %2085 = load %struct.bz_stream** %2084, align 8
  %2086 = getelementptr inbounds %struct.bz_stream* %2085, i32 0, i32 1
  %2087 = load i32* %2086, align 4
  %2088 = add i32 %2087, -1
  store i32 %2088, i32* %2086, align 4
  %2089 = load %struct.DState** %1, align 8
  %2090 = getelementptr inbounds %struct.DState* %2089, i32 0, i32 0
  %2091 = load %struct.bz_stream** %2090, align 8
  %2092 = getelementptr inbounds %struct.bz_stream* %2091, i32 0, i32 2
  %2093 = load i32* %2092, align 4
  %2094 = add i32 %2093, 1
  store i32 %2094, i32* %2092, align 4
  %2095 = load %struct.DState** %1, align 8
  %2096 = getelementptr inbounds %struct.DState* %2095, i32 0, i32 0
  %2097 = load %struct.bz_stream** %2096, align 8
  %2098 = getelementptr inbounds %struct.bz_stream* %2097, i32 0, i32 2
  %2099 = load i32* %2098, align 4
  %2100 = icmp eq i32 %2099, 0
  br i1 %2100, label %2101, label %2108

; <label>:2101                                    ; preds = %2058
  %2102 = load %struct.DState** %1, align 8
  %2103 = getelementptr inbounds %struct.DState* %2102, i32 0, i32 0
  %2104 = load %struct.bz_stream** %2103, align 8
  %2105 = getelementptr inbounds %struct.bz_stream* %2104, i32 0, i32 3
  %2106 = load i32* %2105, align 4
  %2107 = add i32 %2106, 1
  store i32 %2107, i32* %2105, align 4
  br label %2108

; <label>:2108                                    ; preds = %2101, %2058
  br label %2029

; <label>:2109                                    ; preds = %2034
  %2110 = load i8* %uc, align 1
  %2111 = zext i8 %2110 to i32
  %2112 = icmp eq i32 %2111, 1
  br i1 %2112, label %2113, label %2122

; <label>:2113                                    ; preds = %2109
  %2114 = load i32* %i, align 4
  %2115 = mul nsw i32 %2114, 16
  %2116 = load i32* %j, align 4
  %2117 = add nsw i32 %2115, %2116
  %2118 = sext i32 %2117 to i64
  %2119 = load %struct.DState** %1, align 8
  %2120 = getelementptr inbounds %struct.DState* %2119, i32 0, i32 28
  %2121 = getelementptr inbounds [256 x i8]* %2120, i32 0, i64 %2118
  store i8 1, i8* %2121, align 1
  br label %2122

; <label>:2122                                    ; preds = %2113, %2109
  br label %2123

; <label>:2123                                    ; preds = %2122
  %2124 = load i32* %j, align 4
  %2125 = add nsw i32 %2124, 1
  store i32 %2125, i32* %j, align 4
  br label %2022

; <label>:2126                                    ; preds = %2022
  br label %2127

; <label>:2127                                    ; preds = %2126, %2013
  br label %2128

; <label>:2128                                    ; preds = %2127
  %2129 = load i32* %i, align 4
  %2130 = add nsw i32 %2129, 1
  store i32 %2130, i32* %i, align 4
  br label %2010

; <label>:2131                                    ; preds = %2010
  %2132 = load %struct.DState** %1, align 8
  call void @makeMaps_d(%struct.DState* %2132)
  %2133 = load %struct.DState** %1, align 8
  %2134 = getelementptr inbounds %struct.DState* %2133, i32 0, i32 27
  %2135 = load i32* %2134, align 4
  %2136 = icmp eq i32 %2135, 0
  br i1 %2136, label %2137, label %2138

; <label>:2137                                    ; preds = %2131
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:2138                                    ; preds = %2131
  %2139 = load %struct.DState** %1, align 8
  %2140 = getelementptr inbounds %struct.DState* %2139, i32 0, i32 27
  %2141 = load i32* %2140, align 4
  %2142 = add nsw i32 %2141, 2
  store i32 %2142, i32* %alphaSize, align 4
  br label %2143

; <label>:2143                                    ; preds = %58, %2138
  %2144 = load %struct.DState** %1, align 8
  %2145 = getelementptr inbounds %struct.DState* %2144, i32 0, i32 1
  store i32 30, i32* %2145, align 4
  br label %2146

; <label>:2146                                    ; preds = %2143, %2224
  %2147 = load %struct.DState** %1, align 8
  %2148 = getelementptr inbounds %struct.DState* %2147, i32 0, i32 8
  %2149 = load i32* %2148, align 4
  %2150 = icmp sge i32 %2149, 3
  br i1 %2150, label %2151, label %2166

; <label>:2151                                    ; preds = %2146
  %2152 = load %struct.DState** %1, align 8
  %2153 = getelementptr inbounds %struct.DState* %2152, i32 0, i32 7
  %2154 = load i32* %2153, align 4
  %2155 = load %struct.DState** %1, align 8
  %2156 = getelementptr inbounds %struct.DState* %2155, i32 0, i32 8
  %2157 = load i32* %2156, align 4
  %2158 = sub nsw i32 %2157, 3
  %2159 = lshr i32 %2154, %2158
  %2160 = and i32 %2159, 7
  store i32 %2160, i32* %v20, align 4
  %2161 = load %struct.DState** %1, align 8
  %2162 = getelementptr inbounds %struct.DState* %2161, i32 0, i32 8
  %2163 = load i32* %2162, align 4
  %2164 = sub nsw i32 %2163, 3
  store i32 %2164, i32* %2162, align 4
  %2165 = load i32* %v20, align 4
  store i32 %2165, i32* %nGroups, align 4
  br label %2225

; <label>:2166                                    ; preds = %2146
  %2167 = load %struct.DState** %1, align 8
  %2168 = getelementptr inbounds %struct.DState* %2167, i32 0, i32 0
  %2169 = load %struct.bz_stream** %2168, align 8
  %2170 = getelementptr inbounds %struct.bz_stream* %2169, i32 0, i32 1
  %2171 = load i32* %2170, align 4
  %2172 = icmp eq i32 %2171, 0
  br i1 %2172, label %2173, label %2174

; <label>:2173                                    ; preds = %2166
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:2174                                    ; preds = %2166
  %2175 = load %struct.DState** %1, align 8
  %2176 = getelementptr inbounds %struct.DState* %2175, i32 0, i32 7
  %2177 = load i32* %2176, align 4
  %2178 = shl i32 %2177, 8
  %2179 = load %struct.DState** %1, align 8
  %2180 = getelementptr inbounds %struct.DState* %2179, i32 0, i32 0
  %2181 = load %struct.bz_stream** %2180, align 8
  %2182 = getelementptr inbounds %struct.bz_stream* %2181, i32 0, i32 0
  %2183 = load i8** %2182, align 8
  %2184 = load i8* %2183, align 1
  %2185 = zext i8 %2184 to i32
  %2186 = or i32 %2178, %2185
  %2187 = load %struct.DState** %1, align 8
  %2188 = getelementptr inbounds %struct.DState* %2187, i32 0, i32 7
  store i32 %2186, i32* %2188, align 4
  %2189 = load %struct.DState** %1, align 8
  %2190 = getelementptr inbounds %struct.DState* %2189, i32 0, i32 8
  %2191 = load i32* %2190, align 4
  %2192 = add nsw i32 %2191, 8
  store i32 %2192, i32* %2190, align 4
  %2193 = load %struct.DState** %1, align 8
  %2194 = getelementptr inbounds %struct.DState* %2193, i32 0, i32 0
  %2195 = load %struct.bz_stream** %2194, align 8
  %2196 = getelementptr inbounds %struct.bz_stream* %2195, i32 0, i32 0
  %2197 = load i8** %2196, align 8
  %2198 = getelementptr inbounds i8* %2197, i32 1
  store i8* %2198, i8** %2196, align 8
  %2199 = load %struct.DState** %1, align 8
  %2200 = getelementptr inbounds %struct.DState* %2199, i32 0, i32 0
  %2201 = load %struct.bz_stream** %2200, align 8
  %2202 = getelementptr inbounds %struct.bz_stream* %2201, i32 0, i32 1
  %2203 = load i32* %2202, align 4
  %2204 = add i32 %2203, -1
  store i32 %2204, i32* %2202, align 4
  %2205 = load %struct.DState** %1, align 8
  %2206 = getelementptr inbounds %struct.DState* %2205, i32 0, i32 0
  %2207 = load %struct.bz_stream** %2206, align 8
  %2208 = getelementptr inbounds %struct.bz_stream* %2207, i32 0, i32 2
  %2209 = load i32* %2208, align 4
  %2210 = add i32 %2209, 1
  store i32 %2210, i32* %2208, align 4
  %2211 = load %struct.DState** %1, align 8
  %2212 = getelementptr inbounds %struct.DState* %2211, i32 0, i32 0
  %2213 = load %struct.bz_stream** %2212, align 8
  %2214 = getelementptr inbounds %struct.bz_stream* %2213, i32 0, i32 2
  %2215 = load i32* %2214, align 4
  %2216 = icmp eq i32 %2215, 0
  br i1 %2216, label %2217, label %2224

; <label>:2217                                    ; preds = %2174
  %2218 = load %struct.DState** %1, align 8
  %2219 = getelementptr inbounds %struct.DState* %2218, i32 0, i32 0
  %2220 = load %struct.bz_stream** %2219, align 8
  %2221 = getelementptr inbounds %struct.bz_stream* %2220, i32 0, i32 3
  %2222 = load i32* %2221, align 4
  %2223 = add i32 %2222, 1
  store i32 %2223, i32* %2221, align 4
  br label %2224

; <label>:2224                                    ; preds = %2217, %2174
  br label %2146

; <label>:2225                                    ; preds = %2151
  %2226 = load i32* %nGroups, align 4
  %2227 = icmp slt i32 %2226, 2
  br i1 %2227, label %2231, label %2228

; <label>:2228                                    ; preds = %2225
  %2229 = load i32* %nGroups, align 4
  %2230 = icmp sgt i32 %2229, 6
  br i1 %2230, label %2231, label %2232

; <label>:2231                                    ; preds = %2228, %2225
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:2232                                    ; preds = %2228
  br label %2233

; <label>:2233                                    ; preds = %58, %2232
  %2234 = load %struct.DState** %1, align 8
  %2235 = getelementptr inbounds %struct.DState* %2234, i32 0, i32 1
  store i32 31, i32* %2235, align 4
  br label %2236

; <label>:2236                                    ; preds = %2233, %2314
  %2237 = load %struct.DState** %1, align 8
  %2238 = getelementptr inbounds %struct.DState* %2237, i32 0, i32 8
  %2239 = load i32* %2238, align 4
  %2240 = icmp sge i32 %2239, 15
  br i1 %2240, label %2241, label %2256

; <label>:2241                                    ; preds = %2236
  %2242 = load %struct.DState** %1, align 8
  %2243 = getelementptr inbounds %struct.DState* %2242, i32 0, i32 7
  %2244 = load i32* %2243, align 4
  %2245 = load %struct.DState** %1, align 8
  %2246 = getelementptr inbounds %struct.DState* %2245, i32 0, i32 8
  %2247 = load i32* %2246, align 4
  %2248 = sub nsw i32 %2247, 15
  %2249 = lshr i32 %2244, %2248
  %2250 = and i32 %2249, 32767
  store i32 %2250, i32* %v21, align 4
  %2251 = load %struct.DState** %1, align 8
  %2252 = getelementptr inbounds %struct.DState* %2251, i32 0, i32 8
  %2253 = load i32* %2252, align 4
  %2254 = sub nsw i32 %2253, 15
  store i32 %2254, i32* %2252, align 4
  %2255 = load i32* %v21, align 4
  store i32 %2255, i32* %nSelectors, align 4
  br label %2315

; <label>:2256                                    ; preds = %2236
  %2257 = load %struct.DState** %1, align 8
  %2258 = getelementptr inbounds %struct.DState* %2257, i32 0, i32 0
  %2259 = load %struct.bz_stream** %2258, align 8
  %2260 = getelementptr inbounds %struct.bz_stream* %2259, i32 0, i32 1
  %2261 = load i32* %2260, align 4
  %2262 = icmp eq i32 %2261, 0
  br i1 %2262, label %2263, label %2264

; <label>:2263                                    ; preds = %2256
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:2264                                    ; preds = %2256
  %2265 = load %struct.DState** %1, align 8
  %2266 = getelementptr inbounds %struct.DState* %2265, i32 0, i32 7
  %2267 = load i32* %2266, align 4
  %2268 = shl i32 %2267, 8
  %2269 = load %struct.DState** %1, align 8
  %2270 = getelementptr inbounds %struct.DState* %2269, i32 0, i32 0
  %2271 = load %struct.bz_stream** %2270, align 8
  %2272 = getelementptr inbounds %struct.bz_stream* %2271, i32 0, i32 0
  %2273 = load i8** %2272, align 8
  %2274 = load i8* %2273, align 1
  %2275 = zext i8 %2274 to i32
  %2276 = or i32 %2268, %2275
  %2277 = load %struct.DState** %1, align 8
  %2278 = getelementptr inbounds %struct.DState* %2277, i32 0, i32 7
  store i32 %2276, i32* %2278, align 4
  %2279 = load %struct.DState** %1, align 8
  %2280 = getelementptr inbounds %struct.DState* %2279, i32 0, i32 8
  %2281 = load i32* %2280, align 4
  %2282 = add nsw i32 %2281, 8
  store i32 %2282, i32* %2280, align 4
  %2283 = load %struct.DState** %1, align 8
  %2284 = getelementptr inbounds %struct.DState* %2283, i32 0, i32 0
  %2285 = load %struct.bz_stream** %2284, align 8
  %2286 = getelementptr inbounds %struct.bz_stream* %2285, i32 0, i32 0
  %2287 = load i8** %2286, align 8
  %2288 = getelementptr inbounds i8* %2287, i32 1
  store i8* %2288, i8** %2286, align 8
  %2289 = load %struct.DState** %1, align 8
  %2290 = getelementptr inbounds %struct.DState* %2289, i32 0, i32 0
  %2291 = load %struct.bz_stream** %2290, align 8
  %2292 = getelementptr inbounds %struct.bz_stream* %2291, i32 0, i32 1
  %2293 = load i32* %2292, align 4
  %2294 = add i32 %2293, -1
  store i32 %2294, i32* %2292, align 4
  %2295 = load %struct.DState** %1, align 8
  %2296 = getelementptr inbounds %struct.DState* %2295, i32 0, i32 0
  %2297 = load %struct.bz_stream** %2296, align 8
  %2298 = getelementptr inbounds %struct.bz_stream* %2297, i32 0, i32 2
  %2299 = load i32* %2298, align 4
  %2300 = add i32 %2299, 1
  store i32 %2300, i32* %2298, align 4
  %2301 = load %struct.DState** %1, align 8
  %2302 = getelementptr inbounds %struct.DState* %2301, i32 0, i32 0
  %2303 = load %struct.bz_stream** %2302, align 8
  %2304 = getelementptr inbounds %struct.bz_stream* %2303, i32 0, i32 2
  %2305 = load i32* %2304, align 4
  %2306 = icmp eq i32 %2305, 0
  br i1 %2306, label %2307, label %2314

; <label>:2307                                    ; preds = %2264
  %2308 = load %struct.DState** %1, align 8
  %2309 = getelementptr inbounds %struct.DState* %2308, i32 0, i32 0
  %2310 = load %struct.bz_stream** %2309, align 8
  %2311 = getelementptr inbounds %struct.bz_stream* %2310, i32 0, i32 3
  %2312 = load i32* %2311, align 4
  %2313 = add i32 %2312, 1
  store i32 %2313, i32* %2311, align 4
  br label %2314

; <label>:2314                                    ; preds = %2307, %2264
  br label %2236

; <label>:2315                                    ; preds = %2241
  %2316 = load i32* %nSelectors, align 4
  %2317 = icmp slt i32 %2316, 1
  br i1 %2317, label %2318, label %2319

; <label>:2318                                    ; preds = %2315
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:2319                                    ; preds = %2315
  store i32 0, i32* %i, align 4
  br label %2320

; <label>:2320                                    ; preds = %2430, %2319
  %2321 = load i32* %i, align 4
  %2322 = load i32* %nSelectors, align 4
  %2323 = icmp slt i32 %2321, %2322
  br i1 %2323, label %2324, label %2433

; <label>:2324                                    ; preds = %2320
  store i32 0, i32* %j, align 4
  br label %2325

; <label>:2325                                    ; preds = %2324, %2421
  br label %2326

; <label>:2326                                    ; preds = %58, %2325
  %2327 = load %struct.DState** %1, align 8
  %2328 = getelementptr inbounds %struct.DState* %2327, i32 0, i32 1
  store i32 32, i32* %2328, align 4
  br label %2329

; <label>:2329                                    ; preds = %2326, %2408
  %2330 = load %struct.DState** %1, align 8
  %2331 = getelementptr inbounds %struct.DState* %2330, i32 0, i32 8
  %2332 = load i32* %2331, align 4
  %2333 = icmp sge i32 %2332, 1
  br i1 %2333, label %2334, label %2350

; <label>:2334                                    ; preds = %2329
  %2335 = load %struct.DState** %1, align 8
  %2336 = getelementptr inbounds %struct.DState* %2335, i32 0, i32 7
  %2337 = load i32* %2336, align 4
  %2338 = load %struct.DState** %1, align 8
  %2339 = getelementptr inbounds %struct.DState* %2338, i32 0, i32 8
  %2340 = load i32* %2339, align 4
  %2341 = sub nsw i32 %2340, 1
  %2342 = lshr i32 %2337, %2341
  %2343 = and i32 %2342, 1
  store i32 %2343, i32* %v22, align 4
  %2344 = load %struct.DState** %1, align 8
  %2345 = getelementptr inbounds %struct.DState* %2344, i32 0, i32 8
  %2346 = load i32* %2345, align 4
  %2347 = sub nsw i32 %2346, 1
  store i32 %2347, i32* %2345, align 4
  %2348 = load i32* %v22, align 4
  %2349 = trunc i32 %2348 to i8
  store i8 %2349, i8* %uc, align 1
  br label %2409

; <label>:2350                                    ; preds = %2329
  %2351 = load %struct.DState** %1, align 8
  %2352 = getelementptr inbounds %struct.DState* %2351, i32 0, i32 0
  %2353 = load %struct.bz_stream** %2352, align 8
  %2354 = getelementptr inbounds %struct.bz_stream* %2353, i32 0, i32 1
  %2355 = load i32* %2354, align 4
  %2356 = icmp eq i32 %2355, 0
  br i1 %2356, label %2357, label %2358

; <label>:2357                                    ; preds = %2350
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:2358                                    ; preds = %2350
  %2359 = load %struct.DState** %1, align 8
  %2360 = getelementptr inbounds %struct.DState* %2359, i32 0, i32 7
  %2361 = load i32* %2360, align 4
  %2362 = shl i32 %2361, 8
  %2363 = load %struct.DState** %1, align 8
  %2364 = getelementptr inbounds %struct.DState* %2363, i32 0, i32 0
  %2365 = load %struct.bz_stream** %2364, align 8
  %2366 = getelementptr inbounds %struct.bz_stream* %2365, i32 0, i32 0
  %2367 = load i8** %2366, align 8
  %2368 = load i8* %2367, align 1
  %2369 = zext i8 %2368 to i32
  %2370 = or i32 %2362, %2369
  %2371 = load %struct.DState** %1, align 8
  %2372 = getelementptr inbounds %struct.DState* %2371, i32 0, i32 7
  store i32 %2370, i32* %2372, align 4
  %2373 = load %struct.DState** %1, align 8
  %2374 = getelementptr inbounds %struct.DState* %2373, i32 0, i32 8
  %2375 = load i32* %2374, align 4
  %2376 = add nsw i32 %2375, 8
  store i32 %2376, i32* %2374, align 4
  %2377 = load %struct.DState** %1, align 8
  %2378 = getelementptr inbounds %struct.DState* %2377, i32 0, i32 0
  %2379 = load %struct.bz_stream** %2378, align 8
  %2380 = getelementptr inbounds %struct.bz_stream* %2379, i32 0, i32 0
  %2381 = load i8** %2380, align 8
  %2382 = getelementptr inbounds i8* %2381, i32 1
  store i8* %2382, i8** %2380, align 8
  %2383 = load %struct.DState** %1, align 8
  %2384 = getelementptr inbounds %struct.DState* %2383, i32 0, i32 0
  %2385 = load %struct.bz_stream** %2384, align 8
  %2386 = getelementptr inbounds %struct.bz_stream* %2385, i32 0, i32 1
  %2387 = load i32* %2386, align 4
  %2388 = add i32 %2387, -1
  store i32 %2388, i32* %2386, align 4
  %2389 = load %struct.DState** %1, align 8
  %2390 = getelementptr inbounds %struct.DState* %2389, i32 0, i32 0
  %2391 = load %struct.bz_stream** %2390, align 8
  %2392 = getelementptr inbounds %struct.bz_stream* %2391, i32 0, i32 2
  %2393 = load i32* %2392, align 4
  %2394 = add i32 %2393, 1
  store i32 %2394, i32* %2392, align 4
  %2395 = load %struct.DState** %1, align 8
  %2396 = getelementptr inbounds %struct.DState* %2395, i32 0, i32 0
  %2397 = load %struct.bz_stream** %2396, align 8
  %2398 = getelementptr inbounds %struct.bz_stream* %2397, i32 0, i32 2
  %2399 = load i32* %2398, align 4
  %2400 = icmp eq i32 %2399, 0
  br i1 %2400, label %2401, label %2408

; <label>:2401                                    ; preds = %2358
  %2402 = load %struct.DState** %1, align 8
  %2403 = getelementptr inbounds %struct.DState* %2402, i32 0, i32 0
  %2404 = load %struct.bz_stream** %2403, align 8
  %2405 = getelementptr inbounds %struct.bz_stream* %2404, i32 0, i32 3
  %2406 = load i32* %2405, align 4
  %2407 = add i32 %2406, 1
  store i32 %2407, i32* %2405, align 4
  br label %2408

; <label>:2408                                    ; preds = %2401, %2358
  br label %2329

; <label>:2409                                    ; preds = %2334
  %2410 = load i8* %uc, align 1
  %2411 = zext i8 %2410 to i32
  %2412 = icmp eq i32 %2411, 0
  br i1 %2412, label %2413, label %2414

; <label>:2413                                    ; preds = %2409
  br label %2422

; <label>:2414                                    ; preds = %2409
  %2415 = load i32* %j, align 4
  %2416 = add nsw i32 %2415, 1
  store i32 %2416, i32* %j, align 4
  %2417 = load i32* %j, align 4
  %2418 = load i32* %nGroups, align 4
  %2419 = icmp sge i32 %2417, %2418
  br i1 %2419, label %2420, label %2421

; <label>:2420                                    ; preds = %2414
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:2421                                    ; preds = %2414
  br label %2325

; <label>:2422                                    ; preds = %2413
  %2423 = load i32* %j, align 4
  %2424 = trunc i32 %2423 to i8
  %2425 = load i32* %i, align 4
  %2426 = sext i32 %2425 to i64
  %2427 = load %struct.DState** %1, align 8
  %2428 = getelementptr inbounds %struct.DState* %2427, i32 0, i32 34
  %2429 = getelementptr inbounds [18002 x i8]* %2428, i32 0, i64 %2426
  store i8 %2424, i8* %2429, align 1
  br label %2430

; <label>:2430                                    ; preds = %2422
  %2431 = load i32* %i, align 4
  %2432 = add nsw i32 %2431, 1
  store i32 %2432, i32* %i, align 4
  br label %2320

; <label>:2433                                    ; preds = %2320
  store i8 0, i8* %v23, align 1
  br label %2434

; <label>:2434                                    ; preds = %2444, %2433
  %2435 = load i8* %v23, align 1
  %2436 = zext i8 %2435 to i32
  %2437 = load i32* %nGroups, align 4
  %2438 = icmp slt i32 %2436, %2437
  br i1 %2438, label %2439, label %2447

; <label>:2439                                    ; preds = %2434
  %2440 = load i8* %v23, align 1
  %2441 = load i8* %v23, align 1
  %2442 = zext i8 %2441 to i64
  %2443 = getelementptr inbounds [6 x i8]* %pos, i32 0, i64 %2442
  store i8 %2440, i8* %2443, align 1
  br label %2444

; <label>:2444                                    ; preds = %2439
  %2445 = load i8* %v23, align 1
  %2446 = add i8 %2445, 1
  store i8 %2446, i8* %v23, align 1
  br label %2434

; <label>:2447                                    ; preds = %2434
  store i32 0, i32* %i, align 4
  br label %2448

; <label>:2448                                    ; preds = %2488, %2447
  %2449 = load i32* %i, align 4
  %2450 = load i32* %nSelectors, align 4
  %2451 = icmp slt i32 %2449, %2450
  br i1 %2451, label %2452, label %2491

; <label>:2452                                    ; preds = %2448
  %2453 = load i32* %i, align 4
  %2454 = sext i32 %2453 to i64
  %2455 = load %struct.DState** %1, align 8
  %2456 = getelementptr inbounds %struct.DState* %2455, i32 0, i32 34
  %2457 = getelementptr inbounds [18002 x i8]* %2456, i32 0, i64 %2454
  %2458 = load i8* %2457, align 1
  store i8 %2458, i8* %v23, align 1
  %2459 = load i8* %v23, align 1
  %2460 = zext i8 %2459 to i64
  %2461 = getelementptr inbounds [6 x i8]* %pos, i32 0, i64 %2460
  %2462 = load i8* %2461, align 1
  store i8 %2462, i8* %tmp, align 1
  br label %2463

; <label>:2463                                    ; preds = %2467, %2452
  %2464 = load i8* %v23, align 1
  %2465 = zext i8 %2464 to i32
  %2466 = icmp sgt i32 %2465, 0
  br i1 %2466, label %2467, label %2479

; <label>:2467                                    ; preds = %2463
  %2468 = load i8* %v23, align 1
  %2469 = zext i8 %2468 to i32
  %2470 = sub nsw i32 %2469, 1
  %2471 = sext i32 %2470 to i64
  %2472 = getelementptr inbounds [6 x i8]* %pos, i32 0, i64 %2471
  %2473 = load i8* %2472, align 1
  %2474 = load i8* %v23, align 1
  %2475 = zext i8 %2474 to i64
  %2476 = getelementptr inbounds [6 x i8]* %pos, i32 0, i64 %2475
  store i8 %2473, i8* %2476, align 1
  %2477 = load i8* %v23, align 1
  %2478 = add i8 %2477, -1
  store i8 %2478, i8* %v23, align 1
  br label %2463

; <label>:2479                                    ; preds = %2463
  %2480 = load i8* %tmp, align 1
  %2481 = getelementptr inbounds [6 x i8]* %pos, i32 0, i64 0
  store i8 %2480, i8* %2481, align 1
  %2482 = load i8* %tmp, align 1
  %2483 = load i32* %i, align 4
  %2484 = sext i32 %2483 to i64
  %2485 = load %struct.DState** %1, align 8
  %2486 = getelementptr inbounds %struct.DState* %2485, i32 0, i32 33
  %2487 = getelementptr inbounds [18002 x i8]* %2486, i32 0, i64 %2484
  store i8 %2482, i8* %2487, align 1
  br label %2488

; <label>:2488                                    ; preds = %2479
  %2489 = load i32* %i, align 4
  %2490 = add nsw i32 %2489, 1
  store i32 %2490, i32* %i, align 4
  br label %2448

; <label>:2491                                    ; preds = %2448
  store i32 0, i32* %t, align 4
  br label %2492

; <label>:2492                                    ; preds = %2791, %2491
  %2493 = load i32* %t, align 4
  %2494 = load i32* %nGroups, align 4
  %2495 = icmp slt i32 %2493, %2494
  br i1 %2495, label %2496, label %2794

; <label>:2496                                    ; preds = %2492
  br label %2497

; <label>:2497                                    ; preds = %58, %2496
  %2498 = load %struct.DState** %1, align 8
  %2499 = getelementptr inbounds %struct.DState* %2498, i32 0, i32 1
  store i32 33, i32* %2499, align 4
  br label %2500

; <label>:2500                                    ; preds = %2497, %2578
  %2501 = load %struct.DState** %1, align 8
  %2502 = getelementptr inbounds %struct.DState* %2501, i32 0, i32 8
  %2503 = load i32* %2502, align 4
  %2504 = icmp sge i32 %2503, 5
  br i1 %2504, label %2505, label %2520

; <label>:2505                                    ; preds = %2500
  %2506 = load %struct.DState** %1, align 8
  %2507 = getelementptr inbounds %struct.DState* %2506, i32 0, i32 7
  %2508 = load i32* %2507, align 4
  %2509 = load %struct.DState** %1, align 8
  %2510 = getelementptr inbounds %struct.DState* %2509, i32 0, i32 8
  %2511 = load i32* %2510, align 4
  %2512 = sub nsw i32 %2511, 5
  %2513 = lshr i32 %2508, %2512
  %2514 = and i32 %2513, 31
  store i32 %2514, i32* %v24, align 4
  %2515 = load %struct.DState** %1, align 8
  %2516 = getelementptr inbounds %struct.DState* %2515, i32 0, i32 8
  %2517 = load i32* %2516, align 4
  %2518 = sub nsw i32 %2517, 5
  store i32 %2518, i32* %2516, align 4
  %2519 = load i32* %v24, align 4
  store i32 %2519, i32* %curr, align 4
  br label %2579

; <label>:2520                                    ; preds = %2500
  %2521 = load %struct.DState** %1, align 8
  %2522 = getelementptr inbounds %struct.DState* %2521, i32 0, i32 0
  %2523 = load %struct.bz_stream** %2522, align 8
  %2524 = getelementptr inbounds %struct.bz_stream* %2523, i32 0, i32 1
  %2525 = load i32* %2524, align 4
  %2526 = icmp eq i32 %2525, 0
  br i1 %2526, label %2527, label %2528

; <label>:2527                                    ; preds = %2520
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:2528                                    ; preds = %2520
  %2529 = load %struct.DState** %1, align 8
  %2530 = getelementptr inbounds %struct.DState* %2529, i32 0, i32 7
  %2531 = load i32* %2530, align 4
  %2532 = shl i32 %2531, 8
  %2533 = load %struct.DState** %1, align 8
  %2534 = getelementptr inbounds %struct.DState* %2533, i32 0, i32 0
  %2535 = load %struct.bz_stream** %2534, align 8
  %2536 = getelementptr inbounds %struct.bz_stream* %2535, i32 0, i32 0
  %2537 = load i8** %2536, align 8
  %2538 = load i8* %2537, align 1
  %2539 = zext i8 %2538 to i32
  %2540 = or i32 %2532, %2539
  %2541 = load %struct.DState** %1, align 8
  %2542 = getelementptr inbounds %struct.DState* %2541, i32 0, i32 7
  store i32 %2540, i32* %2542, align 4
  %2543 = load %struct.DState** %1, align 8
  %2544 = getelementptr inbounds %struct.DState* %2543, i32 0, i32 8
  %2545 = load i32* %2544, align 4
  %2546 = add nsw i32 %2545, 8
  store i32 %2546, i32* %2544, align 4
  %2547 = load %struct.DState** %1, align 8
  %2548 = getelementptr inbounds %struct.DState* %2547, i32 0, i32 0
  %2549 = load %struct.bz_stream** %2548, align 8
  %2550 = getelementptr inbounds %struct.bz_stream* %2549, i32 0, i32 0
  %2551 = load i8** %2550, align 8
  %2552 = getelementptr inbounds i8* %2551, i32 1
  store i8* %2552, i8** %2550, align 8
  %2553 = load %struct.DState** %1, align 8
  %2554 = getelementptr inbounds %struct.DState* %2553, i32 0, i32 0
  %2555 = load %struct.bz_stream** %2554, align 8
  %2556 = getelementptr inbounds %struct.bz_stream* %2555, i32 0, i32 1
  %2557 = load i32* %2556, align 4
  %2558 = add i32 %2557, -1
  store i32 %2558, i32* %2556, align 4
  %2559 = load %struct.DState** %1, align 8
  %2560 = getelementptr inbounds %struct.DState* %2559, i32 0, i32 0
  %2561 = load %struct.bz_stream** %2560, align 8
  %2562 = getelementptr inbounds %struct.bz_stream* %2561, i32 0, i32 2
  %2563 = load i32* %2562, align 4
  %2564 = add i32 %2563, 1
  store i32 %2564, i32* %2562, align 4
  %2565 = load %struct.DState** %1, align 8
  %2566 = getelementptr inbounds %struct.DState* %2565, i32 0, i32 0
  %2567 = load %struct.bz_stream** %2566, align 8
  %2568 = getelementptr inbounds %struct.bz_stream* %2567, i32 0, i32 2
  %2569 = load i32* %2568, align 4
  %2570 = icmp eq i32 %2569, 0
  br i1 %2570, label %2571, label %2578

; <label>:2571                                    ; preds = %2528
  %2572 = load %struct.DState** %1, align 8
  %2573 = getelementptr inbounds %struct.DState* %2572, i32 0, i32 0
  %2574 = load %struct.bz_stream** %2573, align 8
  %2575 = getelementptr inbounds %struct.bz_stream* %2574, i32 0, i32 3
  %2576 = load i32* %2575, align 4
  %2577 = add i32 %2576, 1
  store i32 %2577, i32* %2575, align 4
  br label %2578

; <label>:2578                                    ; preds = %2571, %2528
  br label %2500

; <label>:2579                                    ; preds = %2505
  store i32 0, i32* %i, align 4
  br label %2580

; <label>:2580                                    ; preds = %2787, %2579
  %2581 = load i32* %i, align 4
  %2582 = load i32* %alphaSize, align 4
  %2583 = icmp slt i32 %2581, %2582
  br i1 %2583, label %2584, label %2790

; <label>:2584                                    ; preds = %2580
  br label %2585

; <label>:2585                                    ; preds = %2584, %2775
  %2586 = load i32* %curr, align 4
  %2587 = icmp slt i32 %2586, 1
  br i1 %2587, label %2591, label %2588

; <label>:2588                                    ; preds = %2585
  %2589 = load i32* %curr, align 4
  %2590 = icmp sgt i32 %2589, 20
  br i1 %2590, label %2591, label %2592

; <label>:2591                                    ; preds = %2588, %2585
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:2592                                    ; preds = %2588
  br label %2593

; <label>:2593                                    ; preds = %58, %2592
  %2594 = load %struct.DState** %1, align 8
  %2595 = getelementptr inbounds %struct.DState* %2594, i32 0, i32 1
  store i32 34, i32* %2595, align 4
  br label %2596

; <label>:2596                                    ; preds = %2593, %2675
  %2597 = load %struct.DState** %1, align 8
  %2598 = getelementptr inbounds %struct.DState* %2597, i32 0, i32 8
  %2599 = load i32* %2598, align 4
  %2600 = icmp sge i32 %2599, 1
  br i1 %2600, label %2601, label %2617

; <label>:2601                                    ; preds = %2596
  %2602 = load %struct.DState** %1, align 8
  %2603 = getelementptr inbounds %struct.DState* %2602, i32 0, i32 7
  %2604 = load i32* %2603, align 4
  %2605 = load %struct.DState** %1, align 8
  %2606 = getelementptr inbounds %struct.DState* %2605, i32 0, i32 8
  %2607 = load i32* %2606, align 4
  %2608 = sub nsw i32 %2607, 1
  %2609 = lshr i32 %2604, %2608
  %2610 = and i32 %2609, 1
  store i32 %2610, i32* %v25, align 4
  %2611 = load %struct.DState** %1, align 8
  %2612 = getelementptr inbounds %struct.DState* %2611, i32 0, i32 8
  %2613 = load i32* %2612, align 4
  %2614 = sub nsw i32 %2613, 1
  store i32 %2614, i32* %2612, align 4
  %2615 = load i32* %v25, align 4
  %2616 = trunc i32 %2615 to i8
  store i8 %2616, i8* %uc, align 1
  br label %2676

; <label>:2617                                    ; preds = %2596
  %2618 = load %struct.DState** %1, align 8
  %2619 = getelementptr inbounds %struct.DState* %2618, i32 0, i32 0
  %2620 = load %struct.bz_stream** %2619, align 8
  %2621 = getelementptr inbounds %struct.bz_stream* %2620, i32 0, i32 1
  %2622 = load i32* %2621, align 4
  %2623 = icmp eq i32 %2622, 0
  br i1 %2623, label %2624, label %2625

; <label>:2624                                    ; preds = %2617
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:2625                                    ; preds = %2617
  %2626 = load %struct.DState** %1, align 8
  %2627 = getelementptr inbounds %struct.DState* %2626, i32 0, i32 7
  %2628 = load i32* %2627, align 4
  %2629 = shl i32 %2628, 8
  %2630 = load %struct.DState** %1, align 8
  %2631 = getelementptr inbounds %struct.DState* %2630, i32 0, i32 0
  %2632 = load %struct.bz_stream** %2631, align 8
  %2633 = getelementptr inbounds %struct.bz_stream* %2632, i32 0, i32 0
  %2634 = load i8** %2633, align 8
  %2635 = load i8* %2634, align 1
  %2636 = zext i8 %2635 to i32
  %2637 = or i32 %2629, %2636
  %2638 = load %struct.DState** %1, align 8
  %2639 = getelementptr inbounds %struct.DState* %2638, i32 0, i32 7
  store i32 %2637, i32* %2639, align 4
  %2640 = load %struct.DState** %1, align 8
  %2641 = getelementptr inbounds %struct.DState* %2640, i32 0, i32 8
  %2642 = load i32* %2641, align 4
  %2643 = add nsw i32 %2642, 8
  store i32 %2643, i32* %2641, align 4
  %2644 = load %struct.DState** %1, align 8
  %2645 = getelementptr inbounds %struct.DState* %2644, i32 0, i32 0
  %2646 = load %struct.bz_stream** %2645, align 8
  %2647 = getelementptr inbounds %struct.bz_stream* %2646, i32 0, i32 0
  %2648 = load i8** %2647, align 8
  %2649 = getelementptr inbounds i8* %2648, i32 1
  store i8* %2649, i8** %2647, align 8
  %2650 = load %struct.DState** %1, align 8
  %2651 = getelementptr inbounds %struct.DState* %2650, i32 0, i32 0
  %2652 = load %struct.bz_stream** %2651, align 8
  %2653 = getelementptr inbounds %struct.bz_stream* %2652, i32 0, i32 1
  %2654 = load i32* %2653, align 4
  %2655 = add i32 %2654, -1
  store i32 %2655, i32* %2653, align 4
  %2656 = load %struct.DState** %1, align 8
  %2657 = getelementptr inbounds %struct.DState* %2656, i32 0, i32 0
  %2658 = load %struct.bz_stream** %2657, align 8
  %2659 = getelementptr inbounds %struct.bz_stream* %2658, i32 0, i32 2
  %2660 = load i32* %2659, align 4
  %2661 = add i32 %2660, 1
  store i32 %2661, i32* %2659, align 4
  %2662 = load %struct.DState** %1, align 8
  %2663 = getelementptr inbounds %struct.DState* %2662, i32 0, i32 0
  %2664 = load %struct.bz_stream** %2663, align 8
  %2665 = getelementptr inbounds %struct.bz_stream* %2664, i32 0, i32 2
  %2666 = load i32* %2665, align 4
  %2667 = icmp eq i32 %2666, 0
  br i1 %2667, label %2668, label %2675

; <label>:2668                                    ; preds = %2625
  %2669 = load %struct.DState** %1, align 8
  %2670 = getelementptr inbounds %struct.DState* %2669, i32 0, i32 0
  %2671 = load %struct.bz_stream** %2670, align 8
  %2672 = getelementptr inbounds %struct.bz_stream* %2671, i32 0, i32 3
  %2673 = load i32* %2672, align 4
  %2674 = add i32 %2673, 1
  store i32 %2674, i32* %2672, align 4
  br label %2675

; <label>:2675                                    ; preds = %2668, %2625
  br label %2596

; <label>:2676                                    ; preds = %2601
  %2677 = load i8* %uc, align 1
  %2678 = zext i8 %2677 to i32
  %2679 = icmp eq i32 %2678, 0
  br i1 %2679, label %2680, label %2681

; <label>:2680                                    ; preds = %2676
  br label %2776

; <label>:2681                                    ; preds = %2676
  br label %2682

; <label>:2682                                    ; preds = %58, %2681
  %2683 = load %struct.DState** %1, align 8
  %2684 = getelementptr inbounds %struct.DState* %2683, i32 0, i32 1
  store i32 35, i32* %2684, align 4
  br label %2685

; <label>:2685                                    ; preds = %2682, %2764
  %2686 = load %struct.DState** %1, align 8
  %2687 = getelementptr inbounds %struct.DState* %2686, i32 0, i32 8
  %2688 = load i32* %2687, align 4
  %2689 = icmp sge i32 %2688, 1
  br i1 %2689, label %2690, label %2706

; <label>:2690                                    ; preds = %2685
  %2691 = load %struct.DState** %1, align 8
  %2692 = getelementptr inbounds %struct.DState* %2691, i32 0, i32 7
  %2693 = load i32* %2692, align 4
  %2694 = load %struct.DState** %1, align 8
  %2695 = getelementptr inbounds %struct.DState* %2694, i32 0, i32 8
  %2696 = load i32* %2695, align 4
  %2697 = sub nsw i32 %2696, 1
  %2698 = lshr i32 %2693, %2697
  %2699 = and i32 %2698, 1
  store i32 %2699, i32* %v26, align 4
  %2700 = load %struct.DState** %1, align 8
  %2701 = getelementptr inbounds %struct.DState* %2700, i32 0, i32 8
  %2702 = load i32* %2701, align 4
  %2703 = sub nsw i32 %2702, 1
  store i32 %2703, i32* %2701, align 4
  %2704 = load i32* %v26, align 4
  %2705 = trunc i32 %2704 to i8
  store i8 %2705, i8* %uc, align 1
  br label %2765

; <label>:2706                                    ; preds = %2685
  %2707 = load %struct.DState** %1, align 8
  %2708 = getelementptr inbounds %struct.DState* %2707, i32 0, i32 0
  %2709 = load %struct.bz_stream** %2708, align 8
  %2710 = getelementptr inbounds %struct.bz_stream* %2709, i32 0, i32 1
  %2711 = load i32* %2710, align 4
  %2712 = icmp eq i32 %2711, 0
  br i1 %2712, label %2713, label %2714

; <label>:2713                                    ; preds = %2706
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:2714                                    ; preds = %2706
  %2715 = load %struct.DState** %1, align 8
  %2716 = getelementptr inbounds %struct.DState* %2715, i32 0, i32 7
  %2717 = load i32* %2716, align 4
  %2718 = shl i32 %2717, 8
  %2719 = load %struct.DState** %1, align 8
  %2720 = getelementptr inbounds %struct.DState* %2719, i32 0, i32 0
  %2721 = load %struct.bz_stream** %2720, align 8
  %2722 = getelementptr inbounds %struct.bz_stream* %2721, i32 0, i32 0
  %2723 = load i8** %2722, align 8
  %2724 = load i8* %2723, align 1
  %2725 = zext i8 %2724 to i32
  %2726 = or i32 %2718, %2725
  %2727 = load %struct.DState** %1, align 8
  %2728 = getelementptr inbounds %struct.DState* %2727, i32 0, i32 7
  store i32 %2726, i32* %2728, align 4
  %2729 = load %struct.DState** %1, align 8
  %2730 = getelementptr inbounds %struct.DState* %2729, i32 0, i32 8
  %2731 = load i32* %2730, align 4
  %2732 = add nsw i32 %2731, 8
  store i32 %2732, i32* %2730, align 4
  %2733 = load %struct.DState** %1, align 8
  %2734 = getelementptr inbounds %struct.DState* %2733, i32 0, i32 0
  %2735 = load %struct.bz_stream** %2734, align 8
  %2736 = getelementptr inbounds %struct.bz_stream* %2735, i32 0, i32 0
  %2737 = load i8** %2736, align 8
  %2738 = getelementptr inbounds i8* %2737, i32 1
  store i8* %2738, i8** %2736, align 8
  %2739 = load %struct.DState** %1, align 8
  %2740 = getelementptr inbounds %struct.DState* %2739, i32 0, i32 0
  %2741 = load %struct.bz_stream** %2740, align 8
  %2742 = getelementptr inbounds %struct.bz_stream* %2741, i32 0, i32 1
  %2743 = load i32* %2742, align 4
  %2744 = add i32 %2743, -1
  store i32 %2744, i32* %2742, align 4
  %2745 = load %struct.DState** %1, align 8
  %2746 = getelementptr inbounds %struct.DState* %2745, i32 0, i32 0
  %2747 = load %struct.bz_stream** %2746, align 8
  %2748 = getelementptr inbounds %struct.bz_stream* %2747, i32 0, i32 2
  %2749 = load i32* %2748, align 4
  %2750 = add i32 %2749, 1
  store i32 %2750, i32* %2748, align 4
  %2751 = load %struct.DState** %1, align 8
  %2752 = getelementptr inbounds %struct.DState* %2751, i32 0, i32 0
  %2753 = load %struct.bz_stream** %2752, align 8
  %2754 = getelementptr inbounds %struct.bz_stream* %2753, i32 0, i32 2
  %2755 = load i32* %2754, align 4
  %2756 = icmp eq i32 %2755, 0
  br i1 %2756, label %2757, label %2764

; <label>:2757                                    ; preds = %2714
  %2758 = load %struct.DState** %1, align 8
  %2759 = getelementptr inbounds %struct.DState* %2758, i32 0, i32 0
  %2760 = load %struct.bz_stream** %2759, align 8
  %2761 = getelementptr inbounds %struct.bz_stream* %2760, i32 0, i32 3
  %2762 = load i32* %2761, align 4
  %2763 = add i32 %2762, 1
  store i32 %2763, i32* %2761, align 4
  br label %2764

; <label>:2764                                    ; preds = %2757, %2714
  br label %2685

; <label>:2765                                    ; preds = %2690
  %2766 = load i8* %uc, align 1
  %2767 = zext i8 %2766 to i32
  %2768 = icmp eq i32 %2767, 0
  br i1 %2768, label %2769, label %2772

; <label>:2769                                    ; preds = %2765
  %2770 = load i32* %curr, align 4
  %2771 = add nsw i32 %2770, 1
  store i32 %2771, i32* %curr, align 4
  br label %2775

; <label>:2772                                    ; preds = %2765
  %2773 = load i32* %curr, align 4
  %2774 = add nsw i32 %2773, -1
  store i32 %2774, i32* %curr, align 4
  br label %2775

; <label>:2775                                    ; preds = %2772, %2769
  br label %2585

; <label>:2776                                    ; preds = %2680
  %2777 = load i32* %curr, align 4
  %2778 = trunc i32 %2777 to i8
  %2779 = load i32* %i, align 4
  %2780 = sext i32 %2779 to i64
  %2781 = load i32* %t, align 4
  %2782 = sext i32 %2781 to i64
  %2783 = load %struct.DState** %1, align 8
  %2784 = getelementptr inbounds %struct.DState* %2783, i32 0, i32 35
  %2785 = getelementptr inbounds [6 x [258 x i8]]* %2784, i32 0, i64 %2782
  %2786 = getelementptr inbounds [258 x i8]* %2785, i32 0, i64 %2780
  store i8 %2778, i8* %2786, align 1
  br label %2787

; <label>:2787                                    ; preds = %2776
  %2788 = load i32* %i, align 4
  %2789 = add nsw i32 %2788, 1
  store i32 %2789, i32* %i, align 4
  br label %2580

; <label>:2790                                    ; preds = %2580
  br label %2791

; <label>:2791                                    ; preds = %2790
  %2792 = load i32* %t, align 4
  %2793 = add nsw i32 %2792, 1
  store i32 %2793, i32* %t, align 4
  br label %2492

; <label>:2794                                    ; preds = %2492
  store i32 0, i32* %t, align 4
  br label %2795

; <label>:2795                                    ; preds = %2890, %2794
  %2796 = load i32* %t, align 4
  %2797 = load i32* %nGroups, align 4
  %2798 = icmp slt i32 %2796, %2797
  br i1 %2798, label %2799, label %2893

; <label>:2799                                    ; preds = %2795
  store i32 32, i32* %minLen, align 4
  store i32 0, i32* %maxLen, align 4
  store i32 0, i32* %i, align 4
  br label %2800

; <label>:2800                                    ; preds = %2853, %2799
  %2801 = load i32* %i, align 4
  %2802 = load i32* %alphaSize, align 4
  %2803 = icmp slt i32 %2801, %2802
  br i1 %2803, label %2804, label %2856

; <label>:2804                                    ; preds = %2800
  %2805 = load i32* %i, align 4
  %2806 = sext i32 %2805 to i64
  %2807 = load i32* %t, align 4
  %2808 = sext i32 %2807 to i64
  %2809 = load %struct.DState** %1, align 8
  %2810 = getelementptr inbounds %struct.DState* %2809, i32 0, i32 35
  %2811 = getelementptr inbounds [6 x [258 x i8]]* %2810, i32 0, i64 %2808
  %2812 = getelementptr inbounds [258 x i8]* %2811, i32 0, i64 %2806
  %2813 = load i8* %2812, align 1
  %2814 = zext i8 %2813 to i32
  %2815 = load i32* %maxLen, align 4
  %2816 = icmp sgt i32 %2814, %2815
  br i1 %2816, label %2817, label %2828

; <label>:2817                                    ; preds = %2804
  %2818 = load i32* %i, align 4
  %2819 = sext i32 %2818 to i64
  %2820 = load i32* %t, align 4
  %2821 = sext i32 %2820 to i64
  %2822 = load %struct.DState** %1, align 8
  %2823 = getelementptr inbounds %struct.DState* %2822, i32 0, i32 35
  %2824 = getelementptr inbounds [6 x [258 x i8]]* %2823, i32 0, i64 %2821
  %2825 = getelementptr inbounds [258 x i8]* %2824, i32 0, i64 %2819
  %2826 = load i8* %2825, align 1
  %2827 = zext i8 %2826 to i32
  store i32 %2827, i32* %maxLen, align 4
  br label %2828

; <label>:2828                                    ; preds = %2817, %2804
  %2829 = load i32* %i, align 4
  %2830 = sext i32 %2829 to i64
  %2831 = load i32* %t, align 4
  %2832 = sext i32 %2831 to i64
  %2833 = load %struct.DState** %1, align 8
  %2834 = getelementptr inbounds %struct.DState* %2833, i32 0, i32 35
  %2835 = getelementptr inbounds [6 x [258 x i8]]* %2834, i32 0, i64 %2832
  %2836 = getelementptr inbounds [258 x i8]* %2835, i32 0, i64 %2830
  %2837 = load i8* %2836, align 1
  %2838 = zext i8 %2837 to i32
  %2839 = load i32* %minLen, align 4
  %2840 = icmp slt i32 %2838, %2839
  br i1 %2840, label %2841, label %2852

; <label>:2841                                    ; preds = %2828
  %2842 = load i32* %i, align 4
  %2843 = sext i32 %2842 to i64
  %2844 = load i32* %t, align 4
  %2845 = sext i32 %2844 to i64
  %2846 = load %struct.DState** %1, align 8
  %2847 = getelementptr inbounds %struct.DState* %2846, i32 0, i32 35
  %2848 = getelementptr inbounds [6 x [258 x i8]]* %2847, i32 0, i64 %2845
  %2849 = getelementptr inbounds [258 x i8]* %2848, i32 0, i64 %2843
  %2850 = load i8* %2849, align 1
  %2851 = zext i8 %2850 to i32
  store i32 %2851, i32* %minLen, align 4
  br label %2852

; <label>:2852                                    ; preds = %2841, %2828
  br label %2853

; <label>:2853                                    ; preds = %2852
  %2854 = load i32* %i, align 4
  %2855 = add nsw i32 %2854, 1
  store i32 %2855, i32* %i, align 4
  br label %2800

; <label>:2856                                    ; preds = %2800
  %2857 = load i32* %t, align 4
  %2858 = sext i32 %2857 to i64
  %2859 = load %struct.DState** %1, align 8
  %2860 = getelementptr inbounds %struct.DState* %2859, i32 0, i32 36
  %2861 = getelementptr inbounds [6 x [258 x i32]]* %2860, i32 0, i64 %2858
  %2862 = getelementptr inbounds [258 x i32]* %2861, i32 0, i64 0
  %2863 = load i32* %t, align 4
  %2864 = sext i32 %2863 to i64
  %2865 = load %struct.DState** %1, align 8
  %2866 = getelementptr inbounds %struct.DState* %2865, i32 0, i32 37
  %2867 = getelementptr inbounds [6 x [258 x i32]]* %2866, i32 0, i64 %2864
  %2868 = getelementptr inbounds [258 x i32]* %2867, i32 0, i64 0
  %2869 = load i32* %t, align 4
  %2870 = sext i32 %2869 to i64
  %2871 = load %struct.DState** %1, align 8
  %2872 = getelementptr inbounds %struct.DState* %2871, i32 0, i32 38
  %2873 = getelementptr inbounds [6 x [258 x i32]]* %2872, i32 0, i64 %2870
  %2874 = getelementptr inbounds [258 x i32]* %2873, i32 0, i64 0
  %2875 = load i32* %t, align 4
  %2876 = sext i32 %2875 to i64
  %2877 = load %struct.DState** %1, align 8
  %2878 = getelementptr inbounds %struct.DState* %2877, i32 0, i32 35
  %2879 = getelementptr inbounds [6 x [258 x i8]]* %2878, i32 0, i64 %2876
  %2880 = getelementptr inbounds [258 x i8]* %2879, i32 0, i64 0
  %2881 = load i32* %minLen, align 4
  %2882 = load i32* %maxLen, align 4
  %2883 = load i32* %alphaSize, align 4
  call void @BZ2_hbCreateDecodeTables(i32* %2862, i32* %2868, i32* %2874, i8* %2880, i32 %2881, i32 %2882, i32 %2883)
  %2884 = load i32* %minLen, align 4
  %2885 = load i32* %t, align 4
  %2886 = sext i32 %2885 to i64
  %2887 = load %struct.DState** %1, align 8
  %2888 = getelementptr inbounds %struct.DState* %2887, i32 0, i32 39
  %2889 = getelementptr inbounds [6 x i32]* %2888, i32 0, i64 %2886
  store i32 %2884, i32* %2889, align 4
  br label %2890

; <label>:2890                                    ; preds = %2856
  %2891 = load i32* %t, align 4
  %2892 = add nsw i32 %2891, 1
  store i32 %2892, i32* %t, align 4
  br label %2795

; <label>:2893                                    ; preds = %2795
  %2894 = load %struct.DState** %1, align 8
  %2895 = getelementptr inbounds %struct.DState* %2894, i32 0, i32 27
  %2896 = load i32* %2895, align 4
  %2897 = add nsw i32 %2896, 1
  store i32 %2897, i32* %EOB, align 4
  %2898 = load %struct.DState** %1, align 8
  %2899 = getelementptr inbounds %struct.DState* %2898, i32 0, i32 9
  %2900 = load i32* %2899, align 4
  %2901 = mul nsw i32 100000, %2900
  store i32 %2901, i32* %nblockMAX, align 4
  store i32 -1, i32* %groupNo, align 4
  store i32 0, i32* %groupPos, align 4
  store i32 0, i32* %i, align 4
  br label %2902

; <label>:2902                                    ; preds = %2911, %2893
  %2903 = load i32* %i, align 4
  %2904 = icmp sle i32 %2903, 255
  br i1 %2904, label %2905, label %2914

; <label>:2905                                    ; preds = %2902
  %2906 = load i32* %i, align 4
  %2907 = sext i32 %2906 to i64
  %2908 = load %struct.DState** %1, align 8
  %2909 = getelementptr inbounds %struct.DState* %2908, i32 0, i32 16
  %2910 = getelementptr inbounds [256 x i32]* %2909, i32 0, i64 %2907
  store i32 0, i32* %2910, align 4
  br label %2911

; <label>:2911                                    ; preds = %2905
  %2912 = load i32* %i, align 4
  %2913 = add nsw i32 %2912, 1
  store i32 %2913, i32* %i, align 4
  br label %2902

; <label>:2914                                    ; preds = %2902
  store i32 4095, i32* %kk, align 4
  store i32 15, i32* %ii, align 4
  br label %2915

; <label>:2915                                    ; preds = %2946, %2914
  %2916 = load i32* %ii, align 4
  %2917 = icmp sge i32 %2916, 0
  br i1 %2917, label %2918, label %2949

; <label>:2918                                    ; preds = %2915
  store i32 15, i32* %jj, align 4
  br label %2919

; <label>:2919                                    ; preds = %2935, %2918
  %2920 = load i32* %jj, align 4
  %2921 = icmp sge i32 %2920, 0
  br i1 %2921, label %2922, label %2938

; <label>:2922                                    ; preds = %2919
  %2923 = load i32* %ii, align 4
  %2924 = mul nsw i32 %2923, 16
  %2925 = load i32* %jj, align 4
  %2926 = add nsw i32 %2924, %2925
  %2927 = trunc i32 %2926 to i8
  %2928 = load i32* %kk, align 4
  %2929 = sext i32 %2928 to i64
  %2930 = load %struct.DState** %1, align 8
  %2931 = getelementptr inbounds %struct.DState* %2930, i32 0, i32 31
  %2932 = getelementptr inbounds [4096 x i8]* %2931, i32 0, i64 %2929
  store i8 %2927, i8* %2932, align 1
  %2933 = load i32* %kk, align 4
  %2934 = add nsw i32 %2933, -1
  store i32 %2934, i32* %kk, align 4
  br label %2935

; <label>:2935                                    ; preds = %2922
  %2936 = load i32* %jj, align 4
  %2937 = add nsw i32 %2936, -1
  store i32 %2937, i32* %jj, align 4
  br label %2919

; <label>:2938                                    ; preds = %2919
  %2939 = load i32* %kk, align 4
  %2940 = add nsw i32 %2939, 1
  %2941 = load i32* %ii, align 4
  %2942 = sext i32 %2941 to i64
  %2943 = load %struct.DState** %1, align 8
  %2944 = getelementptr inbounds %struct.DState* %2943, i32 0, i32 32
  %2945 = getelementptr inbounds [16 x i32]* %2944, i32 0, i64 %2942
  store i32 %2940, i32* %2945, align 4
  br label %2946

; <label>:2946                                    ; preds = %2938
  %2947 = load i32* %ii, align 4
  %2948 = add nsw i32 %2947, -1
  store i32 %2948, i32* %ii, align 4
  br label %2915

; <label>:2949                                    ; preds = %2915
  store i32 0, i32* %nblock, align 4
  %2950 = load i32* %groupPos, align 4
  %2951 = icmp eq i32 %2950, 0
  br i1 %2951, label %2952, label %2991

; <label>:2952                                    ; preds = %2949
  %2953 = load i32* %groupNo, align 4
  %2954 = add nsw i32 %2953, 1
  store i32 %2954, i32* %groupNo, align 4
  %2955 = load i32* %groupNo, align 4
  %2956 = load i32* %nSelectors, align 4
  %2957 = icmp sge i32 %2955, %2956
  br i1 %2957, label %2958, label %2959

; <label>:2958                                    ; preds = %2952
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:2959                                    ; preds = %2952
  store i32 50, i32* %groupPos, align 4
  %2960 = load i32* %groupNo, align 4
  %2961 = sext i32 %2960 to i64
  %2962 = load %struct.DState** %1, align 8
  %2963 = getelementptr inbounds %struct.DState* %2962, i32 0, i32 33
  %2964 = getelementptr inbounds [18002 x i8]* %2963, i32 0, i64 %2961
  %2965 = load i8* %2964, align 1
  %2966 = zext i8 %2965 to i32
  store i32 %2966, i32* %gSel, align 4
  %2967 = load i32* %gSel, align 4
  %2968 = sext i32 %2967 to i64
  %2969 = load %struct.DState** %1, align 8
  %2970 = getelementptr inbounds %struct.DState* %2969, i32 0, i32 39
  %2971 = getelementptr inbounds [6 x i32]* %2970, i32 0, i64 %2968
  %2972 = load i32* %2971, align 4
  store i32 %2972, i32* %gMinlen, align 4
  %2973 = load i32* %gSel, align 4
  %2974 = sext i32 %2973 to i64
  %2975 = load %struct.DState** %1, align 8
  %2976 = getelementptr inbounds %struct.DState* %2975, i32 0, i32 36
  %2977 = getelementptr inbounds [6 x [258 x i32]]* %2976, i32 0, i64 %2974
  %2978 = getelementptr inbounds [258 x i32]* %2977, i32 0, i64 0
  store i32* %2978, i32** %gLimit, align 8
  %2979 = load i32* %gSel, align 4
  %2980 = sext i32 %2979 to i64
  %2981 = load %struct.DState** %1, align 8
  %2982 = getelementptr inbounds %struct.DState* %2981, i32 0, i32 38
  %2983 = getelementptr inbounds [6 x [258 x i32]]* %2982, i32 0, i64 %2980
  %2984 = getelementptr inbounds [258 x i32]* %2983, i32 0, i64 0
  store i32* %2984, i32** %gPerm, align 8
  %2985 = load i32* %gSel, align 4
  %2986 = sext i32 %2985 to i64
  %2987 = load %struct.DState** %1, align 8
  %2988 = getelementptr inbounds %struct.DState* %2987, i32 0, i32 37
  %2989 = getelementptr inbounds [6 x [258 x i32]]* %2988, i32 0, i64 %2986
  %2990 = getelementptr inbounds [258 x i32]* %2989, i32 0, i64 0
  store i32* %2990, i32** %gBase, align 8
  br label %2991

; <label>:2991                                    ; preds = %2959, %2949
  %2992 = load i32* %groupPos, align 4
  %2993 = add nsw i32 %2992, -1
  store i32 %2993, i32* %groupPos, align 4
  %2994 = load i32* %gMinlen, align 4
  store i32 %2994, i32* %zn, align 4
  br label %2995

; <label>:2995                                    ; preds = %58, %2991
  %2996 = load %struct.DState** %1, align 8
  %2997 = getelementptr inbounds %struct.DState* %2996, i32 0, i32 1
  store i32 36, i32* %2997, align 4
  br label %2998

; <label>:2998                                    ; preds = %2995, %3082
  %2999 = load %struct.DState** %1, align 8
  %3000 = getelementptr inbounds %struct.DState* %2999, i32 0, i32 8
  %3001 = load i32* %3000, align 4
  %3002 = load i32* %zn, align 4
  %3003 = icmp sge i32 %3001, %3002
  br i1 %3003, label %3004, label %3024

; <label>:3004                                    ; preds = %2998
  %3005 = load %struct.DState** %1, align 8
  %3006 = getelementptr inbounds %struct.DState* %3005, i32 0, i32 7
  %3007 = load i32* %3006, align 4
  %3008 = load %struct.DState** %1, align 8
  %3009 = getelementptr inbounds %struct.DState* %3008, i32 0, i32 8
  %3010 = load i32* %3009, align 4
  %3011 = load i32* %zn, align 4
  %3012 = sub nsw i32 %3010, %3011
  %3013 = lshr i32 %3007, %3012
  %3014 = load i32* %zn, align 4
  %3015 = shl i32 1, %3014
  %3016 = sub nsw i32 %3015, 1
  %3017 = and i32 %3013, %3016
  store i32 %3017, i32* %v27, align 4
  %3018 = load i32* %zn, align 4
  %3019 = load %struct.DState** %1, align 8
  %3020 = getelementptr inbounds %struct.DState* %3019, i32 0, i32 8
  %3021 = load i32* %3020, align 4
  %3022 = sub nsw i32 %3021, %3018
  store i32 %3022, i32* %3020, align 4
  %3023 = load i32* %v27, align 4
  store i32 %3023, i32* %zvec, align 4
  br label %3083

; <label>:3024                                    ; preds = %2998
  %3025 = load %struct.DState** %1, align 8
  %3026 = getelementptr inbounds %struct.DState* %3025, i32 0, i32 0
  %3027 = load %struct.bz_stream** %3026, align 8
  %3028 = getelementptr inbounds %struct.bz_stream* %3027, i32 0, i32 1
  %3029 = load i32* %3028, align 4
  %3030 = icmp eq i32 %3029, 0
  br i1 %3030, label %3031, label %3032

; <label>:3031                                    ; preds = %3024
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:3032                                    ; preds = %3024
  %3033 = load %struct.DState** %1, align 8
  %3034 = getelementptr inbounds %struct.DState* %3033, i32 0, i32 7
  %3035 = load i32* %3034, align 4
  %3036 = shl i32 %3035, 8
  %3037 = load %struct.DState** %1, align 8
  %3038 = getelementptr inbounds %struct.DState* %3037, i32 0, i32 0
  %3039 = load %struct.bz_stream** %3038, align 8
  %3040 = getelementptr inbounds %struct.bz_stream* %3039, i32 0, i32 0
  %3041 = load i8** %3040, align 8
  %3042 = load i8* %3041, align 1
  %3043 = zext i8 %3042 to i32
  %3044 = or i32 %3036, %3043
  %3045 = load %struct.DState** %1, align 8
  %3046 = getelementptr inbounds %struct.DState* %3045, i32 0, i32 7
  store i32 %3044, i32* %3046, align 4
  %3047 = load %struct.DState** %1, align 8
  %3048 = getelementptr inbounds %struct.DState* %3047, i32 0, i32 8
  %3049 = load i32* %3048, align 4
  %3050 = add nsw i32 %3049, 8
  store i32 %3050, i32* %3048, align 4
  %3051 = load %struct.DState** %1, align 8
  %3052 = getelementptr inbounds %struct.DState* %3051, i32 0, i32 0
  %3053 = load %struct.bz_stream** %3052, align 8
  %3054 = getelementptr inbounds %struct.bz_stream* %3053, i32 0, i32 0
  %3055 = load i8** %3054, align 8
  %3056 = getelementptr inbounds i8* %3055, i32 1
  store i8* %3056, i8** %3054, align 8
  %3057 = load %struct.DState** %1, align 8
  %3058 = getelementptr inbounds %struct.DState* %3057, i32 0, i32 0
  %3059 = load %struct.bz_stream** %3058, align 8
  %3060 = getelementptr inbounds %struct.bz_stream* %3059, i32 0, i32 1
  %3061 = load i32* %3060, align 4
  %3062 = add i32 %3061, -1
  store i32 %3062, i32* %3060, align 4
  %3063 = load %struct.DState** %1, align 8
  %3064 = getelementptr inbounds %struct.DState* %3063, i32 0, i32 0
  %3065 = load %struct.bz_stream** %3064, align 8
  %3066 = getelementptr inbounds %struct.bz_stream* %3065, i32 0, i32 2
  %3067 = load i32* %3066, align 4
  %3068 = add i32 %3067, 1
  store i32 %3068, i32* %3066, align 4
  %3069 = load %struct.DState** %1, align 8
  %3070 = getelementptr inbounds %struct.DState* %3069, i32 0, i32 0
  %3071 = load %struct.bz_stream** %3070, align 8
  %3072 = getelementptr inbounds %struct.bz_stream* %3071, i32 0, i32 2
  %3073 = load i32* %3072, align 4
  %3074 = icmp eq i32 %3073, 0
  br i1 %3074, label %3075, label %3082

; <label>:3075                                    ; preds = %3032
  %3076 = load %struct.DState** %1, align 8
  %3077 = getelementptr inbounds %struct.DState* %3076, i32 0, i32 0
  %3078 = load %struct.bz_stream** %3077, align 8
  %3079 = getelementptr inbounds %struct.bz_stream* %3078, i32 0, i32 3
  %3080 = load i32* %3079, align 4
  %3081 = add i32 %3080, 1
  store i32 %3081, i32* %3079, align 4
  br label %3082

; <label>:3082                                    ; preds = %3075, %3032
  br label %2998

; <label>:3083                                    ; preds = %3004
  br label %3084

; <label>:3084                                    ; preds = %3083, %3182
  %3085 = load i32* %zn, align 4
  %3086 = icmp sgt i32 %3085, 20
  br i1 %3086, label %3087, label %3088

; <label>:3087                                    ; preds = %3084
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:3088                                    ; preds = %3084
  %3089 = load i32* %zvec, align 4
  %3090 = load i32* %zn, align 4
  %3091 = sext i32 %3090 to i64
  %3092 = load i32** %gLimit, align 8
  %3093 = getelementptr inbounds i32* %3092, i64 %3091
  %3094 = load i32* %3093, align 4
  %3095 = icmp sle i32 %3089, %3094
  br i1 %3095, label %3096, label %3097

; <label>:3096                                    ; preds = %3088
  br label %3187

; <label>:3097                                    ; preds = %3088
  %3098 = load i32* %zn, align 4
  %3099 = add nsw i32 %3098, 1
  store i32 %3099, i32* %zn, align 4
  br label %3100

; <label>:3100                                    ; preds = %58, %3097
  %3101 = load %struct.DState** %1, align 8
  %3102 = getelementptr inbounds %struct.DState* %3101, i32 0, i32 1
  store i32 37, i32* %3102, align 4
  br label %3103

; <label>:3103                                    ; preds = %3100, %3181
  %3104 = load %struct.DState** %1, align 8
  %3105 = getelementptr inbounds %struct.DState* %3104, i32 0, i32 8
  %3106 = load i32* %3105, align 4
  %3107 = icmp sge i32 %3106, 1
  br i1 %3107, label %3108, label %3123

; <label>:3108                                    ; preds = %3103
  %3109 = load %struct.DState** %1, align 8
  %3110 = getelementptr inbounds %struct.DState* %3109, i32 0, i32 7
  %3111 = load i32* %3110, align 4
  %3112 = load %struct.DState** %1, align 8
  %3113 = getelementptr inbounds %struct.DState* %3112, i32 0, i32 8
  %3114 = load i32* %3113, align 4
  %3115 = sub nsw i32 %3114, 1
  %3116 = lshr i32 %3111, %3115
  %3117 = and i32 %3116, 1
  store i32 %3117, i32* %v28, align 4
  %3118 = load %struct.DState** %1, align 8
  %3119 = getelementptr inbounds %struct.DState* %3118, i32 0, i32 8
  %3120 = load i32* %3119, align 4
  %3121 = sub nsw i32 %3120, 1
  store i32 %3121, i32* %3119, align 4
  %3122 = load i32* %v28, align 4
  store i32 %3122, i32* %zj, align 4
  br label %3182

; <label>:3123                                    ; preds = %3103
  %3124 = load %struct.DState** %1, align 8
  %3125 = getelementptr inbounds %struct.DState* %3124, i32 0, i32 0
  %3126 = load %struct.bz_stream** %3125, align 8
  %3127 = getelementptr inbounds %struct.bz_stream* %3126, i32 0, i32 1
  %3128 = load i32* %3127, align 4
  %3129 = icmp eq i32 %3128, 0
  br i1 %3129, label %3130, label %3131

; <label>:3130                                    ; preds = %3123
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:3131                                    ; preds = %3123
  %3132 = load %struct.DState** %1, align 8
  %3133 = getelementptr inbounds %struct.DState* %3132, i32 0, i32 7
  %3134 = load i32* %3133, align 4
  %3135 = shl i32 %3134, 8
  %3136 = load %struct.DState** %1, align 8
  %3137 = getelementptr inbounds %struct.DState* %3136, i32 0, i32 0
  %3138 = load %struct.bz_stream** %3137, align 8
  %3139 = getelementptr inbounds %struct.bz_stream* %3138, i32 0, i32 0
  %3140 = load i8** %3139, align 8
  %3141 = load i8* %3140, align 1
  %3142 = zext i8 %3141 to i32
  %3143 = or i32 %3135, %3142
  %3144 = load %struct.DState** %1, align 8
  %3145 = getelementptr inbounds %struct.DState* %3144, i32 0, i32 7
  store i32 %3143, i32* %3145, align 4
  %3146 = load %struct.DState** %1, align 8
  %3147 = getelementptr inbounds %struct.DState* %3146, i32 0, i32 8
  %3148 = load i32* %3147, align 4
  %3149 = add nsw i32 %3148, 8
  store i32 %3149, i32* %3147, align 4
  %3150 = load %struct.DState** %1, align 8
  %3151 = getelementptr inbounds %struct.DState* %3150, i32 0, i32 0
  %3152 = load %struct.bz_stream** %3151, align 8
  %3153 = getelementptr inbounds %struct.bz_stream* %3152, i32 0, i32 0
  %3154 = load i8** %3153, align 8
  %3155 = getelementptr inbounds i8* %3154, i32 1
  store i8* %3155, i8** %3153, align 8
  %3156 = load %struct.DState** %1, align 8
  %3157 = getelementptr inbounds %struct.DState* %3156, i32 0, i32 0
  %3158 = load %struct.bz_stream** %3157, align 8
  %3159 = getelementptr inbounds %struct.bz_stream* %3158, i32 0, i32 1
  %3160 = load i32* %3159, align 4
  %3161 = add i32 %3160, -1
  store i32 %3161, i32* %3159, align 4
  %3162 = load %struct.DState** %1, align 8
  %3163 = getelementptr inbounds %struct.DState* %3162, i32 0, i32 0
  %3164 = load %struct.bz_stream** %3163, align 8
  %3165 = getelementptr inbounds %struct.bz_stream* %3164, i32 0, i32 2
  %3166 = load i32* %3165, align 4
  %3167 = add i32 %3166, 1
  store i32 %3167, i32* %3165, align 4
  %3168 = load %struct.DState** %1, align 8
  %3169 = getelementptr inbounds %struct.DState* %3168, i32 0, i32 0
  %3170 = load %struct.bz_stream** %3169, align 8
  %3171 = getelementptr inbounds %struct.bz_stream* %3170, i32 0, i32 2
  %3172 = load i32* %3171, align 4
  %3173 = icmp eq i32 %3172, 0
  br i1 %3173, label %3174, label %3181

; <label>:3174                                    ; preds = %3131
  %3175 = load %struct.DState** %1, align 8
  %3176 = getelementptr inbounds %struct.DState* %3175, i32 0, i32 0
  %3177 = load %struct.bz_stream** %3176, align 8
  %3178 = getelementptr inbounds %struct.bz_stream* %3177, i32 0, i32 3
  %3179 = load i32* %3178, align 4
  %3180 = add i32 %3179, 1
  store i32 %3180, i32* %3178, align 4
  br label %3181

; <label>:3181                                    ; preds = %3174, %3131
  br label %3103

; <label>:3182                                    ; preds = %3108
  %3183 = load i32* %zvec, align 4
  %3184 = shl i32 %3183, 1
  %3185 = load i32* %zj, align 4
  %3186 = or i32 %3184, %3185
  store i32 %3186, i32* %zvec, align 4
  br label %3084

; <label>:3187                                    ; preds = %3096
  %3188 = load i32* %zvec, align 4
  %3189 = load i32* %zn, align 4
  %3190 = sext i32 %3189 to i64
  %3191 = load i32** %gBase, align 8
  %3192 = getelementptr inbounds i32* %3191, i64 %3190
  %3193 = load i32* %3192, align 4
  %3194 = sub nsw i32 %3188, %3193
  %3195 = icmp slt i32 %3194, 0
  br i1 %3195, label %3205, label %3196

; <label>:3196                                    ; preds = %3187
  %3197 = load i32* %zvec, align 4
  %3198 = load i32* %zn, align 4
  %3199 = sext i32 %3198 to i64
  %3200 = load i32** %gBase, align 8
  %3201 = getelementptr inbounds i32* %3200, i64 %3199
  %3202 = load i32* %3201, align 4
  %3203 = sub nsw i32 %3197, %3202
  %3204 = icmp sge i32 %3203, 258
  br i1 %3204, label %3205, label %3206

; <label>:3205                                    ; preds = %3196, %3187
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:3206                                    ; preds = %3196
  %3207 = load i32* %zvec, align 4
  %3208 = load i32* %zn, align 4
  %3209 = sext i32 %3208 to i64
  %3210 = load i32** %gBase, align 8
  %3211 = getelementptr inbounds i32* %3210, i64 %3209
  %3212 = load i32* %3211, align 4
  %3213 = sub nsw i32 %3207, %3212
  %3214 = sext i32 %3213 to i64
  %3215 = load i32** %gPerm, align 8
  %3216 = getelementptr inbounds i32* %3215, i64 %3214
  %3217 = load i32* %3216, align 4
  store i32 %3217, i32* %nextSym, align 4
  br label %3218

; <label>:3218                                    ; preds = %3206, %3601, %4172
  %3219 = load i32* %nextSym, align 4
  %3220 = load i32* %EOB, align 4
  %3221 = icmp eq i32 %3219, %3220
  br i1 %3221, label %3222, label %3223

; <label>:3222                                    ; preds = %3218
  br label %4184

; <label>:3223                                    ; preds = %3218
  %3224 = load i32* %nextSym, align 4
  %3225 = icmp eq i32 %3224, 0
  br i1 %3225, label %3229, label %3226

; <label>:3226                                    ; preds = %3223
  %3227 = load i32* %nextSym, align 4
  %3228 = icmp eq i32 %3227, 1
  br i1 %3228, label %3229, label %3602

; <label>:3229                                    ; preds = %3226, %3223
  store i32 -1, i32* %es, align 4
  store i32 1, i32* %N, align 4
  br label %3230

; <label>:3230                                    ; preds = %3524, %3229
  %3231 = load i32* %nextSym, align 4
  %3232 = icmp eq i32 %3231, 0
  br i1 %3232, label %3233, label %3238

; <label>:3233                                    ; preds = %3230
  %3234 = load i32* %es, align 4
  %3235 = load i32* %N, align 4
  %3236 = mul nsw i32 1, %3235
  %3237 = add nsw i32 %3234, %3236
  store i32 %3237, i32* %es, align 4
  br label %3247

; <label>:3238                                    ; preds = %3230
  %3239 = load i32* %nextSym, align 4
  %3240 = icmp eq i32 %3239, 1
  br i1 %3240, label %3241, label %3246

; <label>:3241                                    ; preds = %3238
  %3242 = load i32* %es, align 4
  %3243 = load i32* %N, align 4
  %3244 = mul nsw i32 2, %3243
  %3245 = add nsw i32 %3242, %3244
  store i32 %3245, i32* %es, align 4
  br label %3246

; <label>:3246                                    ; preds = %3241, %3238
  br label %3247

; <label>:3247                                    ; preds = %3246, %3233
  %3248 = load i32* %N, align 4
  %3249 = mul nsw i32 %3248, 2
  store i32 %3249, i32* %N, align 4
  %3250 = load i32* %groupPos, align 4
  %3251 = icmp eq i32 %3250, 0
  br i1 %3251, label %3252, label %3291

; <label>:3252                                    ; preds = %3247
  %3253 = load i32* %groupNo, align 4
  %3254 = add nsw i32 %3253, 1
  store i32 %3254, i32* %groupNo, align 4
  %3255 = load i32* %groupNo, align 4
  %3256 = load i32* %nSelectors, align 4
  %3257 = icmp sge i32 %3255, %3256
  br i1 %3257, label %3258, label %3259

; <label>:3258                                    ; preds = %3252
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:3259                                    ; preds = %3252
  store i32 50, i32* %groupPos, align 4
  %3260 = load i32* %groupNo, align 4
  %3261 = sext i32 %3260 to i64
  %3262 = load %struct.DState** %1, align 8
  %3263 = getelementptr inbounds %struct.DState* %3262, i32 0, i32 33
  %3264 = getelementptr inbounds [18002 x i8]* %3263, i32 0, i64 %3261
  %3265 = load i8* %3264, align 1
  %3266 = zext i8 %3265 to i32
  store i32 %3266, i32* %gSel, align 4
  %3267 = load i32* %gSel, align 4
  %3268 = sext i32 %3267 to i64
  %3269 = load %struct.DState** %1, align 8
  %3270 = getelementptr inbounds %struct.DState* %3269, i32 0, i32 39
  %3271 = getelementptr inbounds [6 x i32]* %3270, i32 0, i64 %3268
  %3272 = load i32* %3271, align 4
  store i32 %3272, i32* %gMinlen, align 4
  %3273 = load i32* %gSel, align 4
  %3274 = sext i32 %3273 to i64
  %3275 = load %struct.DState** %1, align 8
  %3276 = getelementptr inbounds %struct.DState* %3275, i32 0, i32 36
  %3277 = getelementptr inbounds [6 x [258 x i32]]* %3276, i32 0, i64 %3274
  %3278 = getelementptr inbounds [258 x i32]* %3277, i32 0, i64 0
  store i32* %3278, i32** %gLimit, align 8
  %3279 = load i32* %gSel, align 4
  %3280 = sext i32 %3279 to i64
  %3281 = load %struct.DState** %1, align 8
  %3282 = getelementptr inbounds %struct.DState* %3281, i32 0, i32 38
  %3283 = getelementptr inbounds [6 x [258 x i32]]* %3282, i32 0, i64 %3280
  %3284 = getelementptr inbounds [258 x i32]* %3283, i32 0, i64 0
  store i32* %3284, i32** %gPerm, align 8
  %3285 = load i32* %gSel, align 4
  %3286 = sext i32 %3285 to i64
  %3287 = load %struct.DState** %1, align 8
  %3288 = getelementptr inbounds %struct.DState* %3287, i32 0, i32 37
  %3289 = getelementptr inbounds [6 x [258 x i32]]* %3288, i32 0, i64 %3286
  %3290 = getelementptr inbounds [258 x i32]* %3289, i32 0, i64 0
  store i32* %3290, i32** %gBase, align 8
  br label %3291

; <label>:3291                                    ; preds = %3259, %3247
  %3292 = load i32* %groupPos, align 4
  %3293 = add nsw i32 %3292, -1
  store i32 %3293, i32* %groupPos, align 4
  %3294 = load i32* %gMinlen, align 4
  store i32 %3294, i32* %zn, align 4
  br label %3295

; <label>:3295                                    ; preds = %58, %3291
  %3296 = load %struct.DState** %1, align 8
  %3297 = getelementptr inbounds %struct.DState* %3296, i32 0, i32 1
  store i32 38, i32* %3297, align 4
  br label %3298

; <label>:3298                                    ; preds = %3295, %3382
  %3299 = load %struct.DState** %1, align 8
  %3300 = getelementptr inbounds %struct.DState* %3299, i32 0, i32 8
  %3301 = load i32* %3300, align 4
  %3302 = load i32* %zn, align 4
  %3303 = icmp sge i32 %3301, %3302
  br i1 %3303, label %3304, label %3324

; <label>:3304                                    ; preds = %3298
  %3305 = load %struct.DState** %1, align 8
  %3306 = getelementptr inbounds %struct.DState* %3305, i32 0, i32 7
  %3307 = load i32* %3306, align 4
  %3308 = load %struct.DState** %1, align 8
  %3309 = getelementptr inbounds %struct.DState* %3308, i32 0, i32 8
  %3310 = load i32* %3309, align 4
  %3311 = load i32* %zn, align 4
  %3312 = sub nsw i32 %3310, %3311
  %3313 = lshr i32 %3307, %3312
  %3314 = load i32* %zn, align 4
  %3315 = shl i32 1, %3314
  %3316 = sub nsw i32 %3315, 1
  %3317 = and i32 %3313, %3316
  store i32 %3317, i32* %v29, align 4
  %3318 = load i32* %zn, align 4
  %3319 = load %struct.DState** %1, align 8
  %3320 = getelementptr inbounds %struct.DState* %3319, i32 0, i32 8
  %3321 = load i32* %3320, align 4
  %3322 = sub nsw i32 %3321, %3318
  store i32 %3322, i32* %3320, align 4
  %3323 = load i32* %v29, align 4
  store i32 %3323, i32* %zvec, align 4
  br label %3383

; <label>:3324                                    ; preds = %3298
  %3325 = load %struct.DState** %1, align 8
  %3326 = getelementptr inbounds %struct.DState* %3325, i32 0, i32 0
  %3327 = load %struct.bz_stream** %3326, align 8
  %3328 = getelementptr inbounds %struct.bz_stream* %3327, i32 0, i32 1
  %3329 = load i32* %3328, align 4
  %3330 = icmp eq i32 %3329, 0
  br i1 %3330, label %3331, label %3332

; <label>:3331                                    ; preds = %3324
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:3332                                    ; preds = %3324
  %3333 = load %struct.DState** %1, align 8
  %3334 = getelementptr inbounds %struct.DState* %3333, i32 0, i32 7
  %3335 = load i32* %3334, align 4
  %3336 = shl i32 %3335, 8
  %3337 = load %struct.DState** %1, align 8
  %3338 = getelementptr inbounds %struct.DState* %3337, i32 0, i32 0
  %3339 = load %struct.bz_stream** %3338, align 8
  %3340 = getelementptr inbounds %struct.bz_stream* %3339, i32 0, i32 0
  %3341 = load i8** %3340, align 8
  %3342 = load i8* %3341, align 1
  %3343 = zext i8 %3342 to i32
  %3344 = or i32 %3336, %3343
  %3345 = load %struct.DState** %1, align 8
  %3346 = getelementptr inbounds %struct.DState* %3345, i32 0, i32 7
  store i32 %3344, i32* %3346, align 4
  %3347 = load %struct.DState** %1, align 8
  %3348 = getelementptr inbounds %struct.DState* %3347, i32 0, i32 8
  %3349 = load i32* %3348, align 4
  %3350 = add nsw i32 %3349, 8
  store i32 %3350, i32* %3348, align 4
  %3351 = load %struct.DState** %1, align 8
  %3352 = getelementptr inbounds %struct.DState* %3351, i32 0, i32 0
  %3353 = load %struct.bz_stream** %3352, align 8
  %3354 = getelementptr inbounds %struct.bz_stream* %3353, i32 0, i32 0
  %3355 = load i8** %3354, align 8
  %3356 = getelementptr inbounds i8* %3355, i32 1
  store i8* %3356, i8** %3354, align 8
  %3357 = load %struct.DState** %1, align 8
  %3358 = getelementptr inbounds %struct.DState* %3357, i32 0, i32 0
  %3359 = load %struct.bz_stream** %3358, align 8
  %3360 = getelementptr inbounds %struct.bz_stream* %3359, i32 0, i32 1
  %3361 = load i32* %3360, align 4
  %3362 = add i32 %3361, -1
  store i32 %3362, i32* %3360, align 4
  %3363 = load %struct.DState** %1, align 8
  %3364 = getelementptr inbounds %struct.DState* %3363, i32 0, i32 0
  %3365 = load %struct.bz_stream** %3364, align 8
  %3366 = getelementptr inbounds %struct.bz_stream* %3365, i32 0, i32 2
  %3367 = load i32* %3366, align 4
  %3368 = add i32 %3367, 1
  store i32 %3368, i32* %3366, align 4
  %3369 = load %struct.DState** %1, align 8
  %3370 = getelementptr inbounds %struct.DState* %3369, i32 0, i32 0
  %3371 = load %struct.bz_stream** %3370, align 8
  %3372 = getelementptr inbounds %struct.bz_stream* %3371, i32 0, i32 2
  %3373 = load i32* %3372, align 4
  %3374 = icmp eq i32 %3373, 0
  br i1 %3374, label %3375, label %3382

; <label>:3375                                    ; preds = %3332
  %3376 = load %struct.DState** %1, align 8
  %3377 = getelementptr inbounds %struct.DState* %3376, i32 0, i32 0
  %3378 = load %struct.bz_stream** %3377, align 8
  %3379 = getelementptr inbounds %struct.bz_stream* %3378, i32 0, i32 3
  %3380 = load i32* %3379, align 4
  %3381 = add i32 %3380, 1
  store i32 %3381, i32* %3379, align 4
  br label %3382

; <label>:3382                                    ; preds = %3375, %3332
  br label %3298

; <label>:3383                                    ; preds = %3304
  br label %3384

; <label>:3384                                    ; preds = %3383, %3482
  %3385 = load i32* %zn, align 4
  %3386 = icmp sgt i32 %3385, 20
  br i1 %3386, label %3387, label %3388

; <label>:3387                                    ; preds = %3384
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:3388                                    ; preds = %3384
  %3389 = load i32* %zvec, align 4
  %3390 = load i32* %zn, align 4
  %3391 = sext i32 %3390 to i64
  %3392 = load i32** %gLimit, align 8
  %3393 = getelementptr inbounds i32* %3392, i64 %3391
  %3394 = load i32* %3393, align 4
  %3395 = icmp sle i32 %3389, %3394
  br i1 %3395, label %3396, label %3397

; <label>:3396                                    ; preds = %3388
  br label %3487

; <label>:3397                                    ; preds = %3388
  %3398 = load i32* %zn, align 4
  %3399 = add nsw i32 %3398, 1
  store i32 %3399, i32* %zn, align 4
  br label %3400

; <label>:3400                                    ; preds = %58, %3397
  %3401 = load %struct.DState** %1, align 8
  %3402 = getelementptr inbounds %struct.DState* %3401, i32 0, i32 1
  store i32 39, i32* %3402, align 4
  br label %3403

; <label>:3403                                    ; preds = %3400, %3481
  %3404 = load %struct.DState** %1, align 8
  %3405 = getelementptr inbounds %struct.DState* %3404, i32 0, i32 8
  %3406 = load i32* %3405, align 4
  %3407 = icmp sge i32 %3406, 1
  br i1 %3407, label %3408, label %3423

; <label>:3408                                    ; preds = %3403
  %3409 = load %struct.DState** %1, align 8
  %3410 = getelementptr inbounds %struct.DState* %3409, i32 0, i32 7
  %3411 = load i32* %3410, align 4
  %3412 = load %struct.DState** %1, align 8
  %3413 = getelementptr inbounds %struct.DState* %3412, i32 0, i32 8
  %3414 = load i32* %3413, align 4
  %3415 = sub nsw i32 %3414, 1
  %3416 = lshr i32 %3411, %3415
  %3417 = and i32 %3416, 1
  store i32 %3417, i32* %v30, align 4
  %3418 = load %struct.DState** %1, align 8
  %3419 = getelementptr inbounds %struct.DState* %3418, i32 0, i32 8
  %3420 = load i32* %3419, align 4
  %3421 = sub nsw i32 %3420, 1
  store i32 %3421, i32* %3419, align 4
  %3422 = load i32* %v30, align 4
  store i32 %3422, i32* %zj, align 4
  br label %3482

; <label>:3423                                    ; preds = %3403
  %3424 = load %struct.DState** %1, align 8
  %3425 = getelementptr inbounds %struct.DState* %3424, i32 0, i32 0
  %3426 = load %struct.bz_stream** %3425, align 8
  %3427 = getelementptr inbounds %struct.bz_stream* %3426, i32 0, i32 1
  %3428 = load i32* %3427, align 4
  %3429 = icmp eq i32 %3428, 0
  br i1 %3429, label %3430, label %3431

; <label>:3430                                    ; preds = %3423
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:3431                                    ; preds = %3423
  %3432 = load %struct.DState** %1, align 8
  %3433 = getelementptr inbounds %struct.DState* %3432, i32 0, i32 7
  %3434 = load i32* %3433, align 4
  %3435 = shl i32 %3434, 8
  %3436 = load %struct.DState** %1, align 8
  %3437 = getelementptr inbounds %struct.DState* %3436, i32 0, i32 0
  %3438 = load %struct.bz_stream** %3437, align 8
  %3439 = getelementptr inbounds %struct.bz_stream* %3438, i32 0, i32 0
  %3440 = load i8** %3439, align 8
  %3441 = load i8* %3440, align 1
  %3442 = zext i8 %3441 to i32
  %3443 = or i32 %3435, %3442
  %3444 = load %struct.DState** %1, align 8
  %3445 = getelementptr inbounds %struct.DState* %3444, i32 0, i32 7
  store i32 %3443, i32* %3445, align 4
  %3446 = load %struct.DState** %1, align 8
  %3447 = getelementptr inbounds %struct.DState* %3446, i32 0, i32 8
  %3448 = load i32* %3447, align 4
  %3449 = add nsw i32 %3448, 8
  store i32 %3449, i32* %3447, align 4
  %3450 = load %struct.DState** %1, align 8
  %3451 = getelementptr inbounds %struct.DState* %3450, i32 0, i32 0
  %3452 = load %struct.bz_stream** %3451, align 8
  %3453 = getelementptr inbounds %struct.bz_stream* %3452, i32 0, i32 0
  %3454 = load i8** %3453, align 8
  %3455 = getelementptr inbounds i8* %3454, i32 1
  store i8* %3455, i8** %3453, align 8
  %3456 = load %struct.DState** %1, align 8
  %3457 = getelementptr inbounds %struct.DState* %3456, i32 0, i32 0
  %3458 = load %struct.bz_stream** %3457, align 8
  %3459 = getelementptr inbounds %struct.bz_stream* %3458, i32 0, i32 1
  %3460 = load i32* %3459, align 4
  %3461 = add i32 %3460, -1
  store i32 %3461, i32* %3459, align 4
  %3462 = load %struct.DState** %1, align 8
  %3463 = getelementptr inbounds %struct.DState* %3462, i32 0, i32 0
  %3464 = load %struct.bz_stream** %3463, align 8
  %3465 = getelementptr inbounds %struct.bz_stream* %3464, i32 0, i32 2
  %3466 = load i32* %3465, align 4
  %3467 = add i32 %3466, 1
  store i32 %3467, i32* %3465, align 4
  %3468 = load %struct.DState** %1, align 8
  %3469 = getelementptr inbounds %struct.DState* %3468, i32 0, i32 0
  %3470 = load %struct.bz_stream** %3469, align 8
  %3471 = getelementptr inbounds %struct.bz_stream* %3470, i32 0, i32 2
  %3472 = load i32* %3471, align 4
  %3473 = icmp eq i32 %3472, 0
  br i1 %3473, label %3474, label %3481

; <label>:3474                                    ; preds = %3431
  %3475 = load %struct.DState** %1, align 8
  %3476 = getelementptr inbounds %struct.DState* %3475, i32 0, i32 0
  %3477 = load %struct.bz_stream** %3476, align 8
  %3478 = getelementptr inbounds %struct.bz_stream* %3477, i32 0, i32 3
  %3479 = load i32* %3478, align 4
  %3480 = add i32 %3479, 1
  store i32 %3480, i32* %3478, align 4
  br label %3481

; <label>:3481                                    ; preds = %3474, %3431
  br label %3403

; <label>:3482                                    ; preds = %3408
  %3483 = load i32* %zvec, align 4
  %3484 = shl i32 %3483, 1
  %3485 = load i32* %zj, align 4
  %3486 = or i32 %3484, %3485
  store i32 %3486, i32* %zvec, align 4
  br label %3384

; <label>:3487                                    ; preds = %3396
  %3488 = load i32* %zvec, align 4
  %3489 = load i32* %zn, align 4
  %3490 = sext i32 %3489 to i64
  %3491 = load i32** %gBase, align 8
  %3492 = getelementptr inbounds i32* %3491, i64 %3490
  %3493 = load i32* %3492, align 4
  %3494 = sub nsw i32 %3488, %3493
  %3495 = icmp slt i32 %3494, 0
  br i1 %3495, label %3505, label %3496

; <label>:3496                                    ; preds = %3487
  %3497 = load i32* %zvec, align 4
  %3498 = load i32* %zn, align 4
  %3499 = sext i32 %3498 to i64
  %3500 = load i32** %gBase, align 8
  %3501 = getelementptr inbounds i32* %3500, i64 %3499
  %3502 = load i32* %3501, align 4
  %3503 = sub nsw i32 %3497, %3502
  %3504 = icmp sge i32 %3503, 258
  br i1 %3504, label %3505, label %3506

; <label>:3505                                    ; preds = %3496, %3487
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:3506                                    ; preds = %3496
  %3507 = load i32* %zvec, align 4
  %3508 = load i32* %zn, align 4
  %3509 = sext i32 %3508 to i64
  %3510 = load i32** %gBase, align 8
  %3511 = getelementptr inbounds i32* %3510, i64 %3509
  %3512 = load i32* %3511, align 4
  %3513 = sub nsw i32 %3507, %3512
  %3514 = sext i32 %3513 to i64
  %3515 = load i32** %gPerm, align 8
  %3516 = getelementptr inbounds i32* %3515, i64 %3514
  %3517 = load i32* %3516, align 4
  store i32 %3517, i32* %nextSym, align 4
  br label %3518

; <label>:3518                                    ; preds = %3506
  %3519 = load i32* %nextSym, align 4
  %3520 = icmp eq i32 %3519, 0
  br i1 %3520, label %3524, label %3521

; <label>:3521                                    ; preds = %3518
  %3522 = load i32* %nextSym, align 4
  %3523 = icmp eq i32 %3522, 1
  br label %3524

; <label>:3524                                    ; preds = %3521, %3518
  %3525 = phi i1 [ true, %3518 ], [ %3523, %3521 ]
  br i1 %3525, label %3230, label %3526

; <label>:3526                                    ; preds = %3524
  %3527 = load i32* %es, align 4
  %3528 = add nsw i32 %3527, 1
  store i32 %3528, i32* %es, align 4
  %3529 = load %struct.DState** %1, align 8
  %3530 = getelementptr inbounds %struct.DState* %3529, i32 0, i32 32
  %3531 = getelementptr inbounds [16 x i32]* %3530, i32 0, i64 0
  %3532 = load i32* %3531, align 4
  %3533 = sext i32 %3532 to i64
  %3534 = load %struct.DState** %1, align 8
  %3535 = getelementptr inbounds %struct.DState* %3534, i32 0, i32 31
  %3536 = getelementptr inbounds [4096 x i8]* %3535, i32 0, i64 %3533
  %3537 = load i8* %3536, align 1
  %3538 = zext i8 %3537 to i64
  %3539 = load %struct.DState** %1, align 8
  %3540 = getelementptr inbounds %struct.DState* %3539, i32 0, i32 30
  %3541 = getelementptr inbounds [256 x i8]* %3540, i32 0, i64 %3538
  %3542 = load i8* %3541, align 1
  store i8 %3542, i8* %uc, align 1
  %3543 = load i32* %es, align 4
  %3544 = load i8* %uc, align 1
  %3545 = zext i8 %3544 to i64
  %3546 = load %struct.DState** %1, align 8
  %3547 = getelementptr inbounds %struct.DState* %3546, i32 0, i32 16
  %3548 = getelementptr inbounds [256 x i32]* %3547, i32 0, i64 %3545
  %3549 = load i32* %3548, align 4
  %3550 = add nsw i32 %3549, %3543
  store i32 %3550, i32* %3548, align 4
  %3551 = load %struct.DState** %1, align 8
  %3552 = getelementptr inbounds %struct.DState* %3551, i32 0, i32 10
  %3553 = load i8* %3552, align 1
  %3554 = icmp ne i8 %3553, 0
  br i1 %3554, label %3555, label %3578

; <label>:3555                                    ; preds = %3526
  br label %3556

; <label>:3556                                    ; preds = %3564, %3555
  %3557 = load i32* %es, align 4
  %3558 = icmp sgt i32 %3557, 0
  br i1 %3558, label %3559, label %3577

; <label>:3559                                    ; preds = %3556
  %3560 = load i32* %nblock, align 4
  %3561 = load i32* %nblockMAX, align 4
  %3562 = icmp sge i32 %3560, %3561
  br i1 %3562, label %3563, label %3564

; <label>:3563                                    ; preds = %3559
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:3564                                    ; preds = %3559
  %3565 = load i8* %uc, align 1
  %3566 = zext i8 %3565 to i16
  %3567 = load i32* %nblock, align 4
  %3568 = sext i32 %3567 to i64
  %3569 = load %struct.DState** %1, align 8
  %3570 = getelementptr inbounds %struct.DState* %3569, i32 0, i32 21
  %3571 = load i16** %3570, align 8
  %3572 = getelementptr inbounds i16* %3571, i64 %3568
  store i16 %3566, i16* %3572, align 2
  %3573 = load i32* %nblock, align 4
  %3574 = add nsw i32 %3573, 1
  store i32 %3574, i32* %nblock, align 4
  %3575 = load i32* %es, align 4
  %3576 = add nsw i32 %3575, -1
  store i32 %3576, i32* %es, align 4
  br label %3556

; <label>:3577                                    ; preds = %3556
  br label %3601

; <label>:3578                                    ; preds = %3526
  br label %3579

; <label>:3579                                    ; preds = %3587, %3578
  %3580 = load i32* %es, align 4
  %3581 = icmp sgt i32 %3580, 0
  br i1 %3581, label %3582, label %3600

; <label>:3582                                    ; preds = %3579
  %3583 = load i32* %nblock, align 4
  %3584 = load i32* %nblockMAX, align 4
  %3585 = icmp sge i32 %3583, %3584
  br i1 %3585, label %3586, label %3587

; <label>:3586                                    ; preds = %3582
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:3587                                    ; preds = %3582
  %3588 = load i8* %uc, align 1
  %3589 = zext i8 %3588 to i32
  %3590 = load i32* %nblock, align 4
  %3591 = sext i32 %3590 to i64
  %3592 = load %struct.DState** %1, align 8
  %3593 = getelementptr inbounds %struct.DState* %3592, i32 0, i32 20
  %3594 = load i32** %3593, align 8
  %3595 = getelementptr inbounds i32* %3594, i64 %3591
  store i32 %3589, i32* %3595, align 4
  %3596 = load i32* %nblock, align 4
  %3597 = add nsw i32 %3596, 1
  store i32 %3597, i32* %nblock, align 4
  %3598 = load i32* %es, align 4
  %3599 = add nsw i32 %3598, -1
  store i32 %3599, i32* %es, align 4
  br label %3579

; <label>:3600                                    ; preds = %3579
  br label %3601

; <label>:3601                                    ; preds = %3600, %3577
  br label %3218

; <label>:3602                                    ; preds = %3226
  %3603 = load i32* %nblock, align 4
  %3604 = load i32* %nblockMAX, align 4
  %3605 = icmp sge i32 %3603, %3604
  br i1 %3605, label %3606, label %3607

; <label>:3606                                    ; preds = %3602
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:3607                                    ; preds = %3602
  %3608 = load i32* %nextSym, align 4
  %3609 = sub nsw i32 %3608, 1
  store i32 %3609, i32* %nn, align 4
  %3610 = load i32* %nn, align 4
  %3611 = icmp ult i32 %3610, 16
  br i1 %3611, label %3612, label %3715

; <label>:3612                                    ; preds = %3607
  %3613 = load %struct.DState** %1, align 8
  %3614 = getelementptr inbounds %struct.DState* %3613, i32 0, i32 32
  %3615 = getelementptr inbounds [16 x i32]* %3614, i32 0, i64 0
  %3616 = load i32* %3615, align 4
  store i32 %3616, i32* %pp, align 4
  %3617 = load i32* %pp, align 4
  %3618 = load i32* %nn, align 4
  %3619 = add i32 %3617, %3618
  %3620 = zext i32 %3619 to i64
  %3621 = load %struct.DState** %1, align 8
  %3622 = getelementptr inbounds %struct.DState* %3621, i32 0, i32 31
  %3623 = getelementptr inbounds [4096 x i8]* %3622, i32 0, i64 %3620
  %3624 = load i8* %3623, align 1
  store i8 %3624, i8* %uc, align 1
  br label %3625

; <label>:3625                                    ; preds = %3628, %3612
  %3626 = load i32* %nn, align 4
  %3627 = icmp ugt i32 %3626, 3
  br i1 %3627, label %3628, label %3685

; <label>:3628                                    ; preds = %3625
  %3629 = load i32* %pp, align 4
  %3630 = load i32* %nn, align 4
  %3631 = add i32 %3629, %3630
  store i32 %3631, i32* %z, align 4
  %3632 = load i32* %z, align 4
  %3633 = sub nsw i32 %3632, 1
  %3634 = sext i32 %3633 to i64
  %3635 = load %struct.DState** %1, align 8
  %3636 = getelementptr inbounds %struct.DState* %3635, i32 0, i32 31
  %3637 = getelementptr inbounds [4096 x i8]* %3636, i32 0, i64 %3634
  %3638 = load i8* %3637, align 1
  %3639 = load i32* %z, align 4
  %3640 = sext i32 %3639 to i64
  %3641 = load %struct.DState** %1, align 8
  %3642 = getelementptr inbounds %struct.DState* %3641, i32 0, i32 31
  %3643 = getelementptr inbounds [4096 x i8]* %3642, i32 0, i64 %3640
  store i8 %3638, i8* %3643, align 1
  %3644 = load i32* %z, align 4
  %3645 = sub nsw i32 %3644, 2
  %3646 = sext i32 %3645 to i64
  %3647 = load %struct.DState** %1, align 8
  %3648 = getelementptr inbounds %struct.DState* %3647, i32 0, i32 31
  %3649 = getelementptr inbounds [4096 x i8]* %3648, i32 0, i64 %3646
  %3650 = load i8* %3649, align 1
  %3651 = load i32* %z, align 4
  %3652 = sub nsw i32 %3651, 1
  %3653 = sext i32 %3652 to i64
  %3654 = load %struct.DState** %1, align 8
  %3655 = getelementptr inbounds %struct.DState* %3654, i32 0, i32 31
  %3656 = getelementptr inbounds [4096 x i8]* %3655, i32 0, i64 %3653
  store i8 %3650, i8* %3656, align 1
  %3657 = load i32* %z, align 4
  %3658 = sub nsw i32 %3657, 3
  %3659 = sext i32 %3658 to i64
  %3660 = load %struct.DState** %1, align 8
  %3661 = getelementptr inbounds %struct.DState* %3660, i32 0, i32 31
  %3662 = getelementptr inbounds [4096 x i8]* %3661, i32 0, i64 %3659
  %3663 = load i8* %3662, align 1
  %3664 = load i32* %z, align 4
  %3665 = sub nsw i32 %3664, 2
  %3666 = sext i32 %3665 to i64
  %3667 = load %struct.DState** %1, align 8
  %3668 = getelementptr inbounds %struct.DState* %3667, i32 0, i32 31
  %3669 = getelementptr inbounds [4096 x i8]* %3668, i32 0, i64 %3666
  store i8 %3663, i8* %3669, align 1
  %3670 = load i32* %z, align 4
  %3671 = sub nsw i32 %3670, 4
  %3672 = sext i32 %3671 to i64
  %3673 = load %struct.DState** %1, align 8
  %3674 = getelementptr inbounds %struct.DState* %3673, i32 0, i32 31
  %3675 = getelementptr inbounds [4096 x i8]* %3674, i32 0, i64 %3672
  %3676 = load i8* %3675, align 1
  %3677 = load i32* %z, align 4
  %3678 = sub nsw i32 %3677, 3
  %3679 = sext i32 %3678 to i64
  %3680 = load %struct.DState** %1, align 8
  %3681 = getelementptr inbounds %struct.DState* %3680, i32 0, i32 31
  %3682 = getelementptr inbounds [4096 x i8]* %3681, i32 0, i64 %3679
  store i8 %3676, i8* %3682, align 1
  %3683 = load i32* %nn, align 4
  %3684 = sub i32 %3683, 4
  store i32 %3684, i32* %nn, align 4
  br label %3625

; <label>:3685                                    ; preds = %3625
  br label %3686

; <label>:3686                                    ; preds = %3689, %3685
  %3687 = load i32* %nn, align 4
  %3688 = icmp ugt i32 %3687, 0
  br i1 %3688, label %3689, label %3708

; <label>:3689                                    ; preds = %3686
  %3690 = load i32* %pp, align 4
  %3691 = load i32* %nn, align 4
  %3692 = add i32 %3690, %3691
  %3693 = sub i32 %3692, 1
  %3694 = zext i32 %3693 to i64
  %3695 = load %struct.DState** %1, align 8
  %3696 = getelementptr inbounds %struct.DState* %3695, i32 0, i32 31
  %3697 = getelementptr inbounds [4096 x i8]* %3696, i32 0, i64 %3694
  %3698 = load i8* %3697, align 1
  %3699 = load i32* %pp, align 4
  %3700 = load i32* %nn, align 4
  %3701 = add i32 %3699, %3700
  %3702 = zext i32 %3701 to i64
  %3703 = load %struct.DState** %1, align 8
  %3704 = getelementptr inbounds %struct.DState* %3703, i32 0, i32 31
  %3705 = getelementptr inbounds [4096 x i8]* %3704, i32 0, i64 %3702
  store i8 %3698, i8* %3705, align 1
  %3706 = load i32* %nn, align 4
  %3707 = add i32 %3706, -1
  store i32 %3707, i32* %nn, align 4
  br label %3686

; <label>:3708                                    ; preds = %3686
  %3709 = load i8* %uc, align 1
  %3710 = load i32* %pp, align 4
  %3711 = sext i32 %3710 to i64
  %3712 = load %struct.DState** %1, align 8
  %3713 = getelementptr inbounds %struct.DState* %3712, i32 0, i32 31
  %3714 = getelementptr inbounds [4096 x i8]* %3713, i32 0, i64 %3711
  store i8 %3709, i8* %3714, align 1
  br label %3868

; <label>:3715                                    ; preds = %3607
  %3716 = load i32* %nn, align 4
  %3717 = udiv i32 %3716, 16
  store i32 %3717, i32* %lno, align 4
  %3718 = load i32* %nn, align 4
  %3719 = urem i32 %3718, 16
  store i32 %3719, i32* %off, align 4
  %3720 = load i32* %lno, align 4
  %3721 = sext i32 %3720 to i64
  %3722 = load %struct.DState** %1, align 8
  %3723 = getelementptr inbounds %struct.DState* %3722, i32 0, i32 32
  %3724 = getelementptr inbounds [16 x i32]* %3723, i32 0, i64 %3721
  %3725 = load i32* %3724, align 4
  %3726 = load i32* %off, align 4
  %3727 = add nsw i32 %3725, %3726
  store i32 %3727, i32* %pp, align 4
  %3728 = load i32* %pp, align 4
  %3729 = sext i32 %3728 to i64
  %3730 = load %struct.DState** %1, align 8
  %3731 = getelementptr inbounds %struct.DState* %3730, i32 0, i32 31
  %3732 = getelementptr inbounds [4096 x i8]* %3731, i32 0, i64 %3729
  %3733 = load i8* %3732, align 1
  store i8 %3733, i8* %uc, align 1
  br label %3734

; <label>:3734                                    ; preds = %3743, %3715
  %3735 = load i32* %pp, align 4
  %3736 = load i32* %lno, align 4
  %3737 = sext i32 %3736 to i64
  %3738 = load %struct.DState** %1, align 8
  %3739 = getelementptr inbounds %struct.DState* %3738, i32 0, i32 32
  %3740 = getelementptr inbounds [16 x i32]* %3739, i32 0, i64 %3737
  %3741 = load i32* %3740, align 4
  %3742 = icmp sgt i32 %3735, %3741
  br i1 %3742, label %3743, label %3758

; <label>:3743                                    ; preds = %3734
  %3744 = load i32* %pp, align 4
  %3745 = sub nsw i32 %3744, 1
  %3746 = sext i32 %3745 to i64
  %3747 = load %struct.DState** %1, align 8
  %3748 = getelementptr inbounds %struct.DState* %3747, i32 0, i32 31
  %3749 = getelementptr inbounds [4096 x i8]* %3748, i32 0, i64 %3746
  %3750 = load i8* %3749, align 1
  %3751 = load i32* %pp, align 4
  %3752 = sext i32 %3751 to i64
  %3753 = load %struct.DState** %1, align 8
  %3754 = getelementptr inbounds %struct.DState* %3753, i32 0, i32 31
  %3755 = getelementptr inbounds [4096 x i8]* %3754, i32 0, i64 %3752
  store i8 %3750, i8* %3755, align 1
  %3756 = load i32* %pp, align 4
  %3757 = add nsw i32 %3756, -1
  store i32 %3757, i32* %pp, align 4
  br label %3734

; <label>:3758                                    ; preds = %3734
  %3759 = load i32* %lno, align 4
  %3760 = sext i32 %3759 to i64
  %3761 = load %struct.DState** %1, align 8
  %3762 = getelementptr inbounds %struct.DState* %3761, i32 0, i32 32
  %3763 = getelementptr inbounds [16 x i32]* %3762, i32 0, i64 %3760
  %3764 = load i32* %3763, align 4
  %3765 = add nsw i32 %3764, 1
  store i32 %3765, i32* %3763, align 4
  br label %3766

; <label>:3766                                    ; preds = %3769, %3758
  %3767 = load i32* %lno, align 4
  %3768 = icmp sgt i32 %3767, 0
  br i1 %3768, label %3769, label %3803

; <label>:3769                                    ; preds = %3766
  %3770 = load i32* %lno, align 4
  %3771 = sext i32 %3770 to i64
  %3772 = load %struct.DState** %1, align 8
  %3773 = getelementptr inbounds %struct.DState* %3772, i32 0, i32 32
  %3774 = getelementptr inbounds [16 x i32]* %3773, i32 0, i64 %3771
  %3775 = load i32* %3774, align 4
  %3776 = add nsw i32 %3775, -1
  store i32 %3776, i32* %3774, align 4
  %3777 = load i32* %lno, align 4
  %3778 = sub nsw i32 %3777, 1
  %3779 = sext i32 %3778 to i64
  %3780 = load %struct.DState** %1, align 8
  %3781 = getelementptr inbounds %struct.DState* %3780, i32 0, i32 32
  %3782 = getelementptr inbounds [16 x i32]* %3781, i32 0, i64 %3779
  %3783 = load i32* %3782, align 4
  %3784 = add nsw i32 %3783, 16
  %3785 = sub nsw i32 %3784, 1
  %3786 = sext i32 %3785 to i64
  %3787 = load %struct.DState** %1, align 8
  %3788 = getelementptr inbounds %struct.DState* %3787, i32 0, i32 31
  %3789 = getelementptr inbounds [4096 x i8]* %3788, i32 0, i64 %3786
  %3790 = load i8* %3789, align 1
  %3791 = load i32* %lno, align 4
  %3792 = sext i32 %3791 to i64
  %3793 = load %struct.DState** %1, align 8
  %3794 = getelementptr inbounds %struct.DState* %3793, i32 0, i32 32
  %3795 = getelementptr inbounds [16 x i32]* %3794, i32 0, i64 %3792
  %3796 = load i32* %3795, align 4
  %3797 = sext i32 %3796 to i64
  %3798 = load %struct.DState** %1, align 8
  %3799 = getelementptr inbounds %struct.DState* %3798, i32 0, i32 31
  %3800 = getelementptr inbounds [4096 x i8]* %3799, i32 0, i64 %3797
  store i8 %3790, i8* %3800, align 1
  %3801 = load i32* %lno, align 4
  %3802 = add nsw i32 %3801, -1
  store i32 %3802, i32* %lno, align 4
  br label %3766

; <label>:3803                                    ; preds = %3766
  %3804 = load %struct.DState** %1, align 8
  %3805 = getelementptr inbounds %struct.DState* %3804, i32 0, i32 32
  %3806 = getelementptr inbounds [16 x i32]* %3805, i32 0, i64 0
  %3807 = load i32* %3806, align 4
  %3808 = add nsw i32 %3807, -1
  store i32 %3808, i32* %3806, align 4
  %3809 = load i8* %uc, align 1
  %3810 = load %struct.DState** %1, align 8
  %3811 = getelementptr inbounds %struct.DState* %3810, i32 0, i32 32
  %3812 = getelementptr inbounds [16 x i32]* %3811, i32 0, i64 0
  %3813 = load i32* %3812, align 4
  %3814 = sext i32 %3813 to i64
  %3815 = load %struct.DState** %1, align 8
  %3816 = getelementptr inbounds %struct.DState* %3815, i32 0, i32 31
  %3817 = getelementptr inbounds [4096 x i8]* %3816, i32 0, i64 %3814
  store i8 %3809, i8* %3817, align 1
  %3818 = load %struct.DState** %1, align 8
  %3819 = getelementptr inbounds %struct.DState* %3818, i32 0, i32 32
  %3820 = getelementptr inbounds [16 x i32]* %3819, i32 0, i64 0
  %3821 = load i32* %3820, align 4
  %3822 = icmp eq i32 %3821, 0
  br i1 %3822, label %3823, label %3867

; <label>:3823                                    ; preds = %3803
  store i32 4095, i32* %kk33, align 4
  store i32 15, i32* %ii31, align 4
  br label %3824

; <label>:3824                                    ; preds = %3863, %3823
  %3825 = load i32* %ii31, align 4
  %3826 = icmp sge i32 %3825, 0
  br i1 %3826, label %3827, label %3866

; <label>:3827                                    ; preds = %3824
  store i32 15, i32* %jj32, align 4
  br label %3828

; <label>:3828                                    ; preds = %3852, %3827
  %3829 = load i32* %jj32, align 4
  %3830 = icmp sge i32 %3829, 0
  br i1 %3830, label %3831, label %3855

; <label>:3831                                    ; preds = %3828
  %3832 = load i32* %ii31, align 4
  %3833 = sext i32 %3832 to i64
  %3834 = load %struct.DState** %1, align 8
  %3835 = getelementptr inbounds %struct.DState* %3834, i32 0, i32 32
  %3836 = getelementptr inbounds [16 x i32]* %3835, i32 0, i64 %3833
  %3837 = load i32* %3836, align 4
  %3838 = load i32* %jj32, align 4
  %3839 = add nsw i32 %3837, %3838
  %3840 = sext i32 %3839 to i64
  %3841 = load %struct.DState** %1, align 8
  %3842 = getelementptr inbounds %struct.DState* %3841, i32 0, i32 31
  %3843 = getelementptr inbounds [4096 x i8]* %3842, i32 0, i64 %3840
  %3844 = load i8* %3843, align 1
  %3845 = load i32* %kk33, align 4
  %3846 = sext i32 %3845 to i64
  %3847 = load %struct.DState** %1, align 8
  %3848 = getelementptr inbounds %struct.DState* %3847, i32 0, i32 31
  %3849 = getelementptr inbounds [4096 x i8]* %3848, i32 0, i64 %3846
  store i8 %3844, i8* %3849, align 1
  %3850 = load i32* %kk33, align 4
  %3851 = add nsw i32 %3850, -1
  store i32 %3851, i32* %kk33, align 4
  br label %3852

; <label>:3852                                    ; preds = %3831
  %3853 = load i32* %jj32, align 4
  %3854 = add nsw i32 %3853, -1
  store i32 %3854, i32* %jj32, align 4
  br label %3828

; <label>:3855                                    ; preds = %3828
  %3856 = load i32* %kk33, align 4
  %3857 = add nsw i32 %3856, 1
  %3858 = load i32* %ii31, align 4
  %3859 = sext i32 %3858 to i64
  %3860 = load %struct.DState** %1, align 8
  %3861 = getelementptr inbounds %struct.DState* %3860, i32 0, i32 32
  %3862 = getelementptr inbounds [16 x i32]* %3861, i32 0, i64 %3859
  store i32 %3857, i32* %3862, align 4
  br label %3863

; <label>:3863                                    ; preds = %3855
  %3864 = load i32* %ii31, align 4
  %3865 = add nsw i32 %3864, -1
  store i32 %3865, i32* %ii31, align 4
  br label %3824

; <label>:3866                                    ; preds = %3824
  br label %3867

; <label>:3867                                    ; preds = %3866, %3803
  br label %3868

; <label>:3868                                    ; preds = %3867, %3708
  %3869 = load i8* %uc, align 1
  %3870 = zext i8 %3869 to i64
  %3871 = load %struct.DState** %1, align 8
  %3872 = getelementptr inbounds %struct.DState* %3871, i32 0, i32 30
  %3873 = getelementptr inbounds [256 x i8]* %3872, i32 0, i64 %3870
  %3874 = load i8* %3873, align 1
  %3875 = zext i8 %3874 to i64
  %3876 = load %struct.DState** %1, align 8
  %3877 = getelementptr inbounds %struct.DState* %3876, i32 0, i32 16
  %3878 = getelementptr inbounds [256 x i32]* %3877, i32 0, i64 %3875
  %3879 = load i32* %3878, align 4
  %3880 = add nsw i32 %3879, 1
  store i32 %3880, i32* %3878, align 4
  %3881 = load %struct.DState** %1, align 8
  %3882 = getelementptr inbounds %struct.DState* %3881, i32 0, i32 10
  %3883 = load i8* %3882, align 1
  %3884 = icmp ne i8 %3883, 0
  br i1 %3884, label %3885, label %3899

; <label>:3885                                    ; preds = %3868
  %3886 = load i8* %uc, align 1
  %3887 = zext i8 %3886 to i64
  %3888 = load %struct.DState** %1, align 8
  %3889 = getelementptr inbounds %struct.DState* %3888, i32 0, i32 30
  %3890 = getelementptr inbounds [256 x i8]* %3889, i32 0, i64 %3887
  %3891 = load i8* %3890, align 1
  %3892 = zext i8 %3891 to i16
  %3893 = load i32* %nblock, align 4
  %3894 = sext i32 %3893 to i64
  %3895 = load %struct.DState** %1, align 8
  %3896 = getelementptr inbounds %struct.DState* %3895, i32 0, i32 21
  %3897 = load i16** %3896, align 8
  %3898 = getelementptr inbounds i16* %3897, i64 %3894
  store i16 %3892, i16* %3898, align 2
  br label %3913

; <label>:3899                                    ; preds = %3868
  %3900 = load i8* %uc, align 1
  %3901 = zext i8 %3900 to i64
  %3902 = load %struct.DState** %1, align 8
  %3903 = getelementptr inbounds %struct.DState* %3902, i32 0, i32 30
  %3904 = getelementptr inbounds [256 x i8]* %3903, i32 0, i64 %3901
  %3905 = load i8* %3904, align 1
  %3906 = zext i8 %3905 to i32
  %3907 = load i32* %nblock, align 4
  %3908 = sext i32 %3907 to i64
  %3909 = load %struct.DState** %1, align 8
  %3910 = getelementptr inbounds %struct.DState* %3909, i32 0, i32 20
  %3911 = load i32** %3910, align 8
  %3912 = getelementptr inbounds i32* %3911, i64 %3908
  store i32 %3906, i32* %3912, align 4
  br label %3913

; <label>:3913                                    ; preds = %3899, %3885
  %3914 = load i32* %nblock, align 4
  %3915 = add nsw i32 %3914, 1
  store i32 %3915, i32* %nblock, align 4
  %3916 = load i32* %groupPos, align 4
  %3917 = icmp eq i32 %3916, 0
  br i1 %3917, label %3918, label %3957

; <label>:3918                                    ; preds = %3913
  %3919 = load i32* %groupNo, align 4
  %3920 = add nsw i32 %3919, 1
  store i32 %3920, i32* %groupNo, align 4
  %3921 = load i32* %groupNo, align 4
  %3922 = load i32* %nSelectors, align 4
  %3923 = icmp sge i32 %3921, %3922
  br i1 %3923, label %3924, label %3925

; <label>:3924                                    ; preds = %3918
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:3925                                    ; preds = %3918
  store i32 50, i32* %groupPos, align 4
  %3926 = load i32* %groupNo, align 4
  %3927 = sext i32 %3926 to i64
  %3928 = load %struct.DState** %1, align 8
  %3929 = getelementptr inbounds %struct.DState* %3928, i32 0, i32 33
  %3930 = getelementptr inbounds [18002 x i8]* %3929, i32 0, i64 %3927
  %3931 = load i8* %3930, align 1
  %3932 = zext i8 %3931 to i32
  store i32 %3932, i32* %gSel, align 4
  %3933 = load i32* %gSel, align 4
  %3934 = sext i32 %3933 to i64
  %3935 = load %struct.DState** %1, align 8
  %3936 = getelementptr inbounds %struct.DState* %3935, i32 0, i32 39
  %3937 = getelementptr inbounds [6 x i32]* %3936, i32 0, i64 %3934
  %3938 = load i32* %3937, align 4
  store i32 %3938, i32* %gMinlen, align 4
  %3939 = load i32* %gSel, align 4
  %3940 = sext i32 %3939 to i64
  %3941 = load %struct.DState** %1, align 8
  %3942 = getelementptr inbounds %struct.DState* %3941, i32 0, i32 36
  %3943 = getelementptr inbounds [6 x [258 x i32]]* %3942, i32 0, i64 %3940
  %3944 = getelementptr inbounds [258 x i32]* %3943, i32 0, i64 0
  store i32* %3944, i32** %gLimit, align 8
  %3945 = load i32* %gSel, align 4
  %3946 = sext i32 %3945 to i64
  %3947 = load %struct.DState** %1, align 8
  %3948 = getelementptr inbounds %struct.DState* %3947, i32 0, i32 38
  %3949 = getelementptr inbounds [6 x [258 x i32]]* %3948, i32 0, i64 %3946
  %3950 = getelementptr inbounds [258 x i32]* %3949, i32 0, i64 0
  store i32* %3950, i32** %gPerm, align 8
  %3951 = load i32* %gSel, align 4
  %3952 = sext i32 %3951 to i64
  %3953 = load %struct.DState** %1, align 8
  %3954 = getelementptr inbounds %struct.DState* %3953, i32 0, i32 37
  %3955 = getelementptr inbounds [6 x [258 x i32]]* %3954, i32 0, i64 %3952
  %3956 = getelementptr inbounds [258 x i32]* %3955, i32 0, i64 0
  store i32* %3956, i32** %gBase, align 8
  br label %3957

; <label>:3957                                    ; preds = %3925, %3913
  %3958 = load i32* %groupPos, align 4
  %3959 = add nsw i32 %3958, -1
  store i32 %3959, i32* %groupPos, align 4
  %3960 = load i32* %gMinlen, align 4
  store i32 %3960, i32* %zn, align 4
  br label %3961

; <label>:3961                                    ; preds = %58, %3957
  %3962 = load %struct.DState** %1, align 8
  %3963 = getelementptr inbounds %struct.DState* %3962, i32 0, i32 1
  store i32 40, i32* %3963, align 4
  br label %3964

; <label>:3964                                    ; preds = %3961, %4048
  %3965 = load %struct.DState** %1, align 8
  %3966 = getelementptr inbounds %struct.DState* %3965, i32 0, i32 8
  %3967 = load i32* %3966, align 4
  %3968 = load i32* %zn, align 4
  %3969 = icmp sge i32 %3967, %3968
  br i1 %3969, label %3970, label %3990

; <label>:3970                                    ; preds = %3964
  %3971 = load %struct.DState** %1, align 8
  %3972 = getelementptr inbounds %struct.DState* %3971, i32 0, i32 7
  %3973 = load i32* %3972, align 4
  %3974 = load %struct.DState** %1, align 8
  %3975 = getelementptr inbounds %struct.DState* %3974, i32 0, i32 8
  %3976 = load i32* %3975, align 4
  %3977 = load i32* %zn, align 4
  %3978 = sub nsw i32 %3976, %3977
  %3979 = lshr i32 %3973, %3978
  %3980 = load i32* %zn, align 4
  %3981 = shl i32 1, %3980
  %3982 = sub nsw i32 %3981, 1
  %3983 = and i32 %3979, %3982
  store i32 %3983, i32* %v34, align 4
  %3984 = load i32* %zn, align 4
  %3985 = load %struct.DState** %1, align 8
  %3986 = getelementptr inbounds %struct.DState* %3985, i32 0, i32 8
  %3987 = load i32* %3986, align 4
  %3988 = sub nsw i32 %3987, %3984
  store i32 %3988, i32* %3986, align 4
  %3989 = load i32* %v34, align 4
  store i32 %3989, i32* %zvec, align 4
  br label %4049

; <label>:3990                                    ; preds = %3964
  %3991 = load %struct.DState** %1, align 8
  %3992 = getelementptr inbounds %struct.DState* %3991, i32 0, i32 0
  %3993 = load %struct.bz_stream** %3992, align 8
  %3994 = getelementptr inbounds %struct.bz_stream* %3993, i32 0, i32 1
  %3995 = load i32* %3994, align 4
  %3996 = icmp eq i32 %3995, 0
  br i1 %3996, label %3997, label %3998

; <label>:3997                                    ; preds = %3990
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:3998                                    ; preds = %3990
  %3999 = load %struct.DState** %1, align 8
  %4000 = getelementptr inbounds %struct.DState* %3999, i32 0, i32 7
  %4001 = load i32* %4000, align 4
  %4002 = shl i32 %4001, 8
  %4003 = load %struct.DState** %1, align 8
  %4004 = getelementptr inbounds %struct.DState* %4003, i32 0, i32 0
  %4005 = load %struct.bz_stream** %4004, align 8
  %4006 = getelementptr inbounds %struct.bz_stream* %4005, i32 0, i32 0
  %4007 = load i8** %4006, align 8
  %4008 = load i8* %4007, align 1
  %4009 = zext i8 %4008 to i32
  %4010 = or i32 %4002, %4009
  %4011 = load %struct.DState** %1, align 8
  %4012 = getelementptr inbounds %struct.DState* %4011, i32 0, i32 7
  store i32 %4010, i32* %4012, align 4
  %4013 = load %struct.DState** %1, align 8
  %4014 = getelementptr inbounds %struct.DState* %4013, i32 0, i32 8
  %4015 = load i32* %4014, align 4
  %4016 = add nsw i32 %4015, 8
  store i32 %4016, i32* %4014, align 4
  %4017 = load %struct.DState** %1, align 8
  %4018 = getelementptr inbounds %struct.DState* %4017, i32 0, i32 0
  %4019 = load %struct.bz_stream** %4018, align 8
  %4020 = getelementptr inbounds %struct.bz_stream* %4019, i32 0, i32 0
  %4021 = load i8** %4020, align 8
  %4022 = getelementptr inbounds i8* %4021, i32 1
  store i8* %4022, i8** %4020, align 8
  %4023 = load %struct.DState** %1, align 8
  %4024 = getelementptr inbounds %struct.DState* %4023, i32 0, i32 0
  %4025 = load %struct.bz_stream** %4024, align 8
  %4026 = getelementptr inbounds %struct.bz_stream* %4025, i32 0, i32 1
  %4027 = load i32* %4026, align 4
  %4028 = add i32 %4027, -1
  store i32 %4028, i32* %4026, align 4
  %4029 = load %struct.DState** %1, align 8
  %4030 = getelementptr inbounds %struct.DState* %4029, i32 0, i32 0
  %4031 = load %struct.bz_stream** %4030, align 8
  %4032 = getelementptr inbounds %struct.bz_stream* %4031, i32 0, i32 2
  %4033 = load i32* %4032, align 4
  %4034 = add i32 %4033, 1
  store i32 %4034, i32* %4032, align 4
  %4035 = load %struct.DState** %1, align 8
  %4036 = getelementptr inbounds %struct.DState* %4035, i32 0, i32 0
  %4037 = load %struct.bz_stream** %4036, align 8
  %4038 = getelementptr inbounds %struct.bz_stream* %4037, i32 0, i32 2
  %4039 = load i32* %4038, align 4
  %4040 = icmp eq i32 %4039, 0
  br i1 %4040, label %4041, label %4048

; <label>:4041                                    ; preds = %3998
  %4042 = load %struct.DState** %1, align 8
  %4043 = getelementptr inbounds %struct.DState* %4042, i32 0, i32 0
  %4044 = load %struct.bz_stream** %4043, align 8
  %4045 = getelementptr inbounds %struct.bz_stream* %4044, i32 0, i32 3
  %4046 = load i32* %4045, align 4
  %4047 = add i32 %4046, 1
  store i32 %4047, i32* %4045, align 4
  br label %4048

; <label>:4048                                    ; preds = %4041, %3998
  br label %3964

; <label>:4049                                    ; preds = %3970
  br label %4050

; <label>:4050                                    ; preds = %4049, %4148
  %4051 = load i32* %zn, align 4
  %4052 = icmp sgt i32 %4051, 20
  br i1 %4052, label %4053, label %4054

; <label>:4053                                    ; preds = %4050
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:4054                                    ; preds = %4050
  %4055 = load i32* %zvec, align 4
  %4056 = load i32* %zn, align 4
  %4057 = sext i32 %4056 to i64
  %4058 = load i32** %gLimit, align 8
  %4059 = getelementptr inbounds i32* %4058, i64 %4057
  %4060 = load i32* %4059, align 4
  %4061 = icmp sle i32 %4055, %4060
  br i1 %4061, label %4062, label %4063

; <label>:4062                                    ; preds = %4054
  br label %4153

; <label>:4063                                    ; preds = %4054
  %4064 = load i32* %zn, align 4
  %4065 = add nsw i32 %4064, 1
  store i32 %4065, i32* %zn, align 4
  br label %4066

; <label>:4066                                    ; preds = %58, %4063
  %4067 = load %struct.DState** %1, align 8
  %4068 = getelementptr inbounds %struct.DState* %4067, i32 0, i32 1
  store i32 41, i32* %4068, align 4
  br label %4069

; <label>:4069                                    ; preds = %4066, %4147
  %4070 = load %struct.DState** %1, align 8
  %4071 = getelementptr inbounds %struct.DState* %4070, i32 0, i32 8
  %4072 = load i32* %4071, align 4
  %4073 = icmp sge i32 %4072, 1
  br i1 %4073, label %4074, label %4089

; <label>:4074                                    ; preds = %4069
  %4075 = load %struct.DState** %1, align 8
  %4076 = getelementptr inbounds %struct.DState* %4075, i32 0, i32 7
  %4077 = load i32* %4076, align 4
  %4078 = load %struct.DState** %1, align 8
  %4079 = getelementptr inbounds %struct.DState* %4078, i32 0, i32 8
  %4080 = load i32* %4079, align 4
  %4081 = sub nsw i32 %4080, 1
  %4082 = lshr i32 %4077, %4081
  %4083 = and i32 %4082, 1
  store i32 %4083, i32* %v35, align 4
  %4084 = load %struct.DState** %1, align 8
  %4085 = getelementptr inbounds %struct.DState* %4084, i32 0, i32 8
  %4086 = load i32* %4085, align 4
  %4087 = sub nsw i32 %4086, 1
  store i32 %4087, i32* %4085, align 4
  %4088 = load i32* %v35, align 4
  store i32 %4088, i32* %zj, align 4
  br label %4148

; <label>:4089                                    ; preds = %4069
  %4090 = load %struct.DState** %1, align 8
  %4091 = getelementptr inbounds %struct.DState* %4090, i32 0, i32 0
  %4092 = load %struct.bz_stream** %4091, align 8
  %4093 = getelementptr inbounds %struct.bz_stream* %4092, i32 0, i32 1
  %4094 = load i32* %4093, align 4
  %4095 = icmp eq i32 %4094, 0
  br i1 %4095, label %4096, label %4097

; <label>:4096                                    ; preds = %4089
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:4097                                    ; preds = %4089
  %4098 = load %struct.DState** %1, align 8
  %4099 = getelementptr inbounds %struct.DState* %4098, i32 0, i32 7
  %4100 = load i32* %4099, align 4
  %4101 = shl i32 %4100, 8
  %4102 = load %struct.DState** %1, align 8
  %4103 = getelementptr inbounds %struct.DState* %4102, i32 0, i32 0
  %4104 = load %struct.bz_stream** %4103, align 8
  %4105 = getelementptr inbounds %struct.bz_stream* %4104, i32 0, i32 0
  %4106 = load i8** %4105, align 8
  %4107 = load i8* %4106, align 1
  %4108 = zext i8 %4107 to i32
  %4109 = or i32 %4101, %4108
  %4110 = load %struct.DState** %1, align 8
  %4111 = getelementptr inbounds %struct.DState* %4110, i32 0, i32 7
  store i32 %4109, i32* %4111, align 4
  %4112 = load %struct.DState** %1, align 8
  %4113 = getelementptr inbounds %struct.DState* %4112, i32 0, i32 8
  %4114 = load i32* %4113, align 4
  %4115 = add nsw i32 %4114, 8
  store i32 %4115, i32* %4113, align 4
  %4116 = load %struct.DState** %1, align 8
  %4117 = getelementptr inbounds %struct.DState* %4116, i32 0, i32 0
  %4118 = load %struct.bz_stream** %4117, align 8
  %4119 = getelementptr inbounds %struct.bz_stream* %4118, i32 0, i32 0
  %4120 = load i8** %4119, align 8
  %4121 = getelementptr inbounds i8* %4120, i32 1
  store i8* %4121, i8** %4119, align 8
  %4122 = load %struct.DState** %1, align 8
  %4123 = getelementptr inbounds %struct.DState* %4122, i32 0, i32 0
  %4124 = load %struct.bz_stream** %4123, align 8
  %4125 = getelementptr inbounds %struct.bz_stream* %4124, i32 0, i32 1
  %4126 = load i32* %4125, align 4
  %4127 = add i32 %4126, -1
  store i32 %4127, i32* %4125, align 4
  %4128 = load %struct.DState** %1, align 8
  %4129 = getelementptr inbounds %struct.DState* %4128, i32 0, i32 0
  %4130 = load %struct.bz_stream** %4129, align 8
  %4131 = getelementptr inbounds %struct.bz_stream* %4130, i32 0, i32 2
  %4132 = load i32* %4131, align 4
  %4133 = add i32 %4132, 1
  store i32 %4133, i32* %4131, align 4
  %4134 = load %struct.DState** %1, align 8
  %4135 = getelementptr inbounds %struct.DState* %4134, i32 0, i32 0
  %4136 = load %struct.bz_stream** %4135, align 8
  %4137 = getelementptr inbounds %struct.bz_stream* %4136, i32 0, i32 2
  %4138 = load i32* %4137, align 4
  %4139 = icmp eq i32 %4138, 0
  br i1 %4139, label %4140, label %4147

; <label>:4140                                    ; preds = %4097
  %4141 = load %struct.DState** %1, align 8
  %4142 = getelementptr inbounds %struct.DState* %4141, i32 0, i32 0
  %4143 = load %struct.bz_stream** %4142, align 8
  %4144 = getelementptr inbounds %struct.bz_stream* %4143, i32 0, i32 3
  %4145 = load i32* %4144, align 4
  %4146 = add i32 %4145, 1
  store i32 %4146, i32* %4144, align 4
  br label %4147

; <label>:4147                                    ; preds = %4140, %4097
  br label %4069

; <label>:4148                                    ; preds = %4074
  %4149 = load i32* %zvec, align 4
  %4150 = shl i32 %4149, 1
  %4151 = load i32* %zj, align 4
  %4152 = or i32 %4150, %4151
  store i32 %4152, i32* %zvec, align 4
  br label %4050

; <label>:4153                                    ; preds = %4062
  %4154 = load i32* %zvec, align 4
  %4155 = load i32* %zn, align 4
  %4156 = sext i32 %4155 to i64
  %4157 = load i32** %gBase, align 8
  %4158 = getelementptr inbounds i32* %4157, i64 %4156
  %4159 = load i32* %4158, align 4
  %4160 = sub nsw i32 %4154, %4159
  %4161 = icmp slt i32 %4160, 0
  br i1 %4161, label %4171, label %4162

; <label>:4162                                    ; preds = %4153
  %4163 = load i32* %zvec, align 4
  %4164 = load i32* %zn, align 4
  %4165 = sext i32 %4164 to i64
  %4166 = load i32** %gBase, align 8
  %4167 = getelementptr inbounds i32* %4166, i64 %4165
  %4168 = load i32* %4167, align 4
  %4169 = sub nsw i32 %4163, %4168
  %4170 = icmp sge i32 %4169, 258
  br i1 %4170, label %4171, label %4172

; <label>:4171                                    ; preds = %4162, %4153
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:4172                                    ; preds = %4162
  %4173 = load i32* %zvec, align 4
  %4174 = load i32* %zn, align 4
  %4175 = sext i32 %4174 to i64
  %4176 = load i32** %gBase, align 8
  %4177 = getelementptr inbounds i32* %4176, i64 %4175
  %4178 = load i32* %4177, align 4
  %4179 = sub nsw i32 %4173, %4178
  %4180 = sext i32 %4179 to i64
  %4181 = load i32** %gPerm, align 8
  %4182 = getelementptr inbounds i32* %4181, i64 %4180
  %4183 = load i32* %4182, align 4
  store i32 %4183, i32* %nextSym, align 4
  br label %3218

; <label>:4184                                    ; preds = %3222
  %4185 = load %struct.DState** %1, align 8
  %4186 = getelementptr inbounds %struct.DState* %4185, i32 0, i32 13
  %4187 = load i32* %4186, align 4
  %4188 = icmp slt i32 %4187, 0
  br i1 %4188, label %4195, label %4189

; <label>:4189                                    ; preds = %4184
  %4190 = load %struct.DState** %1, align 8
  %4191 = getelementptr inbounds %struct.DState* %4190, i32 0, i32 13
  %4192 = load i32* %4191, align 4
  %4193 = load i32* %nblock, align 4
  %4194 = icmp sge i32 %4192, %4193
  br i1 %4194, label %4195, label %4196

; <label>:4195                                    ; preds = %4189, %4184
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:4196                                    ; preds = %4189
  %4197 = load %struct.DState** %1, align 8
  %4198 = getelementptr inbounds %struct.DState* %4197, i32 0, i32 3
  store i32 0, i32* %4198, align 4
  %4199 = load %struct.DState** %1, align 8
  %4200 = getelementptr inbounds %struct.DState* %4199, i32 0, i32 2
  store i8 0, i8* %4200, align 1
  %4201 = load %struct.DState** %1, align 8
  %4202 = getelementptr inbounds %struct.DState* %4201, i32 0, i32 25
  store i32 -1, i32* %4202, align 4
  %4203 = load %struct.DState** %1, align 8
  %4204 = getelementptr inbounds %struct.DState* %4203, i32 0, i32 1
  store i32 2, i32* %4204, align 4
  %4205 = load %struct.DState** %1, align 8
  %4206 = getelementptr inbounds %struct.DState* %4205, i32 0, i32 12
  %4207 = load i32* %4206, align 4
  %4208 = icmp sge i32 %4207, 2
  br i1 %4208, label %4209, label %4212

; <label>:4209                                    ; preds = %4196
  %4210 = load %struct._IO_FILE** @stderr, align 8
  %4211 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4210, i8* getelementptr inbounds ([7 x i8]* @.str5, i32 0, i32 0))
  br label %4212

; <label>:4212                                    ; preds = %4209, %4196
  %4213 = load %struct.DState** %1, align 8
  %4214 = getelementptr inbounds %struct.DState* %4213, i32 0, i32 18
  %4215 = getelementptr inbounds [257 x i32]* %4214, i32 0, i64 0
  store i32 0, i32* %4215, align 4
  store i32 1, i32* %i, align 4
  br label %4216

; <label>:4216                                    ; preds = %4232, %4212
  %4217 = load i32* %i, align 4
  %4218 = icmp sle i32 %4217, 256
  br i1 %4218, label %4219, label %4235

; <label>:4219                                    ; preds = %4216
  %4220 = load i32* %i, align 4
  %4221 = sub nsw i32 %4220, 1
  %4222 = sext i32 %4221 to i64
  %4223 = load %struct.DState** %1, align 8
  %4224 = getelementptr inbounds %struct.DState* %4223, i32 0, i32 16
  %4225 = getelementptr inbounds [256 x i32]* %4224, i32 0, i64 %4222
  %4226 = load i32* %4225, align 4
  %4227 = load i32* %i, align 4
  %4228 = sext i32 %4227 to i64
  %4229 = load %struct.DState** %1, align 8
  %4230 = getelementptr inbounds %struct.DState* %4229, i32 0, i32 18
  %4231 = getelementptr inbounds [257 x i32]* %4230, i32 0, i64 %4228
  store i32 %4226, i32* %4231, align 4
  br label %4232

; <label>:4232                                    ; preds = %4219
  %4233 = load i32* %i, align 4
  %4234 = add nsw i32 %4233, 1
  store i32 %4234, i32* %i, align 4
  br label %4216

; <label>:4235                                    ; preds = %4216
  store i32 1, i32* %i, align 4
  br label %4236

; <label>:4236                                    ; preds = %4254, %4235
  %4237 = load i32* %i, align 4
  %4238 = icmp sle i32 %4237, 256
  br i1 %4238, label %4239, label %4257

; <label>:4239                                    ; preds = %4236
  %4240 = load i32* %i, align 4
  %4241 = sub nsw i32 %4240, 1
  %4242 = sext i32 %4241 to i64
  %4243 = load %struct.DState** %1, align 8
  %4244 = getelementptr inbounds %struct.DState* %4243, i32 0, i32 18
  %4245 = getelementptr inbounds [257 x i32]* %4244, i32 0, i64 %4242
  %4246 = load i32* %4245, align 4
  %4247 = load i32* %i, align 4
  %4248 = sext i32 %4247 to i64
  %4249 = load %struct.DState** %1, align 8
  %4250 = getelementptr inbounds %struct.DState* %4249, i32 0, i32 18
  %4251 = getelementptr inbounds [257 x i32]* %4250, i32 0, i64 %4248
  %4252 = load i32* %4251, align 4
  %4253 = add nsw i32 %4252, %4246
  store i32 %4253, i32* %4251, align 4
  br label %4254

; <label>:4254                                    ; preds = %4239
  %4255 = load i32* %i, align 4
  %4256 = add nsw i32 %4255, 1
  store i32 %4256, i32* %i, align 4
  br label %4236

; <label>:4257                                    ; preds = %4236
  %4258 = load %struct.DState** %1, align 8
  %4259 = getelementptr inbounds %struct.DState* %4258, i32 0, i32 10
  %4260 = load i8* %4259, align 1
  %4261 = icmp ne i8 %4260, 0
  br i1 %4261, label %4262, label %4645

; <label>:4262                                    ; preds = %4257
  store i32 0, i32* %i, align 4
  br label %4263

; <label>:4263                                    ; preds = %4278, %4262
  %4264 = load i32* %i, align 4
  %4265 = icmp sle i32 %4264, 256
  br i1 %4265, label %4266, label %4281

; <label>:4266                                    ; preds = %4263
  %4267 = load i32* %i, align 4
  %4268 = sext i32 %4267 to i64
  %4269 = load %struct.DState** %1, align 8
  %4270 = getelementptr inbounds %struct.DState* %4269, i32 0, i32 18
  %4271 = getelementptr inbounds [257 x i32]* %4270, i32 0, i64 %4268
  %4272 = load i32* %4271, align 4
  %4273 = load i32* %i, align 4
  %4274 = sext i32 %4273 to i64
  %4275 = load %struct.DState** %1, align 8
  %4276 = getelementptr inbounds %struct.DState* %4275, i32 0, i32 19
  %4277 = getelementptr inbounds [257 x i32]* %4276, i32 0, i64 %4274
  store i32 %4272, i32* %4277, align 4
  br label %4278

; <label>:4278                                    ; preds = %4266
  %4279 = load i32* %i, align 4
  %4280 = add nsw i32 %4279, 1
  store i32 %4280, i32* %i, align 4
  br label %4263

; <label>:4281                                    ; preds = %4263
  store i32 0, i32* %i, align 4
  br label %4282

; <label>:4282                                    ; preds = %4375, %4281
  %4283 = load i32* %i, align 4
  %4284 = load i32* %nblock, align 4
  %4285 = icmp slt i32 %4283, %4284
  br i1 %4285, label %4286, label %4378

; <label>:4286                                    ; preds = %4282
  %4287 = load i32* %i, align 4
  %4288 = sext i32 %4287 to i64
  %4289 = load %struct.DState** %1, align 8
  %4290 = getelementptr inbounds %struct.DState* %4289, i32 0, i32 21
  %4291 = load i16** %4290, align 8
  %4292 = getelementptr inbounds i16* %4291, i64 %4288
  %4293 = load i16* %4292, align 2
  %4294 = trunc i16 %4293 to i8
  store i8 %4294, i8* %uc, align 1
  %4295 = load i8* %uc, align 1
  %4296 = zext i8 %4295 to i64
  %4297 = load %struct.DState** %1, align 8
  %4298 = getelementptr inbounds %struct.DState* %4297, i32 0, i32 19
  %4299 = getelementptr inbounds [257 x i32]* %4298, i32 0, i64 %4296
  %4300 = load i32* %4299, align 4
  %4301 = and i32 %4300, 65535
  %4302 = trunc i32 %4301 to i16
  %4303 = load i32* %i, align 4
  %4304 = sext i32 %4303 to i64
  %4305 = load %struct.DState** %1, align 8
  %4306 = getelementptr inbounds %struct.DState* %4305, i32 0, i32 21
  %4307 = load i16** %4306, align 8
  %4308 = getelementptr inbounds i16* %4307, i64 %4304
  store i16 %4302, i16* %4308, align 2
  %4309 = load i32* %i, align 4
  %4310 = and i32 %4309, 1
  %4311 = icmp eq i32 %4310, 0
  br i1 %4311, label %4312, label %4339

; <label>:4312                                    ; preds = %4286
  %4313 = load i32* %i, align 4
  %4314 = ashr i32 %4313, 1
  %4315 = sext i32 %4314 to i64
  %4316 = load %struct.DState** %1, align 8
  %4317 = getelementptr inbounds %struct.DState* %4316, i32 0, i32 22
  %4318 = load i8** %4317, align 8
  %4319 = getelementptr inbounds i8* %4318, i64 %4315
  %4320 = load i8* %4319, align 1
  %4321 = zext i8 %4320 to i32
  %4322 = and i32 %4321, 240
  %4323 = load i8* %uc, align 1
  %4324 = zext i8 %4323 to i64
  %4325 = load %struct.DState** %1, align 8
  %4326 = getelementptr inbounds %struct.DState* %4325, i32 0, i32 19
  %4327 = getelementptr inbounds [257 x i32]* %4326, i32 0, i64 %4324
  %4328 = load i32* %4327, align 4
  %4329 = ashr i32 %4328, 16
  %4330 = or i32 %4322, %4329
  %4331 = trunc i32 %4330 to i8
  %4332 = load i32* %i, align 4
  %4333 = ashr i32 %4332, 1
  %4334 = sext i32 %4333 to i64
  %4335 = load %struct.DState** %1, align 8
  %4336 = getelementptr inbounds %struct.DState* %4335, i32 0, i32 22
  %4337 = load i8** %4336, align 8
  %4338 = getelementptr inbounds i8* %4337, i64 %4334
  store i8 %4331, i8* %4338, align 1
  br label %4367

; <label>:4339                                    ; preds = %4286
  %4340 = load i32* %i, align 4
  %4341 = ashr i32 %4340, 1
  %4342 = sext i32 %4341 to i64
  %4343 = load %struct.DState** %1, align 8
  %4344 = getelementptr inbounds %struct.DState* %4343, i32 0, i32 22
  %4345 = load i8** %4344, align 8
  %4346 = getelementptr inbounds i8* %4345, i64 %4342
  %4347 = load i8* %4346, align 1
  %4348 = zext i8 %4347 to i32
  %4349 = and i32 %4348, 15
  %4350 = load i8* %uc, align 1
  %4351 = zext i8 %4350 to i64
  %4352 = load %struct.DState** %1, align 8
  %4353 = getelementptr inbounds %struct.DState* %4352, i32 0, i32 19
  %4354 = getelementptr inbounds [257 x i32]* %4353, i32 0, i64 %4351
  %4355 = load i32* %4354, align 4
  %4356 = ashr i32 %4355, 16
  %4357 = shl i32 %4356, 4
  %4358 = or i32 %4349, %4357
  %4359 = trunc i32 %4358 to i8
  %4360 = load i32* %i, align 4
  %4361 = ashr i32 %4360, 1
  %4362 = sext i32 %4361 to i64
  %4363 = load %struct.DState** %1, align 8
  %4364 = getelementptr inbounds %struct.DState* %4363, i32 0, i32 22
  %4365 = load i8** %4364, align 8
  %4366 = getelementptr inbounds i8* %4365, i64 %4362
  store i8 %4359, i8* %4366, align 1
  br label %4367

; <label>:4367                                    ; preds = %4339, %4312
  %4368 = load i8* %uc, align 1
  %4369 = zext i8 %4368 to i64
  %4370 = load %struct.DState** %1, align 8
  %4371 = getelementptr inbounds %struct.DState* %4370, i32 0, i32 19
  %4372 = getelementptr inbounds [257 x i32]* %4371, i32 0, i64 %4369
  %4373 = load i32* %4372, align 4
  %4374 = add nsw i32 %4373, 1
  store i32 %4374, i32* %4372, align 4
  br label %4375

; <label>:4375                                    ; preds = %4367
  %4376 = load i32* %i, align 4
  %4377 = add nsw i32 %4376, 1
  store i32 %4377, i32* %i, align 4
  br label %4282

; <label>:4378                                    ; preds = %4282
  %4379 = load %struct.DState** %1, align 8
  %4380 = getelementptr inbounds %struct.DState* %4379, i32 0, i32 13
  %4381 = load i32* %4380, align 4
  store i32 %4381, i32* %i, align 4
  %4382 = load i32* %i, align 4
  %4383 = sext i32 %4382 to i64
  %4384 = load %struct.DState** %1, align 8
  %4385 = getelementptr inbounds %struct.DState* %4384, i32 0, i32 21
  %4386 = load i16** %4385, align 8
  %4387 = getelementptr inbounds i16* %4386, i64 %4383
  %4388 = load i16* %4387, align 2
  %4389 = zext i16 %4388 to i32
  %4390 = load i32* %i, align 4
  %4391 = ashr i32 %4390, 1
  %4392 = sext i32 %4391 to i64
  %4393 = load %struct.DState** %1, align 8
  %4394 = getelementptr inbounds %struct.DState* %4393, i32 0, i32 22
  %4395 = load i8** %4394, align 8
  %4396 = getelementptr inbounds i8* %4395, i64 %4392
  %4397 = load i8* %4396, align 1
  %4398 = zext i8 %4397 to i32
  %4399 = load i32* %i, align 4
  %4400 = shl i32 %4399, 2
  %4401 = and i32 %4400, 4
  %4402 = lshr i32 %4398, %4401
  %4403 = and i32 %4402, 15
  %4404 = shl i32 %4403, 16
  %4405 = or i32 %4389, %4404
  store i32 %4405, i32* %j, align 4
  br label %4406

; <label>:4406                                    ; preds = %4491, %4378
  %4407 = load i32* %j, align 4
  %4408 = sext i32 %4407 to i64
  %4409 = load %struct.DState** %1, align 8
  %4410 = getelementptr inbounds %struct.DState* %4409, i32 0, i32 21
  %4411 = load i16** %4410, align 8
  %4412 = getelementptr inbounds i16* %4411, i64 %4408
  %4413 = load i16* %4412, align 2
  %4414 = zext i16 %4413 to i32
  %4415 = load i32* %j, align 4
  %4416 = ashr i32 %4415, 1
  %4417 = sext i32 %4416 to i64
  %4418 = load %struct.DState** %1, align 8
  %4419 = getelementptr inbounds %struct.DState* %4418, i32 0, i32 22
  %4420 = load i8** %4419, align 8
  %4421 = getelementptr inbounds i8* %4420, i64 %4417
  %4422 = load i8* %4421, align 1
  %4423 = zext i8 %4422 to i32
  %4424 = load i32* %j, align 4
  %4425 = shl i32 %4424, 2
  %4426 = and i32 %4425, 4
  %4427 = lshr i32 %4423, %4426
  %4428 = and i32 %4427, 15
  %4429 = shl i32 %4428, 16
  %4430 = or i32 %4414, %4429
  store i32 %4430, i32* %tmp36, align 4
  %4431 = load i32* %i, align 4
  %4432 = and i32 %4431, 65535
  %4433 = trunc i32 %4432 to i16
  %4434 = load i32* %j, align 4
  %4435 = sext i32 %4434 to i64
  %4436 = load %struct.DState** %1, align 8
  %4437 = getelementptr inbounds %struct.DState* %4436, i32 0, i32 21
  %4438 = load i16** %4437, align 8
  %4439 = getelementptr inbounds i16* %4438, i64 %4435
  store i16 %4433, i16* %4439, align 2
  %4440 = load i32* %j, align 4
  %4441 = and i32 %4440, 1
  %4442 = icmp eq i32 %4441, 0
  br i1 %4442, label %4443, label %4465

; <label>:4443                                    ; preds = %4406
  %4444 = load i32* %j, align 4
  %4445 = ashr i32 %4444, 1
  %4446 = sext i32 %4445 to i64
  %4447 = load %struct.DState** %1, align 8
  %4448 = getelementptr inbounds %struct.DState* %4447, i32 0, i32 22
  %4449 = load i8** %4448, align 8
  %4450 = getelementptr inbounds i8* %4449, i64 %4446
  %4451 = load i8* %4450, align 1
  %4452 = zext i8 %4451 to i32
  %4453 = and i32 %4452, 240
  %4454 = load i32* %i, align 4
  %4455 = ashr i32 %4454, 16
  %4456 = or i32 %4453, %4455
  %4457 = trunc i32 %4456 to i8
  %4458 = load i32* %j, align 4
  %4459 = ashr i32 %4458, 1
  %4460 = sext i32 %4459 to i64
  %4461 = load %struct.DState** %1, align 8
  %4462 = getelementptr inbounds %struct.DState* %4461, i32 0, i32 22
  %4463 = load i8** %4462, align 8
  %4464 = getelementptr inbounds i8* %4463, i64 %4460
  store i8 %4457, i8* %4464, align 1
  br label %4488

; <label>:4465                                    ; preds = %4406
  %4466 = load i32* %j, align 4
  %4467 = ashr i32 %4466, 1
  %4468 = sext i32 %4467 to i64
  %4469 = load %struct.DState** %1, align 8
  %4470 = getelementptr inbounds %struct.DState* %4469, i32 0, i32 22
  %4471 = load i8** %4470, align 8
  %4472 = getelementptr inbounds i8* %4471, i64 %4468
  %4473 = load i8* %4472, align 1
  %4474 = zext i8 %4473 to i32
  %4475 = and i32 %4474, 15
  %4476 = load i32* %i, align 4
  %4477 = ashr i32 %4476, 16
  %4478 = shl i32 %4477, 4
  %4479 = or i32 %4475, %4478
  %4480 = trunc i32 %4479 to i8
  %4481 = load i32* %j, align 4
  %4482 = ashr i32 %4481, 1
  %4483 = sext i32 %4482 to i64
  %4484 = load %struct.DState** %1, align 8
  %4485 = getelementptr inbounds %struct.DState* %4484, i32 0, i32 22
  %4486 = load i8** %4485, align 8
  %4487 = getelementptr inbounds i8* %4486, i64 %4483
  store i8 %4480, i8* %4487, align 1
  br label %4488

; <label>:4488                                    ; preds = %4465, %4443
  %4489 = load i32* %j, align 4
  store i32 %4489, i32* %i, align 4
  %4490 = load i32* %tmp36, align 4
  store i32 %4490, i32* %j, align 4
  br label %4491

; <label>:4491                                    ; preds = %4488
  %4492 = load i32* %i, align 4
  %4493 = load %struct.DState** %1, align 8
  %4494 = getelementptr inbounds %struct.DState* %4493, i32 0, i32 13
  %4495 = load i32* %4494, align 4
  %4496 = icmp ne i32 %4492, %4495
  br i1 %4496, label %4406, label %4497

; <label>:4497                                    ; preds = %4491
  %4498 = load %struct.DState** %1, align 8
  %4499 = getelementptr inbounds %struct.DState* %4498, i32 0, i32 13
  %4500 = load i32* %4499, align 4
  %4501 = load %struct.DState** %1, align 8
  %4502 = getelementptr inbounds %struct.DState* %4501, i32 0, i32 14
  store i32 %4500, i32* %4502, align 4
  %4503 = load %struct.DState** %1, align 8
  %4504 = getelementptr inbounds %struct.DState* %4503, i32 0, i32 17
  store i32 0, i32* %4504, align 4
  %4505 = load %struct.DState** %1, align 8
  %4506 = getelementptr inbounds %struct.DState* %4505, i32 0, i32 4
  %4507 = load i8* %4506, align 1
  %4508 = icmp ne i8 %4507, 0
  br i1 %4508, label %4509, label %4598

; <label>:4509                                    ; preds = %4497
  %4510 = load %struct.DState** %1, align 8
  %4511 = getelementptr inbounds %struct.DState* %4510, i32 0, i32 5
  store i32 0, i32* %4511, align 4
  %4512 = load %struct.DState** %1, align 8
  %4513 = getelementptr inbounds %struct.DState* %4512, i32 0, i32 6
  store i32 0, i32* %4513, align 4
  %4514 = load %struct.DState** %1, align 8
  %4515 = getelementptr inbounds %struct.DState* %4514, i32 0, i32 14
  %4516 = load i32* %4515, align 4
  %4517 = load %struct.DState** %1, align 8
  %4518 = getelementptr inbounds %struct.DState* %4517, i32 0, i32 18
  %4519 = getelementptr inbounds [257 x i32]* %4518, i32 0, i32 0
  %4520 = call i32 @BZ2_indexIntoF(i32 %4516, i32* %4519)
  %4521 = load %struct.DState** %1, align 8
  %4522 = getelementptr inbounds %struct.DState* %4521, i32 0, i32 15
  store i32 %4520, i32* %4522, align 4
  %4523 = load %struct.DState** %1, align 8
  %4524 = getelementptr inbounds %struct.DState* %4523, i32 0, i32 14
  %4525 = load i32* %4524, align 4
  %4526 = zext i32 %4525 to i64
  %4527 = load %struct.DState** %1, align 8
  %4528 = getelementptr inbounds %struct.DState* %4527, i32 0, i32 21
  %4529 = load i16** %4528, align 8
  %4530 = getelementptr inbounds i16* %4529, i64 %4526
  %4531 = load i16* %4530, align 2
  %4532 = zext i16 %4531 to i32
  %4533 = load %struct.DState** %1, align 8
  %4534 = getelementptr inbounds %struct.DState* %4533, i32 0, i32 14
  %4535 = load i32* %4534, align 4
  %4536 = lshr i32 %4535, 1
  %4537 = zext i32 %4536 to i64
  %4538 = load %struct.DState** %1, align 8
  %4539 = getelementptr inbounds %struct.DState* %4538, i32 0, i32 22
  %4540 = load i8** %4539, align 8
  %4541 = getelementptr inbounds i8* %4540, i64 %4537
  %4542 = load i8* %4541, align 1
  %4543 = zext i8 %4542 to i32
  %4544 = load %struct.DState** %1, align 8
  %4545 = getelementptr inbounds %struct.DState* %4544, i32 0, i32 14
  %4546 = load i32* %4545, align 4
  %4547 = shl i32 %4546, 2
  %4548 = and i32 %4547, 4
  %4549 = lshr i32 %4543, %4548
  %4550 = and i32 %4549, 15
  %4551 = shl i32 %4550, 16
  %4552 = or i32 %4532, %4551
  %4553 = load %struct.DState** %1, align 8
  %4554 = getelementptr inbounds %struct.DState* %4553, i32 0, i32 14
  store i32 %4552, i32* %4554, align 4
  %4555 = load %struct.DState** %1, align 8
  %4556 = getelementptr inbounds %struct.DState* %4555, i32 0, i32 17
  %4557 = load i32* %4556, align 4
  %4558 = add nsw i32 %4557, 1
  store i32 %4558, i32* %4556, align 4
  %4559 = load %struct.DState** %1, align 8
  %4560 = getelementptr inbounds %struct.DState* %4559, i32 0, i32 5
  %4561 = load i32* %4560, align 4
  %4562 = icmp eq i32 %4561, 0
  br i1 %4562, label %4563, label %4584

; <label>:4563                                    ; preds = %4509
  %4564 = load %struct.DState** %1, align 8
  %4565 = getelementptr inbounds %struct.DState* %4564, i32 0, i32 6
  %4566 = load i32* %4565, align 4
  %4567 = sext i32 %4566 to i64
  %4568 = getelementptr inbounds [512 x i32]* @BZ2_rNums, i32 0, i64 %4567
  %4569 = load i32* %4568, align 4
  %4570 = load %struct.DState** %1, align 8
  %4571 = getelementptr inbounds %struct.DState* %4570, i32 0, i32 5
  store i32 %4569, i32* %4571, align 4
  %4572 = load %struct.DState** %1, align 8
  %4573 = getelementptr inbounds %struct.DState* %4572, i32 0, i32 6
  %4574 = load i32* %4573, align 4
  %4575 = add nsw i32 %4574, 1
  store i32 %4575, i32* %4573, align 4
  %4576 = load %struct.DState** %1, align 8
  %4577 = getelementptr inbounds %struct.DState* %4576, i32 0, i32 6
  %4578 = load i32* %4577, align 4
  %4579 = icmp eq i32 %4578, 512
  br i1 %4579, label %4580, label %4583

; <label>:4580                                    ; preds = %4563
  %4581 = load %struct.DState** %1, align 8
  %4582 = getelementptr inbounds %struct.DState* %4581, i32 0, i32 6
  store i32 0, i32* %4582, align 4
  br label %4583

; <label>:4583                                    ; preds = %4580, %4563
  br label %4584

; <label>:4584                                    ; preds = %4583, %4509
  %4585 = load %struct.DState** %1, align 8
  %4586 = getelementptr inbounds %struct.DState* %4585, i32 0, i32 5
  %4587 = load i32* %4586, align 4
  %4588 = add nsw i32 %4587, -1
  store i32 %4588, i32* %4586, align 4
  %4589 = load %struct.DState** %1, align 8
  %4590 = getelementptr inbounds %struct.DState* %4589, i32 0, i32 5
  %4591 = load i32* %4590, align 4
  %4592 = icmp eq i32 %4591, 1
  %4593 = select i1 %4592, i32 1, i32 0
  %4594 = load %struct.DState** %1, align 8
  %4595 = getelementptr inbounds %struct.DState* %4594, i32 0, i32 15
  %4596 = load i32* %4595, align 4
  %4597 = xor i32 %4596, %4593
  store i32 %4597, i32* %4595, align 4
  br label %4644

; <label>:4598                                    ; preds = %4497
  %4599 = load %struct.DState** %1, align 8
  %4600 = getelementptr inbounds %struct.DState* %4599, i32 0, i32 14
  %4601 = load i32* %4600, align 4
  %4602 = load %struct.DState** %1, align 8
  %4603 = getelementptr inbounds %struct.DState* %4602, i32 0, i32 18
  %4604 = getelementptr inbounds [257 x i32]* %4603, i32 0, i32 0
  %4605 = call i32 @BZ2_indexIntoF(i32 %4601, i32* %4604)
  %4606 = load %struct.DState** %1, align 8
  %4607 = getelementptr inbounds %struct.DState* %4606, i32 0, i32 15
  store i32 %4605, i32* %4607, align 4
  %4608 = load %struct.DState** %1, align 8
  %4609 = getelementptr inbounds %struct.DState* %4608, i32 0, i32 14
  %4610 = load i32* %4609, align 4
  %4611 = zext i32 %4610 to i64
  %4612 = load %struct.DState** %1, align 8
  %4613 = getelementptr inbounds %struct.DState* %4612, i32 0, i32 21
  %4614 = load i16** %4613, align 8
  %4615 = getelementptr inbounds i16* %4614, i64 %4611
  %4616 = load i16* %4615, align 2
  %4617 = zext i16 %4616 to i32
  %4618 = load %struct.DState** %1, align 8
  %4619 = getelementptr inbounds %struct.DState* %4618, i32 0, i32 14
  %4620 = load i32* %4619, align 4
  %4621 = lshr i32 %4620, 1
  %4622 = zext i32 %4621 to i64
  %4623 = load %struct.DState** %1, align 8
  %4624 = getelementptr inbounds %struct.DState* %4623, i32 0, i32 22
  %4625 = load i8** %4624, align 8
  %4626 = getelementptr inbounds i8* %4625, i64 %4622
  %4627 = load i8* %4626, align 1
  %4628 = zext i8 %4627 to i32
  %4629 = load %struct.DState** %1, align 8
  %4630 = getelementptr inbounds %struct.DState* %4629, i32 0, i32 14
  %4631 = load i32* %4630, align 4
  %4632 = shl i32 %4631, 2
  %4633 = and i32 %4632, 4
  %4634 = lshr i32 %4628, %4633
  %4635 = and i32 %4634, 15
  %4636 = shl i32 %4635, 16
  %4637 = or i32 %4617, %4636
  %4638 = load %struct.DState** %1, align 8
  %4639 = getelementptr inbounds %struct.DState* %4638, i32 0, i32 14
  store i32 %4637, i32* %4639, align 4
  %4640 = load %struct.DState** %1, align 8
  %4641 = getelementptr inbounds %struct.DState* %4640, i32 0, i32 17
  %4642 = load i32* %4641, align 4
  %4643 = add nsw i32 %4642, 1
  store i32 %4643, i32* %4641, align 4
  br label %4644

; <label>:4644                                    ; preds = %4598, %4584
  br label %4804

; <label>:4645                                    ; preds = %4257
  store i32 0, i32* %i, align 4
  br label %4646

; <label>:4646                                    ; preds = %4682, %4645
  %4647 = load i32* %i, align 4
  %4648 = load i32* %nblock, align 4
  %4649 = icmp slt i32 %4647, %4648
  br i1 %4649, label %4650, label %4685

; <label>:4650                                    ; preds = %4646
  %4651 = load i32* %i, align 4
  %4652 = sext i32 %4651 to i64
  %4653 = load %struct.DState** %1, align 8
  %4654 = getelementptr inbounds %struct.DState* %4653, i32 0, i32 20
  %4655 = load i32** %4654, align 8
  %4656 = getelementptr inbounds i32* %4655, i64 %4652
  %4657 = load i32* %4656, align 4
  %4658 = and i32 %4657, 255
  %4659 = trunc i32 %4658 to i8
  store i8 %4659, i8* %uc, align 1
  %4660 = load i32* %i, align 4
  %4661 = shl i32 %4660, 8
  %4662 = load i8* %uc, align 1
  %4663 = zext i8 %4662 to i64
  %4664 = load %struct.DState** %1, align 8
  %4665 = getelementptr inbounds %struct.DState* %4664, i32 0, i32 18
  %4666 = getelementptr inbounds [257 x i32]* %4665, i32 0, i64 %4663
  %4667 = load i32* %4666, align 4
  %4668 = sext i32 %4667 to i64
  %4669 = load %struct.DState** %1, align 8
  %4670 = getelementptr inbounds %struct.DState* %4669, i32 0, i32 20
  %4671 = load i32** %4670, align 8
  %4672 = getelementptr inbounds i32* %4671, i64 %4668
  %4673 = load i32* %4672, align 4
  %4674 = or i32 %4673, %4661
  store i32 %4674, i32* %4672, align 4
  %4675 = load i8* %uc, align 1
  %4676 = zext i8 %4675 to i64
  %4677 = load %struct.DState** %1, align 8
  %4678 = getelementptr inbounds %struct.DState* %4677, i32 0, i32 18
  %4679 = getelementptr inbounds [257 x i32]* %4678, i32 0, i64 %4676
  %4680 = load i32* %4679, align 4
  %4681 = add nsw i32 %4680, 1
  store i32 %4681, i32* %4679, align 4
  br label %4682

; <label>:4682                                    ; preds = %4650
  %4683 = load i32* %i, align 4
  %4684 = add nsw i32 %4683, 1
  store i32 %4684, i32* %i, align 4
  br label %4646

; <label>:4685                                    ; preds = %4646
  %4686 = load %struct.DState** %1, align 8
  %4687 = getelementptr inbounds %struct.DState* %4686, i32 0, i32 13
  %4688 = load i32* %4687, align 4
  %4689 = sext i32 %4688 to i64
  %4690 = load %struct.DState** %1, align 8
  %4691 = getelementptr inbounds %struct.DState* %4690, i32 0, i32 20
  %4692 = load i32** %4691, align 8
  %4693 = getelementptr inbounds i32* %4692, i64 %4689
  %4694 = load i32* %4693, align 4
  %4695 = lshr i32 %4694, 8
  %4696 = load %struct.DState** %1, align 8
  %4697 = getelementptr inbounds %struct.DState* %4696, i32 0, i32 14
  store i32 %4695, i32* %4697, align 4
  %4698 = load %struct.DState** %1, align 8
  %4699 = getelementptr inbounds %struct.DState* %4698, i32 0, i32 17
  store i32 0, i32* %4699, align 4
  %4700 = load %struct.DState** %1, align 8
  %4701 = getelementptr inbounds %struct.DState* %4700, i32 0, i32 4
  %4702 = load i8* %4701, align 1
  %4703 = icmp ne i8 %4702, 0
  br i1 %4703, label %4704, label %4775

; <label>:4704                                    ; preds = %4685
  %4705 = load %struct.DState** %1, align 8
  %4706 = getelementptr inbounds %struct.DState* %4705, i32 0, i32 5
  store i32 0, i32* %4706, align 4
  %4707 = load %struct.DState** %1, align 8
  %4708 = getelementptr inbounds %struct.DState* %4707, i32 0, i32 6
  store i32 0, i32* %4708, align 4
  %4709 = load %struct.DState** %1, align 8
  %4710 = getelementptr inbounds %struct.DState* %4709, i32 0, i32 14
  %4711 = load i32* %4710, align 4
  %4712 = zext i32 %4711 to i64
  %4713 = load %struct.DState** %1, align 8
  %4714 = getelementptr inbounds %struct.DState* %4713, i32 0, i32 20
  %4715 = load i32** %4714, align 8
  %4716 = getelementptr inbounds i32* %4715, i64 %4712
  %4717 = load i32* %4716, align 4
  %4718 = load %struct.DState** %1, align 8
  %4719 = getelementptr inbounds %struct.DState* %4718, i32 0, i32 14
  store i32 %4717, i32* %4719, align 4
  %4720 = load %struct.DState** %1, align 8
  %4721 = getelementptr inbounds %struct.DState* %4720, i32 0, i32 14
  %4722 = load i32* %4721, align 4
  %4723 = and i32 %4722, 255
  %4724 = trunc i32 %4723 to i8
  %4725 = zext i8 %4724 to i32
  %4726 = load %struct.DState** %1, align 8
  %4727 = getelementptr inbounds %struct.DState* %4726, i32 0, i32 15
  store i32 %4725, i32* %4727, align 4
  %4728 = load %struct.DState** %1, align 8
  %4729 = getelementptr inbounds %struct.DState* %4728, i32 0, i32 14
  %4730 = load i32* %4729, align 4
  %4731 = lshr i32 %4730, 8
  store i32 %4731, i32* %4729, align 4
  %4732 = load %struct.DState** %1, align 8
  %4733 = getelementptr inbounds %struct.DState* %4732, i32 0, i32 17
  %4734 = load i32* %4733, align 4
  %4735 = add nsw i32 %4734, 1
  store i32 %4735, i32* %4733, align 4
  %4736 = load %struct.DState** %1, align 8
  %4737 = getelementptr inbounds %struct.DState* %4736, i32 0, i32 5
  %4738 = load i32* %4737, align 4
  %4739 = icmp eq i32 %4738, 0
  br i1 %4739, label %4740, label %4761

; <label>:4740                                    ; preds = %4704
  %4741 = load %struct.DState** %1, align 8
  %4742 = getelementptr inbounds %struct.DState* %4741, i32 0, i32 6
  %4743 = load i32* %4742, align 4
  %4744 = sext i32 %4743 to i64
  %4745 = getelementptr inbounds [512 x i32]* @BZ2_rNums, i32 0, i64 %4744
  %4746 = load i32* %4745, align 4
  %4747 = load %struct.DState** %1, align 8
  %4748 = getelementptr inbounds %struct.DState* %4747, i32 0, i32 5
  store i32 %4746, i32* %4748, align 4
  %4749 = load %struct.DState** %1, align 8
  %4750 = getelementptr inbounds %struct.DState* %4749, i32 0, i32 6
  %4751 = load i32* %4750, align 4
  %4752 = add nsw i32 %4751, 1
  store i32 %4752, i32* %4750, align 4
  %4753 = load %struct.DState** %1, align 8
  %4754 = getelementptr inbounds %struct.DState* %4753, i32 0, i32 6
  %4755 = load i32* %4754, align 4
  %4756 = icmp eq i32 %4755, 512
  br i1 %4756, label %4757, label %4760

; <label>:4757                                    ; preds = %4740
  %4758 = load %struct.DState** %1, align 8
  %4759 = getelementptr inbounds %struct.DState* %4758, i32 0, i32 6
  store i32 0, i32* %4759, align 4
  br label %4760

; <label>:4760                                    ; preds = %4757, %4740
  br label %4761

; <label>:4761                                    ; preds = %4760, %4704
  %4762 = load %struct.DState** %1, align 8
  %4763 = getelementptr inbounds %struct.DState* %4762, i32 0, i32 5
  %4764 = load i32* %4763, align 4
  %4765 = add nsw i32 %4764, -1
  store i32 %4765, i32* %4763, align 4
  %4766 = load %struct.DState** %1, align 8
  %4767 = getelementptr inbounds %struct.DState* %4766, i32 0, i32 5
  %4768 = load i32* %4767, align 4
  %4769 = icmp eq i32 %4768, 1
  %4770 = select i1 %4769, i32 1, i32 0
  %4771 = load %struct.DState** %1, align 8
  %4772 = getelementptr inbounds %struct.DState* %4771, i32 0, i32 15
  %4773 = load i32* %4772, align 4
  %4774 = xor i32 %4773, %4770
  store i32 %4774, i32* %4772, align 4
  br label %4803

; <label>:4775                                    ; preds = %4685
  %4776 = load %struct.DState** %1, align 8
  %4777 = getelementptr inbounds %struct.DState* %4776, i32 0, i32 14
  %4778 = load i32* %4777, align 4
  %4779 = zext i32 %4778 to i64
  %4780 = load %struct.DState** %1, align 8
  %4781 = getelementptr inbounds %struct.DState* %4780, i32 0, i32 20
  %4782 = load i32** %4781, align 8
  %4783 = getelementptr inbounds i32* %4782, i64 %4779
  %4784 = load i32* %4783, align 4
  %4785 = load %struct.DState** %1, align 8
  %4786 = getelementptr inbounds %struct.DState* %4785, i32 0, i32 14
  store i32 %4784, i32* %4786, align 4
  %4787 = load %struct.DState** %1, align 8
  %4788 = getelementptr inbounds %struct.DState* %4787, i32 0, i32 14
  %4789 = load i32* %4788, align 4
  %4790 = and i32 %4789, 255
  %4791 = trunc i32 %4790 to i8
  %4792 = zext i8 %4791 to i32
  %4793 = load %struct.DState** %1, align 8
  %4794 = getelementptr inbounds %struct.DState* %4793, i32 0, i32 15
  store i32 %4792, i32* %4794, align 4
  %4795 = load %struct.DState** %1, align 8
  %4796 = getelementptr inbounds %struct.DState* %4795, i32 0, i32 14
  %4797 = load i32* %4796, align 4
  %4798 = lshr i32 %4797, 8
  store i32 %4798, i32* %4796, align 4
  %4799 = load %struct.DState** %1, align 8
  %4800 = getelementptr inbounds %struct.DState* %4799, i32 0, i32 17
  %4801 = load i32* %4800, align 4
  %4802 = add nsw i32 %4801, 1
  store i32 %4802, i32* %4800, align 4
  br label %4803

; <label>:4803                                    ; preds = %4775, %4761
  br label %4804

; <label>:4804                                    ; preds = %4803, %4644
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:4805                                    ; preds = %664
  br label %4806

; <label>:4806                                    ; preds = %58, %4805
  %4807 = load %struct.DState** %1, align 8
  %4808 = getelementptr inbounds %struct.DState* %4807, i32 0, i32 1
  store i32 42, i32* %4808, align 4
  br label %4809

; <label>:4809                                    ; preds = %4806, %4888
  %4810 = load %struct.DState** %1, align 8
  %4811 = getelementptr inbounds %struct.DState* %4810, i32 0, i32 8
  %4812 = load i32* %4811, align 4
  %4813 = icmp sge i32 %4812, 8
  br i1 %4813, label %4814, label %4830

; <label>:4814                                    ; preds = %4809
  %4815 = load %struct.DState** %1, align 8
  %4816 = getelementptr inbounds %struct.DState* %4815, i32 0, i32 7
  %4817 = load i32* %4816, align 4
  %4818 = load %struct.DState** %1, align 8
  %4819 = getelementptr inbounds %struct.DState* %4818, i32 0, i32 8
  %4820 = load i32* %4819, align 4
  %4821 = sub nsw i32 %4820, 8
  %4822 = lshr i32 %4817, %4821
  %4823 = and i32 %4822, 255
  store i32 %4823, i32* %v37, align 4
  %4824 = load %struct.DState** %1, align 8
  %4825 = getelementptr inbounds %struct.DState* %4824, i32 0, i32 8
  %4826 = load i32* %4825, align 4
  %4827 = sub nsw i32 %4826, 8
  store i32 %4827, i32* %4825, align 4
  %4828 = load i32* %v37, align 4
  %4829 = trunc i32 %4828 to i8
  store i8 %4829, i8* %uc, align 1
  br label %4889

; <label>:4830                                    ; preds = %4809
  %4831 = load %struct.DState** %1, align 8
  %4832 = getelementptr inbounds %struct.DState* %4831, i32 0, i32 0
  %4833 = load %struct.bz_stream** %4832, align 8
  %4834 = getelementptr inbounds %struct.bz_stream* %4833, i32 0, i32 1
  %4835 = load i32* %4834, align 4
  %4836 = icmp eq i32 %4835, 0
  br i1 %4836, label %4837, label %4838

; <label>:4837                                    ; preds = %4830
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:4838                                    ; preds = %4830
  %4839 = load %struct.DState** %1, align 8
  %4840 = getelementptr inbounds %struct.DState* %4839, i32 0, i32 7
  %4841 = load i32* %4840, align 4
  %4842 = shl i32 %4841, 8
  %4843 = load %struct.DState** %1, align 8
  %4844 = getelementptr inbounds %struct.DState* %4843, i32 0, i32 0
  %4845 = load %struct.bz_stream** %4844, align 8
  %4846 = getelementptr inbounds %struct.bz_stream* %4845, i32 0, i32 0
  %4847 = load i8** %4846, align 8
  %4848 = load i8* %4847, align 1
  %4849 = zext i8 %4848 to i32
  %4850 = or i32 %4842, %4849
  %4851 = load %struct.DState** %1, align 8
  %4852 = getelementptr inbounds %struct.DState* %4851, i32 0, i32 7
  store i32 %4850, i32* %4852, align 4
  %4853 = load %struct.DState** %1, align 8
  %4854 = getelementptr inbounds %struct.DState* %4853, i32 0, i32 8
  %4855 = load i32* %4854, align 4
  %4856 = add nsw i32 %4855, 8
  store i32 %4856, i32* %4854, align 4
  %4857 = load %struct.DState** %1, align 8
  %4858 = getelementptr inbounds %struct.DState* %4857, i32 0, i32 0
  %4859 = load %struct.bz_stream** %4858, align 8
  %4860 = getelementptr inbounds %struct.bz_stream* %4859, i32 0, i32 0
  %4861 = load i8** %4860, align 8
  %4862 = getelementptr inbounds i8* %4861, i32 1
  store i8* %4862, i8** %4860, align 8
  %4863 = load %struct.DState** %1, align 8
  %4864 = getelementptr inbounds %struct.DState* %4863, i32 0, i32 0
  %4865 = load %struct.bz_stream** %4864, align 8
  %4866 = getelementptr inbounds %struct.bz_stream* %4865, i32 0, i32 1
  %4867 = load i32* %4866, align 4
  %4868 = add i32 %4867, -1
  store i32 %4868, i32* %4866, align 4
  %4869 = load %struct.DState** %1, align 8
  %4870 = getelementptr inbounds %struct.DState* %4869, i32 0, i32 0
  %4871 = load %struct.bz_stream** %4870, align 8
  %4872 = getelementptr inbounds %struct.bz_stream* %4871, i32 0, i32 2
  %4873 = load i32* %4872, align 4
  %4874 = add i32 %4873, 1
  store i32 %4874, i32* %4872, align 4
  %4875 = load %struct.DState** %1, align 8
  %4876 = getelementptr inbounds %struct.DState* %4875, i32 0, i32 0
  %4877 = load %struct.bz_stream** %4876, align 8
  %4878 = getelementptr inbounds %struct.bz_stream* %4877, i32 0, i32 2
  %4879 = load i32* %4878, align 4
  %4880 = icmp eq i32 %4879, 0
  br i1 %4880, label %4881, label %4888

; <label>:4881                                    ; preds = %4838
  %4882 = load %struct.DState** %1, align 8
  %4883 = getelementptr inbounds %struct.DState* %4882, i32 0, i32 0
  %4884 = load %struct.bz_stream** %4883, align 8
  %4885 = getelementptr inbounds %struct.bz_stream* %4884, i32 0, i32 3
  %4886 = load i32* %4885, align 4
  %4887 = add i32 %4886, 1
  store i32 %4887, i32* %4885, align 4
  br label %4888

; <label>:4888                                    ; preds = %4881, %4838
  br label %4809

; <label>:4889                                    ; preds = %4814
  %4890 = load i8* %uc, align 1
  %4891 = zext i8 %4890 to i32
  %4892 = icmp ne i32 %4891, 114
  br i1 %4892, label %4893, label %4894

; <label>:4893                                    ; preds = %4889
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:4894                                    ; preds = %4889
  br label %4895

; <label>:4895                                    ; preds = %58, %4894
  %4896 = load %struct.DState** %1, align 8
  %4897 = getelementptr inbounds %struct.DState* %4896, i32 0, i32 1
  store i32 43, i32* %4897, align 4
  br label %4898

; <label>:4898                                    ; preds = %4895, %4977
  %4899 = load %struct.DState** %1, align 8
  %4900 = getelementptr inbounds %struct.DState* %4899, i32 0, i32 8
  %4901 = load i32* %4900, align 4
  %4902 = icmp sge i32 %4901, 8
  br i1 %4902, label %4903, label %4919

; <label>:4903                                    ; preds = %4898
  %4904 = load %struct.DState** %1, align 8
  %4905 = getelementptr inbounds %struct.DState* %4904, i32 0, i32 7
  %4906 = load i32* %4905, align 4
  %4907 = load %struct.DState** %1, align 8
  %4908 = getelementptr inbounds %struct.DState* %4907, i32 0, i32 8
  %4909 = load i32* %4908, align 4
  %4910 = sub nsw i32 %4909, 8
  %4911 = lshr i32 %4906, %4910
  %4912 = and i32 %4911, 255
  store i32 %4912, i32* %v38, align 4
  %4913 = load %struct.DState** %1, align 8
  %4914 = getelementptr inbounds %struct.DState* %4913, i32 0, i32 8
  %4915 = load i32* %4914, align 4
  %4916 = sub nsw i32 %4915, 8
  store i32 %4916, i32* %4914, align 4
  %4917 = load i32* %v38, align 4
  %4918 = trunc i32 %4917 to i8
  store i8 %4918, i8* %uc, align 1
  br label %4978

; <label>:4919                                    ; preds = %4898
  %4920 = load %struct.DState** %1, align 8
  %4921 = getelementptr inbounds %struct.DState* %4920, i32 0, i32 0
  %4922 = load %struct.bz_stream** %4921, align 8
  %4923 = getelementptr inbounds %struct.bz_stream* %4922, i32 0, i32 1
  %4924 = load i32* %4923, align 4
  %4925 = icmp eq i32 %4924, 0
  br i1 %4925, label %4926, label %4927

; <label>:4926                                    ; preds = %4919
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:4927                                    ; preds = %4919
  %4928 = load %struct.DState** %1, align 8
  %4929 = getelementptr inbounds %struct.DState* %4928, i32 0, i32 7
  %4930 = load i32* %4929, align 4
  %4931 = shl i32 %4930, 8
  %4932 = load %struct.DState** %1, align 8
  %4933 = getelementptr inbounds %struct.DState* %4932, i32 0, i32 0
  %4934 = load %struct.bz_stream** %4933, align 8
  %4935 = getelementptr inbounds %struct.bz_stream* %4934, i32 0, i32 0
  %4936 = load i8** %4935, align 8
  %4937 = load i8* %4936, align 1
  %4938 = zext i8 %4937 to i32
  %4939 = or i32 %4931, %4938
  %4940 = load %struct.DState** %1, align 8
  %4941 = getelementptr inbounds %struct.DState* %4940, i32 0, i32 7
  store i32 %4939, i32* %4941, align 4
  %4942 = load %struct.DState** %1, align 8
  %4943 = getelementptr inbounds %struct.DState* %4942, i32 0, i32 8
  %4944 = load i32* %4943, align 4
  %4945 = add nsw i32 %4944, 8
  store i32 %4945, i32* %4943, align 4
  %4946 = load %struct.DState** %1, align 8
  %4947 = getelementptr inbounds %struct.DState* %4946, i32 0, i32 0
  %4948 = load %struct.bz_stream** %4947, align 8
  %4949 = getelementptr inbounds %struct.bz_stream* %4948, i32 0, i32 0
  %4950 = load i8** %4949, align 8
  %4951 = getelementptr inbounds i8* %4950, i32 1
  store i8* %4951, i8** %4949, align 8
  %4952 = load %struct.DState** %1, align 8
  %4953 = getelementptr inbounds %struct.DState* %4952, i32 0, i32 0
  %4954 = load %struct.bz_stream** %4953, align 8
  %4955 = getelementptr inbounds %struct.bz_stream* %4954, i32 0, i32 1
  %4956 = load i32* %4955, align 4
  %4957 = add i32 %4956, -1
  store i32 %4957, i32* %4955, align 4
  %4958 = load %struct.DState** %1, align 8
  %4959 = getelementptr inbounds %struct.DState* %4958, i32 0, i32 0
  %4960 = load %struct.bz_stream** %4959, align 8
  %4961 = getelementptr inbounds %struct.bz_stream* %4960, i32 0, i32 2
  %4962 = load i32* %4961, align 4
  %4963 = add i32 %4962, 1
  store i32 %4963, i32* %4961, align 4
  %4964 = load %struct.DState** %1, align 8
  %4965 = getelementptr inbounds %struct.DState* %4964, i32 0, i32 0
  %4966 = load %struct.bz_stream** %4965, align 8
  %4967 = getelementptr inbounds %struct.bz_stream* %4966, i32 0, i32 2
  %4968 = load i32* %4967, align 4
  %4969 = icmp eq i32 %4968, 0
  br i1 %4969, label %4970, label %4977

; <label>:4970                                    ; preds = %4927
  %4971 = load %struct.DState** %1, align 8
  %4972 = getelementptr inbounds %struct.DState* %4971, i32 0, i32 0
  %4973 = load %struct.bz_stream** %4972, align 8
  %4974 = getelementptr inbounds %struct.bz_stream* %4973, i32 0, i32 3
  %4975 = load i32* %4974, align 4
  %4976 = add i32 %4975, 1
  store i32 %4976, i32* %4974, align 4
  br label %4977

; <label>:4977                                    ; preds = %4970, %4927
  br label %4898

; <label>:4978                                    ; preds = %4903
  %4979 = load i8* %uc, align 1
  %4980 = zext i8 %4979 to i32
  %4981 = icmp ne i32 %4980, 69
  br i1 %4981, label %4982, label %4983

; <label>:4982                                    ; preds = %4978
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:4983                                    ; preds = %4978
  br label %4984

; <label>:4984                                    ; preds = %58, %4983
  %4985 = load %struct.DState** %1, align 8
  %4986 = getelementptr inbounds %struct.DState* %4985, i32 0, i32 1
  store i32 44, i32* %4986, align 4
  br label %4987

; <label>:4987                                    ; preds = %4984, %5066
  %4988 = load %struct.DState** %1, align 8
  %4989 = getelementptr inbounds %struct.DState* %4988, i32 0, i32 8
  %4990 = load i32* %4989, align 4
  %4991 = icmp sge i32 %4990, 8
  br i1 %4991, label %4992, label %5008

; <label>:4992                                    ; preds = %4987
  %4993 = load %struct.DState** %1, align 8
  %4994 = getelementptr inbounds %struct.DState* %4993, i32 0, i32 7
  %4995 = load i32* %4994, align 4
  %4996 = load %struct.DState** %1, align 8
  %4997 = getelementptr inbounds %struct.DState* %4996, i32 0, i32 8
  %4998 = load i32* %4997, align 4
  %4999 = sub nsw i32 %4998, 8
  %5000 = lshr i32 %4995, %4999
  %5001 = and i32 %5000, 255
  store i32 %5001, i32* %v39, align 4
  %5002 = load %struct.DState** %1, align 8
  %5003 = getelementptr inbounds %struct.DState* %5002, i32 0, i32 8
  %5004 = load i32* %5003, align 4
  %5005 = sub nsw i32 %5004, 8
  store i32 %5005, i32* %5003, align 4
  %5006 = load i32* %v39, align 4
  %5007 = trunc i32 %5006 to i8
  store i8 %5007, i8* %uc, align 1
  br label %5067

; <label>:5008                                    ; preds = %4987
  %5009 = load %struct.DState** %1, align 8
  %5010 = getelementptr inbounds %struct.DState* %5009, i32 0, i32 0
  %5011 = load %struct.bz_stream** %5010, align 8
  %5012 = getelementptr inbounds %struct.bz_stream* %5011, i32 0, i32 1
  %5013 = load i32* %5012, align 4
  %5014 = icmp eq i32 %5013, 0
  br i1 %5014, label %5015, label %5016

; <label>:5015                                    ; preds = %5008
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:5016                                    ; preds = %5008
  %5017 = load %struct.DState** %1, align 8
  %5018 = getelementptr inbounds %struct.DState* %5017, i32 0, i32 7
  %5019 = load i32* %5018, align 4
  %5020 = shl i32 %5019, 8
  %5021 = load %struct.DState** %1, align 8
  %5022 = getelementptr inbounds %struct.DState* %5021, i32 0, i32 0
  %5023 = load %struct.bz_stream** %5022, align 8
  %5024 = getelementptr inbounds %struct.bz_stream* %5023, i32 0, i32 0
  %5025 = load i8** %5024, align 8
  %5026 = load i8* %5025, align 1
  %5027 = zext i8 %5026 to i32
  %5028 = or i32 %5020, %5027
  %5029 = load %struct.DState** %1, align 8
  %5030 = getelementptr inbounds %struct.DState* %5029, i32 0, i32 7
  store i32 %5028, i32* %5030, align 4
  %5031 = load %struct.DState** %1, align 8
  %5032 = getelementptr inbounds %struct.DState* %5031, i32 0, i32 8
  %5033 = load i32* %5032, align 4
  %5034 = add nsw i32 %5033, 8
  store i32 %5034, i32* %5032, align 4
  %5035 = load %struct.DState** %1, align 8
  %5036 = getelementptr inbounds %struct.DState* %5035, i32 0, i32 0
  %5037 = load %struct.bz_stream** %5036, align 8
  %5038 = getelementptr inbounds %struct.bz_stream* %5037, i32 0, i32 0
  %5039 = load i8** %5038, align 8
  %5040 = getelementptr inbounds i8* %5039, i32 1
  store i8* %5040, i8** %5038, align 8
  %5041 = load %struct.DState** %1, align 8
  %5042 = getelementptr inbounds %struct.DState* %5041, i32 0, i32 0
  %5043 = load %struct.bz_stream** %5042, align 8
  %5044 = getelementptr inbounds %struct.bz_stream* %5043, i32 0, i32 1
  %5045 = load i32* %5044, align 4
  %5046 = add i32 %5045, -1
  store i32 %5046, i32* %5044, align 4
  %5047 = load %struct.DState** %1, align 8
  %5048 = getelementptr inbounds %struct.DState* %5047, i32 0, i32 0
  %5049 = load %struct.bz_stream** %5048, align 8
  %5050 = getelementptr inbounds %struct.bz_stream* %5049, i32 0, i32 2
  %5051 = load i32* %5050, align 4
  %5052 = add i32 %5051, 1
  store i32 %5052, i32* %5050, align 4
  %5053 = load %struct.DState** %1, align 8
  %5054 = getelementptr inbounds %struct.DState* %5053, i32 0, i32 0
  %5055 = load %struct.bz_stream** %5054, align 8
  %5056 = getelementptr inbounds %struct.bz_stream* %5055, i32 0, i32 2
  %5057 = load i32* %5056, align 4
  %5058 = icmp eq i32 %5057, 0
  br i1 %5058, label %5059, label %5066

; <label>:5059                                    ; preds = %5016
  %5060 = load %struct.DState** %1, align 8
  %5061 = getelementptr inbounds %struct.DState* %5060, i32 0, i32 0
  %5062 = load %struct.bz_stream** %5061, align 8
  %5063 = getelementptr inbounds %struct.bz_stream* %5062, i32 0, i32 3
  %5064 = load i32* %5063, align 4
  %5065 = add i32 %5064, 1
  store i32 %5065, i32* %5063, align 4
  br label %5066

; <label>:5066                                    ; preds = %5059, %5016
  br label %4987

; <label>:5067                                    ; preds = %4992
  %5068 = load i8* %uc, align 1
  %5069 = zext i8 %5068 to i32
  %5070 = icmp ne i32 %5069, 56
  br i1 %5070, label %5071, label %5072

; <label>:5071                                    ; preds = %5067
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:5072                                    ; preds = %5067
  br label %5073

; <label>:5073                                    ; preds = %58, %5072
  %5074 = load %struct.DState** %1, align 8
  %5075 = getelementptr inbounds %struct.DState* %5074, i32 0, i32 1
  store i32 45, i32* %5075, align 4
  br label %5076

; <label>:5076                                    ; preds = %5073, %5155
  %5077 = load %struct.DState** %1, align 8
  %5078 = getelementptr inbounds %struct.DState* %5077, i32 0, i32 8
  %5079 = load i32* %5078, align 4
  %5080 = icmp sge i32 %5079, 8
  br i1 %5080, label %5081, label %5097

; <label>:5081                                    ; preds = %5076
  %5082 = load %struct.DState** %1, align 8
  %5083 = getelementptr inbounds %struct.DState* %5082, i32 0, i32 7
  %5084 = load i32* %5083, align 4
  %5085 = load %struct.DState** %1, align 8
  %5086 = getelementptr inbounds %struct.DState* %5085, i32 0, i32 8
  %5087 = load i32* %5086, align 4
  %5088 = sub nsw i32 %5087, 8
  %5089 = lshr i32 %5084, %5088
  %5090 = and i32 %5089, 255
  store i32 %5090, i32* %v40, align 4
  %5091 = load %struct.DState** %1, align 8
  %5092 = getelementptr inbounds %struct.DState* %5091, i32 0, i32 8
  %5093 = load i32* %5092, align 4
  %5094 = sub nsw i32 %5093, 8
  store i32 %5094, i32* %5092, align 4
  %5095 = load i32* %v40, align 4
  %5096 = trunc i32 %5095 to i8
  store i8 %5096, i8* %uc, align 1
  br label %5156

; <label>:5097                                    ; preds = %5076
  %5098 = load %struct.DState** %1, align 8
  %5099 = getelementptr inbounds %struct.DState* %5098, i32 0, i32 0
  %5100 = load %struct.bz_stream** %5099, align 8
  %5101 = getelementptr inbounds %struct.bz_stream* %5100, i32 0, i32 1
  %5102 = load i32* %5101, align 4
  %5103 = icmp eq i32 %5102, 0
  br i1 %5103, label %5104, label %5105

; <label>:5104                                    ; preds = %5097
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:5105                                    ; preds = %5097
  %5106 = load %struct.DState** %1, align 8
  %5107 = getelementptr inbounds %struct.DState* %5106, i32 0, i32 7
  %5108 = load i32* %5107, align 4
  %5109 = shl i32 %5108, 8
  %5110 = load %struct.DState** %1, align 8
  %5111 = getelementptr inbounds %struct.DState* %5110, i32 0, i32 0
  %5112 = load %struct.bz_stream** %5111, align 8
  %5113 = getelementptr inbounds %struct.bz_stream* %5112, i32 0, i32 0
  %5114 = load i8** %5113, align 8
  %5115 = load i8* %5114, align 1
  %5116 = zext i8 %5115 to i32
  %5117 = or i32 %5109, %5116
  %5118 = load %struct.DState** %1, align 8
  %5119 = getelementptr inbounds %struct.DState* %5118, i32 0, i32 7
  store i32 %5117, i32* %5119, align 4
  %5120 = load %struct.DState** %1, align 8
  %5121 = getelementptr inbounds %struct.DState* %5120, i32 0, i32 8
  %5122 = load i32* %5121, align 4
  %5123 = add nsw i32 %5122, 8
  store i32 %5123, i32* %5121, align 4
  %5124 = load %struct.DState** %1, align 8
  %5125 = getelementptr inbounds %struct.DState* %5124, i32 0, i32 0
  %5126 = load %struct.bz_stream** %5125, align 8
  %5127 = getelementptr inbounds %struct.bz_stream* %5126, i32 0, i32 0
  %5128 = load i8** %5127, align 8
  %5129 = getelementptr inbounds i8* %5128, i32 1
  store i8* %5129, i8** %5127, align 8
  %5130 = load %struct.DState** %1, align 8
  %5131 = getelementptr inbounds %struct.DState* %5130, i32 0, i32 0
  %5132 = load %struct.bz_stream** %5131, align 8
  %5133 = getelementptr inbounds %struct.bz_stream* %5132, i32 0, i32 1
  %5134 = load i32* %5133, align 4
  %5135 = add i32 %5134, -1
  store i32 %5135, i32* %5133, align 4
  %5136 = load %struct.DState** %1, align 8
  %5137 = getelementptr inbounds %struct.DState* %5136, i32 0, i32 0
  %5138 = load %struct.bz_stream** %5137, align 8
  %5139 = getelementptr inbounds %struct.bz_stream* %5138, i32 0, i32 2
  %5140 = load i32* %5139, align 4
  %5141 = add i32 %5140, 1
  store i32 %5141, i32* %5139, align 4
  %5142 = load %struct.DState** %1, align 8
  %5143 = getelementptr inbounds %struct.DState* %5142, i32 0, i32 0
  %5144 = load %struct.bz_stream** %5143, align 8
  %5145 = getelementptr inbounds %struct.bz_stream* %5144, i32 0, i32 2
  %5146 = load i32* %5145, align 4
  %5147 = icmp eq i32 %5146, 0
  br i1 %5147, label %5148, label %5155

; <label>:5148                                    ; preds = %5105
  %5149 = load %struct.DState** %1, align 8
  %5150 = getelementptr inbounds %struct.DState* %5149, i32 0, i32 0
  %5151 = load %struct.bz_stream** %5150, align 8
  %5152 = getelementptr inbounds %struct.bz_stream* %5151, i32 0, i32 3
  %5153 = load i32* %5152, align 4
  %5154 = add i32 %5153, 1
  store i32 %5154, i32* %5152, align 4
  br label %5155

; <label>:5155                                    ; preds = %5148, %5105
  br label %5076

; <label>:5156                                    ; preds = %5081
  %5157 = load i8* %uc, align 1
  %5158 = zext i8 %5157 to i32
  %5159 = icmp ne i32 %5158, 80
  br i1 %5159, label %5160, label %5161

; <label>:5160                                    ; preds = %5156
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:5161                                    ; preds = %5156
  br label %5162

; <label>:5162                                    ; preds = %58, %5161
  %5163 = load %struct.DState** %1, align 8
  %5164 = getelementptr inbounds %struct.DState* %5163, i32 0, i32 1
  store i32 46, i32* %5164, align 4
  br label %5165

; <label>:5165                                    ; preds = %5162, %5244
  %5166 = load %struct.DState** %1, align 8
  %5167 = getelementptr inbounds %struct.DState* %5166, i32 0, i32 8
  %5168 = load i32* %5167, align 4
  %5169 = icmp sge i32 %5168, 8
  br i1 %5169, label %5170, label %5186

; <label>:5170                                    ; preds = %5165
  %5171 = load %struct.DState** %1, align 8
  %5172 = getelementptr inbounds %struct.DState* %5171, i32 0, i32 7
  %5173 = load i32* %5172, align 4
  %5174 = load %struct.DState** %1, align 8
  %5175 = getelementptr inbounds %struct.DState* %5174, i32 0, i32 8
  %5176 = load i32* %5175, align 4
  %5177 = sub nsw i32 %5176, 8
  %5178 = lshr i32 %5173, %5177
  %5179 = and i32 %5178, 255
  store i32 %5179, i32* %v41, align 4
  %5180 = load %struct.DState** %1, align 8
  %5181 = getelementptr inbounds %struct.DState* %5180, i32 0, i32 8
  %5182 = load i32* %5181, align 4
  %5183 = sub nsw i32 %5182, 8
  store i32 %5183, i32* %5181, align 4
  %5184 = load i32* %v41, align 4
  %5185 = trunc i32 %5184 to i8
  store i8 %5185, i8* %uc, align 1
  br label %5245

; <label>:5186                                    ; preds = %5165
  %5187 = load %struct.DState** %1, align 8
  %5188 = getelementptr inbounds %struct.DState* %5187, i32 0, i32 0
  %5189 = load %struct.bz_stream** %5188, align 8
  %5190 = getelementptr inbounds %struct.bz_stream* %5189, i32 0, i32 1
  %5191 = load i32* %5190, align 4
  %5192 = icmp eq i32 %5191, 0
  br i1 %5192, label %5193, label %5194

; <label>:5193                                    ; preds = %5186
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:5194                                    ; preds = %5186
  %5195 = load %struct.DState** %1, align 8
  %5196 = getelementptr inbounds %struct.DState* %5195, i32 0, i32 7
  %5197 = load i32* %5196, align 4
  %5198 = shl i32 %5197, 8
  %5199 = load %struct.DState** %1, align 8
  %5200 = getelementptr inbounds %struct.DState* %5199, i32 0, i32 0
  %5201 = load %struct.bz_stream** %5200, align 8
  %5202 = getelementptr inbounds %struct.bz_stream* %5201, i32 0, i32 0
  %5203 = load i8** %5202, align 8
  %5204 = load i8* %5203, align 1
  %5205 = zext i8 %5204 to i32
  %5206 = or i32 %5198, %5205
  %5207 = load %struct.DState** %1, align 8
  %5208 = getelementptr inbounds %struct.DState* %5207, i32 0, i32 7
  store i32 %5206, i32* %5208, align 4
  %5209 = load %struct.DState** %1, align 8
  %5210 = getelementptr inbounds %struct.DState* %5209, i32 0, i32 8
  %5211 = load i32* %5210, align 4
  %5212 = add nsw i32 %5211, 8
  store i32 %5212, i32* %5210, align 4
  %5213 = load %struct.DState** %1, align 8
  %5214 = getelementptr inbounds %struct.DState* %5213, i32 0, i32 0
  %5215 = load %struct.bz_stream** %5214, align 8
  %5216 = getelementptr inbounds %struct.bz_stream* %5215, i32 0, i32 0
  %5217 = load i8** %5216, align 8
  %5218 = getelementptr inbounds i8* %5217, i32 1
  store i8* %5218, i8** %5216, align 8
  %5219 = load %struct.DState** %1, align 8
  %5220 = getelementptr inbounds %struct.DState* %5219, i32 0, i32 0
  %5221 = load %struct.bz_stream** %5220, align 8
  %5222 = getelementptr inbounds %struct.bz_stream* %5221, i32 0, i32 1
  %5223 = load i32* %5222, align 4
  %5224 = add i32 %5223, -1
  store i32 %5224, i32* %5222, align 4
  %5225 = load %struct.DState** %1, align 8
  %5226 = getelementptr inbounds %struct.DState* %5225, i32 0, i32 0
  %5227 = load %struct.bz_stream** %5226, align 8
  %5228 = getelementptr inbounds %struct.bz_stream* %5227, i32 0, i32 2
  %5229 = load i32* %5228, align 4
  %5230 = add i32 %5229, 1
  store i32 %5230, i32* %5228, align 4
  %5231 = load %struct.DState** %1, align 8
  %5232 = getelementptr inbounds %struct.DState* %5231, i32 0, i32 0
  %5233 = load %struct.bz_stream** %5232, align 8
  %5234 = getelementptr inbounds %struct.bz_stream* %5233, i32 0, i32 2
  %5235 = load i32* %5234, align 4
  %5236 = icmp eq i32 %5235, 0
  br i1 %5236, label %5237, label %5244

; <label>:5237                                    ; preds = %5194
  %5238 = load %struct.DState** %1, align 8
  %5239 = getelementptr inbounds %struct.DState* %5238, i32 0, i32 0
  %5240 = load %struct.bz_stream** %5239, align 8
  %5241 = getelementptr inbounds %struct.bz_stream* %5240, i32 0, i32 3
  %5242 = load i32* %5241, align 4
  %5243 = add i32 %5242, 1
  store i32 %5243, i32* %5241, align 4
  br label %5244

; <label>:5244                                    ; preds = %5237, %5194
  br label %5165

; <label>:5245                                    ; preds = %5170
  %5246 = load i8* %uc, align 1
  %5247 = zext i8 %5246 to i32
  %5248 = icmp ne i32 %5247, 144
  br i1 %5248, label %5249, label %5250

; <label>:5249                                    ; preds = %5245
  store i32 -4, i32* %retVal, align 4
  br label %5629

; <label>:5250                                    ; preds = %5245
  %5251 = load %struct.DState** %1, align 8
  %5252 = getelementptr inbounds %struct.DState* %5251, i32 0, i32 24
  store i32 0, i32* %5252, align 4
  br label %5253

; <label>:5253                                    ; preds = %58, %5250
  %5254 = load %struct.DState** %1, align 8
  %5255 = getelementptr inbounds %struct.DState* %5254, i32 0, i32 1
  store i32 47, i32* %5255, align 4
  br label %5256

; <label>:5256                                    ; preds = %5253, %5335
  %5257 = load %struct.DState** %1, align 8
  %5258 = getelementptr inbounds %struct.DState* %5257, i32 0, i32 8
  %5259 = load i32* %5258, align 4
  %5260 = icmp sge i32 %5259, 8
  br i1 %5260, label %5261, label %5277

; <label>:5261                                    ; preds = %5256
  %5262 = load %struct.DState** %1, align 8
  %5263 = getelementptr inbounds %struct.DState* %5262, i32 0, i32 7
  %5264 = load i32* %5263, align 4
  %5265 = load %struct.DState** %1, align 8
  %5266 = getelementptr inbounds %struct.DState* %5265, i32 0, i32 8
  %5267 = load i32* %5266, align 4
  %5268 = sub nsw i32 %5267, 8
  %5269 = lshr i32 %5264, %5268
  %5270 = and i32 %5269, 255
  store i32 %5270, i32* %v42, align 4
  %5271 = load %struct.DState** %1, align 8
  %5272 = getelementptr inbounds %struct.DState* %5271, i32 0, i32 8
  %5273 = load i32* %5272, align 4
  %5274 = sub nsw i32 %5273, 8
  store i32 %5274, i32* %5272, align 4
  %5275 = load i32* %v42, align 4
  %5276 = trunc i32 %5275 to i8
  store i8 %5276, i8* %uc, align 1
  br label %5336

; <label>:5277                                    ; preds = %5256
  %5278 = load %struct.DState** %1, align 8
  %5279 = getelementptr inbounds %struct.DState* %5278, i32 0, i32 0
  %5280 = load %struct.bz_stream** %5279, align 8
  %5281 = getelementptr inbounds %struct.bz_stream* %5280, i32 0, i32 1
  %5282 = load i32* %5281, align 4
  %5283 = icmp eq i32 %5282, 0
  br i1 %5283, label %5284, label %5285

; <label>:5284                                    ; preds = %5277
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:5285                                    ; preds = %5277
  %5286 = load %struct.DState** %1, align 8
  %5287 = getelementptr inbounds %struct.DState* %5286, i32 0, i32 7
  %5288 = load i32* %5287, align 4
  %5289 = shl i32 %5288, 8
  %5290 = load %struct.DState** %1, align 8
  %5291 = getelementptr inbounds %struct.DState* %5290, i32 0, i32 0
  %5292 = load %struct.bz_stream** %5291, align 8
  %5293 = getelementptr inbounds %struct.bz_stream* %5292, i32 0, i32 0
  %5294 = load i8** %5293, align 8
  %5295 = load i8* %5294, align 1
  %5296 = zext i8 %5295 to i32
  %5297 = or i32 %5289, %5296
  %5298 = load %struct.DState** %1, align 8
  %5299 = getelementptr inbounds %struct.DState* %5298, i32 0, i32 7
  store i32 %5297, i32* %5299, align 4
  %5300 = load %struct.DState** %1, align 8
  %5301 = getelementptr inbounds %struct.DState* %5300, i32 0, i32 8
  %5302 = load i32* %5301, align 4
  %5303 = add nsw i32 %5302, 8
  store i32 %5303, i32* %5301, align 4
  %5304 = load %struct.DState** %1, align 8
  %5305 = getelementptr inbounds %struct.DState* %5304, i32 0, i32 0
  %5306 = load %struct.bz_stream** %5305, align 8
  %5307 = getelementptr inbounds %struct.bz_stream* %5306, i32 0, i32 0
  %5308 = load i8** %5307, align 8
  %5309 = getelementptr inbounds i8* %5308, i32 1
  store i8* %5309, i8** %5307, align 8
  %5310 = load %struct.DState** %1, align 8
  %5311 = getelementptr inbounds %struct.DState* %5310, i32 0, i32 0
  %5312 = load %struct.bz_stream** %5311, align 8
  %5313 = getelementptr inbounds %struct.bz_stream* %5312, i32 0, i32 1
  %5314 = load i32* %5313, align 4
  %5315 = add i32 %5314, -1
  store i32 %5315, i32* %5313, align 4
  %5316 = load %struct.DState** %1, align 8
  %5317 = getelementptr inbounds %struct.DState* %5316, i32 0, i32 0
  %5318 = load %struct.bz_stream** %5317, align 8
  %5319 = getelementptr inbounds %struct.bz_stream* %5318, i32 0, i32 2
  %5320 = load i32* %5319, align 4
  %5321 = add i32 %5320, 1
  store i32 %5321, i32* %5319, align 4
  %5322 = load %struct.DState** %1, align 8
  %5323 = getelementptr inbounds %struct.DState* %5322, i32 0, i32 0
  %5324 = load %struct.bz_stream** %5323, align 8
  %5325 = getelementptr inbounds %struct.bz_stream* %5324, i32 0, i32 2
  %5326 = load i32* %5325, align 4
  %5327 = icmp eq i32 %5326, 0
  br i1 %5327, label %5328, label %5335

; <label>:5328                                    ; preds = %5285
  %5329 = load %struct.DState** %1, align 8
  %5330 = getelementptr inbounds %struct.DState* %5329, i32 0, i32 0
  %5331 = load %struct.bz_stream** %5330, align 8
  %5332 = getelementptr inbounds %struct.bz_stream* %5331, i32 0, i32 3
  %5333 = load i32* %5332, align 4
  %5334 = add i32 %5333, 1
  store i32 %5334, i32* %5332, align 4
  br label %5335

; <label>:5335                                    ; preds = %5328, %5285
  br label %5256

; <label>:5336                                    ; preds = %5261
  %5337 = load %struct.DState** %1, align 8
  %5338 = getelementptr inbounds %struct.DState* %5337, i32 0, i32 24
  %5339 = load i32* %5338, align 4
  %5340 = shl i32 %5339, 8
  %5341 = load i8* %uc, align 1
  %5342 = zext i8 %5341 to i32
  %5343 = or i32 %5340, %5342
  %5344 = load %struct.DState** %1, align 8
  %5345 = getelementptr inbounds %struct.DState* %5344, i32 0, i32 24
  store i32 %5343, i32* %5345, align 4
  br label %5346

; <label>:5346                                    ; preds = %58, %5336
  %5347 = load %struct.DState** %1, align 8
  %5348 = getelementptr inbounds %struct.DState* %5347, i32 0, i32 1
  store i32 48, i32* %5348, align 4
  br label %5349

; <label>:5349                                    ; preds = %5346, %5428
  %5350 = load %struct.DState** %1, align 8
  %5351 = getelementptr inbounds %struct.DState* %5350, i32 0, i32 8
  %5352 = load i32* %5351, align 4
  %5353 = icmp sge i32 %5352, 8
  br i1 %5353, label %5354, label %5370

; <label>:5354                                    ; preds = %5349
  %5355 = load %struct.DState** %1, align 8
  %5356 = getelementptr inbounds %struct.DState* %5355, i32 0, i32 7
  %5357 = load i32* %5356, align 4
  %5358 = load %struct.DState** %1, align 8
  %5359 = getelementptr inbounds %struct.DState* %5358, i32 0, i32 8
  %5360 = load i32* %5359, align 4
  %5361 = sub nsw i32 %5360, 8
  %5362 = lshr i32 %5357, %5361
  %5363 = and i32 %5362, 255
  store i32 %5363, i32* %v43, align 4
  %5364 = load %struct.DState** %1, align 8
  %5365 = getelementptr inbounds %struct.DState* %5364, i32 0, i32 8
  %5366 = load i32* %5365, align 4
  %5367 = sub nsw i32 %5366, 8
  store i32 %5367, i32* %5365, align 4
  %5368 = load i32* %v43, align 4
  %5369 = trunc i32 %5368 to i8
  store i8 %5369, i8* %uc, align 1
  br label %5429

; <label>:5370                                    ; preds = %5349
  %5371 = load %struct.DState** %1, align 8
  %5372 = getelementptr inbounds %struct.DState* %5371, i32 0, i32 0
  %5373 = load %struct.bz_stream** %5372, align 8
  %5374 = getelementptr inbounds %struct.bz_stream* %5373, i32 0, i32 1
  %5375 = load i32* %5374, align 4
  %5376 = icmp eq i32 %5375, 0
  br i1 %5376, label %5377, label %5378

; <label>:5377                                    ; preds = %5370
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:5378                                    ; preds = %5370
  %5379 = load %struct.DState** %1, align 8
  %5380 = getelementptr inbounds %struct.DState* %5379, i32 0, i32 7
  %5381 = load i32* %5380, align 4
  %5382 = shl i32 %5381, 8
  %5383 = load %struct.DState** %1, align 8
  %5384 = getelementptr inbounds %struct.DState* %5383, i32 0, i32 0
  %5385 = load %struct.bz_stream** %5384, align 8
  %5386 = getelementptr inbounds %struct.bz_stream* %5385, i32 0, i32 0
  %5387 = load i8** %5386, align 8
  %5388 = load i8* %5387, align 1
  %5389 = zext i8 %5388 to i32
  %5390 = or i32 %5382, %5389
  %5391 = load %struct.DState** %1, align 8
  %5392 = getelementptr inbounds %struct.DState* %5391, i32 0, i32 7
  store i32 %5390, i32* %5392, align 4
  %5393 = load %struct.DState** %1, align 8
  %5394 = getelementptr inbounds %struct.DState* %5393, i32 0, i32 8
  %5395 = load i32* %5394, align 4
  %5396 = add nsw i32 %5395, 8
  store i32 %5396, i32* %5394, align 4
  %5397 = load %struct.DState** %1, align 8
  %5398 = getelementptr inbounds %struct.DState* %5397, i32 0, i32 0
  %5399 = load %struct.bz_stream** %5398, align 8
  %5400 = getelementptr inbounds %struct.bz_stream* %5399, i32 0, i32 0
  %5401 = load i8** %5400, align 8
  %5402 = getelementptr inbounds i8* %5401, i32 1
  store i8* %5402, i8** %5400, align 8
  %5403 = load %struct.DState** %1, align 8
  %5404 = getelementptr inbounds %struct.DState* %5403, i32 0, i32 0
  %5405 = load %struct.bz_stream** %5404, align 8
  %5406 = getelementptr inbounds %struct.bz_stream* %5405, i32 0, i32 1
  %5407 = load i32* %5406, align 4
  %5408 = add i32 %5407, -1
  store i32 %5408, i32* %5406, align 4
  %5409 = load %struct.DState** %1, align 8
  %5410 = getelementptr inbounds %struct.DState* %5409, i32 0, i32 0
  %5411 = load %struct.bz_stream** %5410, align 8
  %5412 = getelementptr inbounds %struct.bz_stream* %5411, i32 0, i32 2
  %5413 = load i32* %5412, align 4
  %5414 = add i32 %5413, 1
  store i32 %5414, i32* %5412, align 4
  %5415 = load %struct.DState** %1, align 8
  %5416 = getelementptr inbounds %struct.DState* %5415, i32 0, i32 0
  %5417 = load %struct.bz_stream** %5416, align 8
  %5418 = getelementptr inbounds %struct.bz_stream* %5417, i32 0, i32 2
  %5419 = load i32* %5418, align 4
  %5420 = icmp eq i32 %5419, 0
  br i1 %5420, label %5421, label %5428

; <label>:5421                                    ; preds = %5378
  %5422 = load %struct.DState** %1, align 8
  %5423 = getelementptr inbounds %struct.DState* %5422, i32 0, i32 0
  %5424 = load %struct.bz_stream** %5423, align 8
  %5425 = getelementptr inbounds %struct.bz_stream* %5424, i32 0, i32 3
  %5426 = load i32* %5425, align 4
  %5427 = add i32 %5426, 1
  store i32 %5427, i32* %5425, align 4
  br label %5428

; <label>:5428                                    ; preds = %5421, %5378
  br label %5349

; <label>:5429                                    ; preds = %5354
  %5430 = load %struct.DState** %1, align 8
  %5431 = getelementptr inbounds %struct.DState* %5430, i32 0, i32 24
  %5432 = load i32* %5431, align 4
  %5433 = shl i32 %5432, 8
  %5434 = load i8* %uc, align 1
  %5435 = zext i8 %5434 to i32
  %5436 = or i32 %5433, %5435
  %5437 = load %struct.DState** %1, align 8
  %5438 = getelementptr inbounds %struct.DState* %5437, i32 0, i32 24
  store i32 %5436, i32* %5438, align 4
  br label %5439

; <label>:5439                                    ; preds = %58, %5429
  %5440 = load %struct.DState** %1, align 8
  %5441 = getelementptr inbounds %struct.DState* %5440, i32 0, i32 1
  store i32 49, i32* %5441, align 4
  br label %5442

; <label>:5442                                    ; preds = %5439, %5521
  %5443 = load %struct.DState** %1, align 8
  %5444 = getelementptr inbounds %struct.DState* %5443, i32 0, i32 8
  %5445 = load i32* %5444, align 4
  %5446 = icmp sge i32 %5445, 8
  br i1 %5446, label %5447, label %5463

; <label>:5447                                    ; preds = %5442
  %5448 = load %struct.DState** %1, align 8
  %5449 = getelementptr inbounds %struct.DState* %5448, i32 0, i32 7
  %5450 = load i32* %5449, align 4
  %5451 = load %struct.DState** %1, align 8
  %5452 = getelementptr inbounds %struct.DState* %5451, i32 0, i32 8
  %5453 = load i32* %5452, align 4
  %5454 = sub nsw i32 %5453, 8
  %5455 = lshr i32 %5450, %5454
  %5456 = and i32 %5455, 255
  store i32 %5456, i32* %v44, align 4
  %5457 = load %struct.DState** %1, align 8
  %5458 = getelementptr inbounds %struct.DState* %5457, i32 0, i32 8
  %5459 = load i32* %5458, align 4
  %5460 = sub nsw i32 %5459, 8
  store i32 %5460, i32* %5458, align 4
  %5461 = load i32* %v44, align 4
  %5462 = trunc i32 %5461 to i8
  store i8 %5462, i8* %uc, align 1
  br label %5522

; <label>:5463                                    ; preds = %5442
  %5464 = load %struct.DState** %1, align 8
  %5465 = getelementptr inbounds %struct.DState* %5464, i32 0, i32 0
  %5466 = load %struct.bz_stream** %5465, align 8
  %5467 = getelementptr inbounds %struct.bz_stream* %5466, i32 0, i32 1
  %5468 = load i32* %5467, align 4
  %5469 = icmp eq i32 %5468, 0
  br i1 %5469, label %5470, label %5471

; <label>:5470                                    ; preds = %5463
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:5471                                    ; preds = %5463
  %5472 = load %struct.DState** %1, align 8
  %5473 = getelementptr inbounds %struct.DState* %5472, i32 0, i32 7
  %5474 = load i32* %5473, align 4
  %5475 = shl i32 %5474, 8
  %5476 = load %struct.DState** %1, align 8
  %5477 = getelementptr inbounds %struct.DState* %5476, i32 0, i32 0
  %5478 = load %struct.bz_stream** %5477, align 8
  %5479 = getelementptr inbounds %struct.bz_stream* %5478, i32 0, i32 0
  %5480 = load i8** %5479, align 8
  %5481 = load i8* %5480, align 1
  %5482 = zext i8 %5481 to i32
  %5483 = or i32 %5475, %5482
  %5484 = load %struct.DState** %1, align 8
  %5485 = getelementptr inbounds %struct.DState* %5484, i32 0, i32 7
  store i32 %5483, i32* %5485, align 4
  %5486 = load %struct.DState** %1, align 8
  %5487 = getelementptr inbounds %struct.DState* %5486, i32 0, i32 8
  %5488 = load i32* %5487, align 4
  %5489 = add nsw i32 %5488, 8
  store i32 %5489, i32* %5487, align 4
  %5490 = load %struct.DState** %1, align 8
  %5491 = getelementptr inbounds %struct.DState* %5490, i32 0, i32 0
  %5492 = load %struct.bz_stream** %5491, align 8
  %5493 = getelementptr inbounds %struct.bz_stream* %5492, i32 0, i32 0
  %5494 = load i8** %5493, align 8
  %5495 = getelementptr inbounds i8* %5494, i32 1
  store i8* %5495, i8** %5493, align 8
  %5496 = load %struct.DState** %1, align 8
  %5497 = getelementptr inbounds %struct.DState* %5496, i32 0, i32 0
  %5498 = load %struct.bz_stream** %5497, align 8
  %5499 = getelementptr inbounds %struct.bz_stream* %5498, i32 0, i32 1
  %5500 = load i32* %5499, align 4
  %5501 = add i32 %5500, -1
  store i32 %5501, i32* %5499, align 4
  %5502 = load %struct.DState** %1, align 8
  %5503 = getelementptr inbounds %struct.DState* %5502, i32 0, i32 0
  %5504 = load %struct.bz_stream** %5503, align 8
  %5505 = getelementptr inbounds %struct.bz_stream* %5504, i32 0, i32 2
  %5506 = load i32* %5505, align 4
  %5507 = add i32 %5506, 1
  store i32 %5507, i32* %5505, align 4
  %5508 = load %struct.DState** %1, align 8
  %5509 = getelementptr inbounds %struct.DState* %5508, i32 0, i32 0
  %5510 = load %struct.bz_stream** %5509, align 8
  %5511 = getelementptr inbounds %struct.bz_stream* %5510, i32 0, i32 2
  %5512 = load i32* %5511, align 4
  %5513 = icmp eq i32 %5512, 0
  br i1 %5513, label %5514, label %5521

; <label>:5514                                    ; preds = %5471
  %5515 = load %struct.DState** %1, align 8
  %5516 = getelementptr inbounds %struct.DState* %5515, i32 0, i32 0
  %5517 = load %struct.bz_stream** %5516, align 8
  %5518 = getelementptr inbounds %struct.bz_stream* %5517, i32 0, i32 3
  %5519 = load i32* %5518, align 4
  %5520 = add i32 %5519, 1
  store i32 %5520, i32* %5518, align 4
  br label %5521

; <label>:5521                                    ; preds = %5514, %5471
  br label %5442

; <label>:5522                                    ; preds = %5447
  %5523 = load %struct.DState** %1, align 8
  %5524 = getelementptr inbounds %struct.DState* %5523, i32 0, i32 24
  %5525 = load i32* %5524, align 4
  %5526 = shl i32 %5525, 8
  %5527 = load i8* %uc, align 1
  %5528 = zext i8 %5527 to i32
  %5529 = or i32 %5526, %5528
  %5530 = load %struct.DState** %1, align 8
  %5531 = getelementptr inbounds %struct.DState* %5530, i32 0, i32 24
  store i32 %5529, i32* %5531, align 4
  br label %5532

; <label>:5532                                    ; preds = %58, %5522
  %5533 = load %struct.DState** %1, align 8
  %5534 = getelementptr inbounds %struct.DState* %5533, i32 0, i32 1
  store i32 50, i32* %5534, align 4
  br label %5535

; <label>:5535                                    ; preds = %5532, %5614
  %5536 = load %struct.DState** %1, align 8
  %5537 = getelementptr inbounds %struct.DState* %5536, i32 0, i32 8
  %5538 = load i32* %5537, align 4
  %5539 = icmp sge i32 %5538, 8
  br i1 %5539, label %5540, label %5556

; <label>:5540                                    ; preds = %5535
  %5541 = load %struct.DState** %1, align 8
  %5542 = getelementptr inbounds %struct.DState* %5541, i32 0, i32 7
  %5543 = load i32* %5542, align 4
  %5544 = load %struct.DState** %1, align 8
  %5545 = getelementptr inbounds %struct.DState* %5544, i32 0, i32 8
  %5546 = load i32* %5545, align 4
  %5547 = sub nsw i32 %5546, 8
  %5548 = lshr i32 %5543, %5547
  %5549 = and i32 %5548, 255
  store i32 %5549, i32* %v45, align 4
  %5550 = load %struct.DState** %1, align 8
  %5551 = getelementptr inbounds %struct.DState* %5550, i32 0, i32 8
  %5552 = load i32* %5551, align 4
  %5553 = sub nsw i32 %5552, 8
  store i32 %5553, i32* %5551, align 4
  %5554 = load i32* %v45, align 4
  %5555 = trunc i32 %5554 to i8
  store i8 %5555, i8* %uc, align 1
  br label %5615

; <label>:5556                                    ; preds = %5535
  %5557 = load %struct.DState** %1, align 8
  %5558 = getelementptr inbounds %struct.DState* %5557, i32 0, i32 0
  %5559 = load %struct.bz_stream** %5558, align 8
  %5560 = getelementptr inbounds %struct.bz_stream* %5559, i32 0, i32 1
  %5561 = load i32* %5560, align 4
  %5562 = icmp eq i32 %5561, 0
  br i1 %5562, label %5563, label %5564

; <label>:5563                                    ; preds = %5556
  store i32 0, i32* %retVal, align 4
  br label %5629

; <label>:5564                                    ; preds = %5556
  %5565 = load %struct.DState** %1, align 8
  %5566 = getelementptr inbounds %struct.DState* %5565, i32 0, i32 7
  %5567 = load i32* %5566, align 4
  %5568 = shl i32 %5567, 8
  %5569 = load %struct.DState** %1, align 8
  %5570 = getelementptr inbounds %struct.DState* %5569, i32 0, i32 0
  %5571 = load %struct.bz_stream** %5570, align 8
  %5572 = getelementptr inbounds %struct.bz_stream* %5571, i32 0, i32 0
  %5573 = load i8** %5572, align 8
  %5574 = load i8* %5573, align 1
  %5575 = zext i8 %5574 to i32
  %5576 = or i32 %5568, %5575
  %5577 = load %struct.DState** %1, align 8
  %5578 = getelementptr inbounds %struct.DState* %5577, i32 0, i32 7
  store i32 %5576, i32* %5578, align 4
  %5579 = load %struct.DState** %1, align 8
  %5580 = getelementptr inbounds %struct.DState* %5579, i32 0, i32 8
  %5581 = load i32* %5580, align 4
  %5582 = add nsw i32 %5581, 8
  store i32 %5582, i32* %5580, align 4
  %5583 = load %struct.DState** %1, align 8
  %5584 = getelementptr inbounds %struct.DState* %5583, i32 0, i32 0
  %5585 = load %struct.bz_stream** %5584, align 8
  %5586 = getelementptr inbounds %struct.bz_stream* %5585, i32 0, i32 0
  %5587 = load i8** %5586, align 8
  %5588 = getelementptr inbounds i8* %5587, i32 1
  store i8* %5588, i8** %5586, align 8
  %5589 = load %struct.DState** %1, align 8
  %5590 = getelementptr inbounds %struct.DState* %5589, i32 0, i32 0
  %5591 = load %struct.bz_stream** %5590, align 8
  %5592 = getelementptr inbounds %struct.bz_stream* %5591, i32 0, i32 1
  %5593 = load i32* %5592, align 4
  %5594 = add i32 %5593, -1
  store i32 %5594, i32* %5592, align 4
  %5595 = load %struct.DState** %1, align 8
  %5596 = getelementptr inbounds %struct.DState* %5595, i32 0, i32 0
  %5597 = load %struct.bz_stream** %5596, align 8
  %5598 = getelementptr inbounds %struct.bz_stream* %5597, i32 0, i32 2
  %5599 = load i32* %5598, align 4
  %5600 = add i32 %5599, 1
  store i32 %5600, i32* %5598, align 4
  %5601 = load %struct.DState** %1, align 8
  %5602 = getelementptr inbounds %struct.DState* %5601, i32 0, i32 0
  %5603 = load %struct.bz_stream** %5602, align 8
  %5604 = getelementptr inbounds %struct.bz_stream* %5603, i32 0, i32 2
  %5605 = load i32* %5604, align 4
  %5606 = icmp eq i32 %5605, 0
  br i1 %5606, label %5607, label %5614

; <label>:5607                                    ; preds = %5564
  %5608 = load %struct.DState** %1, align 8
  %5609 = getelementptr inbounds %struct.DState* %5608, i32 0, i32 0
  %5610 = load %struct.bz_stream** %5609, align 8
  %5611 = getelementptr inbounds %struct.bz_stream* %5610, i32 0, i32 3
  %5612 = load i32* %5611, align 4
  %5613 = add i32 %5612, 1
  store i32 %5613, i32* %5611, align 4
  br label %5614

; <label>:5614                                    ; preds = %5607, %5564
  br label %5535

; <label>:5615                                    ; preds = %5540
  %5616 = load %struct.DState** %1, align 8
  %5617 = getelementptr inbounds %struct.DState* %5616, i32 0, i32 24
  %5618 = load i32* %5617, align 4
  %5619 = shl i32 %5618, 8
  %5620 = load i8* %uc, align 1
  %5621 = zext i8 %5620 to i32
  %5622 = or i32 %5619, %5621
  %5623 = load %struct.DState** %1, align 8
  %5624 = getelementptr inbounds %struct.DState* %5623, i32 0, i32 24
  store i32 %5622, i32* %5624, align 4
  %5625 = load %struct.DState** %1, align 8
  %5626 = getelementptr inbounds %struct.DState* %5625, i32 0, i32 1
  store i32 1, i32* %5626, align 4
  store i32 4, i32* %retVal, align 4
  br label %5629

; <label>:5627                                    ; preds = %58
  call void @BZ2_bz__AssertH__fail(i32 4001)
  br label %5628

; <label>:5628                                    ; preds = %5627
  call void @BZ2_bz__AssertH__fail(i32 4002)
  br label %5629

; <label>:5629                                    ; preds = %5628, %5615, %5563, %5470, %5377, %5284, %5249, %5193, %5160, %5104, %5071, %5015, %4982, %4926, %4893, %4837, %4804, %4195, %4171, %4096, %4053, %3997, %3924, %3606, %3586, %3563, %3505, %3430, %3387, %3331, %3258, %3205, %3130, %3087, %3031, %2958, %2713, %2624, %2591, %2527, %2420, %2357, %2318, %2263, %2231, %2173, %2137, %2057, %1924, %1887, %1876, %1810, %1717, %1624, %1538, %1443, %1350, %1257, %1164, %1114, %1058, %1025, %969, %936, %880, %847, %791, %758, %702, %669, %608, %574, %550, %495, %433, %399, %343, %310, %254, %221, %165
  %5630 = load i32* %i, align 4
  %5631 = load %struct.DState** %1, align 8
  %5632 = getelementptr inbounds %struct.DState* %5631, i32 0, i32 40
  store i32 %5630, i32* %5632, align 4
  %5633 = load i32* %j, align 4
  %5634 = load %struct.DState** %1, align 8
  %5635 = getelementptr inbounds %struct.DState* %5634, i32 0, i32 41
  store i32 %5633, i32* %5635, align 4
  %5636 = load i32* %t, align 4
  %5637 = load %struct.DState** %1, align 8
  %5638 = getelementptr inbounds %struct.DState* %5637, i32 0, i32 42
  store i32 %5636, i32* %5638, align 4
  %5639 = load i32* %alphaSize, align 4
  %5640 = load %struct.DState** %1, align 8
  %5641 = getelementptr inbounds %struct.DState* %5640, i32 0, i32 43
  store i32 %5639, i32* %5641, align 4
  %5642 = load i32* %nGroups, align 4
  %5643 = load %struct.DState** %1, align 8
  %5644 = getelementptr inbounds %struct.DState* %5643, i32 0, i32 44
  store i32 %5642, i32* %5644, align 4
  %5645 = load i32* %nSelectors, align 4
  %5646 = load %struct.DState** %1, align 8
  %5647 = getelementptr inbounds %struct.DState* %5646, i32 0, i32 45
  store i32 %5645, i32* %5647, align 4
  %5648 = load i32* %EOB, align 4
  %5649 = load %struct.DState** %1, align 8
  %5650 = getelementptr inbounds %struct.DState* %5649, i32 0, i32 46
  store i32 %5648, i32* %5650, align 4
  %5651 = load i32* %groupNo, align 4
  %5652 = load %struct.DState** %1, align 8
  %5653 = getelementptr inbounds %struct.DState* %5652, i32 0, i32 47
  store i32 %5651, i32* %5653, align 4
  %5654 = load i32* %groupPos, align 4
  %5655 = load %struct.DState** %1, align 8
  %5656 = getelementptr inbounds %struct.DState* %5655, i32 0, i32 48
  store i32 %5654, i32* %5656, align 4
  %5657 = load i32* %nextSym, align 4
  %5658 = load %struct.DState** %1, align 8
  %5659 = getelementptr inbounds %struct.DState* %5658, i32 0, i32 49
  store i32 %5657, i32* %5659, align 4
  %5660 = load i32* %nblockMAX, align 4
  %5661 = load %struct.DState** %1, align 8
  %5662 = getelementptr inbounds %struct.DState* %5661, i32 0, i32 50
  store i32 %5660, i32* %5662, align 4
  %5663 = load i32* %nblock, align 4
  %5664 = load %struct.DState** %1, align 8
  %5665 = getelementptr inbounds %struct.DState* %5664, i32 0, i32 51
  store i32 %5663, i32* %5665, align 4
  %5666 = load i32* %es, align 4
  %5667 = load %struct.DState** %1, align 8
  %5668 = getelementptr inbounds %struct.DState* %5667, i32 0, i32 52
  store i32 %5666, i32* %5668, align 4
  %5669 = load i32* %N, align 4
  %5670 = load %struct.DState** %1, align 8
  %5671 = getelementptr inbounds %struct.DState* %5670, i32 0, i32 53
  store i32 %5669, i32* %5671, align 4
  %5672 = load i32* %curr, align 4
  %5673 = load %struct.DState** %1, align 8
  %5674 = getelementptr inbounds %struct.DState* %5673, i32 0, i32 54
  store i32 %5672, i32* %5674, align 4
  %5675 = load i32* %zt, align 4
  %5676 = load %struct.DState** %1, align 8
  %5677 = getelementptr inbounds %struct.DState* %5676, i32 0, i32 55
  store i32 %5675, i32* %5677, align 4
  %5678 = load i32* %zn, align 4
  %5679 = load %struct.DState** %1, align 8
  %5680 = getelementptr inbounds %struct.DState* %5679, i32 0, i32 56
  store i32 %5678, i32* %5680, align 4
  %5681 = load i32* %zvec, align 4
  %5682 = load %struct.DState** %1, align 8
  %5683 = getelementptr inbounds %struct.DState* %5682, i32 0, i32 57
  store i32 %5681, i32* %5683, align 4
  %5684 = load i32* %zj, align 4
  %5685 = load %struct.DState** %1, align 8
  %5686 = getelementptr inbounds %struct.DState* %5685, i32 0, i32 58
  store i32 %5684, i32* %5686, align 4
  %5687 = load i32* %gSel, align 4
  %5688 = load %struct.DState** %1, align 8
  %5689 = getelementptr inbounds %struct.DState* %5688, i32 0, i32 59
  store i32 %5687, i32* %5689, align 4
  %5690 = load i32* %gMinlen, align 4
  %5691 = load %struct.DState** %1, align 8
  %5692 = getelementptr inbounds %struct.DState* %5691, i32 0, i32 60
  store i32 %5690, i32* %5692, align 4
  %5693 = load i32** %gLimit, align 8
  %5694 = load %struct.DState** %1, align 8
  %5695 = getelementptr inbounds %struct.DState* %5694, i32 0, i32 61
  store i32* %5693, i32** %5695, align 8
  %5696 = load i32** %gBase, align 8
  %5697 = load %struct.DState** %1, align 8
  %5698 = getelementptr inbounds %struct.DState* %5697, i32 0, i32 62
  store i32* %5696, i32** %5698, align 8
  %5699 = load i32** %gPerm, align 8
  %5700 = load %struct.DState** %1, align 8
  %5701 = getelementptr inbounds %struct.DState* %5700, i32 0, i32 63
  store i32* %5699, i32** %5701, align 8
  %5702 = load i32* %retVal, align 4
  ret i32 %5702
}

; Function Attrs: nounwind uwtable
define internal void @makeMaps_d(%struct.DState* %s) #0 {
  %1 = alloca %struct.DState*, align 8
  %i = alloca i32, align 4
  store %struct.DState* %s, %struct.DState** %1, align 8
  %2 = load %struct.DState** %1, align 8
  %3 = getelementptr inbounds %struct.DState* %2, i32 0, i32 27
  store i32 0, i32* %3, align 4
  store i32 0, i32* %i, align 4
  br label %4

; <label>:4                                       ; preds = %30, %0
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 256
  br i1 %6, label %7, label %33

; <label>:7                                       ; preds = %4
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load %struct.DState** %1, align 8
  %11 = getelementptr inbounds %struct.DState* %10, i32 0, i32 28
  %12 = getelementptr inbounds [256 x i8]* %11, i32 0, i64 %9
  %13 = load i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  br i1 %14, label %15, label %29

; <label>:15                                      ; preds = %7
  %16 = load i32* %i, align 4
  %17 = trunc i32 %16 to i8
  %18 = load %struct.DState** %1, align 8
  %19 = getelementptr inbounds %struct.DState* %18, i32 0, i32 27
  %20 = load i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = load %struct.DState** %1, align 8
  %23 = getelementptr inbounds %struct.DState* %22, i32 0, i32 30
  %24 = getelementptr inbounds [256 x i8]* %23, i32 0, i64 %21
  store i8 %17, i8* %24, align 1
  %25 = load %struct.DState** %1, align 8
  %26 = getelementptr inbounds %struct.DState* %25, i32 0, i32 27
  %27 = load i32* %26, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 4
  br label %29

; <label>:29                                      ; preds = %15, %7
  br label %30

; <label>:30                                      ; preds = %29
  %31 = load i32* %i, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %i, align 4
  br label %4

; <label>:33                                      ; preds = %4
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_indexIntoF(i32 %indx, i32* %cftab) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32*, align 8
  %nb = alloca i32, align 4
  %na = alloca i32, align 4
  %mid = alloca i32, align 4
  store i32 %indx, i32* %1, align 4
  store i32* %cftab, i32** %2, align 8
  store i32 0, i32* %nb, align 4
  store i32 256, i32* %na, align 4
  br label %3

; <label>:3                                       ; preds = %20, %0
  %4 = load i32* %nb, align 4
  %5 = load i32* %na, align 4
  %6 = add nsw i32 %4, %5
  %7 = ashr i32 %6, 1
  store i32 %7, i32* %mid, align 4
  %8 = load i32* %1, align 4
  %9 = load i32* %mid, align 4
  %10 = sext i32 %9 to i64
  %11 = load i32** %2, align 8
  %12 = getelementptr inbounds i32* %11, i64 %10
  %13 = load i32* %12, align 4
  %14 = icmp sge i32 %8, %13
  br i1 %14, label %15, label %17

; <label>:15                                      ; preds = %3
  %16 = load i32* %mid, align 4
  store i32 %16, i32* %nb, align 4
  br label %19

; <label>:17                                      ; preds = %3
  %18 = load i32* %mid, align 4
  store i32 %18, i32* %na, align 4
  br label %19

; <label>:19                                      ; preds = %17, %15
  br label %20

; <label>:20                                      ; preds = %19
  %21 = load i32* %na, align 4
  %22 = load i32* %nb, align 4
  %23 = sub nsw i32 %21, %22
  %24 = icmp ne i32 %23, 1
  br i1 %24, label %3, label %25

; <label>:25                                      ; preds = %20
  %26 = load i32* %nb, align 4
  ret i32 %26
}

; Function Attrs: nounwind uwtable
define i8* @BZ2_bzlibVersion() #0 {
  ret i8* getelementptr inbounds ([19 x i8]* @.str11, i32 0, i32 0)
}

; Function Attrs: noreturn nounwind
declare void @exit(i32) #3

; Function Attrs: nounwind uwtable
define i32 @BZ2_bzCompressInit(%struct.bz_stream* %strm, i32 %blockSize100k, i32 %verbosity, i32 %workFactor) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.bz_stream*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %n = alloca i32, align 4
  %s = alloca %struct.EState*, align 8
  store %struct.bz_stream* %strm, %struct.bz_stream** %2, align 8
  store i32 %blockSize100k, i32* %3, align 4
  store i32 %verbosity, i32* %4, align 4
  store i32 %workFactor, i32* %5, align 4
  %6 = call i32 @bz_config_ok()
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %9, label %8

; <label>:8                                       ; preds = %0
  store i32 -9, i32* %1
  br label %239

; <label>:9                                       ; preds = %0
  %10 = load %struct.bz_stream** %2, align 8
  %11 = icmp eq %struct.bz_stream* %10, null
  br i1 %11, label %24, label %12

; <label>:12                                      ; preds = %9
  %13 = load i32* %3, align 4
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %24, label %15

; <label>:15                                      ; preds = %12
  %16 = load i32* %3, align 4
  %17 = icmp sgt i32 %16, 9
  br i1 %17, label %24, label %18

; <label>:18                                      ; preds = %15
  %19 = load i32* %5, align 4
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %24, label %21

; <label>:21                                      ; preds = %18
  %22 = load i32* %5, align 4
  %23 = icmp sgt i32 %22, 250
  br i1 %23, label %24, label %25

; <label>:24                                      ; preds = %21, %18, %15, %12, %9
  store i32 -2, i32* %1
  br label %239

; <label>:25                                      ; preds = %21
  %26 = load i32* %5, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

; <label>:28                                      ; preds = %25
  store i32 30, i32* %5, align 4
  br label %29

; <label>:29                                      ; preds = %28, %25
  %30 = load %struct.bz_stream** %2, align 8
  %31 = getelementptr inbounds %struct.bz_stream* %30, i32 0, i32 9
  %32 = load i8* (i8*, i32, i32)** %31, align 8
  %33 = icmp eq i8* (i8*, i32, i32)* %32, null
  br i1 %33, label %34, label %37

; <label>:34                                      ; preds = %29
  %35 = load %struct.bz_stream** %2, align 8
  %36 = getelementptr inbounds %struct.bz_stream* %35, i32 0, i32 9
  store i8* (i8*, i32, i32)* @default_bzalloc, i8* (i8*, i32, i32)** %36, align 8
  br label %37

; <label>:37                                      ; preds = %34, %29
  %38 = load %struct.bz_stream** %2, align 8
  %39 = getelementptr inbounds %struct.bz_stream* %38, i32 0, i32 10
  %40 = load void (i8*, i8*)** %39, align 8
  %41 = icmp eq void (i8*, i8*)* %40, null
  br i1 %41, label %42, label %45

; <label>:42                                      ; preds = %37
  %43 = load %struct.bz_stream** %2, align 8
  %44 = getelementptr inbounds %struct.bz_stream* %43, i32 0, i32 10
  store void (i8*, i8*)* @default_bzfree, void (i8*, i8*)** %44, align 8
  br label %45

; <label>:45                                      ; preds = %42, %37
  %46 = load %struct.bz_stream** %2, align 8
  %47 = getelementptr inbounds %struct.bz_stream* %46, i32 0, i32 9
  %48 = load i8* (i8*, i32, i32)** %47, align 8
  %49 = load %struct.bz_stream** %2, align 8
  %50 = getelementptr inbounds %struct.bz_stream* %49, i32 0, i32 11
  %51 = load i8** %50, align 8
  %52 = call i8* %48(i8* %51, i32 55768, i32 1)
  %53 = bitcast i8* %52 to %struct.EState*
  store %struct.EState* %53, %struct.EState** %s, align 8
  %54 = load %struct.EState** %s, align 8
  %55 = icmp eq %struct.EState* %54, null
  br i1 %55, label %56, label %57

; <label>:56                                      ; preds = %45
  store i32 -3, i32* %1
  br label %239

; <label>:57                                      ; preds = %45
  %58 = load %struct.bz_stream** %2, align 8
  %59 = load %struct.EState** %s, align 8
  %60 = getelementptr inbounds %struct.EState* %59, i32 0, i32 0
  store %struct.bz_stream* %58, %struct.bz_stream** %60, align 8
  %61 = load %struct.EState** %s, align 8
  %62 = getelementptr inbounds %struct.EState* %61, i32 0, i32 4
  store i32* null, i32** %62, align 8
  %63 = load %struct.EState** %s, align 8
  %64 = getelementptr inbounds %struct.EState* %63, i32 0, i32 5
  store i32* null, i32** %64, align 8
  %65 = load %struct.EState** %s, align 8
  %66 = getelementptr inbounds %struct.EState* %65, i32 0, i32 6
  store i32* null, i32** %66, align 8
  %67 = load i32* %3, align 4
  %68 = mul nsw i32 100000, %67
  store i32 %68, i32* %n, align 4
  %69 = load %struct.bz_stream** %2, align 8
  %70 = getelementptr inbounds %struct.bz_stream* %69, i32 0, i32 9
  %71 = load i8* (i8*, i32, i32)** %70, align 8
  %72 = load %struct.bz_stream** %2, align 8
  %73 = getelementptr inbounds %struct.bz_stream* %72, i32 0, i32 11
  %74 = load i8** %73, align 8
  %75 = load i32* %n, align 4
  %76 = sext i32 %75 to i64
  %77 = mul i64 %76, 4
  %78 = trunc i64 %77 to i32
  %79 = call i8* %71(i8* %74, i32 %78, i32 1)
  %80 = bitcast i8* %79 to i32*
  %81 = load %struct.EState** %s, align 8
  %82 = getelementptr inbounds %struct.EState* %81, i32 0, i32 4
  store i32* %80, i32** %82, align 8
  %83 = load %struct.bz_stream** %2, align 8
  %84 = getelementptr inbounds %struct.bz_stream* %83, i32 0, i32 9
  %85 = load i8* (i8*, i32, i32)** %84, align 8
  %86 = load %struct.bz_stream** %2, align 8
  %87 = getelementptr inbounds %struct.bz_stream* %86, i32 0, i32 11
  %88 = load i8** %87, align 8
  %89 = load i32* %n, align 4
  %90 = add nsw i32 %89, 34
  %91 = sext i32 %90 to i64
  %92 = mul i64 %91, 4
  %93 = trunc i64 %92 to i32
  %94 = call i8* %85(i8* %88, i32 %93, i32 1)
  %95 = bitcast i8* %94 to i32*
  %96 = load %struct.EState** %s, align 8
  %97 = getelementptr inbounds %struct.EState* %96, i32 0, i32 5
  store i32* %95, i32** %97, align 8
  %98 = load %struct.bz_stream** %2, align 8
  %99 = getelementptr inbounds %struct.bz_stream* %98, i32 0, i32 9
  %100 = load i8* (i8*, i32, i32)** %99, align 8
  %101 = load %struct.bz_stream** %2, align 8
  %102 = getelementptr inbounds %struct.bz_stream* %101, i32 0, i32 11
  %103 = load i8** %102, align 8
  %104 = call i8* %100(i8* %103, i32 262148, i32 1)
  %105 = bitcast i8* %104 to i32*
  %106 = load %struct.EState** %s, align 8
  %107 = getelementptr inbounds %struct.EState* %106, i32 0, i32 6
  store i32* %105, i32** %107, align 8
  %108 = load %struct.EState** %s, align 8
  %109 = getelementptr inbounds %struct.EState* %108, i32 0, i32 4
  %110 = load i32** %109, align 8
  %111 = icmp eq i32* %110, null
  br i1 %111, label %122, label %112

; <label>:112                                     ; preds = %57
  %113 = load %struct.EState** %s, align 8
  %114 = getelementptr inbounds %struct.EState* %113, i32 0, i32 5
  %115 = load i32** %114, align 8
  %116 = icmp eq i32* %115, null
  br i1 %116, label %122, label %117

; <label>:117                                     ; preds = %112
  %118 = load %struct.EState** %s, align 8
  %119 = getelementptr inbounds %struct.EState* %118, i32 0, i32 6
  %120 = load i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %122, label %183

; <label>:122                                     ; preds = %117, %112, %57
  %123 = load %struct.EState** %s, align 8
  %124 = getelementptr inbounds %struct.EState* %123, i32 0, i32 4
  %125 = load i32** %124, align 8
  %126 = icmp ne i32* %125, null
  br i1 %126, label %127, label %138

; <label>:127                                     ; preds = %122
  %128 = load %struct.bz_stream** %2, align 8
  %129 = getelementptr inbounds %struct.bz_stream* %128, i32 0, i32 10
  %130 = load void (i8*, i8*)** %129, align 8
  %131 = load %struct.bz_stream** %2, align 8
  %132 = getelementptr inbounds %struct.bz_stream* %131, i32 0, i32 11
  %133 = load i8** %132, align 8
  %134 = load %struct.EState** %s, align 8
  %135 = getelementptr inbounds %struct.EState* %134, i32 0, i32 4
  %136 = load i32** %135, align 8
  %137 = bitcast i32* %136 to i8*
  call void %130(i8* %133, i8* %137)
  br label %138

; <label>:138                                     ; preds = %127, %122
  %139 = load %struct.EState** %s, align 8
  %140 = getelementptr inbounds %struct.EState* %139, i32 0, i32 5
  %141 = load i32** %140, align 8
  %142 = icmp ne i32* %141, null
  br i1 %142, label %143, label %154

; <label>:143                                     ; preds = %138
  %144 = load %struct.bz_stream** %2, align 8
  %145 = getelementptr inbounds %struct.bz_stream* %144, i32 0, i32 10
  %146 = load void (i8*, i8*)** %145, align 8
  %147 = load %struct.bz_stream** %2, align 8
  %148 = getelementptr inbounds %struct.bz_stream* %147, i32 0, i32 11
  %149 = load i8** %148, align 8
  %150 = load %struct.EState** %s, align 8
  %151 = getelementptr inbounds %struct.EState* %150, i32 0, i32 5
  %152 = load i32** %151, align 8
  %153 = bitcast i32* %152 to i8*
  call void %146(i8* %149, i8* %153)
  br label %154

; <label>:154                                     ; preds = %143, %138
  %155 = load %struct.EState** %s, align 8
  %156 = getelementptr inbounds %struct.EState* %155, i32 0, i32 6
  %157 = load i32** %156, align 8
  %158 = icmp ne i32* %157, null
  br i1 %158, label %159, label %170

; <label>:159                                     ; preds = %154
  %160 = load %struct.bz_stream** %2, align 8
  %161 = getelementptr inbounds %struct.bz_stream* %160, i32 0, i32 10
  %162 = load void (i8*, i8*)** %161, align 8
  %163 = load %struct.bz_stream** %2, align 8
  %164 = getelementptr inbounds %struct.bz_stream* %163, i32 0, i32 11
  %165 = load i8** %164, align 8
  %166 = load %struct.EState** %s, align 8
  %167 = getelementptr inbounds %struct.EState* %166, i32 0, i32 6
  %168 = load i32** %167, align 8
  %169 = bitcast i32* %168 to i8*
  call void %162(i8* %165, i8* %169)
  br label %170

; <label>:170                                     ; preds = %159, %154
  %171 = load %struct.EState** %s, align 8
  %172 = icmp ne %struct.EState* %171, null
  br i1 %172, label %173, label %182

; <label>:173                                     ; preds = %170
  %174 = load %struct.bz_stream** %2, align 8
  %175 = getelementptr inbounds %struct.bz_stream* %174, i32 0, i32 10
  %176 = load void (i8*, i8*)** %175, align 8
  %177 = load %struct.bz_stream** %2, align 8
  %178 = getelementptr inbounds %struct.bz_stream* %177, i32 0, i32 11
  %179 = load i8** %178, align 8
  %180 = load %struct.EState** %s, align 8
  %181 = bitcast %struct.EState* %180 to i8*
  call void %176(i8* %179, i8* %181)
  br label %182

; <label>:182                                     ; preds = %173, %170
  store i32 -3, i32* %1
  br label %239

; <label>:183                                     ; preds = %117
  %184 = load %struct.EState** %s, align 8
  %185 = getelementptr inbounds %struct.EState* %184, i32 0, i32 29
  store i32 0, i32* %185, align 4
  %186 = load %struct.EState** %s, align 8
  %187 = getelementptr inbounds %struct.EState* %186, i32 0, i32 2
  store i32 2, i32* %187, align 4
  %188 = load %struct.EState** %s, align 8
  %189 = getelementptr inbounds %struct.EState* %188, i32 0, i32 1
  store i32 2, i32* %189, align 4
  %190 = load %struct.EState** %s, align 8
  %191 = getelementptr inbounds %struct.EState* %190, i32 0, i32 27
  store i32 0, i32* %191, align 4
  %192 = load i32* %3, align 4
  %193 = load %struct.EState** %s, align 8
  %194 = getelementptr inbounds %struct.EState* %193, i32 0, i32 30
  store i32 %192, i32* %194, align 4
  %195 = load i32* %3, align 4
  %196 = mul nsw i32 100000, %195
  %197 = sub nsw i32 %196, 19
  %198 = load %struct.EState** %s, align 8
  %199 = getelementptr inbounds %struct.EState* %198, i32 0, i32 18
  store i32 %197, i32* %199, align 4
  %200 = load i32* %4, align 4
  %201 = load %struct.EState** %s, align 8
  %202 = getelementptr inbounds %struct.EState* %201, i32 0, i32 28
  store i32 %200, i32* %202, align 4
  %203 = load i32* %5, align 4
  %204 = load %struct.EState** %s, align 8
  %205 = getelementptr inbounds %struct.EState* %204, i32 0, i32 12
  store i32 %203, i32* %205, align 4
  %206 = load %struct.EState** %s, align 8
  %207 = getelementptr inbounds %struct.EState* %206, i32 0, i32 5
  %208 = load i32** %207, align 8
  %209 = bitcast i32* %208 to i8*
  %210 = load %struct.EState** %s, align 8
  %211 = getelementptr inbounds %struct.EState* %210, i32 0, i32 9
  store i8* %209, i8** %211, align 8
  %212 = load %struct.EState** %s, align 8
  %213 = getelementptr inbounds %struct.EState* %212, i32 0, i32 4
  %214 = load i32** %213, align 8
  %215 = bitcast i32* %214 to i16*
  %216 = load %struct.EState** %s, align 8
  %217 = getelementptr inbounds %struct.EState* %216, i32 0, i32 10
  store i16* %215, i16** %217, align 8
  %218 = load %struct.EState** %s, align 8
  %219 = getelementptr inbounds %struct.EState* %218, i32 0, i32 11
  store i8* null, i8** %219, align 8
  %220 = load %struct.EState** %s, align 8
  %221 = getelementptr inbounds %struct.EState* %220, i32 0, i32 4
  %222 = load i32** %221, align 8
  %223 = load %struct.EState** %s, align 8
  %224 = getelementptr inbounds %struct.EState* %223, i32 0, i32 8
  store i32* %222, i32** %224, align 8
  %225 = load %struct.EState** %s, align 8
  %226 = bitcast %struct.EState* %225 to i8*
  %227 = load %struct.bz_stream** %2, align 8
  %228 = getelementptr inbounds %struct.bz_stream* %227, i32 0, i32 8
  store i8* %226, i8** %228, align 8
  %229 = load %struct.bz_stream** %2, align 8
  %230 = getelementptr inbounds %struct.bz_stream* %229, i32 0, i32 2
  store i32 0, i32* %230, align 4
  %231 = load %struct.bz_stream** %2, align 8
  %232 = getelementptr inbounds %struct.bz_stream* %231, i32 0, i32 3
  store i32 0, i32* %232, align 4
  %233 = load %struct.bz_stream** %2, align 8
  %234 = getelementptr inbounds %struct.bz_stream* %233, i32 0, i32 6
  store i32 0, i32* %234, align 4
  %235 = load %struct.bz_stream** %2, align 8
  %236 = getelementptr inbounds %struct.bz_stream* %235, i32 0, i32 7
  store i32 0, i32* %236, align 4
  %237 = load %struct.EState** %s, align 8
  call void @init_RL(%struct.EState* %237)
  %238 = load %struct.EState** %s, align 8
  call void @prepare_new_block(%struct.EState* %238)
  store i32 0, i32* %1
  br label %239

; <label>:239                                     ; preds = %183, %182, %56, %24, %8
  %240 = load i32* %1
  ret i32 %240
}

; Function Attrs: nounwind uwtable
define internal i32 @bz_config_ok() #0 {
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal i8* @default_bzalloc(i8* %opaque, i32 %items, i32 %size) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %v = alloca i8*, align 8
  store i8* %opaque, i8** %1, align 8
  store i32 %items, i32* %2, align 4
  store i32 %size, i32* %3, align 4
  %4 = load i32* %2, align 4
  %5 = load i32* %3, align 4
  %6 = mul nsw i32 %4, %5
  %7 = sext i32 %6 to i64
  %8 = call noalias i8* @malloc(i64 %7) #8
  store i8* %8, i8** %v, align 8
  %9 = load i8** %v, align 8
  ret i8* %9
}

; Function Attrs: nounwind uwtable
define internal void @default_bzfree(i8* %opaque, i8* %addr) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  store i8* %opaque, i8** %1, align 8
  store i8* %addr, i8** %2, align 8
  %3 = load i8** %2, align 8
  %4 = icmp ne i8* %3, null
  br i1 %4, label %5, label %7

; <label>:5                                       ; preds = %0
  %6 = load i8** %2, align 8
  call void @free(i8* %6) #8
  br label %7

; <label>:7                                       ; preds = %5, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @init_RL(%struct.EState* %s) #0 {
  %1 = alloca %struct.EState*, align 8
  store %struct.EState* %s, %struct.EState** %1, align 8
  %2 = load %struct.EState** %1, align 8
  %3 = getelementptr inbounds %struct.EState* %2, i32 0, i32 13
  store i32 256, i32* %3, align 4
  %4 = load %struct.EState** %1, align 8
  %5 = getelementptr inbounds %struct.EState* %4, i32 0, i32 14
  store i32 0, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @prepare_new_block(%struct.EState* %s) #0 {
  %1 = alloca %struct.EState*, align 8
  %i = alloca i32, align 4
  store %struct.EState* %s, %struct.EState** %1, align 8
  %2 = load %struct.EState** %1, align 8
  %3 = getelementptr inbounds %struct.EState* %2, i32 0, i32 17
  store i32 0, i32* %3, align 4
  %4 = load %struct.EState** %1, align 8
  %5 = getelementptr inbounds %struct.EState* %4, i32 0, i32 19
  store i32 0, i32* %5, align 4
  %6 = load %struct.EState** %1, align 8
  %7 = getelementptr inbounds %struct.EState* %6, i32 0, i32 20
  store i32 0, i32* %7, align 4
  %8 = load %struct.EState** %1, align 8
  %9 = getelementptr inbounds %struct.EState* %8, i32 0, i32 26
  store i32 -1, i32* %9, align 4
  store i32 0, i32* %i, align 4
  br label %10

; <label>:10                                      ; preds = %19, %0
  %11 = load i32* %i, align 4
  %12 = icmp slt i32 %11, 256
  br i1 %12, label %13, label %22

; <label>:13                                      ; preds = %10
  %14 = load i32* %i, align 4
  %15 = sext i32 %14 to i64
  %16 = load %struct.EState** %1, align 8
  %17 = getelementptr inbounds %struct.EState* %16, i32 0, i32 22
  %18 = getelementptr inbounds [256 x i8]* %17, i32 0, i64 %15
  store i8 0, i8* %18, align 1
  br label %19

; <label>:19                                      ; preds = %13
  %20 = load i32* %i, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %i, align 4
  br label %10

; <label>:22                                      ; preds = %10
  %23 = load %struct.EState** %1, align 8
  %24 = getelementptr inbounds %struct.EState* %23, i32 0, i32 29
  %25 = load i32* %24, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %24, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_bzCompress(%struct.bz_stream* %strm, i32 %action) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.bz_stream*, align 8
  %3 = alloca i32, align 4
  %progress = alloca i8, align 1
  %s = alloca %struct.EState*, align 8
  store %struct.bz_stream* %strm, %struct.bz_stream** %2, align 8
  store i32 %action, i32* %3, align 4
  %4 = load %struct.bz_stream** %2, align 8
  %5 = icmp eq %struct.bz_stream* %4, null
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  store i32 -2, i32* %1
  br label %142

; <label>:7                                       ; preds = %0
  %8 = load %struct.bz_stream** %2, align 8
  %9 = getelementptr inbounds %struct.bz_stream* %8, i32 0, i32 8
  %10 = load i8** %9, align 8
  %11 = bitcast i8* %10 to %struct.EState*
  store %struct.EState* %11, %struct.EState** %s, align 8
  %12 = load %struct.EState** %s, align 8
  %13 = icmp eq %struct.EState* %12, null
  br i1 %13, label %14, label %15

; <label>:14                                      ; preds = %7
  store i32 -2, i32* %1
  br label %142

; <label>:15                                      ; preds = %7
  %16 = load %struct.EState** %s, align 8
  %17 = getelementptr inbounds %struct.EState* %16, i32 0, i32 0
  %18 = load %struct.bz_stream** %17, align 8
  %19 = load %struct.bz_stream** %2, align 8
  %20 = icmp ne %struct.bz_stream* %18, %19
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %15
  store i32 -2, i32* %1
  br label %142

; <label>:22                                      ; preds = %15
  br label %23

; <label>:23                                      ; preds = %52, %41, %22
  %24 = load %struct.EState** %s, align 8
  %25 = getelementptr inbounds %struct.EState* %24, i32 0, i32 1
  %26 = load i32* %25, align 4
  switch i32 %26, label %141 [
    i32 1, label %27
    i32 2, label %28
    i32 3, label %61
    i32 4, label %99
  ]

; <label>:27                                      ; preds = %23
  store i32 -1, i32* %1
  br label %142

; <label>:28                                      ; preds = %23
  %29 = load i32* %3, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %38

; <label>:31                                      ; preds = %28
  %32 = load %struct.bz_stream** %2, align 8
  %33 = call zeroext i8 @handle_compress(%struct.bz_stream* %32)
  store i8 %33, i8* %progress, align 1
  %34 = load i8* %progress, align 1
  %35 = zext i8 %34 to i32
  %36 = icmp ne i32 %35, 0
  %37 = select i1 %36, i32 1, i32 -2
  store i32 %37, i32* %1
  br label %142

; <label>:38                                      ; preds = %28
  %39 = load i32* %3, align 4
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %49

; <label>:41                                      ; preds = %38
  %42 = load %struct.bz_stream** %2, align 8
  %43 = getelementptr inbounds %struct.bz_stream* %42, i32 0, i32 1
  %44 = load i32* %43, align 4
  %45 = load %struct.EState** %s, align 8
  %46 = getelementptr inbounds %struct.EState* %45, i32 0, i32 3
  store i32 %44, i32* %46, align 4
  %47 = load %struct.EState** %s, align 8
  %48 = getelementptr inbounds %struct.EState* %47, i32 0, i32 1
  store i32 3, i32* %48, align 4
  br label %23

; <label>:49                                      ; preds = %38
  %50 = load i32* %3, align 4
  %51 = icmp eq i32 %50, 2
  br i1 %51, label %52, label %60

; <label>:52                                      ; preds = %49
  %53 = load %struct.bz_stream** %2, align 8
  %54 = getelementptr inbounds %struct.bz_stream* %53, i32 0, i32 1
  %55 = load i32* %54, align 4
  %56 = load %struct.EState** %s, align 8
  %57 = getelementptr inbounds %struct.EState* %56, i32 0, i32 3
  store i32 %55, i32* %57, align 4
  %58 = load %struct.EState** %s, align 8
  %59 = getelementptr inbounds %struct.EState* %58, i32 0, i32 1
  store i32 4, i32* %59, align 4
  br label %23

; <label>:60                                      ; preds = %49
  store i32 -2, i32* %1
  br label %142

; <label>:61                                      ; preds = %23
  %62 = load i32* %3, align 4
  %63 = icmp ne i32 %62, 1
  br i1 %63, label %64, label %65

; <label>:64                                      ; preds = %61
  store i32 -1, i32* %1
  br label %142

; <label>:65                                      ; preds = %61
  %66 = load %struct.EState** %s, align 8
  %67 = getelementptr inbounds %struct.EState* %66, i32 0, i32 3
  %68 = load i32* %67, align 4
  %69 = load %struct.EState** %s, align 8
  %70 = getelementptr inbounds %struct.EState* %69, i32 0, i32 0
  %71 = load %struct.bz_stream** %70, align 8
  %72 = getelementptr inbounds %struct.bz_stream* %71, i32 0, i32 1
  %73 = load i32* %72, align 4
  %74 = icmp ne i32 %68, %73
  br i1 %74, label %75, label %76

; <label>:75                                      ; preds = %65
  store i32 -1, i32* %1
  br label %142

; <label>:76                                      ; preds = %65
  %77 = load %struct.bz_stream** %2, align 8
  %78 = call zeroext i8 @handle_compress(%struct.bz_stream* %77)
  store i8 %78, i8* %progress, align 1
  %79 = load %struct.EState** %s, align 8
  %80 = getelementptr inbounds %struct.EState* %79, i32 0, i32 3
  %81 = load i32* %80, align 4
  %82 = icmp ugt i32 %81, 0
  br i1 %82, label %95, label %83

; <label>:83                                      ; preds = %76
  %84 = load %struct.EState** %s, align 8
  %85 = call zeroext i8 @isempty_RL(%struct.EState* %84)
  %86 = icmp ne i8 %85, 0
  br i1 %86, label %87, label %95

; <label>:87                                      ; preds = %83
  %88 = load %struct.EState** %s, align 8
  %89 = getelementptr inbounds %struct.EState* %88, i32 0, i32 20
  %90 = load i32* %89, align 4
  %91 = load %struct.EState** %s, align 8
  %92 = getelementptr inbounds %struct.EState* %91, i32 0, i32 19
  %93 = load i32* %92, align 4
  %94 = icmp slt i32 %90, %93
  br i1 %94, label %95, label %96

; <label>:95                                      ; preds = %87, %83, %76
  store i32 2, i32* %1
  br label %142

; <label>:96                                      ; preds = %87
  %97 = load %struct.EState** %s, align 8
  %98 = getelementptr inbounds %struct.EState* %97, i32 0, i32 1
  store i32 2, i32* %98, align 4
  store i32 1, i32* %1
  br label %142

; <label>:99                                      ; preds = %23
  %100 = load i32* %3, align 4
  %101 = icmp ne i32 %100, 2
  br i1 %101, label %102, label %103

; <label>:102                                     ; preds = %99
  store i32 -1, i32* %1
  br label %142

; <label>:103                                     ; preds = %99
  %104 = load %struct.EState** %s, align 8
  %105 = getelementptr inbounds %struct.EState* %104, i32 0, i32 3
  %106 = load i32* %105, align 4
  %107 = load %struct.EState** %s, align 8
  %108 = getelementptr inbounds %struct.EState* %107, i32 0, i32 0
  %109 = load %struct.bz_stream** %108, align 8
  %110 = getelementptr inbounds %struct.bz_stream* %109, i32 0, i32 1
  %111 = load i32* %110, align 4
  %112 = icmp ne i32 %106, %111
  br i1 %112, label %113, label %114

; <label>:113                                     ; preds = %103
  store i32 -1, i32* %1
  br label %142

; <label>:114                                     ; preds = %103
  %115 = load %struct.bz_stream** %2, align 8
  %116 = call zeroext i8 @handle_compress(%struct.bz_stream* %115)
  store i8 %116, i8* %progress, align 1
  %117 = load i8* %progress, align 1
  %118 = icmp ne i8 %117, 0
  br i1 %118, label %120, label %119

; <label>:119                                     ; preds = %114
  store i32 -1, i32* %1
  br label %142

; <label>:120                                     ; preds = %114
  %121 = load %struct.EState** %s, align 8
  %122 = getelementptr inbounds %struct.EState* %121, i32 0, i32 3
  %123 = load i32* %122, align 4
  %124 = icmp ugt i32 %123, 0
  br i1 %124, label %137, label %125

; <label>:125                                     ; preds = %120
  %126 = load %struct.EState** %s, align 8
  %127 = call zeroext i8 @isempty_RL(%struct.EState* %126)
  %128 = icmp ne i8 %127, 0
  br i1 %128, label %129, label %137

; <label>:129                                     ; preds = %125
  %130 = load %struct.EState** %s, align 8
  %131 = getelementptr inbounds %struct.EState* %130, i32 0, i32 20
  %132 = load i32* %131, align 4
  %133 = load %struct.EState** %s, align 8
  %134 = getelementptr inbounds %struct.EState* %133, i32 0, i32 19
  %135 = load i32* %134, align 4
  %136 = icmp slt i32 %132, %135
  br i1 %136, label %137, label %138

; <label>:137                                     ; preds = %129, %125, %120
  store i32 3, i32* %1
  br label %142

; <label>:138                                     ; preds = %129
  %139 = load %struct.EState** %s, align 8
  %140 = getelementptr inbounds %struct.EState* %139, i32 0, i32 1
  store i32 1, i32* %140, align 4
  store i32 4, i32* %1
  br label %142

; <label>:141                                     ; preds = %23
  store i32 0, i32* %1
  br label %142

; <label>:142                                     ; preds = %141, %138, %137, %119, %113, %102, %96, %95, %75, %64, %60, %31, %27, %21, %14, %6
  %143 = load i32* %1
  ret i32 %143
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @handle_compress(%struct.bz_stream* %strm) #0 {
  %1 = alloca %struct.bz_stream*, align 8
  %progress_in = alloca i8, align 1
  %progress_out = alloca i8, align 1
  %s = alloca %struct.EState*, align 8
  store %struct.bz_stream* %strm, %struct.bz_stream** %1, align 8
  store i8 0, i8* %progress_in, align 1
  store i8 0, i8* %progress_out, align 1
  %2 = load %struct.bz_stream** %1, align 8
  %3 = getelementptr inbounds %struct.bz_stream* %2, i32 0, i32 8
  %4 = load i8** %3, align 8
  %5 = bitcast i8* %4 to %struct.EState*
  store %struct.EState* %5, %struct.EState** %s, align 8
  br label %6

; <label>:6                                       ; preds = %0, %119
  %7 = load %struct.EState** %s, align 8
  %8 = getelementptr inbounds %struct.EState* %7, i32 0, i32 2
  %9 = load i32* %8, align 4
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %63

; <label>:11                                      ; preds = %6
  %12 = load %struct.EState** %s, align 8
  %13 = call zeroext i8 @copy_output_until_stop(%struct.EState* %12)
  %14 = zext i8 %13 to i32
  %15 = load i8* %progress_out, align 1
  %16 = zext i8 %15 to i32
  %17 = or i32 %16, %14
  %18 = trunc i32 %17 to i8
  store i8 %18, i8* %progress_out, align 1
  %19 = load %struct.EState** %s, align 8
  %20 = getelementptr inbounds %struct.EState* %19, i32 0, i32 20
  %21 = load i32* %20, align 4
  %22 = load %struct.EState** %s, align 8
  %23 = getelementptr inbounds %struct.EState* %22, i32 0, i32 19
  %24 = load i32* %23, align 4
  %25 = icmp slt i32 %21, %24
  br i1 %25, label %26, label %27

; <label>:26                                      ; preds = %11
  br label %120

; <label>:27                                      ; preds = %11
  %28 = load %struct.EState** %s, align 8
  %29 = getelementptr inbounds %struct.EState* %28, i32 0, i32 1
  %30 = load i32* %29, align 4
  %31 = icmp eq i32 %30, 4
  br i1 %31, label %32, label %43

; <label>:32                                      ; preds = %27
  %33 = load %struct.EState** %s, align 8
  %34 = getelementptr inbounds %struct.EState* %33, i32 0, i32 3
  %35 = load i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %43

; <label>:37                                      ; preds = %32
  %38 = load %struct.EState** %s, align 8
  %39 = call zeroext i8 @isempty_RL(%struct.EState* %38)
  %40 = zext i8 %39 to i32
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %43

; <label>:42                                      ; preds = %37
  br label %120

; <label>:43                                      ; preds = %37, %32, %27
  %44 = load %struct.EState** %s, align 8
  call void @prepare_new_block(%struct.EState* %44)
  %45 = load %struct.EState** %s, align 8
  %46 = getelementptr inbounds %struct.EState* %45, i32 0, i32 2
  store i32 2, i32* %46, align 4
  %47 = load %struct.EState** %s, align 8
  %48 = getelementptr inbounds %struct.EState* %47, i32 0, i32 1
  %49 = load i32* %48, align 4
  %50 = icmp eq i32 %49, 3
  br i1 %50, label %51, label %62

; <label>:51                                      ; preds = %43
  %52 = load %struct.EState** %s, align 8
  %53 = getelementptr inbounds %struct.EState* %52, i32 0, i32 3
  %54 = load i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %62

; <label>:56                                      ; preds = %51
  %57 = load %struct.EState** %s, align 8
  %58 = call zeroext i8 @isempty_RL(%struct.EState* %57)
  %59 = zext i8 %58 to i32
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %61, label %62

; <label>:61                                      ; preds = %56
  br label %120

; <label>:62                                      ; preds = %56, %51, %43
  br label %63

; <label>:63                                      ; preds = %62, %6
  %64 = load %struct.EState** %s, align 8
  %65 = getelementptr inbounds %struct.EState* %64, i32 0, i32 2
  %66 = load i32* %65, align 4
  %67 = icmp eq i32 %66, 2
  br i1 %67, label %68, label %119

; <label>:68                                      ; preds = %63
  %69 = load %struct.EState** %s, align 8
  %70 = call zeroext i8 @copy_input_until_stop(%struct.EState* %69)
  %71 = zext i8 %70 to i32
  %72 = load i8* %progress_in, align 1
  %73 = zext i8 %72 to i32
  %74 = or i32 %73, %71
  %75 = trunc i32 %74 to i8
  store i8 %75, i8* %progress_in, align 1
  %76 = load %struct.EState** %s, align 8
  %77 = getelementptr inbounds %struct.EState* %76, i32 0, i32 1
  %78 = load i32* %77, align 4
  %79 = icmp ne i32 %78, 2
  br i1 %79, label %80, label %96

; <label>:80                                      ; preds = %68
  %81 = load %struct.EState** %s, align 8
  %82 = getelementptr inbounds %struct.EState* %81, i32 0, i32 3
  %83 = load i32* %82, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %96

; <label>:85                                      ; preds = %80
  %86 = load %struct.EState** %s, align 8
  call void @flush_RL(%struct.EState* %86)
  %87 = load %struct.EState** %s, align 8
  %88 = load %struct.EState** %s, align 8
  %89 = getelementptr inbounds %struct.EState* %88, i32 0, i32 1
  %90 = load i32* %89, align 4
  %91 = icmp eq i32 %90, 4
  %92 = zext i1 %91 to i32
  %93 = trunc i32 %92 to i8
  call void @BZ2_compressBlock(%struct.EState* %87, i8 zeroext %93)
  %94 = load %struct.EState** %s, align 8
  %95 = getelementptr inbounds %struct.EState* %94, i32 0, i32 2
  store i32 1, i32* %95, align 4
  br label %118

; <label>:96                                      ; preds = %80, %68
  %97 = load %struct.EState** %s, align 8
  %98 = getelementptr inbounds %struct.EState* %97, i32 0, i32 17
  %99 = load i32* %98, align 4
  %100 = load %struct.EState** %s, align 8
  %101 = getelementptr inbounds %struct.EState* %100, i32 0, i32 18
  %102 = load i32* %101, align 4
  %103 = icmp sge i32 %99, %102
  br i1 %103, label %104, label %108

; <label>:104                                     ; preds = %96
  %105 = load %struct.EState** %s, align 8
  call void @BZ2_compressBlock(%struct.EState* %105, i8 zeroext 0)
  %106 = load %struct.EState** %s, align 8
  %107 = getelementptr inbounds %struct.EState* %106, i32 0, i32 2
  store i32 1, i32* %107, align 4
  br label %117

; <label>:108                                     ; preds = %96
  %109 = load %struct.EState** %s, align 8
  %110 = getelementptr inbounds %struct.EState* %109, i32 0, i32 0
  %111 = load %struct.bz_stream** %110, align 8
  %112 = getelementptr inbounds %struct.bz_stream* %111, i32 0, i32 1
  %113 = load i32* %112, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

; <label>:115                                     ; preds = %108
  br label %120

; <label>:116                                     ; preds = %108
  br label %117

; <label>:117                                     ; preds = %116, %104
  br label %118

; <label>:118                                     ; preds = %117, %85
  br label %119

; <label>:119                                     ; preds = %118, %63
  br label %6

; <label>:120                                     ; preds = %115, %61, %42, %26
  %121 = load i8* %progress_in, align 1
  %122 = zext i8 %121 to i32
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %128, label %124

; <label>:124                                     ; preds = %120
  %125 = load i8* %progress_out, align 1
  %126 = zext i8 %125 to i32
  %127 = icmp ne i32 %126, 0
  br label %128

; <label>:128                                     ; preds = %124, %120
  %129 = phi i1 [ true, %120 ], [ %127, %124 ]
  %130 = zext i1 %129 to i32
  %131 = trunc i32 %130 to i8
  ret i8 %131
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @isempty_RL(%struct.EState* %s) #0 {
  %1 = alloca i8, align 1
  %2 = alloca %struct.EState*, align 8
  store %struct.EState* %s, %struct.EState** %2, align 8
  %3 = load %struct.EState** %2, align 8
  %4 = getelementptr inbounds %struct.EState* %3, i32 0, i32 13
  %5 = load i32* %4, align 4
  %6 = icmp ult i32 %5, 256
  br i1 %6, label %7, label %13

; <label>:7                                       ; preds = %0
  %8 = load %struct.EState** %2, align 8
  %9 = getelementptr inbounds %struct.EState* %8, i32 0, i32 14
  %10 = load i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %7
  store i8 0, i8* %1
  br label %14

; <label>:13                                      ; preds = %7, %0
  store i8 1, i8* %1
  br label %14

; <label>:14                                      ; preds = %13, %12
  %15 = load i8* %1
  ret i8 %15
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_bzCompressEnd(%struct.bz_stream* %strm) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.bz_stream*, align 8
  %s = alloca %struct.EState*, align 8
  store %struct.bz_stream* %strm, %struct.bz_stream** %2, align 8
  %3 = load %struct.bz_stream** %2, align 8
  %4 = icmp eq %struct.bz_stream* %3, null
  br i1 %4, label %5, label %6

; <label>:5                                       ; preds = %0
  store i32 -2, i32* %1
  br label %81

; <label>:6                                       ; preds = %0
  %7 = load %struct.bz_stream** %2, align 8
  %8 = getelementptr inbounds %struct.bz_stream* %7, i32 0, i32 8
  %9 = load i8** %8, align 8
  %10 = bitcast i8* %9 to %struct.EState*
  store %struct.EState* %10, %struct.EState** %s, align 8
  %11 = load %struct.EState** %s, align 8
  %12 = icmp eq %struct.EState* %11, null
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %6
  store i32 -2, i32* %1
  br label %81

; <label>:14                                      ; preds = %6
  %15 = load %struct.EState** %s, align 8
  %16 = getelementptr inbounds %struct.EState* %15, i32 0, i32 0
  %17 = load %struct.bz_stream** %16, align 8
  %18 = load %struct.bz_stream** %2, align 8
  %19 = icmp ne %struct.bz_stream* %17, %18
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %14
  store i32 -2, i32* %1
  br label %81

; <label>:21                                      ; preds = %14
  %22 = load %struct.EState** %s, align 8
  %23 = getelementptr inbounds %struct.EState* %22, i32 0, i32 4
  %24 = load i32** %23, align 8
  %25 = icmp ne i32* %24, null
  br i1 %25, label %26, label %37

; <label>:26                                      ; preds = %21
  %27 = load %struct.bz_stream** %2, align 8
  %28 = getelementptr inbounds %struct.bz_stream* %27, i32 0, i32 10
  %29 = load void (i8*, i8*)** %28, align 8
  %30 = load %struct.bz_stream** %2, align 8
  %31 = getelementptr inbounds %struct.bz_stream* %30, i32 0, i32 11
  %32 = load i8** %31, align 8
  %33 = load %struct.EState** %s, align 8
  %34 = getelementptr inbounds %struct.EState* %33, i32 0, i32 4
  %35 = load i32** %34, align 8
  %36 = bitcast i32* %35 to i8*
  call void %29(i8* %32, i8* %36)
  br label %37

; <label>:37                                      ; preds = %26, %21
  %38 = load %struct.EState** %s, align 8
  %39 = getelementptr inbounds %struct.EState* %38, i32 0, i32 5
  %40 = load i32** %39, align 8
  %41 = icmp ne i32* %40, null
  br i1 %41, label %42, label %53

; <label>:42                                      ; preds = %37
  %43 = load %struct.bz_stream** %2, align 8
  %44 = getelementptr inbounds %struct.bz_stream* %43, i32 0, i32 10
  %45 = load void (i8*, i8*)** %44, align 8
  %46 = load %struct.bz_stream** %2, align 8
  %47 = getelementptr inbounds %struct.bz_stream* %46, i32 0, i32 11
  %48 = load i8** %47, align 8
  %49 = load %struct.EState** %s, align 8
  %50 = getelementptr inbounds %struct.EState* %49, i32 0, i32 5
  %51 = load i32** %50, align 8
  %52 = bitcast i32* %51 to i8*
  call void %45(i8* %48, i8* %52)
  br label %53

; <label>:53                                      ; preds = %42, %37
  %54 = load %struct.EState** %s, align 8
  %55 = getelementptr inbounds %struct.EState* %54, i32 0, i32 6
  %56 = load i32** %55, align 8
  %57 = icmp ne i32* %56, null
  br i1 %57, label %58, label %69

; <label>:58                                      ; preds = %53
  %59 = load %struct.bz_stream** %2, align 8
  %60 = getelementptr inbounds %struct.bz_stream* %59, i32 0, i32 10
  %61 = load void (i8*, i8*)** %60, align 8
  %62 = load %struct.bz_stream** %2, align 8
  %63 = getelementptr inbounds %struct.bz_stream* %62, i32 0, i32 11
  %64 = load i8** %63, align 8
  %65 = load %struct.EState** %s, align 8
  %66 = getelementptr inbounds %struct.EState* %65, i32 0, i32 6
  %67 = load i32** %66, align 8
  %68 = bitcast i32* %67 to i8*
  call void %61(i8* %64, i8* %68)
  br label %69

; <label>:69                                      ; preds = %58, %53
  %70 = load %struct.bz_stream** %2, align 8
  %71 = getelementptr inbounds %struct.bz_stream* %70, i32 0, i32 10
  %72 = load void (i8*, i8*)** %71, align 8
  %73 = load %struct.bz_stream** %2, align 8
  %74 = getelementptr inbounds %struct.bz_stream* %73, i32 0, i32 11
  %75 = load i8** %74, align 8
  %76 = load %struct.bz_stream** %2, align 8
  %77 = getelementptr inbounds %struct.bz_stream* %76, i32 0, i32 8
  %78 = load i8** %77, align 8
  call void %72(i8* %75, i8* %78)
  %79 = load %struct.bz_stream** %2, align 8
  %80 = getelementptr inbounds %struct.bz_stream* %79, i32 0, i32 8
  store i8* null, i8** %80, align 8
  store i32 0, i32* %1
  br label %81

; <label>:81                                      ; preds = %69, %20, %13, %5
  %82 = load i32* %1
  ret i32 %82
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_bzDecompressInit(%struct.bz_stream* %strm, i32 %verbosity, i32 %small) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.bz_stream*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %s = alloca %struct.DState*, align 8
  store %struct.bz_stream* %strm, %struct.bz_stream** %2, align 8
  store i32 %verbosity, i32* %3, align 4
  store i32 %small, i32* %4, align 4
  %5 = call i32 @bz_config_ok()
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %8, label %7

; <label>:7                                       ; preds = %0
  store i32 -9, i32* %1
  br label %93

; <label>:8                                       ; preds = %0
  %9 = load %struct.bz_stream** %2, align 8
  %10 = icmp eq %struct.bz_stream* %9, null
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %8
  store i32 -2, i32* %1
  br label %93

; <label>:12                                      ; preds = %8
  %13 = load i32* %4, align 4
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %19

; <label>:15                                      ; preds = %12
  %16 = load i32* %4, align 4
  %17 = icmp ne i32 %16, 1
  br i1 %17, label %18, label %19

; <label>:18                                      ; preds = %15
  store i32 -2, i32* %1
  br label %93

; <label>:19                                      ; preds = %15, %12
  %20 = load i32* %3, align 4
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %25, label %22

; <label>:22                                      ; preds = %19
  %23 = load i32* %3, align 4
  %24 = icmp sgt i32 %23, 4
  br i1 %24, label %25, label %26

; <label>:25                                      ; preds = %22, %19
  store i32 -2, i32* %1
  br label %93

; <label>:26                                      ; preds = %22
  %27 = load %struct.bz_stream** %2, align 8
  %28 = getelementptr inbounds %struct.bz_stream* %27, i32 0, i32 9
  %29 = load i8* (i8*, i32, i32)** %28, align 8
  %30 = icmp eq i8* (i8*, i32, i32)* %29, null
  br i1 %30, label %31, label %34

; <label>:31                                      ; preds = %26
  %32 = load %struct.bz_stream** %2, align 8
  %33 = getelementptr inbounds %struct.bz_stream* %32, i32 0, i32 9
  store i8* (i8*, i32, i32)* @default_bzalloc, i8* (i8*, i32, i32)** %33, align 8
  br label %34

; <label>:34                                      ; preds = %31, %26
  %35 = load %struct.bz_stream** %2, align 8
  %36 = getelementptr inbounds %struct.bz_stream* %35, i32 0, i32 10
  %37 = load void (i8*, i8*)** %36, align 8
  %38 = icmp eq void (i8*, i8*)* %37, null
  br i1 %38, label %39, label %42

; <label>:39                                      ; preds = %34
  %40 = load %struct.bz_stream** %2, align 8
  %41 = getelementptr inbounds %struct.bz_stream* %40, i32 0, i32 10
  store void (i8*, i8*)* @default_bzfree, void (i8*, i8*)** %41, align 8
  br label %42

; <label>:42                                      ; preds = %39, %34
  %43 = load %struct.bz_stream** %2, align 8
  %44 = getelementptr inbounds %struct.bz_stream* %43, i32 0, i32 9
  %45 = load i8* (i8*, i32, i32)** %44, align 8
  %46 = load %struct.bz_stream** %2, align 8
  %47 = getelementptr inbounds %struct.bz_stream* %46, i32 0, i32 11
  %48 = load i8** %47, align 8
  %49 = call i8* %45(i8* %48, i32 64144, i32 1)
  %50 = bitcast i8* %49 to %struct.DState*
  store %struct.DState* %50, %struct.DState** %s, align 8
  %51 = load %struct.DState** %s, align 8
  %52 = icmp eq %struct.DState* %51, null
  br i1 %52, label %53, label %54

; <label>:53                                      ; preds = %42
  store i32 -3, i32* %1
  br label %93

; <label>:54                                      ; preds = %42
  %55 = load %struct.bz_stream** %2, align 8
  %56 = load %struct.DState** %s, align 8
  %57 = getelementptr inbounds %struct.DState* %56, i32 0, i32 0
  store %struct.bz_stream* %55, %struct.bz_stream** %57, align 8
  %58 = load %struct.DState** %s, align 8
  %59 = bitcast %struct.DState* %58 to i8*
  %60 = load %struct.bz_stream** %2, align 8
  %61 = getelementptr inbounds %struct.bz_stream* %60, i32 0, i32 8
  store i8* %59, i8** %61, align 8
  %62 = load %struct.DState** %s, align 8
  %63 = getelementptr inbounds %struct.DState* %62, i32 0, i32 1
  store i32 10, i32* %63, align 4
  %64 = load %struct.DState** %s, align 8
  %65 = getelementptr inbounds %struct.DState* %64, i32 0, i32 8
  store i32 0, i32* %65, align 4
  %66 = load %struct.DState** %s, align 8
  %67 = getelementptr inbounds %struct.DState* %66, i32 0, i32 7
  store i32 0, i32* %67, align 4
  %68 = load %struct.DState** %s, align 8
  %69 = getelementptr inbounds %struct.DState* %68, i32 0, i32 26
  store i32 0, i32* %69, align 4
  %70 = load %struct.bz_stream** %2, align 8
  %71 = getelementptr inbounds %struct.bz_stream* %70, i32 0, i32 2
  store i32 0, i32* %71, align 4
  %72 = load %struct.bz_stream** %2, align 8
  %73 = getelementptr inbounds %struct.bz_stream* %72, i32 0, i32 3
  store i32 0, i32* %73, align 4
  %74 = load %struct.bz_stream** %2, align 8
  %75 = getelementptr inbounds %struct.bz_stream* %74, i32 0, i32 6
  store i32 0, i32* %75, align 4
  %76 = load %struct.bz_stream** %2, align 8
  %77 = getelementptr inbounds %struct.bz_stream* %76, i32 0, i32 7
  store i32 0, i32* %77, align 4
  %78 = load i32* %4, align 4
  %79 = trunc i32 %78 to i8
  %80 = load %struct.DState** %s, align 8
  %81 = getelementptr inbounds %struct.DState* %80, i32 0, i32 10
  store i8 %79, i8* %81, align 1
  %82 = load %struct.DState** %s, align 8
  %83 = getelementptr inbounds %struct.DState* %82, i32 0, i32 22
  store i8* null, i8** %83, align 8
  %84 = load %struct.DState** %s, align 8
  %85 = getelementptr inbounds %struct.DState* %84, i32 0, i32 21
  store i16* null, i16** %85, align 8
  %86 = load %struct.DState** %s, align 8
  %87 = getelementptr inbounds %struct.DState* %86, i32 0, i32 20
  store i32* null, i32** %87, align 8
  %88 = load %struct.DState** %s, align 8
  %89 = getelementptr inbounds %struct.DState* %88, i32 0, i32 11
  store i32 0, i32* %89, align 4
  %90 = load i32* %3, align 4
  %91 = load %struct.DState** %s, align 8
  %92 = getelementptr inbounds %struct.DState* %91, i32 0, i32 12
  store i32 %90, i32* %92, align 4
  store i32 0, i32* %1
  br label %93

; <label>:93                                      ; preds = %54, %53, %25, %18, %11, %7
  %94 = load i32* %1
  ret i32 %94
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_bzDecompress(%struct.bz_stream* %strm) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.bz_stream*, align 8
  %s = alloca %struct.DState*, align 8
  %r = alloca i32, align 4
  store %struct.bz_stream* %strm, %struct.bz_stream** %2, align 8
  %3 = load %struct.bz_stream** %2, align 8
  %4 = icmp eq %struct.bz_stream* %3, null
  br i1 %4, label %5, label %6

; <label>:5                                       ; preds = %0
  store i32 -2, i32* %1
  br label %160

; <label>:6                                       ; preds = %0
  %7 = load %struct.bz_stream** %2, align 8
  %8 = getelementptr inbounds %struct.bz_stream* %7, i32 0, i32 8
  %9 = load i8** %8, align 8
  %10 = bitcast i8* %9 to %struct.DState*
  store %struct.DState* %10, %struct.DState** %s, align 8
  %11 = load %struct.DState** %s, align 8
  %12 = icmp eq %struct.DState* %11, null
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %6
  store i32 -2, i32* %1
  br label %160

; <label>:14                                      ; preds = %6
  %15 = load %struct.DState** %s, align 8
  %16 = getelementptr inbounds %struct.DState* %15, i32 0, i32 0
  %17 = load %struct.bz_stream** %16, align 8
  %18 = load %struct.bz_stream** %2, align 8
  %19 = icmp ne %struct.bz_stream* %17, %18
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %14
  store i32 -2, i32* %1
  br label %160

; <label>:21                                      ; preds = %14
  br label %22

; <label>:22                                      ; preds = %21, %159
  %23 = load %struct.DState** %s, align 8
  %24 = getelementptr inbounds %struct.DState* %23, i32 0, i32 1
  %25 = load i32* %24, align 4
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %22
  store i32 -1, i32* %1
  br label %160

; <label>:28                                      ; preds = %22
  %29 = load %struct.DState** %s, align 8
  %30 = getelementptr inbounds %struct.DState* %29, i32 0, i32 1
  %31 = load i32* %30, align 4
  %32 = icmp eq i32 %31, 2
  br i1 %32, label %33, label %116

; <label>:33                                      ; preds = %28
  %34 = load %struct.DState** %s, align 8
  %35 = getelementptr inbounds %struct.DState* %34, i32 0, i32 10
  %36 = load i8* %35, align 1
  %37 = icmp ne i8 %36, 0
  br i1 %37, label %38, label %40

; <label>:38                                      ; preds = %33
  %39 = load %struct.DState** %s, align 8
  call void @unRLE_obuf_to_output_SMALL(%struct.DState* %39)
  br label %42

; <label>:40                                      ; preds = %33
  %41 = load %struct.DState** %s, align 8
  call void @unRLE_obuf_to_output_FAST(%struct.DState* %41)
  br label %42

; <label>:42                                      ; preds = %40, %38
  %43 = load %struct.DState** %s, align 8
  %44 = getelementptr inbounds %struct.DState* %43, i32 0, i32 17
  %45 = load i32* %44, align 4
  %46 = load %struct.DState** %s, align 8
  %47 = getelementptr inbounds %struct.DState* %46, i32 0, i32 51
  %48 = load i32* %47, align 4
  %49 = add nsw i32 %48, 1
  %50 = icmp eq i32 %45, %49
  br i1 %50, label %51, label %114

; <label>:51                                      ; preds = %42
  %52 = load %struct.DState** %s, align 8
  %53 = getelementptr inbounds %struct.DState* %52, i32 0, i32 3
  %54 = load i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %114

; <label>:56                                      ; preds = %51
  %57 = load %struct.DState** %s, align 8
  %58 = getelementptr inbounds %struct.DState* %57, i32 0, i32 25
  %59 = load i32* %58, align 4
  %60 = xor i32 %59, -1
  %61 = load %struct.DState** %s, align 8
  %62 = getelementptr inbounds %struct.DState* %61, i32 0, i32 25
  store i32 %60, i32* %62, align 4
  %63 = load %struct.DState** %s, align 8
  %64 = getelementptr inbounds %struct.DState* %63, i32 0, i32 12
  %65 = load i32* %64, align 4
  %66 = icmp sge i32 %65, 3
  br i1 %66, label %67, label %76

; <label>:67                                      ; preds = %56
  %68 = load %struct._IO_FILE** @stderr, align 8
  %69 = load %struct.DState** %s, align 8
  %70 = getelementptr inbounds %struct.DState* %69, i32 0, i32 23
  %71 = load i32* %70, align 4
  %72 = load %struct.DState** %s, align 8
  %73 = getelementptr inbounds %struct.DState* %72, i32 0, i32 25
  %74 = load i32* %73, align 4
  %75 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([14 x i8]* @.str8, i32 0, i32 0), i32 %71, i32 %74)
  br label %76

; <label>:76                                      ; preds = %67, %56
  %77 = load %struct.DState** %s, align 8
  %78 = getelementptr inbounds %struct.DState* %77, i32 0, i32 12
  %79 = load i32* %78, align 4
  %80 = icmp sge i32 %79, 2
  br i1 %80, label %81, label %84

; <label>:81                                      ; preds = %76
  %82 = load %struct._IO_FILE** @stderr, align 8
  %83 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %82, i8* getelementptr inbounds ([2 x i8]* @.str9, i32 0, i32 0))
  br label %84

; <label>:84                                      ; preds = %81, %76
  %85 = load %struct.DState** %s, align 8
  %86 = getelementptr inbounds %struct.DState* %85, i32 0, i32 25
  %87 = load i32* %86, align 4
  %88 = load %struct.DState** %s, align 8
  %89 = getelementptr inbounds %struct.DState* %88, i32 0, i32 23
  %90 = load i32* %89, align 4
  %91 = icmp ne i32 %87, %90
  br i1 %91, label %92, label %93

; <label>:92                                      ; preds = %84
  store i32 -4, i32* %1
  br label %160

; <label>:93                                      ; preds = %84
  %94 = load %struct.DState** %s, align 8
  %95 = getelementptr inbounds %struct.DState* %94, i32 0, i32 26
  %96 = load i32* %95, align 4
  %97 = shl i32 %96, 1
  %98 = load %struct.DState** %s, align 8
  %99 = getelementptr inbounds %struct.DState* %98, i32 0, i32 26
  %100 = load i32* %99, align 4
  %101 = lshr i32 %100, 31
  %102 = or i32 %97, %101
  %103 = load %struct.DState** %s, align 8
  %104 = getelementptr inbounds %struct.DState* %103, i32 0, i32 26
  store i32 %102, i32* %104, align 4
  %105 = load %struct.DState** %s, align 8
  %106 = getelementptr inbounds %struct.DState* %105, i32 0, i32 25
  %107 = load i32* %106, align 4
  %108 = load %struct.DState** %s, align 8
  %109 = getelementptr inbounds %struct.DState* %108, i32 0, i32 26
  %110 = load i32* %109, align 4
  %111 = xor i32 %110, %107
  store i32 %111, i32* %109, align 4
  %112 = load %struct.DState** %s, align 8
  %113 = getelementptr inbounds %struct.DState* %112, i32 0, i32 1
  store i32 14, i32* %113, align 4
  br label %115

; <label>:114                                     ; preds = %51, %42
  store i32 0, i32* %1
  br label %160

; <label>:115                                     ; preds = %93
  br label %116

; <label>:116                                     ; preds = %115, %28
  %117 = load %struct.DState** %s, align 8
  %118 = getelementptr inbounds %struct.DState* %117, i32 0, i32 1
  %119 = load i32* %118, align 4
  %120 = icmp sge i32 %119, 10
  br i1 %120, label %121, label %159

; <label>:121                                     ; preds = %116
  %122 = load %struct.DState** %s, align 8
  %123 = call i32 @BZ2_decompress(%struct.DState* %122)
  store i32 %123, i32* %r, align 4
  %124 = load i32* %r, align 4
  %125 = icmp eq i32 %124, 4
  br i1 %125, label %126, label %151

; <label>:126                                     ; preds = %121
  %127 = load %struct.DState** %s, align 8
  %128 = getelementptr inbounds %struct.DState* %127, i32 0, i32 12
  %129 = load i32* %128, align 4
  %130 = icmp sge i32 %129, 3
  br i1 %130, label %131, label %140

; <label>:131                                     ; preds = %126
  %132 = load %struct._IO_FILE** @stderr, align 8
  %133 = load %struct.DState** %s, align 8
  %134 = getelementptr inbounds %struct.DState* %133, i32 0, i32 24
  %135 = load i32* %134, align 4
  %136 = load %struct.DState** %s, align 8
  %137 = getelementptr inbounds %struct.DState* %136, i32 0, i32 26
  %138 = load i32* %137, align 4
  %139 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %132, i8* getelementptr inbounds ([51 x i8]* @.str10, i32 0, i32 0), i32 %135, i32 %138)
  br label %140

; <label>:140                                     ; preds = %131, %126
  %141 = load %struct.DState** %s, align 8
  %142 = getelementptr inbounds %struct.DState* %141, i32 0, i32 26
  %143 = load i32* %142, align 4
  %144 = load %struct.DState** %s, align 8
  %145 = getelementptr inbounds %struct.DState* %144, i32 0, i32 24
  %146 = load i32* %145, align 4
  %147 = icmp ne i32 %143, %146
  br i1 %147, label %148, label %149

; <label>:148                                     ; preds = %140
  store i32 -4, i32* %1
  br label %160

; <label>:149                                     ; preds = %140
  %150 = load i32* %r, align 4
  store i32 %150, i32* %1
  br label %160

; <label>:151                                     ; preds = %121
  %152 = load %struct.DState** %s, align 8
  %153 = getelementptr inbounds %struct.DState* %152, i32 0, i32 1
  %154 = load i32* %153, align 4
  %155 = icmp ne i32 %154, 2
  br i1 %155, label %156, label %158

; <label>:156                                     ; preds = %151
  %157 = load i32* %r, align 4
  store i32 %157, i32* %1
  br label %160

; <label>:158                                     ; preds = %151
  br label %159

; <label>:159                                     ; preds = %158, %116
  br label %22

; <label>:160                                     ; preds = %156, %149, %148, %114, %92, %27, %20, %13, %5
  %161 = load i32* %1
  ret i32 %161
}

; Function Attrs: nounwind uwtable
define internal void @unRLE_obuf_to_output_SMALL(%struct.DState* %s) #0 {
  %1 = alloca %struct.DState*, align 8
  %k1 = alloca i8, align 1
  store %struct.DState* %s, %struct.DState** %1, align 8
  %2 = load %struct.DState** %1, align 8
  %3 = getelementptr inbounds %struct.DState* %2, i32 0, i32 4
  %4 = load i8* %3, align 1
  %5 = icmp ne i8 %4, 0
  br i1 %5, label %6, label %596

; <label>:6                                       ; preds = %0
  br label %7

; <label>:7                                       ; preds = %6, %196, %204, %303, %311, %410, %418, %578
  br label %8

; <label>:8                                       ; preds = %7, %85
  %9 = load %struct.DState** %1, align 8
  %10 = getelementptr inbounds %struct.DState* %9, i32 0, i32 0
  %11 = load %struct.bz_stream** %10, align 8
  %12 = getelementptr inbounds %struct.bz_stream* %11, i32 0, i32 5
  %13 = load i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %16

; <label>:15                                      ; preds = %8
  br label %991

; <label>:16                                      ; preds = %8
  %17 = load %struct.DState** %1, align 8
  %18 = getelementptr inbounds %struct.DState* %17, i32 0, i32 3
  %19 = load i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %16
  br label %86

; <label>:22                                      ; preds = %16
  %23 = load %struct.DState** %1, align 8
  %24 = getelementptr inbounds %struct.DState* %23, i32 0, i32 2
  %25 = load i8* %24, align 1
  %26 = load %struct.DState** %1, align 8
  %27 = getelementptr inbounds %struct.DState* %26, i32 0, i32 0
  %28 = load %struct.bz_stream** %27, align 8
  %29 = getelementptr inbounds %struct.bz_stream* %28, i32 0, i32 4
  %30 = load i8** %29, align 8
  store i8 %25, i8* %30, align 1
  %31 = load %struct.DState** %1, align 8
  %32 = getelementptr inbounds %struct.DState* %31, i32 0, i32 25
  %33 = load i32* %32, align 4
  %34 = shl i32 %33, 8
  %35 = load %struct.DState** %1, align 8
  %36 = getelementptr inbounds %struct.DState* %35, i32 0, i32 25
  %37 = load i32* %36, align 4
  %38 = lshr i32 %37, 24
  %39 = load %struct.DState** %1, align 8
  %40 = getelementptr inbounds %struct.DState* %39, i32 0, i32 2
  %41 = load i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = xor i32 %38, %42
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds [256 x i32]* @BZ2_crc32Table, i32 0, i64 %44
  %46 = load i32* %45, align 4
  %47 = xor i32 %34, %46
  %48 = load %struct.DState** %1, align 8
  %49 = getelementptr inbounds %struct.DState* %48, i32 0, i32 25
  store i32 %47, i32* %49, align 4
  %50 = load %struct.DState** %1, align 8
  %51 = getelementptr inbounds %struct.DState* %50, i32 0, i32 3
  %52 = load i32* %51, align 4
  %53 = add nsw i32 %52, -1
  store i32 %53, i32* %51, align 4
  %54 = load %struct.DState** %1, align 8
  %55 = getelementptr inbounds %struct.DState* %54, i32 0, i32 0
  %56 = load %struct.bz_stream** %55, align 8
  %57 = getelementptr inbounds %struct.bz_stream* %56, i32 0, i32 4
  %58 = load i8** %57, align 8
  %59 = getelementptr inbounds i8* %58, i32 1
  store i8* %59, i8** %57, align 8
  %60 = load %struct.DState** %1, align 8
  %61 = getelementptr inbounds %struct.DState* %60, i32 0, i32 0
  %62 = load %struct.bz_stream** %61, align 8
  %63 = getelementptr inbounds %struct.bz_stream* %62, i32 0, i32 5
  %64 = load i32* %63, align 4
  %65 = add i32 %64, -1
  store i32 %65, i32* %63, align 4
  %66 = load %struct.DState** %1, align 8
  %67 = getelementptr inbounds %struct.DState* %66, i32 0, i32 0
  %68 = load %struct.bz_stream** %67, align 8
  %69 = getelementptr inbounds %struct.bz_stream* %68, i32 0, i32 6
  %70 = load i32* %69, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %69, align 4
  %72 = load %struct.DState** %1, align 8
  %73 = getelementptr inbounds %struct.DState* %72, i32 0, i32 0
  %74 = load %struct.bz_stream** %73, align 8
  %75 = getelementptr inbounds %struct.bz_stream* %74, i32 0, i32 6
  %76 = load i32* %75, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %85

; <label>:78                                      ; preds = %22
  %79 = load %struct.DState** %1, align 8
  %80 = getelementptr inbounds %struct.DState* %79, i32 0, i32 0
  %81 = load %struct.bz_stream** %80, align 8
  %82 = getelementptr inbounds %struct.bz_stream* %81, i32 0, i32 7
  %83 = load i32* %82, align 4
  %84 = add i32 %83, 1
  store i32 %84, i32* %82, align 4
  br label %85

; <label>:85                                      ; preds = %78, %22
  br label %8

; <label>:86                                      ; preds = %21
  %87 = load %struct.DState** %1, align 8
  %88 = getelementptr inbounds %struct.DState* %87, i32 0, i32 17
  %89 = load i32* %88, align 4
  %90 = load %struct.DState** %1, align 8
  %91 = getelementptr inbounds %struct.DState* %90, i32 0, i32 51
  %92 = load i32* %91, align 4
  %93 = add nsw i32 %92, 1
  %94 = icmp eq i32 %89, %93
  br i1 %94, label %95, label %96

; <label>:95                                      ; preds = %86
  br label %991

; <label>:96                                      ; preds = %86
  %97 = load %struct.DState** %1, align 8
  %98 = getelementptr inbounds %struct.DState* %97, i32 0, i32 3
  store i32 1, i32* %98, align 4
  %99 = load %struct.DState** %1, align 8
  %100 = getelementptr inbounds %struct.DState* %99, i32 0, i32 15
  %101 = load i32* %100, align 4
  %102 = trunc i32 %101 to i8
  %103 = load %struct.DState** %1, align 8
  %104 = getelementptr inbounds %struct.DState* %103, i32 0, i32 2
  store i8 %102, i8* %104, align 1
  %105 = load %struct.DState** %1, align 8
  %106 = getelementptr inbounds %struct.DState* %105, i32 0, i32 14
  %107 = load i32* %106, align 4
  %108 = load %struct.DState** %1, align 8
  %109 = getelementptr inbounds %struct.DState* %108, i32 0, i32 18
  %110 = getelementptr inbounds [257 x i32]* %109, i32 0, i32 0
  %111 = call i32 @BZ2_indexIntoF(i32 %107, i32* %110)
  %112 = trunc i32 %111 to i8
  store i8 %112, i8* %k1, align 1
  %113 = load %struct.DState** %1, align 8
  %114 = getelementptr inbounds %struct.DState* %113, i32 0, i32 14
  %115 = load i32* %114, align 4
  %116 = zext i32 %115 to i64
  %117 = load %struct.DState** %1, align 8
  %118 = getelementptr inbounds %struct.DState* %117, i32 0, i32 21
  %119 = load i16** %118, align 8
  %120 = getelementptr inbounds i16* %119, i64 %116
  %121 = load i16* %120, align 2
  %122 = zext i16 %121 to i32
  %123 = load %struct.DState** %1, align 8
  %124 = getelementptr inbounds %struct.DState* %123, i32 0, i32 14
  %125 = load i32* %124, align 4
  %126 = lshr i32 %125, 1
  %127 = zext i32 %126 to i64
  %128 = load %struct.DState** %1, align 8
  %129 = getelementptr inbounds %struct.DState* %128, i32 0, i32 22
  %130 = load i8** %129, align 8
  %131 = getelementptr inbounds i8* %130, i64 %127
  %132 = load i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = load %struct.DState** %1, align 8
  %135 = getelementptr inbounds %struct.DState* %134, i32 0, i32 14
  %136 = load i32* %135, align 4
  %137 = shl i32 %136, 2
  %138 = and i32 %137, 4
  %139 = lshr i32 %133, %138
  %140 = and i32 %139, 15
  %141 = shl i32 %140, 16
  %142 = or i32 %122, %141
  %143 = load %struct.DState** %1, align 8
  %144 = getelementptr inbounds %struct.DState* %143, i32 0, i32 14
  store i32 %142, i32* %144, align 4
  %145 = load %struct.DState** %1, align 8
  %146 = getelementptr inbounds %struct.DState* %145, i32 0, i32 5
  %147 = load i32* %146, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %170

; <label>:149                                     ; preds = %96
  %150 = load %struct.DState** %1, align 8
  %151 = getelementptr inbounds %struct.DState* %150, i32 0, i32 6
  %152 = load i32* %151, align 4
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds [512 x i32]* @BZ2_rNums, i32 0, i64 %153
  %155 = load i32* %154, align 4
  %156 = load %struct.DState** %1, align 8
  %157 = getelementptr inbounds %struct.DState* %156, i32 0, i32 5
  store i32 %155, i32* %157, align 4
  %158 = load %struct.DState** %1, align 8
  %159 = getelementptr inbounds %struct.DState* %158, i32 0, i32 6
  %160 = load i32* %159, align 4
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %159, align 4
  %162 = load %struct.DState** %1, align 8
  %163 = getelementptr inbounds %struct.DState* %162, i32 0, i32 6
  %164 = load i32* %163, align 4
  %165 = icmp eq i32 %164, 512
  br i1 %165, label %166, label %169

; <label>:166                                     ; preds = %149
  %167 = load %struct.DState** %1, align 8
  %168 = getelementptr inbounds %struct.DState* %167, i32 0, i32 6
  store i32 0, i32* %168, align 4
  br label %169

; <label>:169                                     ; preds = %166, %149
  br label %170

; <label>:170                                     ; preds = %169, %96
  %171 = load %struct.DState** %1, align 8
  %172 = getelementptr inbounds %struct.DState* %171, i32 0, i32 5
  %173 = load i32* %172, align 4
  %174 = add nsw i32 %173, -1
  store i32 %174, i32* %172, align 4
  %175 = load %struct.DState** %1, align 8
  %176 = getelementptr inbounds %struct.DState* %175, i32 0, i32 5
  %177 = load i32* %176, align 4
  %178 = icmp eq i32 %177, 1
  %179 = select i1 %178, i32 1, i32 0
  %180 = load i8* %k1, align 1
  %181 = zext i8 %180 to i32
  %182 = xor i32 %181, %179
  %183 = trunc i32 %182 to i8
  store i8 %183, i8* %k1, align 1
  %184 = load %struct.DState** %1, align 8
  %185 = getelementptr inbounds %struct.DState* %184, i32 0, i32 17
  %186 = load i32* %185, align 4
  %187 = add nsw i32 %186, 1
  store i32 %187, i32* %185, align 4
  %188 = load %struct.DState** %1, align 8
  %189 = getelementptr inbounds %struct.DState* %188, i32 0, i32 17
  %190 = load i32* %189, align 4
  %191 = load %struct.DState** %1, align 8
  %192 = getelementptr inbounds %struct.DState* %191, i32 0, i32 51
  %193 = load i32* %192, align 4
  %194 = add nsw i32 %193, 1
  %195 = icmp eq i32 %190, %194
  br i1 %195, label %196, label %197

; <label>:196                                     ; preds = %170
  br label %7

; <label>:197                                     ; preds = %170
  %198 = load i8* %k1, align 1
  %199 = zext i8 %198 to i32
  %200 = load %struct.DState** %1, align 8
  %201 = getelementptr inbounds %struct.DState* %200, i32 0, i32 15
  %202 = load i32* %201, align 4
  %203 = icmp ne i32 %199, %202
  br i1 %203, label %204, label %209

; <label>:204                                     ; preds = %197
  %205 = load i8* %k1, align 1
  %206 = zext i8 %205 to i32
  %207 = load %struct.DState** %1, align 8
  %208 = getelementptr inbounds %struct.DState* %207, i32 0, i32 15
  store i32 %206, i32* %208, align 4
  br label %7

; <label>:209                                     ; preds = %197
  %210 = load %struct.DState** %1, align 8
  %211 = getelementptr inbounds %struct.DState* %210, i32 0, i32 3
  store i32 2, i32* %211, align 4
  %212 = load %struct.DState** %1, align 8
  %213 = getelementptr inbounds %struct.DState* %212, i32 0, i32 14
  %214 = load i32* %213, align 4
  %215 = load %struct.DState** %1, align 8
  %216 = getelementptr inbounds %struct.DState* %215, i32 0, i32 18
  %217 = getelementptr inbounds [257 x i32]* %216, i32 0, i32 0
  %218 = call i32 @BZ2_indexIntoF(i32 %214, i32* %217)
  %219 = trunc i32 %218 to i8
  store i8 %219, i8* %k1, align 1
  %220 = load %struct.DState** %1, align 8
  %221 = getelementptr inbounds %struct.DState* %220, i32 0, i32 14
  %222 = load i32* %221, align 4
  %223 = zext i32 %222 to i64
  %224 = load %struct.DState** %1, align 8
  %225 = getelementptr inbounds %struct.DState* %224, i32 0, i32 21
  %226 = load i16** %225, align 8
  %227 = getelementptr inbounds i16* %226, i64 %223
  %228 = load i16* %227, align 2
  %229 = zext i16 %228 to i32
  %230 = load %struct.DState** %1, align 8
  %231 = getelementptr inbounds %struct.DState* %230, i32 0, i32 14
  %232 = load i32* %231, align 4
  %233 = lshr i32 %232, 1
  %234 = zext i32 %233 to i64
  %235 = load %struct.DState** %1, align 8
  %236 = getelementptr inbounds %struct.DState* %235, i32 0, i32 22
  %237 = load i8** %236, align 8
  %238 = getelementptr inbounds i8* %237, i64 %234
  %239 = load i8* %238, align 1
  %240 = zext i8 %239 to i32
  %241 = load %struct.DState** %1, align 8
  %242 = getelementptr inbounds %struct.DState* %241, i32 0, i32 14
  %243 = load i32* %242, align 4
  %244 = shl i32 %243, 2
  %245 = and i32 %244, 4
  %246 = lshr i32 %240, %245
  %247 = and i32 %246, 15
  %248 = shl i32 %247, 16
  %249 = or i32 %229, %248
  %250 = load %struct.DState** %1, align 8
  %251 = getelementptr inbounds %struct.DState* %250, i32 0, i32 14
  store i32 %249, i32* %251, align 4
  %252 = load %struct.DState** %1, align 8
  %253 = getelementptr inbounds %struct.DState* %252, i32 0, i32 5
  %254 = load i32* %253, align 4
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %277

; <label>:256                                     ; preds = %209
  %257 = load %struct.DState** %1, align 8
  %258 = getelementptr inbounds %struct.DState* %257, i32 0, i32 6
  %259 = load i32* %258, align 4
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds [512 x i32]* @BZ2_rNums, i32 0, i64 %260
  %262 = load i32* %261, align 4
  %263 = load %struct.DState** %1, align 8
  %264 = getelementptr inbounds %struct.DState* %263, i32 0, i32 5
  store i32 %262, i32* %264, align 4
  %265 = load %struct.DState** %1, align 8
  %266 = getelementptr inbounds %struct.DState* %265, i32 0, i32 6
  %267 = load i32* %266, align 4
  %268 = add nsw i32 %267, 1
  store i32 %268, i32* %266, align 4
  %269 = load %struct.DState** %1, align 8
  %270 = getelementptr inbounds %struct.DState* %269, i32 0, i32 6
  %271 = load i32* %270, align 4
  %272 = icmp eq i32 %271, 512
  br i1 %272, label %273, label %276

; <label>:273                                     ; preds = %256
  %274 = load %struct.DState** %1, align 8
  %275 = getelementptr inbounds %struct.DState* %274, i32 0, i32 6
  store i32 0, i32* %275, align 4
  br label %276

; <label>:276                                     ; preds = %273, %256
  br label %277

; <label>:277                                     ; preds = %276, %209
  %278 = load %struct.DState** %1, align 8
  %279 = getelementptr inbounds %struct.DState* %278, i32 0, i32 5
  %280 = load i32* %279, align 4
  %281 = add nsw i32 %280, -1
  store i32 %281, i32* %279, align 4
  %282 = load %struct.DState** %1, align 8
  %283 = getelementptr inbounds %struct.DState* %282, i32 0, i32 5
  %284 = load i32* %283, align 4
  %285 = icmp eq i32 %284, 1
  %286 = select i1 %285, i32 1, i32 0
  %287 = load i8* %k1, align 1
  %288 = zext i8 %287 to i32
  %289 = xor i32 %288, %286
  %290 = trunc i32 %289 to i8
  store i8 %290, i8* %k1, align 1
  %291 = load %struct.DState** %1, align 8
  %292 = getelementptr inbounds %struct.DState* %291, i32 0, i32 17
  %293 = load i32* %292, align 4
  %294 = add nsw i32 %293, 1
  store i32 %294, i32* %292, align 4
  %295 = load %struct.DState** %1, align 8
  %296 = getelementptr inbounds %struct.DState* %295, i32 0, i32 17
  %297 = load i32* %296, align 4
  %298 = load %struct.DState** %1, align 8
  %299 = getelementptr inbounds %struct.DState* %298, i32 0, i32 51
  %300 = load i32* %299, align 4
  %301 = add nsw i32 %300, 1
  %302 = icmp eq i32 %297, %301
  br i1 %302, label %303, label %304

; <label>:303                                     ; preds = %277
  br label %7

; <label>:304                                     ; preds = %277
  %305 = load i8* %k1, align 1
  %306 = zext i8 %305 to i32
  %307 = load %struct.DState** %1, align 8
  %308 = getelementptr inbounds %struct.DState* %307, i32 0, i32 15
  %309 = load i32* %308, align 4
  %310 = icmp ne i32 %306, %309
  br i1 %310, label %311, label %316

; <label>:311                                     ; preds = %304
  %312 = load i8* %k1, align 1
  %313 = zext i8 %312 to i32
  %314 = load %struct.DState** %1, align 8
  %315 = getelementptr inbounds %struct.DState* %314, i32 0, i32 15
  store i32 %313, i32* %315, align 4
  br label %7

; <label>:316                                     ; preds = %304
  %317 = load %struct.DState** %1, align 8
  %318 = getelementptr inbounds %struct.DState* %317, i32 0, i32 3
  store i32 3, i32* %318, align 4
  %319 = load %struct.DState** %1, align 8
  %320 = getelementptr inbounds %struct.DState* %319, i32 0, i32 14
  %321 = load i32* %320, align 4
  %322 = load %struct.DState** %1, align 8
  %323 = getelementptr inbounds %struct.DState* %322, i32 0, i32 18
  %324 = getelementptr inbounds [257 x i32]* %323, i32 0, i32 0
  %325 = call i32 @BZ2_indexIntoF(i32 %321, i32* %324)
  %326 = trunc i32 %325 to i8
  store i8 %326, i8* %k1, align 1
  %327 = load %struct.DState** %1, align 8
  %328 = getelementptr inbounds %struct.DState* %327, i32 0, i32 14
  %329 = load i32* %328, align 4
  %330 = zext i32 %329 to i64
  %331 = load %struct.DState** %1, align 8
  %332 = getelementptr inbounds %struct.DState* %331, i32 0, i32 21
  %333 = load i16** %332, align 8
  %334 = getelementptr inbounds i16* %333, i64 %330
  %335 = load i16* %334, align 2
  %336 = zext i16 %335 to i32
  %337 = load %struct.DState** %1, align 8
  %338 = getelementptr inbounds %struct.DState* %337, i32 0, i32 14
  %339 = load i32* %338, align 4
  %340 = lshr i32 %339, 1
  %341 = zext i32 %340 to i64
  %342 = load %struct.DState** %1, align 8
  %343 = getelementptr inbounds %struct.DState* %342, i32 0, i32 22
  %344 = load i8** %343, align 8
  %345 = getelementptr inbounds i8* %344, i64 %341
  %346 = load i8* %345, align 1
  %347 = zext i8 %346 to i32
  %348 = load %struct.DState** %1, align 8
  %349 = getelementptr inbounds %struct.DState* %348, i32 0, i32 14
  %350 = load i32* %349, align 4
  %351 = shl i32 %350, 2
  %352 = and i32 %351, 4
  %353 = lshr i32 %347, %352
  %354 = and i32 %353, 15
  %355 = shl i32 %354, 16
  %356 = or i32 %336, %355
  %357 = load %struct.DState** %1, align 8
  %358 = getelementptr inbounds %struct.DState* %357, i32 0, i32 14
  store i32 %356, i32* %358, align 4
  %359 = load %struct.DState** %1, align 8
  %360 = getelementptr inbounds %struct.DState* %359, i32 0, i32 5
  %361 = load i32* %360, align 4
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %363, label %384

; <label>:363                                     ; preds = %316
  %364 = load %struct.DState** %1, align 8
  %365 = getelementptr inbounds %struct.DState* %364, i32 0, i32 6
  %366 = load i32* %365, align 4
  %367 = sext i32 %366 to i64
  %368 = getelementptr inbounds [512 x i32]* @BZ2_rNums, i32 0, i64 %367
  %369 = load i32* %368, align 4
  %370 = load %struct.DState** %1, align 8
  %371 = getelementptr inbounds %struct.DState* %370, i32 0, i32 5
  store i32 %369, i32* %371, align 4
  %372 = load %struct.DState** %1, align 8
  %373 = getelementptr inbounds %struct.DState* %372, i32 0, i32 6
  %374 = load i32* %373, align 4
  %375 = add nsw i32 %374, 1
  store i32 %375, i32* %373, align 4
  %376 = load %struct.DState** %1, align 8
  %377 = getelementptr inbounds %struct.DState* %376, i32 0, i32 6
  %378 = load i32* %377, align 4
  %379 = icmp eq i32 %378, 512
  br i1 %379, label %380, label %383

; <label>:380                                     ; preds = %363
  %381 = load %struct.DState** %1, align 8
  %382 = getelementptr inbounds %struct.DState* %381, i32 0, i32 6
  store i32 0, i32* %382, align 4
  br label %383

; <label>:383                                     ; preds = %380, %363
  br label %384

; <label>:384                                     ; preds = %383, %316
  %385 = load %struct.DState** %1, align 8
  %386 = getelementptr inbounds %struct.DState* %385, i32 0, i32 5
  %387 = load i32* %386, align 4
  %388 = add nsw i32 %387, -1
  store i32 %388, i32* %386, align 4
  %389 = load %struct.DState** %1, align 8
  %390 = getelementptr inbounds %struct.DState* %389, i32 0, i32 5
  %391 = load i32* %390, align 4
  %392 = icmp eq i32 %391, 1
  %393 = select i1 %392, i32 1, i32 0
  %394 = load i8* %k1, align 1
  %395 = zext i8 %394 to i32
  %396 = xor i32 %395, %393
  %397 = trunc i32 %396 to i8
  store i8 %397, i8* %k1, align 1
  %398 = load %struct.DState** %1, align 8
  %399 = getelementptr inbounds %struct.DState* %398, i32 0, i32 17
  %400 = load i32* %399, align 4
  %401 = add nsw i32 %400, 1
  store i32 %401, i32* %399, align 4
  %402 = load %struct.DState** %1, align 8
  %403 = getelementptr inbounds %struct.DState* %402, i32 0, i32 17
  %404 = load i32* %403, align 4
  %405 = load %struct.DState** %1, align 8
  %406 = getelementptr inbounds %struct.DState* %405, i32 0, i32 51
  %407 = load i32* %406, align 4
  %408 = add nsw i32 %407, 1
  %409 = icmp eq i32 %404, %408
  br i1 %409, label %410, label %411

; <label>:410                                     ; preds = %384
  br label %7

; <label>:411                                     ; preds = %384
  %412 = load i8* %k1, align 1
  %413 = zext i8 %412 to i32
  %414 = load %struct.DState** %1, align 8
  %415 = getelementptr inbounds %struct.DState* %414, i32 0, i32 15
  %416 = load i32* %415, align 4
  %417 = icmp ne i32 %413, %416
  br i1 %417, label %418, label %423

; <label>:418                                     ; preds = %411
  %419 = load i8* %k1, align 1
  %420 = zext i8 %419 to i32
  %421 = load %struct.DState** %1, align 8
  %422 = getelementptr inbounds %struct.DState* %421, i32 0, i32 15
  store i32 %420, i32* %422, align 4
  br label %7

; <label>:423                                     ; preds = %411
  %424 = load %struct.DState** %1, align 8
  %425 = getelementptr inbounds %struct.DState* %424, i32 0, i32 14
  %426 = load i32* %425, align 4
  %427 = load %struct.DState** %1, align 8
  %428 = getelementptr inbounds %struct.DState* %427, i32 0, i32 18
  %429 = getelementptr inbounds [257 x i32]* %428, i32 0, i32 0
  %430 = call i32 @BZ2_indexIntoF(i32 %426, i32* %429)
  %431 = trunc i32 %430 to i8
  store i8 %431, i8* %k1, align 1
  %432 = load %struct.DState** %1, align 8
  %433 = getelementptr inbounds %struct.DState* %432, i32 0, i32 14
  %434 = load i32* %433, align 4
  %435 = zext i32 %434 to i64
  %436 = load %struct.DState** %1, align 8
  %437 = getelementptr inbounds %struct.DState* %436, i32 0, i32 21
  %438 = load i16** %437, align 8
  %439 = getelementptr inbounds i16* %438, i64 %435
  %440 = load i16* %439, align 2
  %441 = zext i16 %440 to i32
  %442 = load %struct.DState** %1, align 8
  %443 = getelementptr inbounds %struct.DState* %442, i32 0, i32 14
  %444 = load i32* %443, align 4
  %445 = lshr i32 %444, 1
  %446 = zext i32 %445 to i64
  %447 = load %struct.DState** %1, align 8
  %448 = getelementptr inbounds %struct.DState* %447, i32 0, i32 22
  %449 = load i8** %448, align 8
  %450 = getelementptr inbounds i8* %449, i64 %446
  %451 = load i8* %450, align 1
  %452 = zext i8 %451 to i32
  %453 = load %struct.DState** %1, align 8
  %454 = getelementptr inbounds %struct.DState* %453, i32 0, i32 14
  %455 = load i32* %454, align 4
  %456 = shl i32 %455, 2
  %457 = and i32 %456, 4
  %458 = lshr i32 %452, %457
  %459 = and i32 %458, 15
  %460 = shl i32 %459, 16
  %461 = or i32 %441, %460
  %462 = load %struct.DState** %1, align 8
  %463 = getelementptr inbounds %struct.DState* %462, i32 0, i32 14
  store i32 %461, i32* %463, align 4
  %464 = load %struct.DState** %1, align 8
  %465 = getelementptr inbounds %struct.DState* %464, i32 0, i32 5
  %466 = load i32* %465, align 4
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %468, label %489

; <label>:468                                     ; preds = %423
  %469 = load %struct.DState** %1, align 8
  %470 = getelementptr inbounds %struct.DState* %469, i32 0, i32 6
  %471 = load i32* %470, align 4
  %472 = sext i32 %471 to i64
  %473 = getelementptr inbounds [512 x i32]* @BZ2_rNums, i32 0, i64 %472
  %474 = load i32* %473, align 4
  %475 = load %struct.DState** %1, align 8
  %476 = getelementptr inbounds %struct.DState* %475, i32 0, i32 5
  store i32 %474, i32* %476, align 4
  %477 = load %struct.DState** %1, align 8
  %478 = getelementptr inbounds %struct.DState* %477, i32 0, i32 6
  %479 = load i32* %478, align 4
  %480 = add nsw i32 %479, 1
  store i32 %480, i32* %478, align 4
  %481 = load %struct.DState** %1, align 8
  %482 = getelementptr inbounds %struct.DState* %481, i32 0, i32 6
  %483 = load i32* %482, align 4
  %484 = icmp eq i32 %483, 512
  br i1 %484, label %485, label %488

; <label>:485                                     ; preds = %468
  %486 = load %struct.DState** %1, align 8
  %487 = getelementptr inbounds %struct.DState* %486, i32 0, i32 6
  store i32 0, i32* %487, align 4
  br label %488

; <label>:488                                     ; preds = %485, %468
  br label %489

; <label>:489                                     ; preds = %488, %423
  %490 = load %struct.DState** %1, align 8
  %491 = getelementptr inbounds %struct.DState* %490, i32 0, i32 5
  %492 = load i32* %491, align 4
  %493 = add nsw i32 %492, -1
  store i32 %493, i32* %491, align 4
  %494 = load %struct.DState** %1, align 8
  %495 = getelementptr inbounds %struct.DState* %494, i32 0, i32 5
  %496 = load i32* %495, align 4
  %497 = icmp eq i32 %496, 1
  %498 = select i1 %497, i32 1, i32 0
  %499 = load i8* %k1, align 1
  %500 = zext i8 %499 to i32
  %501 = xor i32 %500, %498
  %502 = trunc i32 %501 to i8
  store i8 %502, i8* %k1, align 1
  %503 = load %struct.DState** %1, align 8
  %504 = getelementptr inbounds %struct.DState* %503, i32 0, i32 17
  %505 = load i32* %504, align 4
  %506 = add nsw i32 %505, 1
  store i32 %506, i32* %504, align 4
  %507 = load i8* %k1, align 1
  %508 = zext i8 %507 to i32
  %509 = add nsw i32 %508, 4
  %510 = load %struct.DState** %1, align 8
  %511 = getelementptr inbounds %struct.DState* %510, i32 0, i32 3
  store i32 %509, i32* %511, align 4
  %512 = load %struct.DState** %1, align 8
  %513 = getelementptr inbounds %struct.DState* %512, i32 0, i32 14
  %514 = load i32* %513, align 4
  %515 = load %struct.DState** %1, align 8
  %516 = getelementptr inbounds %struct.DState* %515, i32 0, i32 18
  %517 = getelementptr inbounds [257 x i32]* %516, i32 0, i32 0
  %518 = call i32 @BZ2_indexIntoF(i32 %514, i32* %517)
  %519 = load %struct.DState** %1, align 8
  %520 = getelementptr inbounds %struct.DState* %519, i32 0, i32 15
  store i32 %518, i32* %520, align 4
  %521 = load %struct.DState** %1, align 8
  %522 = getelementptr inbounds %struct.DState* %521, i32 0, i32 14
  %523 = load i32* %522, align 4
  %524 = zext i32 %523 to i64
  %525 = load %struct.DState** %1, align 8
  %526 = getelementptr inbounds %struct.DState* %525, i32 0, i32 21
  %527 = load i16** %526, align 8
  %528 = getelementptr inbounds i16* %527, i64 %524
  %529 = load i16* %528, align 2
  %530 = zext i16 %529 to i32
  %531 = load %struct.DState** %1, align 8
  %532 = getelementptr inbounds %struct.DState* %531, i32 0, i32 14
  %533 = load i32* %532, align 4
  %534 = lshr i32 %533, 1
  %535 = zext i32 %534 to i64
  %536 = load %struct.DState** %1, align 8
  %537 = getelementptr inbounds %struct.DState* %536, i32 0, i32 22
  %538 = load i8** %537, align 8
  %539 = getelementptr inbounds i8* %538, i64 %535
  %540 = load i8* %539, align 1
  %541 = zext i8 %540 to i32
  %542 = load %struct.DState** %1, align 8
  %543 = getelementptr inbounds %struct.DState* %542, i32 0, i32 14
  %544 = load i32* %543, align 4
  %545 = shl i32 %544, 2
  %546 = and i32 %545, 4
  %547 = lshr i32 %541, %546
  %548 = and i32 %547, 15
  %549 = shl i32 %548, 16
  %550 = or i32 %530, %549
  %551 = load %struct.DState** %1, align 8
  %552 = getelementptr inbounds %struct.DState* %551, i32 0, i32 14
  store i32 %550, i32* %552, align 4
  %553 = load %struct.DState** %1, align 8
  %554 = getelementptr inbounds %struct.DState* %553, i32 0, i32 5
  %555 = load i32* %554, align 4
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %557, label %578

; <label>:557                                     ; preds = %489
  %558 = load %struct.DState** %1, align 8
  %559 = getelementptr inbounds %struct.DState* %558, i32 0, i32 6
  %560 = load i32* %559, align 4
  %561 = sext i32 %560 to i64
  %562 = getelementptr inbounds [512 x i32]* @BZ2_rNums, i32 0, i64 %561
  %563 = load i32* %562, align 4
  %564 = load %struct.DState** %1, align 8
  %565 = getelementptr inbounds %struct.DState* %564, i32 0, i32 5
  store i32 %563, i32* %565, align 4
  %566 = load %struct.DState** %1, align 8
  %567 = getelementptr inbounds %struct.DState* %566, i32 0, i32 6
  %568 = load i32* %567, align 4
  %569 = add nsw i32 %568, 1
  store i32 %569, i32* %567, align 4
  %570 = load %struct.DState** %1, align 8
  %571 = getelementptr inbounds %struct.DState* %570, i32 0, i32 6
  %572 = load i32* %571, align 4
  %573 = icmp eq i32 %572, 512
  br i1 %573, label %574, label %577

; <label>:574                                     ; preds = %557
  %575 = load %struct.DState** %1, align 8
  %576 = getelementptr inbounds %struct.DState* %575, i32 0, i32 6
  store i32 0, i32* %576, align 4
  br label %577

; <label>:577                                     ; preds = %574, %557
  br label %578

; <label>:578                                     ; preds = %577, %489
  %579 = load %struct.DState** %1, align 8
  %580 = getelementptr inbounds %struct.DState* %579, i32 0, i32 5
  %581 = load i32* %580, align 4
  %582 = add nsw i32 %581, -1
  store i32 %582, i32* %580, align 4
  %583 = load %struct.DState** %1, align 8
  %584 = getelementptr inbounds %struct.DState* %583, i32 0, i32 5
  %585 = load i32* %584, align 4
  %586 = icmp eq i32 %585, 1
  %587 = select i1 %586, i32 1, i32 0
  %588 = load %struct.DState** %1, align 8
  %589 = getelementptr inbounds %struct.DState* %588, i32 0, i32 15
  %590 = load i32* %589, align 4
  %591 = xor i32 %590, %587
  store i32 %591, i32* %589, align 4
  %592 = load %struct.DState** %1, align 8
  %593 = getelementptr inbounds %struct.DState* %592, i32 0, i32 17
  %594 = load i32* %593, align 4
  %595 = add nsw i32 %594, 1
  store i32 %595, i32* %593, align 4
  br label %7

; <label>:596                                     ; preds = %0
  br label %597

; <label>:597                                     ; preds = %596, %747, %755, %815, %823, %883, %891, %896
  br label %598

; <label>:598                                     ; preds = %597, %675
  %599 = load %struct.DState** %1, align 8
  %600 = getelementptr inbounds %struct.DState* %599, i32 0, i32 0
  %601 = load %struct.bz_stream** %600, align 8
  %602 = getelementptr inbounds %struct.bz_stream* %601, i32 0, i32 5
  %603 = load i32* %602, align 4
  %604 = icmp eq i32 %603, 0
  br i1 %604, label %605, label %606

; <label>:605                                     ; preds = %598
  br label %991

; <label>:606                                     ; preds = %598
  %607 = load %struct.DState** %1, align 8
  %608 = getelementptr inbounds %struct.DState* %607, i32 0, i32 3
  %609 = load i32* %608, align 4
  %610 = icmp eq i32 %609, 0
  br i1 %610, label %611, label %612

; <label>:611                                     ; preds = %606
  br label %676

; <label>:612                                     ; preds = %606
  %613 = load %struct.DState** %1, align 8
  %614 = getelementptr inbounds %struct.DState* %613, i32 0, i32 2
  %615 = load i8* %614, align 1
  %616 = load %struct.DState** %1, align 8
  %617 = getelementptr inbounds %struct.DState* %616, i32 0, i32 0
  %618 = load %struct.bz_stream** %617, align 8
  %619 = getelementptr inbounds %struct.bz_stream* %618, i32 0, i32 4
  %620 = load i8** %619, align 8
  store i8 %615, i8* %620, align 1
  %621 = load %struct.DState** %1, align 8
  %622 = getelementptr inbounds %struct.DState* %621, i32 0, i32 25
  %623 = load i32* %622, align 4
  %624 = shl i32 %623, 8
  %625 = load %struct.DState** %1, align 8
  %626 = getelementptr inbounds %struct.DState* %625, i32 0, i32 25
  %627 = load i32* %626, align 4
  %628 = lshr i32 %627, 24
  %629 = load %struct.DState** %1, align 8
  %630 = getelementptr inbounds %struct.DState* %629, i32 0, i32 2
  %631 = load i8* %630, align 1
  %632 = zext i8 %631 to i32
  %633 = xor i32 %628, %632
  %634 = zext i32 %633 to i64
  %635 = getelementptr inbounds [256 x i32]* @BZ2_crc32Table, i32 0, i64 %634
  %636 = load i32* %635, align 4
  %637 = xor i32 %624, %636
  %638 = load %struct.DState** %1, align 8
  %639 = getelementptr inbounds %struct.DState* %638, i32 0, i32 25
  store i32 %637, i32* %639, align 4
  %640 = load %struct.DState** %1, align 8
  %641 = getelementptr inbounds %struct.DState* %640, i32 0, i32 3
  %642 = load i32* %641, align 4
  %643 = add nsw i32 %642, -1
  store i32 %643, i32* %641, align 4
  %644 = load %struct.DState** %1, align 8
  %645 = getelementptr inbounds %struct.DState* %644, i32 0, i32 0
  %646 = load %struct.bz_stream** %645, align 8
  %647 = getelementptr inbounds %struct.bz_stream* %646, i32 0, i32 4
  %648 = load i8** %647, align 8
  %649 = getelementptr inbounds i8* %648, i32 1
  store i8* %649, i8** %647, align 8
  %650 = load %struct.DState** %1, align 8
  %651 = getelementptr inbounds %struct.DState* %650, i32 0, i32 0
  %652 = load %struct.bz_stream** %651, align 8
  %653 = getelementptr inbounds %struct.bz_stream* %652, i32 0, i32 5
  %654 = load i32* %653, align 4
  %655 = add i32 %654, -1
  store i32 %655, i32* %653, align 4
  %656 = load %struct.DState** %1, align 8
  %657 = getelementptr inbounds %struct.DState* %656, i32 0, i32 0
  %658 = load %struct.bz_stream** %657, align 8
  %659 = getelementptr inbounds %struct.bz_stream* %658, i32 0, i32 6
  %660 = load i32* %659, align 4
  %661 = add i32 %660, 1
  store i32 %661, i32* %659, align 4
  %662 = load %struct.DState** %1, align 8
  %663 = getelementptr inbounds %struct.DState* %662, i32 0, i32 0
  %664 = load %struct.bz_stream** %663, align 8
  %665 = getelementptr inbounds %struct.bz_stream* %664, i32 0, i32 6
  %666 = load i32* %665, align 4
  %667 = icmp eq i32 %666, 0
  br i1 %667, label %668, label %675

; <label>:668                                     ; preds = %612
  %669 = load %struct.DState** %1, align 8
  %670 = getelementptr inbounds %struct.DState* %669, i32 0, i32 0
  %671 = load %struct.bz_stream** %670, align 8
  %672 = getelementptr inbounds %struct.bz_stream* %671, i32 0, i32 7
  %673 = load i32* %672, align 4
  %674 = add i32 %673, 1
  store i32 %674, i32* %672, align 4
  br label %675

; <label>:675                                     ; preds = %668, %612
  br label %598

; <label>:676                                     ; preds = %611
  %677 = load %struct.DState** %1, align 8
  %678 = getelementptr inbounds %struct.DState* %677, i32 0, i32 17
  %679 = load i32* %678, align 4
  %680 = load %struct.DState** %1, align 8
  %681 = getelementptr inbounds %struct.DState* %680, i32 0, i32 51
  %682 = load i32* %681, align 4
  %683 = add nsw i32 %682, 1
  %684 = icmp eq i32 %679, %683
  br i1 %684, label %685, label %686

; <label>:685                                     ; preds = %676
  br label %991

; <label>:686                                     ; preds = %676
  %687 = load %struct.DState** %1, align 8
  %688 = getelementptr inbounds %struct.DState* %687, i32 0, i32 3
  store i32 1, i32* %688, align 4
  %689 = load %struct.DState** %1, align 8
  %690 = getelementptr inbounds %struct.DState* %689, i32 0, i32 15
  %691 = load i32* %690, align 4
  %692 = trunc i32 %691 to i8
  %693 = load %struct.DState** %1, align 8
  %694 = getelementptr inbounds %struct.DState* %693, i32 0, i32 2
  store i8 %692, i8* %694, align 1
  %695 = load %struct.DState** %1, align 8
  %696 = getelementptr inbounds %struct.DState* %695, i32 0, i32 14
  %697 = load i32* %696, align 4
  %698 = load %struct.DState** %1, align 8
  %699 = getelementptr inbounds %struct.DState* %698, i32 0, i32 18
  %700 = getelementptr inbounds [257 x i32]* %699, i32 0, i32 0
  %701 = call i32 @BZ2_indexIntoF(i32 %697, i32* %700)
  %702 = trunc i32 %701 to i8
  store i8 %702, i8* %k1, align 1
  %703 = load %struct.DState** %1, align 8
  %704 = getelementptr inbounds %struct.DState* %703, i32 0, i32 14
  %705 = load i32* %704, align 4
  %706 = zext i32 %705 to i64
  %707 = load %struct.DState** %1, align 8
  %708 = getelementptr inbounds %struct.DState* %707, i32 0, i32 21
  %709 = load i16** %708, align 8
  %710 = getelementptr inbounds i16* %709, i64 %706
  %711 = load i16* %710, align 2
  %712 = zext i16 %711 to i32
  %713 = load %struct.DState** %1, align 8
  %714 = getelementptr inbounds %struct.DState* %713, i32 0, i32 14
  %715 = load i32* %714, align 4
  %716 = lshr i32 %715, 1
  %717 = zext i32 %716 to i64
  %718 = load %struct.DState** %1, align 8
  %719 = getelementptr inbounds %struct.DState* %718, i32 0, i32 22
  %720 = load i8** %719, align 8
  %721 = getelementptr inbounds i8* %720, i64 %717
  %722 = load i8* %721, align 1
  %723 = zext i8 %722 to i32
  %724 = load %struct.DState** %1, align 8
  %725 = getelementptr inbounds %struct.DState* %724, i32 0, i32 14
  %726 = load i32* %725, align 4
  %727 = shl i32 %726, 2
  %728 = and i32 %727, 4
  %729 = lshr i32 %723, %728
  %730 = and i32 %729, 15
  %731 = shl i32 %730, 16
  %732 = or i32 %712, %731
  %733 = load %struct.DState** %1, align 8
  %734 = getelementptr inbounds %struct.DState* %733, i32 0, i32 14
  store i32 %732, i32* %734, align 4
  %735 = load %struct.DState** %1, align 8
  %736 = getelementptr inbounds %struct.DState* %735, i32 0, i32 17
  %737 = load i32* %736, align 4
  %738 = add nsw i32 %737, 1
  store i32 %738, i32* %736, align 4
  %739 = load %struct.DState** %1, align 8
  %740 = getelementptr inbounds %struct.DState* %739, i32 0, i32 17
  %741 = load i32* %740, align 4
  %742 = load %struct.DState** %1, align 8
  %743 = getelementptr inbounds %struct.DState* %742, i32 0, i32 51
  %744 = load i32* %743, align 4
  %745 = add nsw i32 %744, 1
  %746 = icmp eq i32 %741, %745
  br i1 %746, label %747, label %748

; <label>:747                                     ; preds = %686
  br label %597

; <label>:748                                     ; preds = %686
  %749 = load i8* %k1, align 1
  %750 = zext i8 %749 to i32
  %751 = load %struct.DState** %1, align 8
  %752 = getelementptr inbounds %struct.DState* %751, i32 0, i32 15
  %753 = load i32* %752, align 4
  %754 = icmp ne i32 %750, %753
  br i1 %754, label %755, label %760

; <label>:755                                     ; preds = %748
  %756 = load i8* %k1, align 1
  %757 = zext i8 %756 to i32
  %758 = load %struct.DState** %1, align 8
  %759 = getelementptr inbounds %struct.DState* %758, i32 0, i32 15
  store i32 %757, i32* %759, align 4
  br label %597

; <label>:760                                     ; preds = %748
  %761 = load %struct.DState** %1, align 8
  %762 = getelementptr inbounds %struct.DState* %761, i32 0, i32 3
  store i32 2, i32* %762, align 4
  %763 = load %struct.DState** %1, align 8
  %764 = getelementptr inbounds %struct.DState* %763, i32 0, i32 14
  %765 = load i32* %764, align 4
  %766 = load %struct.DState** %1, align 8
  %767 = getelementptr inbounds %struct.DState* %766, i32 0, i32 18
  %768 = getelementptr inbounds [257 x i32]* %767, i32 0, i32 0
  %769 = call i32 @BZ2_indexIntoF(i32 %765, i32* %768)
  %770 = trunc i32 %769 to i8
  store i8 %770, i8* %k1, align 1
  %771 = load %struct.DState** %1, align 8
  %772 = getelementptr inbounds %struct.DState* %771, i32 0, i32 14
  %773 = load i32* %772, align 4
  %774 = zext i32 %773 to i64
  %775 = load %struct.DState** %1, align 8
  %776 = getelementptr inbounds %struct.DState* %775, i32 0, i32 21
  %777 = load i16** %776, align 8
  %778 = getelementptr inbounds i16* %777, i64 %774
  %779 = load i16* %778, align 2
  %780 = zext i16 %779 to i32
  %781 = load %struct.DState** %1, align 8
  %782 = getelementptr inbounds %struct.DState* %781, i32 0, i32 14
  %783 = load i32* %782, align 4
  %784 = lshr i32 %783, 1
  %785 = zext i32 %784 to i64
  %786 = load %struct.DState** %1, align 8
  %787 = getelementptr inbounds %struct.DState* %786, i32 0, i32 22
  %788 = load i8** %787, align 8
  %789 = getelementptr inbounds i8* %788, i64 %785
  %790 = load i8* %789, align 1
  %791 = zext i8 %790 to i32
  %792 = load %struct.DState** %1, align 8
  %793 = getelementptr inbounds %struct.DState* %792, i32 0, i32 14
  %794 = load i32* %793, align 4
  %795 = shl i32 %794, 2
  %796 = and i32 %795, 4
  %797 = lshr i32 %791, %796
  %798 = and i32 %797, 15
  %799 = shl i32 %798, 16
  %800 = or i32 %780, %799
  %801 = load %struct.DState** %1, align 8
  %802 = getelementptr inbounds %struct.DState* %801, i32 0, i32 14
  store i32 %800, i32* %802, align 4
  %803 = load %struct.DState** %1, align 8
  %804 = getelementptr inbounds %struct.DState* %803, i32 0, i32 17
  %805 = load i32* %804, align 4
  %806 = add nsw i32 %805, 1
  store i32 %806, i32* %804, align 4
  %807 = load %struct.DState** %1, align 8
  %808 = getelementptr inbounds %struct.DState* %807, i32 0, i32 17
  %809 = load i32* %808, align 4
  %810 = load %struct.DState** %1, align 8
  %811 = getelementptr inbounds %struct.DState* %810, i32 0, i32 51
  %812 = load i32* %811, align 4
  %813 = add nsw i32 %812, 1
  %814 = icmp eq i32 %809, %813
  br i1 %814, label %815, label %816

; <label>:815                                     ; preds = %760
  br label %597

; <label>:816                                     ; preds = %760
  %817 = load i8* %k1, align 1
  %818 = zext i8 %817 to i32
  %819 = load %struct.DState** %1, align 8
  %820 = getelementptr inbounds %struct.DState* %819, i32 0, i32 15
  %821 = load i32* %820, align 4
  %822 = icmp ne i32 %818, %821
  br i1 %822, label %823, label %828

; <label>:823                                     ; preds = %816
  %824 = load i8* %k1, align 1
  %825 = zext i8 %824 to i32
  %826 = load %struct.DState** %1, align 8
  %827 = getelementptr inbounds %struct.DState* %826, i32 0, i32 15
  store i32 %825, i32* %827, align 4
  br label %597

; <label>:828                                     ; preds = %816
  %829 = load %struct.DState** %1, align 8
  %830 = getelementptr inbounds %struct.DState* %829, i32 0, i32 3
  store i32 3, i32* %830, align 4
  %831 = load %struct.DState** %1, align 8
  %832 = getelementptr inbounds %struct.DState* %831, i32 0, i32 14
  %833 = load i32* %832, align 4
  %834 = load %struct.DState** %1, align 8
  %835 = getelementptr inbounds %struct.DState* %834, i32 0, i32 18
  %836 = getelementptr inbounds [257 x i32]* %835, i32 0, i32 0
  %837 = call i32 @BZ2_indexIntoF(i32 %833, i32* %836)
  %838 = trunc i32 %837 to i8
  store i8 %838, i8* %k1, align 1
  %839 = load %struct.DState** %1, align 8
  %840 = getelementptr inbounds %struct.DState* %839, i32 0, i32 14
  %841 = load i32* %840, align 4
  %842 = zext i32 %841 to i64
  %843 = load %struct.DState** %1, align 8
  %844 = getelementptr inbounds %struct.DState* %843, i32 0, i32 21
  %845 = load i16** %844, align 8
  %846 = getelementptr inbounds i16* %845, i64 %842
  %847 = load i16* %846, align 2
  %848 = zext i16 %847 to i32
  %849 = load %struct.DState** %1, align 8
  %850 = getelementptr inbounds %struct.DState* %849, i32 0, i32 14
  %851 = load i32* %850, align 4
  %852 = lshr i32 %851, 1
  %853 = zext i32 %852 to i64
  %854 = load %struct.DState** %1, align 8
  %855 = getelementptr inbounds %struct.DState* %854, i32 0, i32 22
  %856 = load i8** %855, align 8
  %857 = getelementptr inbounds i8* %856, i64 %853
  %858 = load i8* %857, align 1
  %859 = zext i8 %858 to i32
  %860 = load %struct.DState** %1, align 8
  %861 = getelementptr inbounds %struct.DState* %860, i32 0, i32 14
  %862 = load i32* %861, align 4
  %863 = shl i32 %862, 2
  %864 = and i32 %863, 4
  %865 = lshr i32 %859, %864
  %866 = and i32 %865, 15
  %867 = shl i32 %866, 16
  %868 = or i32 %848, %867
  %869 = load %struct.DState** %1, align 8
  %870 = getelementptr inbounds %struct.DState* %869, i32 0, i32 14
  store i32 %868, i32* %870, align 4
  %871 = load %struct.DState** %1, align 8
  %872 = getelementptr inbounds %struct.DState* %871, i32 0, i32 17
  %873 = load i32* %872, align 4
  %874 = add nsw i32 %873, 1
  store i32 %874, i32* %872, align 4
  %875 = load %struct.DState** %1, align 8
  %876 = getelementptr inbounds %struct.DState* %875, i32 0, i32 17
  %877 = load i32* %876, align 4
  %878 = load %struct.DState** %1, align 8
  %879 = getelementptr inbounds %struct.DState* %878, i32 0, i32 51
  %880 = load i32* %879, align 4
  %881 = add nsw i32 %880, 1
  %882 = icmp eq i32 %877, %881
  br i1 %882, label %883, label %884

; <label>:883                                     ; preds = %828
  br label %597

; <label>:884                                     ; preds = %828
  %885 = load i8* %k1, align 1
  %886 = zext i8 %885 to i32
  %887 = load %struct.DState** %1, align 8
  %888 = getelementptr inbounds %struct.DState* %887, i32 0, i32 15
  %889 = load i32* %888, align 4
  %890 = icmp ne i32 %886, %889
  br i1 %890, label %891, label %896

; <label>:891                                     ; preds = %884
  %892 = load i8* %k1, align 1
  %893 = zext i8 %892 to i32
  %894 = load %struct.DState** %1, align 8
  %895 = getelementptr inbounds %struct.DState* %894, i32 0, i32 15
  store i32 %893, i32* %895, align 4
  br label %597

; <label>:896                                     ; preds = %884
  %897 = load %struct.DState** %1, align 8
  %898 = getelementptr inbounds %struct.DState* %897, i32 0, i32 14
  %899 = load i32* %898, align 4
  %900 = load %struct.DState** %1, align 8
  %901 = getelementptr inbounds %struct.DState* %900, i32 0, i32 18
  %902 = getelementptr inbounds [257 x i32]* %901, i32 0, i32 0
  %903 = call i32 @BZ2_indexIntoF(i32 %899, i32* %902)
  %904 = trunc i32 %903 to i8
  store i8 %904, i8* %k1, align 1
  %905 = load %struct.DState** %1, align 8
  %906 = getelementptr inbounds %struct.DState* %905, i32 0, i32 14
  %907 = load i32* %906, align 4
  %908 = zext i32 %907 to i64
  %909 = load %struct.DState** %1, align 8
  %910 = getelementptr inbounds %struct.DState* %909, i32 0, i32 21
  %911 = load i16** %910, align 8
  %912 = getelementptr inbounds i16* %911, i64 %908
  %913 = load i16* %912, align 2
  %914 = zext i16 %913 to i32
  %915 = load %struct.DState** %1, align 8
  %916 = getelementptr inbounds %struct.DState* %915, i32 0, i32 14
  %917 = load i32* %916, align 4
  %918 = lshr i32 %917, 1
  %919 = zext i32 %918 to i64
  %920 = load %struct.DState** %1, align 8
  %921 = getelementptr inbounds %struct.DState* %920, i32 0, i32 22
  %922 = load i8** %921, align 8
  %923 = getelementptr inbounds i8* %922, i64 %919
  %924 = load i8* %923, align 1
  %925 = zext i8 %924 to i32
  %926 = load %struct.DState** %1, align 8
  %927 = getelementptr inbounds %struct.DState* %926, i32 0, i32 14
  %928 = load i32* %927, align 4
  %929 = shl i32 %928, 2
  %930 = and i32 %929, 4
  %931 = lshr i32 %925, %930
  %932 = and i32 %931, 15
  %933 = shl i32 %932, 16
  %934 = or i32 %914, %933
  %935 = load %struct.DState** %1, align 8
  %936 = getelementptr inbounds %struct.DState* %935, i32 0, i32 14
  store i32 %934, i32* %936, align 4
  %937 = load %struct.DState** %1, align 8
  %938 = getelementptr inbounds %struct.DState* %937, i32 0, i32 17
  %939 = load i32* %938, align 4
  %940 = add nsw i32 %939, 1
  store i32 %940, i32* %938, align 4
  %941 = load i8* %k1, align 1
  %942 = zext i8 %941 to i32
  %943 = add nsw i32 %942, 4
  %944 = load %struct.DState** %1, align 8
  %945 = getelementptr inbounds %struct.DState* %944, i32 0, i32 3
  store i32 %943, i32* %945, align 4
  %946 = load %struct.DState** %1, align 8
  %947 = getelementptr inbounds %struct.DState* %946, i32 0, i32 14
  %948 = load i32* %947, align 4
  %949 = load %struct.DState** %1, align 8
  %950 = getelementptr inbounds %struct.DState* %949, i32 0, i32 18
  %951 = getelementptr inbounds [257 x i32]* %950, i32 0, i32 0
  %952 = call i32 @BZ2_indexIntoF(i32 %948, i32* %951)
  %953 = load %struct.DState** %1, align 8
  %954 = getelementptr inbounds %struct.DState* %953, i32 0, i32 15
  store i32 %952, i32* %954, align 4
  %955 = load %struct.DState** %1, align 8
  %956 = getelementptr inbounds %struct.DState* %955, i32 0, i32 14
  %957 = load i32* %956, align 4
  %958 = zext i32 %957 to i64
  %959 = load %struct.DState** %1, align 8
  %960 = getelementptr inbounds %struct.DState* %959, i32 0, i32 21
  %961 = load i16** %960, align 8
  %962 = getelementptr inbounds i16* %961, i64 %958
  %963 = load i16* %962, align 2
  %964 = zext i16 %963 to i32
  %965 = load %struct.DState** %1, align 8
  %966 = getelementptr inbounds %struct.DState* %965, i32 0, i32 14
  %967 = load i32* %966, align 4
  %968 = lshr i32 %967, 1
  %969 = zext i32 %968 to i64
  %970 = load %struct.DState** %1, align 8
  %971 = getelementptr inbounds %struct.DState* %970, i32 0, i32 22
  %972 = load i8** %971, align 8
  %973 = getelementptr inbounds i8* %972, i64 %969
  %974 = load i8* %973, align 1
  %975 = zext i8 %974 to i32
  %976 = load %struct.DState** %1, align 8
  %977 = getelementptr inbounds %struct.DState* %976, i32 0, i32 14
  %978 = load i32* %977, align 4
  %979 = shl i32 %978, 2
  %980 = and i32 %979, 4
  %981 = lshr i32 %975, %980
  %982 = and i32 %981, 15
  %983 = shl i32 %982, 16
  %984 = or i32 %964, %983
  %985 = load %struct.DState** %1, align 8
  %986 = getelementptr inbounds %struct.DState* %985, i32 0, i32 14
  store i32 %984, i32* %986, align 4
  %987 = load %struct.DState** %1, align 8
  %988 = getelementptr inbounds %struct.DState* %987, i32 0, i32 17
  %989 = load i32* %988, align 4
  %990 = add nsw i32 %989, 1
  store i32 %990, i32* %988, align 4
  br label %597

; <label>:991                                     ; preds = %685, %605, %95, %15
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @unRLE_obuf_to_output_FAST(%struct.DState* %s) #0 {
  %1 = alloca %struct.DState*, align 8
  %k1 = alloca i8, align 1
  %c_calculatedBlockCRC = alloca i32, align 4
  %c_state_out_ch = alloca i8, align 1
  %c_state_out_len = alloca i32, align 4
  %c_nblock_used = alloca i32, align 4
  %c_k0 = alloca i32, align 4
  %c_tt = alloca i32*, align 8
  %c_tPos = alloca i32, align 4
  %cs_next_out = alloca i8*, align 8
  %cs_avail_out = alloca i32, align 4
  %avail_out_INIT = alloca i32, align 4
  %s_save_nblockPP = alloca i32, align 4
  %total_out_lo32_old = alloca i32, align 4
  store %struct.DState* %s, %struct.DState** %1, align 8
  %2 = load %struct.DState** %1, align 8
  %3 = getelementptr inbounds %struct.DState* %2, i32 0, i32 4
  %4 = load i8* %3, align 1
  %5 = icmp ne i8 %4, 0
  br i1 %5, label %6, label %498

; <label>:6                                       ; preds = %0
  br label %7

; <label>:7                                       ; preds = %6, %176, %184, %263, %271, %350, %358, %480
  br label %8

; <label>:8                                       ; preds = %7, %85
  %9 = load %struct.DState** %1, align 8
  %10 = getelementptr inbounds %struct.DState* %9, i32 0, i32 0
  %11 = load %struct.bz_stream** %10, align 8
  %12 = getelementptr inbounds %struct.bz_stream* %11, i32 0, i32 5
  %13 = load i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %16

; <label>:15                                      ; preds = %8
  br label %762

; <label>:16                                      ; preds = %8
  %17 = load %struct.DState** %1, align 8
  %18 = getelementptr inbounds %struct.DState* %17, i32 0, i32 3
  %19 = load i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %16
  br label %86

; <label>:22                                      ; preds = %16
  %23 = load %struct.DState** %1, align 8
  %24 = getelementptr inbounds %struct.DState* %23, i32 0, i32 2
  %25 = load i8* %24, align 1
  %26 = load %struct.DState** %1, align 8
  %27 = getelementptr inbounds %struct.DState* %26, i32 0, i32 0
  %28 = load %struct.bz_stream** %27, align 8
  %29 = getelementptr inbounds %struct.bz_stream* %28, i32 0, i32 4
  %30 = load i8** %29, align 8
  store i8 %25, i8* %30, align 1
  %31 = load %struct.DState** %1, align 8
  %32 = getelementptr inbounds %struct.DState* %31, i32 0, i32 25
  %33 = load i32* %32, align 4
  %34 = shl i32 %33, 8
  %35 = load %struct.DState** %1, align 8
  %36 = getelementptr inbounds %struct.DState* %35, i32 0, i32 25
  %37 = load i32* %36, align 4
  %38 = lshr i32 %37, 24
  %39 = load %struct.DState** %1, align 8
  %40 = getelementptr inbounds %struct.DState* %39, i32 0, i32 2
  %41 = load i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = xor i32 %38, %42
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds [256 x i32]* @BZ2_crc32Table, i32 0, i64 %44
  %46 = load i32* %45, align 4
  %47 = xor i32 %34, %46
  %48 = load %struct.DState** %1, align 8
  %49 = getelementptr inbounds %struct.DState* %48, i32 0, i32 25
  store i32 %47, i32* %49, align 4
  %50 = load %struct.DState** %1, align 8
  %51 = getelementptr inbounds %struct.DState* %50, i32 0, i32 3
  %52 = load i32* %51, align 4
  %53 = add nsw i32 %52, -1
  store i32 %53, i32* %51, align 4
  %54 = load %struct.DState** %1, align 8
  %55 = getelementptr inbounds %struct.DState* %54, i32 0, i32 0
  %56 = load %struct.bz_stream** %55, align 8
  %57 = getelementptr inbounds %struct.bz_stream* %56, i32 0, i32 4
  %58 = load i8** %57, align 8
  %59 = getelementptr inbounds i8* %58, i32 1
  store i8* %59, i8** %57, align 8
  %60 = load %struct.DState** %1, align 8
  %61 = getelementptr inbounds %struct.DState* %60, i32 0, i32 0
  %62 = load %struct.bz_stream** %61, align 8
  %63 = getelementptr inbounds %struct.bz_stream* %62, i32 0, i32 5
  %64 = load i32* %63, align 4
  %65 = add i32 %64, -1
  store i32 %65, i32* %63, align 4
  %66 = load %struct.DState** %1, align 8
  %67 = getelementptr inbounds %struct.DState* %66, i32 0, i32 0
  %68 = load %struct.bz_stream** %67, align 8
  %69 = getelementptr inbounds %struct.bz_stream* %68, i32 0, i32 6
  %70 = load i32* %69, align 4
  %71 = add i32 %70, 1
  store i32 %71, i32* %69, align 4
  %72 = load %struct.DState** %1, align 8
  %73 = getelementptr inbounds %struct.DState* %72, i32 0, i32 0
  %74 = load %struct.bz_stream** %73, align 8
  %75 = getelementptr inbounds %struct.bz_stream* %74, i32 0, i32 6
  %76 = load i32* %75, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %85

; <label>:78                                      ; preds = %22
  %79 = load %struct.DState** %1, align 8
  %80 = getelementptr inbounds %struct.DState* %79, i32 0, i32 0
  %81 = load %struct.bz_stream** %80, align 8
  %82 = getelementptr inbounds %struct.bz_stream* %81, i32 0, i32 7
  %83 = load i32* %82, align 4
  %84 = add i32 %83, 1
  store i32 %84, i32* %82, align 4
  br label %85

; <label>:85                                      ; preds = %78, %22
  br label %8

; <label>:86                                      ; preds = %21
  %87 = load %struct.DState** %1, align 8
  %88 = getelementptr inbounds %struct.DState* %87, i32 0, i32 17
  %89 = load i32* %88, align 4
  %90 = load %struct.DState** %1, align 8
  %91 = getelementptr inbounds %struct.DState* %90, i32 0, i32 51
  %92 = load i32* %91, align 4
  %93 = add nsw i32 %92, 1
  %94 = icmp eq i32 %89, %93
  br i1 %94, label %95, label %96

; <label>:95                                      ; preds = %86
  br label %762

; <label>:96                                      ; preds = %86
  %97 = load %struct.DState** %1, align 8
  %98 = getelementptr inbounds %struct.DState* %97, i32 0, i32 3
  store i32 1, i32* %98, align 4
  %99 = load %struct.DState** %1, align 8
  %100 = getelementptr inbounds %struct.DState* %99, i32 0, i32 15
  %101 = load i32* %100, align 4
  %102 = trunc i32 %101 to i8
  %103 = load %struct.DState** %1, align 8
  %104 = getelementptr inbounds %struct.DState* %103, i32 0, i32 2
  store i8 %102, i8* %104, align 1
  %105 = load %struct.DState** %1, align 8
  %106 = getelementptr inbounds %struct.DState* %105, i32 0, i32 14
  %107 = load i32* %106, align 4
  %108 = zext i32 %107 to i64
  %109 = load %struct.DState** %1, align 8
  %110 = getelementptr inbounds %struct.DState* %109, i32 0, i32 20
  %111 = load i32** %110, align 8
  %112 = getelementptr inbounds i32* %111, i64 %108
  %113 = load i32* %112, align 4
  %114 = load %struct.DState** %1, align 8
  %115 = getelementptr inbounds %struct.DState* %114, i32 0, i32 14
  store i32 %113, i32* %115, align 4
  %116 = load %struct.DState** %1, align 8
  %117 = getelementptr inbounds %struct.DState* %116, i32 0, i32 14
  %118 = load i32* %117, align 4
  %119 = and i32 %118, 255
  %120 = trunc i32 %119 to i8
  store i8 %120, i8* %k1, align 1
  %121 = load %struct.DState** %1, align 8
  %122 = getelementptr inbounds %struct.DState* %121, i32 0, i32 14
  %123 = load i32* %122, align 4
  %124 = lshr i32 %123, 8
  store i32 %124, i32* %122, align 4
  %125 = load %struct.DState** %1, align 8
  %126 = getelementptr inbounds %struct.DState* %125, i32 0, i32 5
  %127 = load i32* %126, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %150

; <label>:129                                     ; preds = %96
  %130 = load %struct.DState** %1, align 8
  %131 = getelementptr inbounds %struct.DState* %130, i32 0, i32 6
  %132 = load i32* %131, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds [512 x i32]* @BZ2_rNums, i32 0, i64 %133
  %135 = load i32* %134, align 4
  %136 = load %struct.DState** %1, align 8
  %137 = getelementptr inbounds %struct.DState* %136, i32 0, i32 5
  store i32 %135, i32* %137, align 4
  %138 = load %struct.DState** %1, align 8
  %139 = getelementptr inbounds %struct.DState* %138, i32 0, i32 6
  %140 = load i32* %139, align 4
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %139, align 4
  %142 = load %struct.DState** %1, align 8
  %143 = getelementptr inbounds %struct.DState* %142, i32 0, i32 6
  %144 = load i32* %143, align 4
  %145 = icmp eq i32 %144, 512
  br i1 %145, label %146, label %149

; <label>:146                                     ; preds = %129
  %147 = load %struct.DState** %1, align 8
  %148 = getelementptr inbounds %struct.DState* %147, i32 0, i32 6
  store i32 0, i32* %148, align 4
  br label %149

; <label>:149                                     ; preds = %146, %129
  br label %150

; <label>:150                                     ; preds = %149, %96
  %151 = load %struct.DState** %1, align 8
  %152 = getelementptr inbounds %struct.DState* %151, i32 0, i32 5
  %153 = load i32* %152, align 4
  %154 = add nsw i32 %153, -1
  store i32 %154, i32* %152, align 4
  %155 = load %struct.DState** %1, align 8
  %156 = getelementptr inbounds %struct.DState* %155, i32 0, i32 5
  %157 = load i32* %156, align 4
  %158 = icmp eq i32 %157, 1
  %159 = select i1 %158, i32 1, i32 0
  %160 = load i8* %k1, align 1
  %161 = zext i8 %160 to i32
  %162 = xor i32 %161, %159
  %163 = trunc i32 %162 to i8
  store i8 %163, i8* %k1, align 1
  %164 = load %struct.DState** %1, align 8
  %165 = getelementptr inbounds %struct.DState* %164, i32 0, i32 17
  %166 = load i32* %165, align 4
  %167 = add nsw i32 %166, 1
  store i32 %167, i32* %165, align 4
  %168 = load %struct.DState** %1, align 8
  %169 = getelementptr inbounds %struct.DState* %168, i32 0, i32 17
  %170 = load i32* %169, align 4
  %171 = load %struct.DState** %1, align 8
  %172 = getelementptr inbounds %struct.DState* %171, i32 0, i32 51
  %173 = load i32* %172, align 4
  %174 = add nsw i32 %173, 1
  %175 = icmp eq i32 %170, %174
  br i1 %175, label %176, label %177

; <label>:176                                     ; preds = %150
  br label %7

; <label>:177                                     ; preds = %150
  %178 = load i8* %k1, align 1
  %179 = zext i8 %178 to i32
  %180 = load %struct.DState** %1, align 8
  %181 = getelementptr inbounds %struct.DState* %180, i32 0, i32 15
  %182 = load i32* %181, align 4
  %183 = icmp ne i32 %179, %182
  br i1 %183, label %184, label %189

; <label>:184                                     ; preds = %177
  %185 = load i8* %k1, align 1
  %186 = zext i8 %185 to i32
  %187 = load %struct.DState** %1, align 8
  %188 = getelementptr inbounds %struct.DState* %187, i32 0, i32 15
  store i32 %186, i32* %188, align 4
  br label %7

; <label>:189                                     ; preds = %177
  %190 = load %struct.DState** %1, align 8
  %191 = getelementptr inbounds %struct.DState* %190, i32 0, i32 3
  store i32 2, i32* %191, align 4
  %192 = load %struct.DState** %1, align 8
  %193 = getelementptr inbounds %struct.DState* %192, i32 0, i32 14
  %194 = load i32* %193, align 4
  %195 = zext i32 %194 to i64
  %196 = load %struct.DState** %1, align 8
  %197 = getelementptr inbounds %struct.DState* %196, i32 0, i32 20
  %198 = load i32** %197, align 8
  %199 = getelementptr inbounds i32* %198, i64 %195
  %200 = load i32* %199, align 4
  %201 = load %struct.DState** %1, align 8
  %202 = getelementptr inbounds %struct.DState* %201, i32 0, i32 14
  store i32 %200, i32* %202, align 4
  %203 = load %struct.DState** %1, align 8
  %204 = getelementptr inbounds %struct.DState* %203, i32 0, i32 14
  %205 = load i32* %204, align 4
  %206 = and i32 %205, 255
  %207 = trunc i32 %206 to i8
  store i8 %207, i8* %k1, align 1
  %208 = load %struct.DState** %1, align 8
  %209 = getelementptr inbounds %struct.DState* %208, i32 0, i32 14
  %210 = load i32* %209, align 4
  %211 = lshr i32 %210, 8
  store i32 %211, i32* %209, align 4
  %212 = load %struct.DState** %1, align 8
  %213 = getelementptr inbounds %struct.DState* %212, i32 0, i32 5
  %214 = load i32* %213, align 4
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %237

; <label>:216                                     ; preds = %189
  %217 = load %struct.DState** %1, align 8
  %218 = getelementptr inbounds %struct.DState* %217, i32 0, i32 6
  %219 = load i32* %218, align 4
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds [512 x i32]* @BZ2_rNums, i32 0, i64 %220
  %222 = load i32* %221, align 4
  %223 = load %struct.DState** %1, align 8
  %224 = getelementptr inbounds %struct.DState* %223, i32 0, i32 5
  store i32 %222, i32* %224, align 4
  %225 = load %struct.DState** %1, align 8
  %226 = getelementptr inbounds %struct.DState* %225, i32 0, i32 6
  %227 = load i32* %226, align 4
  %228 = add nsw i32 %227, 1
  store i32 %228, i32* %226, align 4
  %229 = load %struct.DState** %1, align 8
  %230 = getelementptr inbounds %struct.DState* %229, i32 0, i32 6
  %231 = load i32* %230, align 4
  %232 = icmp eq i32 %231, 512
  br i1 %232, label %233, label %236

; <label>:233                                     ; preds = %216
  %234 = load %struct.DState** %1, align 8
  %235 = getelementptr inbounds %struct.DState* %234, i32 0, i32 6
  store i32 0, i32* %235, align 4
  br label %236

; <label>:236                                     ; preds = %233, %216
  br label %237

; <label>:237                                     ; preds = %236, %189
  %238 = load %struct.DState** %1, align 8
  %239 = getelementptr inbounds %struct.DState* %238, i32 0, i32 5
  %240 = load i32* %239, align 4
  %241 = add nsw i32 %240, -1
  store i32 %241, i32* %239, align 4
  %242 = load %struct.DState** %1, align 8
  %243 = getelementptr inbounds %struct.DState* %242, i32 0, i32 5
  %244 = load i32* %243, align 4
  %245 = icmp eq i32 %244, 1
  %246 = select i1 %245, i32 1, i32 0
  %247 = load i8* %k1, align 1
  %248 = zext i8 %247 to i32
  %249 = xor i32 %248, %246
  %250 = trunc i32 %249 to i8
  store i8 %250, i8* %k1, align 1
  %251 = load %struct.DState** %1, align 8
  %252 = getelementptr inbounds %struct.DState* %251, i32 0, i32 17
  %253 = load i32* %252, align 4
  %254 = add nsw i32 %253, 1
  store i32 %254, i32* %252, align 4
  %255 = load %struct.DState** %1, align 8
  %256 = getelementptr inbounds %struct.DState* %255, i32 0, i32 17
  %257 = load i32* %256, align 4
  %258 = load %struct.DState** %1, align 8
  %259 = getelementptr inbounds %struct.DState* %258, i32 0, i32 51
  %260 = load i32* %259, align 4
  %261 = add nsw i32 %260, 1
  %262 = icmp eq i32 %257, %261
  br i1 %262, label %263, label %264

; <label>:263                                     ; preds = %237
  br label %7

; <label>:264                                     ; preds = %237
  %265 = load i8* %k1, align 1
  %266 = zext i8 %265 to i32
  %267 = load %struct.DState** %1, align 8
  %268 = getelementptr inbounds %struct.DState* %267, i32 0, i32 15
  %269 = load i32* %268, align 4
  %270 = icmp ne i32 %266, %269
  br i1 %270, label %271, label %276

; <label>:271                                     ; preds = %264
  %272 = load i8* %k1, align 1
  %273 = zext i8 %272 to i32
  %274 = load %struct.DState** %1, align 8
  %275 = getelementptr inbounds %struct.DState* %274, i32 0, i32 15
  store i32 %273, i32* %275, align 4
  br label %7

; <label>:276                                     ; preds = %264
  %277 = load %struct.DState** %1, align 8
  %278 = getelementptr inbounds %struct.DState* %277, i32 0, i32 3
  store i32 3, i32* %278, align 4
  %279 = load %struct.DState** %1, align 8
  %280 = getelementptr inbounds %struct.DState* %279, i32 0, i32 14
  %281 = load i32* %280, align 4
  %282 = zext i32 %281 to i64
  %283 = load %struct.DState** %1, align 8
  %284 = getelementptr inbounds %struct.DState* %283, i32 0, i32 20
  %285 = load i32** %284, align 8
  %286 = getelementptr inbounds i32* %285, i64 %282
  %287 = load i32* %286, align 4
  %288 = load %struct.DState** %1, align 8
  %289 = getelementptr inbounds %struct.DState* %288, i32 0, i32 14
  store i32 %287, i32* %289, align 4
  %290 = load %struct.DState** %1, align 8
  %291 = getelementptr inbounds %struct.DState* %290, i32 0, i32 14
  %292 = load i32* %291, align 4
  %293 = and i32 %292, 255
  %294 = trunc i32 %293 to i8
  store i8 %294, i8* %k1, align 1
  %295 = load %struct.DState** %1, align 8
  %296 = getelementptr inbounds %struct.DState* %295, i32 0, i32 14
  %297 = load i32* %296, align 4
  %298 = lshr i32 %297, 8
  store i32 %298, i32* %296, align 4
  %299 = load %struct.DState** %1, align 8
  %300 = getelementptr inbounds %struct.DState* %299, i32 0, i32 5
  %301 = load i32* %300, align 4
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %324

; <label>:303                                     ; preds = %276
  %304 = load %struct.DState** %1, align 8
  %305 = getelementptr inbounds %struct.DState* %304, i32 0, i32 6
  %306 = load i32* %305, align 4
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds [512 x i32]* @BZ2_rNums, i32 0, i64 %307
  %309 = load i32* %308, align 4
  %310 = load %struct.DState** %1, align 8
  %311 = getelementptr inbounds %struct.DState* %310, i32 0, i32 5
  store i32 %309, i32* %311, align 4
  %312 = load %struct.DState** %1, align 8
  %313 = getelementptr inbounds %struct.DState* %312, i32 0, i32 6
  %314 = load i32* %313, align 4
  %315 = add nsw i32 %314, 1
  store i32 %315, i32* %313, align 4
  %316 = load %struct.DState** %1, align 8
  %317 = getelementptr inbounds %struct.DState* %316, i32 0, i32 6
  %318 = load i32* %317, align 4
  %319 = icmp eq i32 %318, 512
  br i1 %319, label %320, label %323

; <label>:320                                     ; preds = %303
  %321 = load %struct.DState** %1, align 8
  %322 = getelementptr inbounds %struct.DState* %321, i32 0, i32 6
  store i32 0, i32* %322, align 4
  br label %323

; <label>:323                                     ; preds = %320, %303
  br label %324

; <label>:324                                     ; preds = %323, %276
  %325 = load %struct.DState** %1, align 8
  %326 = getelementptr inbounds %struct.DState* %325, i32 0, i32 5
  %327 = load i32* %326, align 4
  %328 = add nsw i32 %327, -1
  store i32 %328, i32* %326, align 4
  %329 = load %struct.DState** %1, align 8
  %330 = getelementptr inbounds %struct.DState* %329, i32 0, i32 5
  %331 = load i32* %330, align 4
  %332 = icmp eq i32 %331, 1
  %333 = select i1 %332, i32 1, i32 0
  %334 = load i8* %k1, align 1
  %335 = zext i8 %334 to i32
  %336 = xor i32 %335, %333
  %337 = trunc i32 %336 to i8
  store i8 %337, i8* %k1, align 1
  %338 = load %struct.DState** %1, align 8
  %339 = getelementptr inbounds %struct.DState* %338, i32 0, i32 17
  %340 = load i32* %339, align 4
  %341 = add nsw i32 %340, 1
  store i32 %341, i32* %339, align 4
  %342 = load %struct.DState** %1, align 8
  %343 = getelementptr inbounds %struct.DState* %342, i32 0, i32 17
  %344 = load i32* %343, align 4
  %345 = load %struct.DState** %1, align 8
  %346 = getelementptr inbounds %struct.DState* %345, i32 0, i32 51
  %347 = load i32* %346, align 4
  %348 = add nsw i32 %347, 1
  %349 = icmp eq i32 %344, %348
  br i1 %349, label %350, label %351

; <label>:350                                     ; preds = %324
  br label %7

; <label>:351                                     ; preds = %324
  %352 = load i8* %k1, align 1
  %353 = zext i8 %352 to i32
  %354 = load %struct.DState** %1, align 8
  %355 = getelementptr inbounds %struct.DState* %354, i32 0, i32 15
  %356 = load i32* %355, align 4
  %357 = icmp ne i32 %353, %356
  br i1 %357, label %358, label %363

; <label>:358                                     ; preds = %351
  %359 = load i8* %k1, align 1
  %360 = zext i8 %359 to i32
  %361 = load %struct.DState** %1, align 8
  %362 = getelementptr inbounds %struct.DState* %361, i32 0, i32 15
  store i32 %360, i32* %362, align 4
  br label %7

; <label>:363                                     ; preds = %351
  %364 = load %struct.DState** %1, align 8
  %365 = getelementptr inbounds %struct.DState* %364, i32 0, i32 14
  %366 = load i32* %365, align 4
  %367 = zext i32 %366 to i64
  %368 = load %struct.DState** %1, align 8
  %369 = getelementptr inbounds %struct.DState* %368, i32 0, i32 20
  %370 = load i32** %369, align 8
  %371 = getelementptr inbounds i32* %370, i64 %367
  %372 = load i32* %371, align 4
  %373 = load %struct.DState** %1, align 8
  %374 = getelementptr inbounds %struct.DState* %373, i32 0, i32 14
  store i32 %372, i32* %374, align 4
  %375 = load %struct.DState** %1, align 8
  %376 = getelementptr inbounds %struct.DState* %375, i32 0, i32 14
  %377 = load i32* %376, align 4
  %378 = and i32 %377, 255
  %379 = trunc i32 %378 to i8
  store i8 %379, i8* %k1, align 1
  %380 = load %struct.DState** %1, align 8
  %381 = getelementptr inbounds %struct.DState* %380, i32 0, i32 14
  %382 = load i32* %381, align 4
  %383 = lshr i32 %382, 8
  store i32 %383, i32* %381, align 4
  %384 = load %struct.DState** %1, align 8
  %385 = getelementptr inbounds %struct.DState* %384, i32 0, i32 5
  %386 = load i32* %385, align 4
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %409

; <label>:388                                     ; preds = %363
  %389 = load %struct.DState** %1, align 8
  %390 = getelementptr inbounds %struct.DState* %389, i32 0, i32 6
  %391 = load i32* %390, align 4
  %392 = sext i32 %391 to i64
  %393 = getelementptr inbounds [512 x i32]* @BZ2_rNums, i32 0, i64 %392
  %394 = load i32* %393, align 4
  %395 = load %struct.DState** %1, align 8
  %396 = getelementptr inbounds %struct.DState* %395, i32 0, i32 5
  store i32 %394, i32* %396, align 4
  %397 = load %struct.DState** %1, align 8
  %398 = getelementptr inbounds %struct.DState* %397, i32 0, i32 6
  %399 = load i32* %398, align 4
  %400 = add nsw i32 %399, 1
  store i32 %400, i32* %398, align 4
  %401 = load %struct.DState** %1, align 8
  %402 = getelementptr inbounds %struct.DState* %401, i32 0, i32 6
  %403 = load i32* %402, align 4
  %404 = icmp eq i32 %403, 512
  br i1 %404, label %405, label %408

; <label>:405                                     ; preds = %388
  %406 = load %struct.DState** %1, align 8
  %407 = getelementptr inbounds %struct.DState* %406, i32 0, i32 6
  store i32 0, i32* %407, align 4
  br label %408

; <label>:408                                     ; preds = %405, %388
  br label %409

; <label>:409                                     ; preds = %408, %363
  %410 = load %struct.DState** %1, align 8
  %411 = getelementptr inbounds %struct.DState* %410, i32 0, i32 5
  %412 = load i32* %411, align 4
  %413 = add nsw i32 %412, -1
  store i32 %413, i32* %411, align 4
  %414 = load %struct.DState** %1, align 8
  %415 = getelementptr inbounds %struct.DState* %414, i32 0, i32 5
  %416 = load i32* %415, align 4
  %417 = icmp eq i32 %416, 1
  %418 = select i1 %417, i32 1, i32 0
  %419 = load i8* %k1, align 1
  %420 = zext i8 %419 to i32
  %421 = xor i32 %420, %418
  %422 = trunc i32 %421 to i8
  store i8 %422, i8* %k1, align 1
  %423 = load %struct.DState** %1, align 8
  %424 = getelementptr inbounds %struct.DState* %423, i32 0, i32 17
  %425 = load i32* %424, align 4
  %426 = add nsw i32 %425, 1
  store i32 %426, i32* %424, align 4
  %427 = load i8* %k1, align 1
  %428 = zext i8 %427 to i32
  %429 = add nsw i32 %428, 4
  %430 = load %struct.DState** %1, align 8
  %431 = getelementptr inbounds %struct.DState* %430, i32 0, i32 3
  store i32 %429, i32* %431, align 4
  %432 = load %struct.DState** %1, align 8
  %433 = getelementptr inbounds %struct.DState* %432, i32 0, i32 14
  %434 = load i32* %433, align 4
  %435 = zext i32 %434 to i64
  %436 = load %struct.DState** %1, align 8
  %437 = getelementptr inbounds %struct.DState* %436, i32 0, i32 20
  %438 = load i32** %437, align 8
  %439 = getelementptr inbounds i32* %438, i64 %435
  %440 = load i32* %439, align 4
  %441 = load %struct.DState** %1, align 8
  %442 = getelementptr inbounds %struct.DState* %441, i32 0, i32 14
  store i32 %440, i32* %442, align 4
  %443 = load %struct.DState** %1, align 8
  %444 = getelementptr inbounds %struct.DState* %443, i32 0, i32 14
  %445 = load i32* %444, align 4
  %446 = and i32 %445, 255
  %447 = trunc i32 %446 to i8
  %448 = zext i8 %447 to i32
  %449 = load %struct.DState** %1, align 8
  %450 = getelementptr inbounds %struct.DState* %449, i32 0, i32 15
  store i32 %448, i32* %450, align 4
  %451 = load %struct.DState** %1, align 8
  %452 = getelementptr inbounds %struct.DState* %451, i32 0, i32 14
  %453 = load i32* %452, align 4
  %454 = lshr i32 %453, 8
  store i32 %454, i32* %452, align 4
  %455 = load %struct.DState** %1, align 8
  %456 = getelementptr inbounds %struct.DState* %455, i32 0, i32 5
  %457 = load i32* %456, align 4
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %459, label %480

; <label>:459                                     ; preds = %409
  %460 = load %struct.DState** %1, align 8
  %461 = getelementptr inbounds %struct.DState* %460, i32 0, i32 6
  %462 = load i32* %461, align 4
  %463 = sext i32 %462 to i64
  %464 = getelementptr inbounds [512 x i32]* @BZ2_rNums, i32 0, i64 %463
  %465 = load i32* %464, align 4
  %466 = load %struct.DState** %1, align 8
  %467 = getelementptr inbounds %struct.DState* %466, i32 0, i32 5
  store i32 %465, i32* %467, align 4
  %468 = load %struct.DState** %1, align 8
  %469 = getelementptr inbounds %struct.DState* %468, i32 0, i32 6
  %470 = load i32* %469, align 4
  %471 = add nsw i32 %470, 1
  store i32 %471, i32* %469, align 4
  %472 = load %struct.DState** %1, align 8
  %473 = getelementptr inbounds %struct.DState* %472, i32 0, i32 6
  %474 = load i32* %473, align 4
  %475 = icmp eq i32 %474, 512
  br i1 %475, label %476, label %479

; <label>:476                                     ; preds = %459
  %477 = load %struct.DState** %1, align 8
  %478 = getelementptr inbounds %struct.DState* %477, i32 0, i32 6
  store i32 0, i32* %478, align 4
  br label %479

; <label>:479                                     ; preds = %476, %459
  br label %480

; <label>:480                                     ; preds = %479, %409
  %481 = load %struct.DState** %1, align 8
  %482 = getelementptr inbounds %struct.DState* %481, i32 0, i32 5
  %483 = load i32* %482, align 4
  %484 = add nsw i32 %483, -1
  store i32 %484, i32* %482, align 4
  %485 = load %struct.DState** %1, align 8
  %486 = getelementptr inbounds %struct.DState* %485, i32 0, i32 5
  %487 = load i32* %486, align 4
  %488 = icmp eq i32 %487, 1
  %489 = select i1 %488, i32 1, i32 0
  %490 = load %struct.DState** %1, align 8
  %491 = getelementptr inbounds %struct.DState* %490, i32 0, i32 15
  %492 = load i32* %491, align 4
  %493 = xor i32 %492, %489
  store i32 %493, i32* %491, align 4
  %494 = load %struct.DState** %1, align 8
  %495 = getelementptr inbounds %struct.DState* %494, i32 0, i32 17
  %496 = load i32* %495, align 4
  %497 = add nsw i32 %496, 1
  store i32 %497, i32* %495, align 4
  br label %7

; <label>:498                                     ; preds = %0
  %499 = load %struct.DState** %1, align 8
  %500 = getelementptr inbounds %struct.DState* %499, i32 0, i32 25
  %501 = load i32* %500, align 4
  store i32 %501, i32* %c_calculatedBlockCRC, align 4
  %502 = load %struct.DState** %1, align 8
  %503 = getelementptr inbounds %struct.DState* %502, i32 0, i32 2
  %504 = load i8* %503, align 1
  store i8 %504, i8* %c_state_out_ch, align 1
  %505 = load %struct.DState** %1, align 8
  %506 = getelementptr inbounds %struct.DState* %505, i32 0, i32 3
  %507 = load i32* %506, align 4
  store i32 %507, i32* %c_state_out_len, align 4
  %508 = load %struct.DState** %1, align 8
  %509 = getelementptr inbounds %struct.DState* %508, i32 0, i32 17
  %510 = load i32* %509, align 4
  store i32 %510, i32* %c_nblock_used, align 4
  %511 = load %struct.DState** %1, align 8
  %512 = getelementptr inbounds %struct.DState* %511, i32 0, i32 15
  %513 = load i32* %512, align 4
  store i32 %513, i32* %c_k0, align 4
  %514 = load %struct.DState** %1, align 8
  %515 = getelementptr inbounds %struct.DState* %514, i32 0, i32 20
  %516 = load i32** %515, align 8
  store i32* %516, i32** %c_tt, align 8
  %517 = load %struct.DState** %1, align 8
  %518 = getelementptr inbounds %struct.DState* %517, i32 0, i32 14
  %519 = load i32* %518, align 4
  store i32 %519, i32* %c_tPos, align 4
  %520 = load %struct.DState** %1, align 8
  %521 = getelementptr inbounds %struct.DState* %520, i32 0, i32 0
  %522 = load %struct.bz_stream** %521, align 8
  %523 = getelementptr inbounds %struct.bz_stream* %522, i32 0, i32 4
  %524 = load i8** %523, align 8
  store i8* %524, i8** %cs_next_out, align 8
  %525 = load %struct.DState** %1, align 8
  %526 = getelementptr inbounds %struct.DState* %525, i32 0, i32 0
  %527 = load %struct.bz_stream** %526, align 8
  %528 = getelementptr inbounds %struct.bz_stream* %527, i32 0, i32 5
  %529 = load i32* %528, align 4
  store i32 %529, i32* %cs_avail_out, align 4
  %530 = load i32* %cs_avail_out, align 4
  store i32 %530, i32* %avail_out_INIT, align 4
  %531 = load %struct.DState** %1, align 8
  %532 = getelementptr inbounds %struct.DState* %531, i32 0, i32 51
  %533 = load i32* %532, align 4
  %534 = add nsw i32 %533, 1
  store i32 %534, i32* %s_save_nblockPP, align 4
  br label %535

; <label>:535                                     ; preds = %498, %638, %644, %663, %669, %672
  %536 = load i32* %c_state_out_len, align 4
  %537 = icmp sgt i32 %536, 0
  br i1 %537, label %538, label %590

; <label>:538                                     ; preds = %535
  br label %539

; <label>:539                                     ; preds = %538, %547
  %540 = load i32* %cs_avail_out, align 4
  %541 = icmp eq i32 %540, 0
  br i1 %541, label %542, label %543

; <label>:542                                     ; preds = %539
  br label %701

; <label>:543                                     ; preds = %539
  %544 = load i32* %c_state_out_len, align 4
  %545 = icmp eq i32 %544, 1
  br i1 %545, label %546, label %547

; <label>:546                                     ; preds = %543
  br label %567

; <label>:547                                     ; preds = %543
  %548 = load i8* %c_state_out_ch, align 1
  %549 = load i8** %cs_next_out, align 8
  store i8 %548, i8* %549, align 1
  %550 = load i32* %c_calculatedBlockCRC, align 4
  %551 = shl i32 %550, 8
  %552 = load i32* %c_calculatedBlockCRC, align 4
  %553 = lshr i32 %552, 24
  %554 = load i8* %c_state_out_ch, align 1
  %555 = zext i8 %554 to i32
  %556 = xor i32 %553, %555
  %557 = zext i32 %556 to i64
  %558 = getelementptr inbounds [256 x i32]* @BZ2_crc32Table, i32 0, i64 %557
  %559 = load i32* %558, align 4
  %560 = xor i32 %551, %559
  store i32 %560, i32* %c_calculatedBlockCRC, align 4
  %561 = load i32* %c_state_out_len, align 4
  %562 = add nsw i32 %561, -1
  store i32 %562, i32* %c_state_out_len, align 4
  %563 = load i8** %cs_next_out, align 8
  %564 = getelementptr inbounds i8* %563, i32 1
  store i8* %564, i8** %cs_next_out, align 8
  %565 = load i32* %cs_avail_out, align 4
  %566 = add i32 %565, -1
  store i32 %566, i32* %cs_avail_out, align 4
  br label %539

; <label>:567                                     ; preds = %546
  br label %568

; <label>:568                                     ; preds = %621, %614, %567
  %569 = load i32* %cs_avail_out, align 4
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %571, label %572

; <label>:571                                     ; preds = %568
  store i32 1, i32* %c_state_out_len, align 4
  br label %701

; <label>:572                                     ; preds = %568
  %573 = load i8* %c_state_out_ch, align 1
  %574 = load i8** %cs_next_out, align 8
  store i8 %573, i8* %574, align 1
  %575 = load i32* %c_calculatedBlockCRC, align 4
  %576 = shl i32 %575, 8
  %577 = load i32* %c_calculatedBlockCRC, align 4
  %578 = lshr i32 %577, 24
  %579 = load i8* %c_state_out_ch, align 1
  %580 = zext i8 %579 to i32
  %581 = xor i32 %578, %580
  %582 = zext i32 %581 to i64
  %583 = getelementptr inbounds [256 x i32]* @BZ2_crc32Table, i32 0, i64 %582
  %584 = load i32* %583, align 4
  %585 = xor i32 %576, %584
  store i32 %585, i32* %c_calculatedBlockCRC, align 4
  %586 = load i8** %cs_next_out, align 8
  %587 = getelementptr inbounds i8* %586, i32 1
  store i8* %587, i8** %cs_next_out, align 8
  %588 = load i32* %cs_avail_out, align 4
  %589 = add i32 %588, -1
  store i32 %589, i32* %cs_avail_out, align 4
  br label %590

; <label>:590                                     ; preds = %572, %535
  %591 = load i32* %c_nblock_used, align 4
  %592 = load i32* %s_save_nblockPP, align 4
  %593 = icmp eq i32 %591, %592
  br i1 %593, label %594, label %595

; <label>:594                                     ; preds = %590
  store i32 0, i32* %c_state_out_len, align 4
  br label %701

; <label>:595                                     ; preds = %590
  %596 = load i32* %c_k0, align 4
  %597 = trunc i32 %596 to i8
  store i8 %597, i8* %c_state_out_ch, align 1
  %598 = load i32* %c_tPos, align 4
  %599 = zext i32 %598 to i64
  %600 = load i32** %c_tt, align 8
  %601 = getelementptr inbounds i32* %600, i64 %599
  %602 = load i32* %601, align 4
  store i32 %602, i32* %c_tPos, align 4
  %603 = load i32* %c_tPos, align 4
  %604 = and i32 %603, 255
  %605 = trunc i32 %604 to i8
  store i8 %605, i8* %k1, align 1
  %606 = load i32* %c_tPos, align 4
  %607 = lshr i32 %606, 8
  store i32 %607, i32* %c_tPos, align 4
  %608 = load i32* %c_nblock_used, align 4
  %609 = add nsw i32 %608, 1
  store i32 %609, i32* %c_nblock_used, align 4
  %610 = load i8* %k1, align 1
  %611 = zext i8 %610 to i32
  %612 = load i32* %c_k0, align 4
  %613 = icmp ne i32 %611, %612
  br i1 %613, label %614, label %617

; <label>:614                                     ; preds = %595
  %615 = load i8* %k1, align 1
  %616 = zext i8 %615 to i32
  store i32 %616, i32* %c_k0, align 4
  br label %568

; <label>:617                                     ; preds = %595
  %618 = load i32* %c_nblock_used, align 4
  %619 = load i32* %s_save_nblockPP, align 4
  %620 = icmp eq i32 %618, %619
  br i1 %620, label %621, label %622

; <label>:621                                     ; preds = %617
  br label %568

; <label>:622                                     ; preds = %617
  store i32 2, i32* %c_state_out_len, align 4
  %623 = load i32* %c_tPos, align 4
  %624 = zext i32 %623 to i64
  %625 = load i32** %c_tt, align 8
  %626 = getelementptr inbounds i32* %625, i64 %624
  %627 = load i32* %626, align 4
  store i32 %627, i32* %c_tPos, align 4
  %628 = load i32* %c_tPos, align 4
  %629 = and i32 %628, 255
  %630 = trunc i32 %629 to i8
  store i8 %630, i8* %k1, align 1
  %631 = load i32* %c_tPos, align 4
  %632 = lshr i32 %631, 8
  store i32 %632, i32* %c_tPos, align 4
  %633 = load i32* %c_nblock_used, align 4
  %634 = add nsw i32 %633, 1
  store i32 %634, i32* %c_nblock_used, align 4
  %635 = load i32* %c_nblock_used, align 4
  %636 = load i32* %s_save_nblockPP, align 4
  %637 = icmp eq i32 %635, %636
  br i1 %637, label %638, label %639

; <label>:638                                     ; preds = %622
  br label %535

; <label>:639                                     ; preds = %622
  %640 = load i8* %k1, align 1
  %641 = zext i8 %640 to i32
  %642 = load i32* %c_k0, align 4
  %643 = icmp ne i32 %641, %642
  br i1 %643, label %644, label %647

; <label>:644                                     ; preds = %639
  %645 = load i8* %k1, align 1
  %646 = zext i8 %645 to i32
  store i32 %646, i32* %c_k0, align 4
  br label %535

; <label>:647                                     ; preds = %639
  store i32 3, i32* %c_state_out_len, align 4
  %648 = load i32* %c_tPos, align 4
  %649 = zext i32 %648 to i64
  %650 = load i32** %c_tt, align 8
  %651 = getelementptr inbounds i32* %650, i64 %649
  %652 = load i32* %651, align 4
  store i32 %652, i32* %c_tPos, align 4
  %653 = load i32* %c_tPos, align 4
  %654 = and i32 %653, 255
  %655 = trunc i32 %654 to i8
  store i8 %655, i8* %k1, align 1
  %656 = load i32* %c_tPos, align 4
  %657 = lshr i32 %656, 8
  store i32 %657, i32* %c_tPos, align 4
  %658 = load i32* %c_nblock_used, align 4
  %659 = add nsw i32 %658, 1
  store i32 %659, i32* %c_nblock_used, align 4
  %660 = load i32* %c_nblock_used, align 4
  %661 = load i32* %s_save_nblockPP, align 4
  %662 = icmp eq i32 %660, %661
  br i1 %662, label %663, label %664

; <label>:663                                     ; preds = %647
  br label %535

; <label>:664                                     ; preds = %647
  %665 = load i8* %k1, align 1
  %666 = zext i8 %665 to i32
  %667 = load i32* %c_k0, align 4
  %668 = icmp ne i32 %666, %667
  br i1 %668, label %669, label %672

; <label>:669                                     ; preds = %664
  %670 = load i8* %k1, align 1
  %671 = zext i8 %670 to i32
  store i32 %671, i32* %c_k0, align 4
  br label %535

; <label>:672                                     ; preds = %664
  %673 = load i32* %c_tPos, align 4
  %674 = zext i32 %673 to i64
  %675 = load i32** %c_tt, align 8
  %676 = getelementptr inbounds i32* %675, i64 %674
  %677 = load i32* %676, align 4
  store i32 %677, i32* %c_tPos, align 4
  %678 = load i32* %c_tPos, align 4
  %679 = and i32 %678, 255
  %680 = trunc i32 %679 to i8
  store i8 %680, i8* %k1, align 1
  %681 = load i32* %c_tPos, align 4
  %682 = lshr i32 %681, 8
  store i32 %682, i32* %c_tPos, align 4
  %683 = load i32* %c_nblock_used, align 4
  %684 = add nsw i32 %683, 1
  store i32 %684, i32* %c_nblock_used, align 4
  %685 = load i8* %k1, align 1
  %686 = zext i8 %685 to i32
  %687 = add nsw i32 %686, 4
  store i32 %687, i32* %c_state_out_len, align 4
  %688 = load i32* %c_tPos, align 4
  %689 = zext i32 %688 to i64
  %690 = load i32** %c_tt, align 8
  %691 = getelementptr inbounds i32* %690, i64 %689
  %692 = load i32* %691, align 4
  store i32 %692, i32* %c_tPos, align 4
  %693 = load i32* %c_tPos, align 4
  %694 = and i32 %693, 255
  %695 = trunc i32 %694 to i8
  %696 = zext i8 %695 to i32
  store i32 %696, i32* %c_k0, align 4
  %697 = load i32* %c_tPos, align 4
  %698 = lshr i32 %697, 8
  store i32 %698, i32* %c_tPos, align 4
  %699 = load i32* %c_nblock_used, align 4
  %700 = add nsw i32 %699, 1
  store i32 %700, i32* %c_nblock_used, align 4
  br label %535

; <label>:701                                     ; preds = %594, %571, %542
  %702 = load %struct.DState** %1, align 8
  %703 = getelementptr inbounds %struct.DState* %702, i32 0, i32 0
  %704 = load %struct.bz_stream** %703, align 8
  %705 = getelementptr inbounds %struct.bz_stream* %704, i32 0, i32 6
  %706 = load i32* %705, align 4
  store i32 %706, i32* %total_out_lo32_old, align 4
  %707 = load i32* %avail_out_INIT, align 4
  %708 = load i32* %cs_avail_out, align 4
  %709 = sub i32 %707, %708
  %710 = load %struct.DState** %1, align 8
  %711 = getelementptr inbounds %struct.DState* %710, i32 0, i32 0
  %712 = load %struct.bz_stream** %711, align 8
  %713 = getelementptr inbounds %struct.bz_stream* %712, i32 0, i32 6
  %714 = load i32* %713, align 4
  %715 = add i32 %714, %709
  store i32 %715, i32* %713, align 4
  %716 = load %struct.DState** %1, align 8
  %717 = getelementptr inbounds %struct.DState* %716, i32 0, i32 0
  %718 = load %struct.bz_stream** %717, align 8
  %719 = getelementptr inbounds %struct.bz_stream* %718, i32 0, i32 6
  %720 = load i32* %719, align 4
  %721 = load i32* %total_out_lo32_old, align 4
  %722 = icmp ult i32 %720, %721
  br i1 %722, label %723, label %730

; <label>:723                                     ; preds = %701
  %724 = load %struct.DState** %1, align 8
  %725 = getelementptr inbounds %struct.DState* %724, i32 0, i32 0
  %726 = load %struct.bz_stream** %725, align 8
  %727 = getelementptr inbounds %struct.bz_stream* %726, i32 0, i32 7
  %728 = load i32* %727, align 4
  %729 = add i32 %728, 1
  store i32 %729, i32* %727, align 4
  br label %730

; <label>:730                                     ; preds = %723, %701
  %731 = load i32* %c_calculatedBlockCRC, align 4
  %732 = load %struct.DState** %1, align 8
  %733 = getelementptr inbounds %struct.DState* %732, i32 0, i32 25
  store i32 %731, i32* %733, align 4
  %734 = load i8* %c_state_out_ch, align 1
  %735 = load %struct.DState** %1, align 8
  %736 = getelementptr inbounds %struct.DState* %735, i32 0, i32 2
  store i8 %734, i8* %736, align 1
  %737 = load i32* %c_state_out_len, align 4
  %738 = load %struct.DState** %1, align 8
  %739 = getelementptr inbounds %struct.DState* %738, i32 0, i32 3
  store i32 %737, i32* %739, align 4
  %740 = load i32* %c_nblock_used, align 4
  %741 = load %struct.DState** %1, align 8
  %742 = getelementptr inbounds %struct.DState* %741, i32 0, i32 17
  store i32 %740, i32* %742, align 4
  %743 = load i32* %c_k0, align 4
  %744 = load %struct.DState** %1, align 8
  %745 = getelementptr inbounds %struct.DState* %744, i32 0, i32 15
  store i32 %743, i32* %745, align 4
  %746 = load i32** %c_tt, align 8
  %747 = load %struct.DState** %1, align 8
  %748 = getelementptr inbounds %struct.DState* %747, i32 0, i32 20
  store i32* %746, i32** %748, align 8
  %749 = load i32* %c_tPos, align 4
  %750 = load %struct.DState** %1, align 8
  %751 = getelementptr inbounds %struct.DState* %750, i32 0, i32 14
  store i32 %749, i32* %751, align 4
  %752 = load i8** %cs_next_out, align 8
  %753 = load %struct.DState** %1, align 8
  %754 = getelementptr inbounds %struct.DState* %753, i32 0, i32 0
  %755 = load %struct.bz_stream** %754, align 8
  %756 = getelementptr inbounds %struct.bz_stream* %755, i32 0, i32 4
  store i8* %752, i8** %756, align 8
  %757 = load i32* %cs_avail_out, align 4
  %758 = load %struct.DState** %1, align 8
  %759 = getelementptr inbounds %struct.DState* %758, i32 0, i32 0
  %760 = load %struct.bz_stream** %759, align 8
  %761 = getelementptr inbounds %struct.bz_stream* %760, i32 0, i32 5
  store i32 %757, i32* %761, align 4
  br label %762

; <label>:762                                     ; preds = %15, %95, %730
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %strm) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.bz_stream*, align 8
  %s = alloca %struct.DState*, align 8
  store %struct.bz_stream* %strm, %struct.bz_stream** %2, align 8
  %3 = load %struct.bz_stream** %2, align 8
  %4 = icmp eq %struct.bz_stream* %3, null
  br i1 %4, label %5, label %6

; <label>:5                                       ; preds = %0
  store i32 -2, i32* %1
  br label %80

; <label>:6                                       ; preds = %0
  %7 = load %struct.bz_stream** %2, align 8
  %8 = getelementptr inbounds %struct.bz_stream* %7, i32 0, i32 8
  %9 = load i8** %8, align 8
  %10 = bitcast i8* %9 to %struct.DState*
  store %struct.DState* %10, %struct.DState** %s, align 8
  %11 = load %struct.DState** %s, align 8
  %12 = icmp eq %struct.DState* %11, null
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %6
  store i32 -2, i32* %1
  br label %80

; <label>:14                                      ; preds = %6
  %15 = load %struct.DState** %s, align 8
  %16 = getelementptr inbounds %struct.DState* %15, i32 0, i32 0
  %17 = load %struct.bz_stream** %16, align 8
  %18 = load %struct.bz_stream** %2, align 8
  %19 = icmp ne %struct.bz_stream* %17, %18
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %14
  store i32 -2, i32* %1
  br label %80

; <label>:21                                      ; preds = %14
  %22 = load %struct.DState** %s, align 8
  %23 = getelementptr inbounds %struct.DState* %22, i32 0, i32 20
  %24 = load i32** %23, align 8
  %25 = icmp ne i32* %24, null
  br i1 %25, label %26, label %37

; <label>:26                                      ; preds = %21
  %27 = load %struct.bz_stream** %2, align 8
  %28 = getelementptr inbounds %struct.bz_stream* %27, i32 0, i32 10
  %29 = load void (i8*, i8*)** %28, align 8
  %30 = load %struct.bz_stream** %2, align 8
  %31 = getelementptr inbounds %struct.bz_stream* %30, i32 0, i32 11
  %32 = load i8** %31, align 8
  %33 = load %struct.DState** %s, align 8
  %34 = getelementptr inbounds %struct.DState* %33, i32 0, i32 20
  %35 = load i32** %34, align 8
  %36 = bitcast i32* %35 to i8*
  call void %29(i8* %32, i8* %36)
  br label %37

; <label>:37                                      ; preds = %26, %21
  %38 = load %struct.DState** %s, align 8
  %39 = getelementptr inbounds %struct.DState* %38, i32 0, i32 21
  %40 = load i16** %39, align 8
  %41 = icmp ne i16* %40, null
  br i1 %41, label %42, label %53

; <label>:42                                      ; preds = %37
  %43 = load %struct.bz_stream** %2, align 8
  %44 = getelementptr inbounds %struct.bz_stream* %43, i32 0, i32 10
  %45 = load void (i8*, i8*)** %44, align 8
  %46 = load %struct.bz_stream** %2, align 8
  %47 = getelementptr inbounds %struct.bz_stream* %46, i32 0, i32 11
  %48 = load i8** %47, align 8
  %49 = load %struct.DState** %s, align 8
  %50 = getelementptr inbounds %struct.DState* %49, i32 0, i32 21
  %51 = load i16** %50, align 8
  %52 = bitcast i16* %51 to i8*
  call void %45(i8* %48, i8* %52)
  br label %53

; <label>:53                                      ; preds = %42, %37
  %54 = load %struct.DState** %s, align 8
  %55 = getelementptr inbounds %struct.DState* %54, i32 0, i32 22
  %56 = load i8** %55, align 8
  %57 = icmp ne i8* %56, null
  br i1 %57, label %58, label %68

; <label>:58                                      ; preds = %53
  %59 = load %struct.bz_stream** %2, align 8
  %60 = getelementptr inbounds %struct.bz_stream* %59, i32 0, i32 10
  %61 = load void (i8*, i8*)** %60, align 8
  %62 = load %struct.bz_stream** %2, align 8
  %63 = getelementptr inbounds %struct.bz_stream* %62, i32 0, i32 11
  %64 = load i8** %63, align 8
  %65 = load %struct.DState** %s, align 8
  %66 = getelementptr inbounds %struct.DState* %65, i32 0, i32 22
  %67 = load i8** %66, align 8
  call void %61(i8* %64, i8* %67)
  br label %68

; <label>:68                                      ; preds = %58, %53
  %69 = load %struct.bz_stream** %2, align 8
  %70 = getelementptr inbounds %struct.bz_stream* %69, i32 0, i32 10
  %71 = load void (i8*, i8*)** %70, align 8
  %72 = load %struct.bz_stream** %2, align 8
  %73 = getelementptr inbounds %struct.bz_stream* %72, i32 0, i32 11
  %74 = load i8** %73, align 8
  %75 = load %struct.bz_stream** %2, align 8
  %76 = getelementptr inbounds %struct.bz_stream* %75, i32 0, i32 8
  %77 = load i8** %76, align 8
  call void %71(i8* %74, i8* %77)
  %78 = load %struct.bz_stream** %2, align 8
  %79 = getelementptr inbounds %struct.bz_stream* %78, i32 0, i32 8
  store i8* null, i8** %79, align 8
  store i32 0, i32* %1
  br label %80

; <label>:80                                      ; preds = %68, %20, %13, %5
  %81 = load i32* %1
  ret i32 %81
}

; Function Attrs: nounwind uwtable
define i8* @BZ2_bzWriteOpen(i32* %bzerror, %struct._IO_FILE* %f, i32 %blockSize100k, i32 %verbosity, i32 %workFactor) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i32*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %ret = alloca i32, align 4
  %bzf = alloca %struct.bzFile*, align 8
  store i32* %bzerror, i32** %2, align 8
  store %struct._IO_FILE* %f, %struct._IO_FILE** %3, align 8
  store i32 %blockSize100k, i32* %4, align 4
  store i32 %verbosity, i32* %5, align 4
  store i32 %workFactor, i32* %6, align 4
  store %struct.bzFile* null, %struct.bzFile** %bzf, align 8
  %7 = load i32** %2, align 8
  %8 = icmp ne i32* %7, null
  br i1 %8, label %9, label %11

; <label>:9                                       ; preds = %0
  %10 = load i32** %2, align 8
  store i32 0, i32* %10, align 4
  br label %11

; <label>:11                                      ; preds = %9, %0
  %12 = load %struct.bzFile** %bzf, align 8
  %13 = icmp ne %struct.bzFile* %12, null
  br i1 %13, label %14, label %17

; <label>:14                                      ; preds = %11
  %15 = load %struct.bzFile** %bzf, align 8
  %16 = getelementptr inbounds %struct.bzFile* %15, i32 0, i32 5
  store i32 0, i32* %16, align 4
  br label %17

; <label>:17                                      ; preds = %14, %11
  %18 = load %struct._IO_FILE** %3, align 8
  %19 = icmp eq %struct._IO_FILE* %18, null
  br i1 %19, label %38, label %20

; <label>:20                                      ; preds = %17
  %21 = load i32* %4, align 4
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %38, label %23

; <label>:23                                      ; preds = %20
  %24 = load i32* %4, align 4
  %25 = icmp sgt i32 %24, 9
  br i1 %25, label %38, label %26

; <label>:26                                      ; preds = %23
  %27 = load i32* %6, align 4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %38, label %29

; <label>:29                                      ; preds = %26
  %30 = load i32* %6, align 4
  %31 = icmp sgt i32 %30, 250
  br i1 %31, label %38, label %32

; <label>:32                                      ; preds = %29
  %33 = load i32* %5, align 4
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %38, label %35

; <label>:35                                      ; preds = %32
  %36 = load i32* %5, align 4
  %37 = icmp sgt i32 %36, 4
  br i1 %37, label %38, label %50

; <label>:38                                      ; preds = %35, %32, %29, %26, %23, %20, %17
  %39 = load i32** %2, align 8
  %40 = icmp ne i32* %39, null
  br i1 %40, label %41, label %43

; <label>:41                                      ; preds = %38
  %42 = load i32** %2, align 8
  store i32 -2, i32* %42, align 4
  br label %43

; <label>:43                                      ; preds = %41, %38
  %44 = load %struct.bzFile** %bzf, align 8
  %45 = icmp ne %struct.bzFile* %44, null
  br i1 %45, label %46, label %49

; <label>:46                                      ; preds = %43
  %47 = load %struct.bzFile** %bzf, align 8
  %48 = getelementptr inbounds %struct.bzFile* %47, i32 0, i32 5
  store i32 -2, i32* %48, align 4
  br label %49

; <label>:49                                      ; preds = %46, %43
  store i8* null, i8** %1
  br label %149

; <label>:50                                      ; preds = %35
  %51 = load %struct._IO_FILE** %3, align 8
  %52 = call i32 @ferror(%struct._IO_FILE* %51) #8
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %66

; <label>:54                                      ; preds = %50
  %55 = load i32** %2, align 8
  %56 = icmp ne i32* %55, null
  br i1 %56, label %57, label %59

; <label>:57                                      ; preds = %54
  %58 = load i32** %2, align 8
  store i32 -6, i32* %58, align 4
  br label %59

; <label>:59                                      ; preds = %57, %54
  %60 = load %struct.bzFile** %bzf, align 8
  %61 = icmp ne %struct.bzFile* %60, null
  br i1 %61, label %62, label %65

; <label>:62                                      ; preds = %59
  %63 = load %struct.bzFile** %bzf, align 8
  %64 = getelementptr inbounds %struct.bzFile* %63, i32 0, i32 5
  store i32 -6, i32* %64, align 4
  br label %65

; <label>:65                                      ; preds = %62, %59
  store i8* null, i8** %1
  br label %149

; <label>:66                                      ; preds = %50
  %67 = call noalias i8* @malloc(i64 5104) #8
  %68 = bitcast i8* %67 to %struct.bzFile*
  store %struct.bzFile* %68, %struct.bzFile** %bzf, align 8
  %69 = load %struct.bzFile** %bzf, align 8
  %70 = icmp eq %struct.bzFile* %69, null
  br i1 %70, label %71, label %83

; <label>:71                                      ; preds = %66
  %72 = load i32** %2, align 8
  %73 = icmp ne i32* %72, null
  br i1 %73, label %74, label %76

; <label>:74                                      ; preds = %71
  %75 = load i32** %2, align 8
  store i32 -3, i32* %75, align 4
  br label %76

; <label>:76                                      ; preds = %74, %71
  %77 = load %struct.bzFile** %bzf, align 8
  %78 = icmp ne %struct.bzFile* %77, null
  br i1 %78, label %79, label %82

; <label>:79                                      ; preds = %76
  %80 = load %struct.bzFile** %bzf, align 8
  %81 = getelementptr inbounds %struct.bzFile* %80, i32 0, i32 5
  store i32 -3, i32* %81, align 4
  br label %82

; <label>:82                                      ; preds = %79, %76
  store i8* null, i8** %1
  br label %149

; <label>:83                                      ; preds = %66
  %84 = load i32** %2, align 8
  %85 = icmp ne i32* %84, null
  br i1 %85, label %86, label %88

; <label>:86                                      ; preds = %83
  %87 = load i32** %2, align 8
  store i32 0, i32* %87, align 4
  br label %88

; <label>:88                                      ; preds = %86, %83
  %89 = load %struct.bzFile** %bzf, align 8
  %90 = icmp ne %struct.bzFile* %89, null
  br i1 %90, label %91, label %94

; <label>:91                                      ; preds = %88
  %92 = load %struct.bzFile** %bzf, align 8
  %93 = getelementptr inbounds %struct.bzFile* %92, i32 0, i32 5
  store i32 0, i32* %93, align 4
  br label %94

; <label>:94                                      ; preds = %91, %88
  %95 = load %struct.bzFile** %bzf, align 8
  %96 = getelementptr inbounds %struct.bzFile* %95, i32 0, i32 6
  store i8 0, i8* %96, align 1
  %97 = load %struct.bzFile** %bzf, align 8
  %98 = getelementptr inbounds %struct.bzFile* %97, i32 0, i32 2
  store i32 0, i32* %98, align 4
  %99 = load %struct._IO_FILE** %3, align 8
  %100 = load %struct.bzFile** %bzf, align 8
  %101 = getelementptr inbounds %struct.bzFile* %100, i32 0, i32 0
  store %struct._IO_FILE* %99, %struct._IO_FILE** %101, align 8
  %102 = load %struct.bzFile** %bzf, align 8
  %103 = getelementptr inbounds %struct.bzFile* %102, i32 0, i32 3
  store i8 1, i8* %103, align 1
  %104 = load %struct.bzFile** %bzf, align 8
  %105 = getelementptr inbounds %struct.bzFile* %104, i32 0, i32 4
  %106 = getelementptr inbounds %struct.bz_stream* %105, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %106, align 8
  %107 = load %struct.bzFile** %bzf, align 8
  %108 = getelementptr inbounds %struct.bzFile* %107, i32 0, i32 4
  %109 = getelementptr inbounds %struct.bz_stream* %108, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %109, align 8
  %110 = load %struct.bzFile** %bzf, align 8
  %111 = getelementptr inbounds %struct.bzFile* %110, i32 0, i32 4
  %112 = getelementptr inbounds %struct.bz_stream* %111, i32 0, i32 11
  store i8* null, i8** %112, align 8
  %113 = load i32* %6, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

; <label>:115                                     ; preds = %94
  store i32 30, i32* %6, align 4
  br label %116

; <label>:116                                     ; preds = %115, %94
  %117 = load %struct.bzFile** %bzf, align 8
  %118 = getelementptr inbounds %struct.bzFile* %117, i32 0, i32 4
  %119 = load i32* %4, align 4
  %120 = load i32* %5, align 4
  %121 = load i32* %6, align 4
  %122 = call i32 @BZ2_bzCompressInit(%struct.bz_stream* %118, i32 %119, i32 %120, i32 %121)
  store i32 %122, i32* %ret, align 4
  %123 = load i32* %ret, align 4
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %125, label %141

; <label>:125                                     ; preds = %116
  %126 = load i32** %2, align 8
  %127 = icmp ne i32* %126, null
  br i1 %127, label %128, label %131

; <label>:128                                     ; preds = %125
  %129 = load i32* %ret, align 4
  %130 = load i32** %2, align 8
  store i32 %129, i32* %130, align 4
  br label %131

; <label>:131                                     ; preds = %128, %125
  %132 = load %struct.bzFile** %bzf, align 8
  %133 = icmp ne %struct.bzFile* %132, null
  br i1 %133, label %134, label %138

; <label>:134                                     ; preds = %131
  %135 = load i32* %ret, align 4
  %136 = load %struct.bzFile** %bzf, align 8
  %137 = getelementptr inbounds %struct.bzFile* %136, i32 0, i32 5
  store i32 %135, i32* %137, align 4
  br label %138

; <label>:138                                     ; preds = %134, %131
  %139 = load %struct.bzFile** %bzf, align 8
  %140 = bitcast %struct.bzFile* %139 to i8*
  call void @free(i8* %140) #8
  store i8* null, i8** %1
  br label %149

; <label>:141                                     ; preds = %116
  %142 = load %struct.bzFile** %bzf, align 8
  %143 = getelementptr inbounds %struct.bzFile* %142, i32 0, i32 4
  %144 = getelementptr inbounds %struct.bz_stream* %143, i32 0, i32 1
  store i32 0, i32* %144, align 4
  %145 = load %struct.bzFile** %bzf, align 8
  %146 = getelementptr inbounds %struct.bzFile* %145, i32 0, i32 6
  store i8 1, i8* %146, align 1
  %147 = load %struct.bzFile** %bzf, align 8
  %148 = bitcast %struct.bzFile* %147 to i8*
  store i8* %148, i8** %1
  br label %149

; <label>:149                                     ; preds = %141, %138, %82, %65, %49
  %150 = load i8** %1
  ret i8* %150
}

; Function Attrs: nounwind
declare i32 @ferror(%struct._IO_FILE*) #4

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #4

; Function Attrs: nounwind
declare void @free(i8*) #4

; Function Attrs: nounwind uwtable
define void @BZ2_bzWrite(i32* %bzerror, i8* %b, i8* %buf, i32 %len) #0 {
  %1 = alloca i32*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %n = alloca i32, align 4
  %n2 = alloca i32, align 4
  %ret = alloca i32, align 4
  %bzf = alloca %struct.bzFile*, align 8
  store i32* %bzerror, i32** %1, align 8
  store i8* %b, i8** %2, align 8
  store i8* %buf, i8** %3, align 8
  store i32 %len, i32* %4, align 4
  %5 = load i8** %2, align 8
  %6 = bitcast i8* %5 to %struct.bzFile*
  store %struct.bzFile* %6, %struct.bzFile** %bzf, align 8
  %7 = load i32** %1, align 8
  %8 = icmp ne i32* %7, null
  br i1 %8, label %9, label %11

; <label>:9                                       ; preds = %0
  %10 = load i32** %1, align 8
  store i32 0, i32* %10, align 4
  br label %11

; <label>:11                                      ; preds = %9, %0
  %12 = load %struct.bzFile** %bzf, align 8
  %13 = icmp ne %struct.bzFile* %12, null
  br i1 %13, label %14, label %17

; <label>:14                                      ; preds = %11
  %15 = load %struct.bzFile** %bzf, align 8
  %16 = getelementptr inbounds %struct.bzFile* %15, i32 0, i32 5
  store i32 0, i32* %16, align 4
  br label %17

; <label>:17                                      ; preds = %14, %11
  %18 = load %struct.bzFile** %bzf, align 8
  %19 = icmp eq %struct.bzFile* %18, null
  br i1 %19, label %26, label %20

; <label>:20                                      ; preds = %17
  %21 = load i8** %3, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %26, label %23

; <label>:23                                      ; preds = %20
  %24 = load i32* %4, align 4
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %26, label %38

; <label>:26                                      ; preds = %23, %20, %17
  %27 = load i32** %1, align 8
  %28 = icmp ne i32* %27, null
  br i1 %28, label %29, label %31

; <label>:29                                      ; preds = %26
  %30 = load i32** %1, align 8
  store i32 -2, i32* %30, align 4
  br label %31

; <label>:31                                      ; preds = %29, %26
  %32 = load %struct.bzFile** %bzf, align 8
  %33 = icmp ne %struct.bzFile* %32, null
  br i1 %33, label %34, label %37

; <label>:34                                      ; preds = %31
  %35 = load %struct.bzFile** %bzf, align 8
  %36 = getelementptr inbounds %struct.bzFile* %35, i32 0, i32 5
  store i32 -2, i32* %36, align 4
  br label %37

; <label>:37                                      ; preds = %34, %31
  br label %189

; <label>:38                                      ; preds = %23
  %39 = load %struct.bzFile** %bzf, align 8
  %40 = getelementptr inbounds %struct.bzFile* %39, i32 0, i32 3
  %41 = load i8* %40, align 1
  %42 = icmp ne i8 %41, 0
  br i1 %42, label %55, label %43

; <label>:43                                      ; preds = %38
  %44 = load i32** %1, align 8
  %45 = icmp ne i32* %44, null
  br i1 %45, label %46, label %48

; <label>:46                                      ; preds = %43
  %47 = load i32** %1, align 8
  store i32 -1, i32* %47, align 4
  br label %48

; <label>:48                                      ; preds = %46, %43
  %49 = load %struct.bzFile** %bzf, align 8
  %50 = icmp ne %struct.bzFile* %49, null
  br i1 %50, label %51, label %54

; <label>:51                                      ; preds = %48
  %52 = load %struct.bzFile** %bzf, align 8
  %53 = getelementptr inbounds %struct.bzFile* %52, i32 0, i32 5
  store i32 -1, i32* %53, align 4
  br label %54

; <label>:54                                      ; preds = %51, %48
  br label %189

; <label>:55                                      ; preds = %38
  %56 = load %struct.bzFile** %bzf, align 8
  %57 = getelementptr inbounds %struct.bzFile* %56, i32 0, i32 0
  %58 = load %struct._IO_FILE** %57, align 8
  %59 = call i32 @ferror(%struct._IO_FILE* %58) #8
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %61, label %73

; <label>:61                                      ; preds = %55
  %62 = load i32** %1, align 8
  %63 = icmp ne i32* %62, null
  br i1 %63, label %64, label %66

; <label>:64                                      ; preds = %61
  %65 = load i32** %1, align 8
  store i32 -6, i32* %65, align 4
  br label %66

; <label>:66                                      ; preds = %64, %61
  %67 = load %struct.bzFile** %bzf, align 8
  %68 = icmp ne %struct.bzFile* %67, null
  br i1 %68, label %69, label %72

; <label>:69                                      ; preds = %66
  %70 = load %struct.bzFile** %bzf, align 8
  %71 = getelementptr inbounds %struct.bzFile* %70, i32 0, i32 5
  store i32 -6, i32* %71, align 4
  br label %72

; <label>:72                                      ; preds = %69, %66
  br label %189

; <label>:73                                      ; preds = %55
  %74 = load i32* %4, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %88

; <label>:76                                      ; preds = %73
  %77 = load i32** %1, align 8
  %78 = icmp ne i32* %77, null
  br i1 %78, label %79, label %81

; <label>:79                                      ; preds = %76
  %80 = load i32** %1, align 8
  store i32 0, i32* %80, align 4
  br label %81

; <label>:81                                      ; preds = %79, %76
  %82 = load %struct.bzFile** %bzf, align 8
  %83 = icmp ne %struct.bzFile* %82, null
  br i1 %83, label %84, label %87

; <label>:84                                      ; preds = %81
  %85 = load %struct.bzFile** %bzf, align 8
  %86 = getelementptr inbounds %struct.bzFile* %85, i32 0, i32 5
  store i32 0, i32* %86, align 4
  br label %87

; <label>:87                                      ; preds = %84, %81
  br label %189

; <label>:88                                      ; preds = %73
  %89 = load i32* %4, align 4
  %90 = load %struct.bzFile** %bzf, align 8
  %91 = getelementptr inbounds %struct.bzFile* %90, i32 0, i32 4
  %92 = getelementptr inbounds %struct.bz_stream* %91, i32 0, i32 1
  store i32 %89, i32* %92, align 4
  %93 = load i8** %3, align 8
  %94 = load %struct.bzFile** %bzf, align 8
  %95 = getelementptr inbounds %struct.bzFile* %94, i32 0, i32 4
  %96 = getelementptr inbounds %struct.bz_stream* %95, i32 0, i32 0
  store i8* %93, i8** %96, align 8
  br label %97

; <label>:97                                      ; preds = %88, %188
  %98 = load %struct.bzFile** %bzf, align 8
  %99 = getelementptr inbounds %struct.bzFile* %98, i32 0, i32 4
  %100 = getelementptr inbounds %struct.bz_stream* %99, i32 0, i32 5
  store i32 5000, i32* %100, align 4
  %101 = load %struct.bzFile** %bzf, align 8
  %102 = getelementptr inbounds %struct.bzFile* %101, i32 0, i32 1
  %103 = getelementptr inbounds [5000 x i8]* %102, i32 0, i32 0
  %104 = load %struct.bzFile** %bzf, align 8
  %105 = getelementptr inbounds %struct.bzFile* %104, i32 0, i32 4
  %106 = getelementptr inbounds %struct.bz_stream* %105, i32 0, i32 4
  store i8* %103, i8** %106, align 8
  %107 = load %struct.bzFile** %bzf, align 8
  %108 = getelementptr inbounds %struct.bzFile* %107, i32 0, i32 4
  %109 = call i32 @BZ2_bzCompress(%struct.bz_stream* %108, i32 0)
  store i32 %109, i32* %ret, align 4
  %110 = load i32* %ret, align 4
  %111 = icmp ne i32 %110, 1
  br i1 %111, label %112, label %126

; <label>:112                                     ; preds = %97
  %113 = load i32** %1, align 8
  %114 = icmp ne i32* %113, null
  br i1 %114, label %115, label %118

; <label>:115                                     ; preds = %112
  %116 = load i32* %ret, align 4
  %117 = load i32** %1, align 8
  store i32 %116, i32* %117, align 4
  br label %118

; <label>:118                                     ; preds = %115, %112
  %119 = load %struct.bzFile** %bzf, align 8
  %120 = icmp ne %struct.bzFile* %119, null
  br i1 %120, label %121, label %125

; <label>:121                                     ; preds = %118
  %122 = load i32* %ret, align 4
  %123 = load %struct.bzFile** %bzf, align 8
  %124 = getelementptr inbounds %struct.bzFile* %123, i32 0, i32 5
  store i32 %122, i32* %124, align 4
  br label %125

; <label>:125                                     ; preds = %121, %118
  br label %189

; <label>:126                                     ; preds = %97
  %127 = load %struct.bzFile** %bzf, align 8
  %128 = getelementptr inbounds %struct.bzFile* %127, i32 0, i32 4
  %129 = getelementptr inbounds %struct.bz_stream* %128, i32 0, i32 5
  %130 = load i32* %129, align 4
  %131 = icmp ult i32 %130, 5000
  br i1 %131, label %132, label %170

; <label>:132                                     ; preds = %126
  %133 = load %struct.bzFile** %bzf, align 8
  %134 = getelementptr inbounds %struct.bzFile* %133, i32 0, i32 4
  %135 = getelementptr inbounds %struct.bz_stream* %134, i32 0, i32 5
  %136 = load i32* %135, align 4
  %137 = sub i32 5000, %136
  store i32 %137, i32* %n, align 4
  %138 = load %struct.bzFile** %bzf, align 8
  %139 = getelementptr inbounds %struct.bzFile* %138, i32 0, i32 1
  %140 = getelementptr inbounds [5000 x i8]* %139, i32 0, i32 0
  %141 = load i32* %n, align 4
  %142 = sext i32 %141 to i64
  %143 = load %struct.bzFile** %bzf, align 8
  %144 = getelementptr inbounds %struct.bzFile* %143, i32 0, i32 0
  %145 = load %struct._IO_FILE** %144, align 8
  %146 = call i64 @fwrite(i8* %140, i64 1, i64 %142, %struct._IO_FILE* %145)
  %147 = trunc i64 %146 to i32
  store i32 %147, i32* %n2, align 4
  %148 = load i32* %n, align 4
  %149 = load i32* %n2, align 4
  %150 = icmp ne i32 %148, %149
  br i1 %150, label %157, label %151

; <label>:151                                     ; preds = %132
  %152 = load %struct.bzFile** %bzf, align 8
  %153 = getelementptr inbounds %struct.bzFile* %152, i32 0, i32 0
  %154 = load %struct._IO_FILE** %153, align 8
  %155 = call i32 @ferror(%struct._IO_FILE* %154) #8
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %157, label %169

; <label>:157                                     ; preds = %151, %132
  %158 = load i32** %1, align 8
  %159 = icmp ne i32* %158, null
  br i1 %159, label %160, label %162

; <label>:160                                     ; preds = %157
  %161 = load i32** %1, align 8
  store i32 -6, i32* %161, align 4
  br label %162

; <label>:162                                     ; preds = %160, %157
  %163 = load %struct.bzFile** %bzf, align 8
  %164 = icmp ne %struct.bzFile* %163, null
  br i1 %164, label %165, label %168

; <label>:165                                     ; preds = %162
  %166 = load %struct.bzFile** %bzf, align 8
  %167 = getelementptr inbounds %struct.bzFile* %166, i32 0, i32 5
  store i32 -6, i32* %167, align 4
  br label %168

; <label>:168                                     ; preds = %165, %162
  br label %189

; <label>:169                                     ; preds = %151
  br label %170

; <label>:170                                     ; preds = %169, %126
  %171 = load %struct.bzFile** %bzf, align 8
  %172 = getelementptr inbounds %struct.bzFile* %171, i32 0, i32 4
  %173 = getelementptr inbounds %struct.bz_stream* %172, i32 0, i32 1
  %174 = load i32* %173, align 4
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %188

; <label>:176                                     ; preds = %170
  %177 = load i32** %1, align 8
  %178 = icmp ne i32* %177, null
  br i1 %178, label %179, label %181

; <label>:179                                     ; preds = %176
  %180 = load i32** %1, align 8
  store i32 0, i32* %180, align 4
  br label %181

; <label>:181                                     ; preds = %179, %176
  %182 = load %struct.bzFile** %bzf, align 8
  %183 = icmp ne %struct.bzFile* %182, null
  br i1 %183, label %184, label %187

; <label>:184                                     ; preds = %181
  %185 = load %struct.bzFile** %bzf, align 8
  %186 = getelementptr inbounds %struct.bzFile* %185, i32 0, i32 5
  store i32 0, i32* %186, align 4
  br label %187

; <label>:187                                     ; preds = %184, %181
  br label %189

; <label>:188                                     ; preds = %170
  br label %97

; <label>:189                                     ; preds = %187, %168, %125, %87, %72, %54, %37
  ret void
}

declare i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #1

; Function Attrs: nounwind uwtable
define void @BZ2_bzWriteClose(i32* %bzerror, i8* %b, i32 %abandon, i32* %nbytes_in, i32* %nbytes_out) #0 {
  %1 = alloca i32*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  store i32* %bzerror, i32** %1, align 8
  store i8* %b, i8** %2, align 8
  store i32 %abandon, i32* %3, align 4
  store i32* %nbytes_in, i32** %4, align 8
  store i32* %nbytes_out, i32** %5, align 8
  %6 = load i32** %1, align 8
  %7 = load i8** %2, align 8
  %8 = load i32* %3, align 4
  %9 = load i32** %4, align 8
  %10 = load i32** %5, align 8
  call void @BZ2_bzWriteClose64(i32* %6, i8* %7, i32 %8, i32* %9, i32* null, i32* %10, i32* null)
  ret void
}

; Function Attrs: nounwind uwtable
define void @BZ2_bzWriteClose64(i32* %bzerror, i8* %b, i32 %abandon, i32* %nbytes_in_lo32, i32* %nbytes_in_hi32, i32* %nbytes_out_lo32, i32* %nbytes_out_hi32) #0 {
  %1 = alloca i32*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %n = alloca i32, align 4
  %n2 = alloca i32, align 4
  %ret = alloca i32, align 4
  %bzf = alloca %struct.bzFile*, align 8
  store i32* %bzerror, i32** %1, align 8
  store i8* %b, i8** %2, align 8
  store i32 %abandon, i32* %3, align 4
  store i32* %nbytes_in_lo32, i32** %4, align 8
  store i32* %nbytes_in_hi32, i32** %5, align 8
  store i32* %nbytes_out_lo32, i32** %6, align 8
  store i32* %nbytes_out_hi32, i32** %7, align 8
  %8 = load i8** %2, align 8
  %9 = bitcast i8* %8 to %struct.bzFile*
  store %struct.bzFile* %9, %struct.bzFile** %bzf, align 8
  %10 = load %struct.bzFile** %bzf, align 8
  %11 = icmp eq %struct.bzFile* %10, null
  br i1 %11, label %12, label %24

; <label>:12                                      ; preds = %0
  %13 = load i32** %1, align 8
  %14 = icmp ne i32* %13, null
  br i1 %14, label %15, label %17

; <label>:15                                      ; preds = %12
  %16 = load i32** %1, align 8
  store i32 0, i32* %16, align 4
  br label %17

; <label>:17                                      ; preds = %15, %12
  %18 = load %struct.bzFile** %bzf, align 8
  %19 = icmp ne %struct.bzFile* %18, null
  br i1 %19, label %20, label %23

; <label>:20                                      ; preds = %17
  %21 = load %struct.bzFile** %bzf, align 8
  %22 = getelementptr inbounds %struct.bzFile* %21, i32 0, i32 5
  store i32 0, i32* %22, align 4
  br label %23

; <label>:23                                      ; preds = %20, %17
  br label %255

; <label>:24                                      ; preds = %0
  %25 = load %struct.bzFile** %bzf, align 8
  %26 = getelementptr inbounds %struct.bzFile* %25, i32 0, i32 3
  %27 = load i8* %26, align 1
  %28 = icmp ne i8 %27, 0
  br i1 %28, label %41, label %29

; <label>:29                                      ; preds = %24
  %30 = load i32** %1, align 8
  %31 = icmp ne i32* %30, null
  br i1 %31, label %32, label %34

; <label>:32                                      ; preds = %29
  %33 = load i32** %1, align 8
  store i32 -1, i32* %33, align 4
  br label %34

; <label>:34                                      ; preds = %32, %29
  %35 = load %struct.bzFile** %bzf, align 8
  %36 = icmp ne %struct.bzFile* %35, null
  br i1 %36, label %37, label %40

; <label>:37                                      ; preds = %34
  %38 = load %struct.bzFile** %bzf, align 8
  %39 = getelementptr inbounds %struct.bzFile* %38, i32 0, i32 5
  store i32 -1, i32* %39, align 4
  br label %40

; <label>:40                                      ; preds = %37, %34
  br label %255

; <label>:41                                      ; preds = %24
  %42 = load %struct.bzFile** %bzf, align 8
  %43 = getelementptr inbounds %struct.bzFile* %42, i32 0, i32 0
  %44 = load %struct._IO_FILE** %43, align 8
  %45 = call i32 @ferror(%struct._IO_FILE* %44) #8
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %59

; <label>:47                                      ; preds = %41
  %48 = load i32** %1, align 8
  %49 = icmp ne i32* %48, null
  br i1 %49, label %50, label %52

; <label>:50                                      ; preds = %47
  %51 = load i32** %1, align 8
  store i32 -6, i32* %51, align 4
  br label %52

; <label>:52                                      ; preds = %50, %47
  %53 = load %struct.bzFile** %bzf, align 8
  %54 = icmp ne %struct.bzFile* %53, null
  br i1 %54, label %55, label %58

; <label>:55                                      ; preds = %52
  %56 = load %struct.bzFile** %bzf, align 8
  %57 = getelementptr inbounds %struct.bzFile* %56, i32 0, i32 5
  store i32 -6, i32* %57, align 4
  br label %58

; <label>:58                                      ; preds = %55, %52
  br label %255

; <label>:59                                      ; preds = %41
  %60 = load i32** %4, align 8
  %61 = icmp ne i32* %60, null
  br i1 %61, label %62, label %64

; <label>:62                                      ; preds = %59
  %63 = load i32** %4, align 8
  store i32 0, i32* %63, align 4
  br label %64

; <label>:64                                      ; preds = %62, %59
  %65 = load i32** %5, align 8
  %66 = icmp ne i32* %65, null
  br i1 %66, label %67, label %69

; <label>:67                                      ; preds = %64
  %68 = load i32** %5, align 8
  store i32 0, i32* %68, align 4
  br label %69

; <label>:69                                      ; preds = %67, %64
  %70 = load i32** %6, align 8
  %71 = icmp ne i32* %70, null
  br i1 %71, label %72, label %74

; <label>:72                                      ; preds = %69
  %73 = load i32** %6, align 8
  store i32 0, i32* %73, align 4
  br label %74

; <label>:74                                      ; preds = %72, %69
  %75 = load i32** %7, align 8
  %76 = icmp ne i32* %75, null
  br i1 %76, label %77, label %79

; <label>:77                                      ; preds = %74
  %78 = load i32** %7, align 8
  store i32 0, i32* %78, align 4
  br label %79

; <label>:79                                      ; preds = %77, %74
  %80 = load i32* %3, align 4
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %170, label %82

; <label>:82                                      ; preds = %79
  %83 = load %struct.bzFile** %bzf, align 8
  %84 = getelementptr inbounds %struct.bzFile* %83, i32 0, i32 5
  %85 = load i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %170

; <label>:87                                      ; preds = %82
  br label %88

; <label>:88                                      ; preds = %87, %168
  %89 = load %struct.bzFile** %bzf, align 8
  %90 = getelementptr inbounds %struct.bzFile* %89, i32 0, i32 4
  %91 = getelementptr inbounds %struct.bz_stream* %90, i32 0, i32 5
  store i32 5000, i32* %91, align 4
  %92 = load %struct.bzFile** %bzf, align 8
  %93 = getelementptr inbounds %struct.bzFile* %92, i32 0, i32 1
  %94 = getelementptr inbounds [5000 x i8]* %93, i32 0, i32 0
  %95 = load %struct.bzFile** %bzf, align 8
  %96 = getelementptr inbounds %struct.bzFile* %95, i32 0, i32 4
  %97 = getelementptr inbounds %struct.bz_stream* %96, i32 0, i32 4
  store i8* %94, i8** %97, align 8
  %98 = load %struct.bzFile** %bzf, align 8
  %99 = getelementptr inbounds %struct.bzFile* %98, i32 0, i32 4
  %100 = call i32 @BZ2_bzCompress(%struct.bz_stream* %99, i32 2)
  store i32 %100, i32* %ret, align 4
  %101 = load i32* %ret, align 4
  %102 = icmp ne i32 %101, 3
  br i1 %102, label %103, label %120

; <label>:103                                     ; preds = %88
  %104 = load i32* %ret, align 4
  %105 = icmp ne i32 %104, 4
  br i1 %105, label %106, label %120

; <label>:106                                     ; preds = %103
  %107 = load i32** %1, align 8
  %108 = icmp ne i32* %107, null
  br i1 %108, label %109, label %112

; <label>:109                                     ; preds = %106
  %110 = load i32* %ret, align 4
  %111 = load i32** %1, align 8
  store i32 %110, i32* %111, align 4
  br label %112

; <label>:112                                     ; preds = %109, %106
  %113 = load %struct.bzFile** %bzf, align 8
  %114 = icmp ne %struct.bzFile* %113, null
  br i1 %114, label %115, label %119

; <label>:115                                     ; preds = %112
  %116 = load i32* %ret, align 4
  %117 = load %struct.bzFile** %bzf, align 8
  %118 = getelementptr inbounds %struct.bzFile* %117, i32 0, i32 5
  store i32 %116, i32* %118, align 4
  br label %119

; <label>:119                                     ; preds = %115, %112
  br label %255

; <label>:120                                     ; preds = %103, %88
  %121 = load %struct.bzFile** %bzf, align 8
  %122 = getelementptr inbounds %struct.bzFile* %121, i32 0, i32 4
  %123 = getelementptr inbounds %struct.bz_stream* %122, i32 0, i32 5
  %124 = load i32* %123, align 4
  %125 = icmp ult i32 %124, 5000
  br i1 %125, label %126, label %164

; <label>:126                                     ; preds = %120
  %127 = load %struct.bzFile** %bzf, align 8
  %128 = getelementptr inbounds %struct.bzFile* %127, i32 0, i32 4
  %129 = getelementptr inbounds %struct.bz_stream* %128, i32 0, i32 5
  %130 = load i32* %129, align 4
  %131 = sub i32 5000, %130
  store i32 %131, i32* %n, align 4
  %132 = load %struct.bzFile** %bzf, align 8
  %133 = getelementptr inbounds %struct.bzFile* %132, i32 0, i32 1
  %134 = getelementptr inbounds [5000 x i8]* %133, i32 0, i32 0
  %135 = load i32* %n, align 4
  %136 = sext i32 %135 to i64
  %137 = load %struct.bzFile** %bzf, align 8
  %138 = getelementptr inbounds %struct.bzFile* %137, i32 0, i32 0
  %139 = load %struct._IO_FILE** %138, align 8
  %140 = call i64 @fwrite(i8* %134, i64 1, i64 %136, %struct._IO_FILE* %139)
  %141 = trunc i64 %140 to i32
  store i32 %141, i32* %n2, align 4
  %142 = load i32* %n, align 4
  %143 = load i32* %n2, align 4
  %144 = icmp ne i32 %142, %143
  br i1 %144, label %151, label %145

; <label>:145                                     ; preds = %126
  %146 = load %struct.bzFile** %bzf, align 8
  %147 = getelementptr inbounds %struct.bzFile* %146, i32 0, i32 0
  %148 = load %struct._IO_FILE** %147, align 8
  %149 = call i32 @ferror(%struct._IO_FILE* %148) #8
  %150 = icmp ne i32 %149, 0
  br i1 %150, label %151, label %163

; <label>:151                                     ; preds = %145, %126
  %152 = load i32** %1, align 8
  %153 = icmp ne i32* %152, null
  br i1 %153, label %154, label %156

; <label>:154                                     ; preds = %151
  %155 = load i32** %1, align 8
  store i32 -6, i32* %155, align 4
  br label %156

; <label>:156                                     ; preds = %154, %151
  %157 = load %struct.bzFile** %bzf, align 8
  %158 = icmp ne %struct.bzFile* %157, null
  br i1 %158, label %159, label %162

; <label>:159                                     ; preds = %156
  %160 = load %struct.bzFile** %bzf, align 8
  %161 = getelementptr inbounds %struct.bzFile* %160, i32 0, i32 5
  store i32 -6, i32* %161, align 4
  br label %162

; <label>:162                                     ; preds = %159, %156
  br label %255

; <label>:163                                     ; preds = %145
  br label %164

; <label>:164                                     ; preds = %163, %120
  %165 = load i32* %ret, align 4
  %166 = icmp eq i32 %165, 4
  br i1 %166, label %167, label %168

; <label>:167                                     ; preds = %164
  br label %169

; <label>:168                                     ; preds = %164
  br label %88

; <label>:169                                     ; preds = %167
  br label %170

; <label>:170                                     ; preds = %169, %82, %79
  %171 = load i32* %3, align 4
  %172 = icmp ne i32 %171, 0
  br i1 %172, label %202, label %173

; <label>:173                                     ; preds = %170
  %174 = load %struct.bzFile** %bzf, align 8
  %175 = getelementptr inbounds %struct.bzFile* %174, i32 0, i32 0
  %176 = load %struct._IO_FILE** %175, align 8
  %177 = call i32 @ferror(%struct._IO_FILE* %176) #8
  %178 = icmp ne i32 %177, 0
  br i1 %178, label %202, label %179

; <label>:179                                     ; preds = %173
  %180 = load %struct.bzFile** %bzf, align 8
  %181 = getelementptr inbounds %struct.bzFile* %180, i32 0, i32 0
  %182 = load %struct._IO_FILE** %181, align 8
  %183 = call i32 @fflush(%struct._IO_FILE* %182)
  %184 = load %struct.bzFile** %bzf, align 8
  %185 = getelementptr inbounds %struct.bzFile* %184, i32 0, i32 0
  %186 = load %struct._IO_FILE** %185, align 8
  %187 = call i32 @ferror(%struct._IO_FILE* %186) #8
  %188 = icmp ne i32 %187, 0
  br i1 %188, label %189, label %201

; <label>:189                                     ; preds = %179
  %190 = load i32** %1, align 8
  %191 = icmp ne i32* %190, null
  br i1 %191, label %192, label %194

; <label>:192                                     ; preds = %189
  %193 = load i32** %1, align 8
  store i32 -6, i32* %193, align 4
  br label %194

; <label>:194                                     ; preds = %192, %189
  %195 = load %struct.bzFile** %bzf, align 8
  %196 = icmp ne %struct.bzFile* %195, null
  br i1 %196, label %197, label %200

; <label>:197                                     ; preds = %194
  %198 = load %struct.bzFile** %bzf, align 8
  %199 = getelementptr inbounds %struct.bzFile* %198, i32 0, i32 5
  store i32 -6, i32* %199, align 4
  br label %200

; <label>:200                                     ; preds = %197, %194
  br label %255

; <label>:201                                     ; preds = %179
  br label %202

; <label>:202                                     ; preds = %201, %173, %170
  %203 = load i32** %4, align 8
  %204 = icmp ne i32* %203, null
  br i1 %204, label %205, label %211

; <label>:205                                     ; preds = %202
  %206 = load %struct.bzFile** %bzf, align 8
  %207 = getelementptr inbounds %struct.bzFile* %206, i32 0, i32 4
  %208 = getelementptr inbounds %struct.bz_stream* %207, i32 0, i32 2
  %209 = load i32* %208, align 4
  %210 = load i32** %4, align 8
  store i32 %209, i32* %210, align 4
  br label %211

; <label>:211                                     ; preds = %205, %202
  %212 = load i32** %5, align 8
  %213 = icmp ne i32* %212, null
  br i1 %213, label %214, label %220

; <label>:214                                     ; preds = %211
  %215 = load %struct.bzFile** %bzf, align 8
  %216 = getelementptr inbounds %struct.bzFile* %215, i32 0, i32 4
  %217 = getelementptr inbounds %struct.bz_stream* %216, i32 0, i32 3
  %218 = load i32* %217, align 4
  %219 = load i32** %5, align 8
  store i32 %218, i32* %219, align 4
  br label %220

; <label>:220                                     ; preds = %214, %211
  %221 = load i32** %6, align 8
  %222 = icmp ne i32* %221, null
  br i1 %222, label %223, label %229

; <label>:223                                     ; preds = %220
  %224 = load %struct.bzFile** %bzf, align 8
  %225 = getelementptr inbounds %struct.bzFile* %224, i32 0, i32 4
  %226 = getelementptr inbounds %struct.bz_stream* %225, i32 0, i32 6
  %227 = load i32* %226, align 4
  %228 = load i32** %6, align 8
  store i32 %227, i32* %228, align 4
  br label %229

; <label>:229                                     ; preds = %223, %220
  %230 = load i32** %7, align 8
  %231 = icmp ne i32* %230, null
  br i1 %231, label %232, label %238

; <label>:232                                     ; preds = %229
  %233 = load %struct.bzFile** %bzf, align 8
  %234 = getelementptr inbounds %struct.bzFile* %233, i32 0, i32 4
  %235 = getelementptr inbounds %struct.bz_stream* %234, i32 0, i32 7
  %236 = load i32* %235, align 4
  %237 = load i32** %7, align 8
  store i32 %236, i32* %237, align 4
  br label %238

; <label>:238                                     ; preds = %232, %229
  %239 = load i32** %1, align 8
  %240 = icmp ne i32* %239, null
  br i1 %240, label %241, label %243

; <label>:241                                     ; preds = %238
  %242 = load i32** %1, align 8
  store i32 0, i32* %242, align 4
  br label %243

; <label>:243                                     ; preds = %241, %238
  %244 = load %struct.bzFile** %bzf, align 8
  %245 = icmp ne %struct.bzFile* %244, null
  br i1 %245, label %246, label %249

; <label>:246                                     ; preds = %243
  %247 = load %struct.bzFile** %bzf, align 8
  %248 = getelementptr inbounds %struct.bzFile* %247, i32 0, i32 5
  store i32 0, i32* %248, align 4
  br label %249

; <label>:249                                     ; preds = %246, %243
  %250 = load %struct.bzFile** %bzf, align 8
  %251 = getelementptr inbounds %struct.bzFile* %250, i32 0, i32 4
  %252 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %251)
  %253 = load %struct.bzFile** %bzf, align 8
  %254 = bitcast %struct.bzFile* %253 to i8*
  call void @free(i8* %254) #8
  br label %255

; <label>:255                                     ; preds = %249, %200, %162, %119, %58, %40, %23
  ret void
}

declare i32 @fflush(%struct._IO_FILE*) #1

; Function Attrs: nounwind uwtable
define i8* @BZ2_bzReadOpen(i32* %bzerror, %struct._IO_FILE* %f, i32 %verbosity, i32 %small, i8* %unused, i32 %nUnused) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i32*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %bzf = alloca %struct.bzFile*, align 8
  %ret = alloca i32, align 4
  store i32* %bzerror, i32** %2, align 8
  store %struct._IO_FILE* %f, %struct._IO_FILE** %3, align 8
  store i32 %verbosity, i32* %4, align 4
  store i32 %small, i32* %5, align 4
  store i8* %unused, i8** %6, align 8
  store i32 %nUnused, i32* %7, align 4
  store %struct.bzFile* null, %struct.bzFile** %bzf, align 8
  %8 = load i32** %2, align 8
  %9 = icmp ne i32* %8, null
  br i1 %9, label %10, label %12

; <label>:10                                      ; preds = %0
  %11 = load i32** %2, align 8
  store i32 0, i32* %11, align 4
  br label %12

; <label>:12                                      ; preds = %10, %0
  %13 = load %struct.bzFile** %bzf, align 8
  %14 = icmp ne %struct.bzFile* %13, null
  br i1 %14, label %15, label %18

; <label>:15                                      ; preds = %12
  %16 = load %struct.bzFile** %bzf, align 8
  %17 = getelementptr inbounds %struct.bzFile* %16, i32 0, i32 5
  store i32 0, i32* %17, align 4
  br label %18

; <label>:18                                      ; preds = %15, %12
  %19 = load %struct._IO_FILE** %3, align 8
  %20 = icmp eq %struct._IO_FILE* %19, null
  br i1 %20, label %48, label %21

; <label>:21                                      ; preds = %18
  %22 = load i32* %5, align 4
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %27

; <label>:24                                      ; preds = %21
  %25 = load i32* %5, align 4
  %26 = icmp ne i32 %25, 1
  br i1 %26, label %48, label %27

; <label>:27                                      ; preds = %24, %21
  %28 = load i32* %4, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %48, label %30

; <label>:30                                      ; preds = %27
  %31 = load i32* %4, align 4
  %32 = icmp sgt i32 %31, 4
  br i1 %32, label %48, label %33

; <label>:33                                      ; preds = %30
  %34 = load i8** %6, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %39

; <label>:36                                      ; preds = %33
  %37 = load i32* %7, align 4
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %48, label %39

; <label>:39                                      ; preds = %36, %33
  %40 = load i8** %6, align 8
  %41 = icmp ne i8* %40, null
  br i1 %41, label %42, label %60

; <label>:42                                      ; preds = %39
  %43 = load i32* %7, align 4
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %48, label %45

; <label>:45                                      ; preds = %42
  %46 = load i32* %7, align 4
  %47 = icmp sgt i32 %46, 5000
  br i1 %47, label %48, label %60

; <label>:48                                      ; preds = %45, %42, %36, %30, %27, %24, %18
  %49 = load i32** %2, align 8
  %50 = icmp ne i32* %49, null
  br i1 %50, label %51, label %53

; <label>:51                                      ; preds = %48
  %52 = load i32** %2, align 8
  store i32 -2, i32* %52, align 4
  br label %53

; <label>:53                                      ; preds = %51, %48
  %54 = load %struct.bzFile** %bzf, align 8
  %55 = icmp ne %struct.bzFile* %54, null
  br i1 %55, label %56, label %59

; <label>:56                                      ; preds = %53
  %57 = load %struct.bzFile** %bzf, align 8
  %58 = getelementptr inbounds %struct.bzFile* %57, i32 0, i32 5
  store i32 -2, i32* %58, align 4
  br label %59

; <label>:59                                      ; preds = %56, %53
  store i8* null, i8** %1
  br label %185

; <label>:60                                      ; preds = %45, %39
  %61 = load %struct._IO_FILE** %3, align 8
  %62 = call i32 @ferror(%struct._IO_FILE* %61) #8
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %76

; <label>:64                                      ; preds = %60
  %65 = load i32** %2, align 8
  %66 = icmp ne i32* %65, null
  br i1 %66, label %67, label %69

; <label>:67                                      ; preds = %64
  %68 = load i32** %2, align 8
  store i32 -6, i32* %68, align 4
  br label %69

; <label>:69                                      ; preds = %67, %64
  %70 = load %struct.bzFile** %bzf, align 8
  %71 = icmp ne %struct.bzFile* %70, null
  br i1 %71, label %72, label %75

; <label>:72                                      ; preds = %69
  %73 = load %struct.bzFile** %bzf, align 8
  %74 = getelementptr inbounds %struct.bzFile* %73, i32 0, i32 5
  store i32 -6, i32* %74, align 4
  br label %75

; <label>:75                                      ; preds = %72, %69
  store i8* null, i8** %1
  br label %185

; <label>:76                                      ; preds = %60
  %77 = call noalias i8* @malloc(i64 5104) #8
  %78 = bitcast i8* %77 to %struct.bzFile*
  store %struct.bzFile* %78, %struct.bzFile** %bzf, align 8
  %79 = load %struct.bzFile** %bzf, align 8
  %80 = icmp eq %struct.bzFile* %79, null
  br i1 %80, label %81, label %93

; <label>:81                                      ; preds = %76
  %82 = load i32** %2, align 8
  %83 = icmp ne i32* %82, null
  br i1 %83, label %84, label %86

; <label>:84                                      ; preds = %81
  %85 = load i32** %2, align 8
  store i32 -3, i32* %85, align 4
  br label %86

; <label>:86                                      ; preds = %84, %81
  %87 = load %struct.bzFile** %bzf, align 8
  %88 = icmp ne %struct.bzFile* %87, null
  br i1 %88, label %89, label %92

; <label>:89                                      ; preds = %86
  %90 = load %struct.bzFile** %bzf, align 8
  %91 = getelementptr inbounds %struct.bzFile* %90, i32 0, i32 5
  store i32 -3, i32* %91, align 4
  br label %92

; <label>:92                                      ; preds = %89, %86
  store i8* null, i8** %1
  br label %185

; <label>:93                                      ; preds = %76
  %94 = load i32** %2, align 8
  %95 = icmp ne i32* %94, null
  br i1 %95, label %96, label %98

; <label>:96                                      ; preds = %93
  %97 = load i32** %2, align 8
  store i32 0, i32* %97, align 4
  br label %98

; <label>:98                                      ; preds = %96, %93
  %99 = load %struct.bzFile** %bzf, align 8
  %100 = icmp ne %struct.bzFile* %99, null
  br i1 %100, label %101, label %104

; <label>:101                                     ; preds = %98
  %102 = load %struct.bzFile** %bzf, align 8
  %103 = getelementptr inbounds %struct.bzFile* %102, i32 0, i32 5
  store i32 0, i32* %103, align 4
  br label %104

; <label>:104                                     ; preds = %101, %98
  %105 = load %struct.bzFile** %bzf, align 8
  %106 = getelementptr inbounds %struct.bzFile* %105, i32 0, i32 6
  store i8 0, i8* %106, align 1
  %107 = load %struct._IO_FILE** %3, align 8
  %108 = load %struct.bzFile** %bzf, align 8
  %109 = getelementptr inbounds %struct.bzFile* %108, i32 0, i32 0
  store %struct._IO_FILE* %107, %struct._IO_FILE** %109, align 8
  %110 = load %struct.bzFile** %bzf, align 8
  %111 = getelementptr inbounds %struct.bzFile* %110, i32 0, i32 2
  store i32 0, i32* %111, align 4
  %112 = load %struct.bzFile** %bzf, align 8
  %113 = getelementptr inbounds %struct.bzFile* %112, i32 0, i32 3
  store i8 0, i8* %113, align 1
  %114 = load %struct.bzFile** %bzf, align 8
  %115 = getelementptr inbounds %struct.bzFile* %114, i32 0, i32 4
  %116 = getelementptr inbounds %struct.bz_stream* %115, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %116, align 8
  %117 = load %struct.bzFile** %bzf, align 8
  %118 = getelementptr inbounds %struct.bzFile* %117, i32 0, i32 4
  %119 = getelementptr inbounds %struct.bz_stream* %118, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %119, align 8
  %120 = load %struct.bzFile** %bzf, align 8
  %121 = getelementptr inbounds %struct.bzFile* %120, i32 0, i32 4
  %122 = getelementptr inbounds %struct.bz_stream* %121, i32 0, i32 11
  store i8* null, i8** %122, align 8
  br label %123

; <label>:123                                     ; preds = %126, %104
  %124 = load i32* %7, align 4
  %125 = icmp sgt i32 %124, 0
  br i1 %125, label %126, label %144

; <label>:126                                     ; preds = %123
  %127 = load i8** %6, align 8
  %128 = load i8* %127, align 1
  %129 = load %struct.bzFile** %bzf, align 8
  %130 = getelementptr inbounds %struct.bzFile* %129, i32 0, i32 2
  %131 = load i32* %130, align 4
  %132 = sext i32 %131 to i64
  %133 = load %struct.bzFile** %bzf, align 8
  %134 = getelementptr inbounds %struct.bzFile* %133, i32 0, i32 1
  %135 = getelementptr inbounds [5000 x i8]* %134, i32 0, i64 %132
  store i8 %128, i8* %135, align 1
  %136 = load %struct.bzFile** %bzf, align 8
  %137 = getelementptr inbounds %struct.bzFile* %136, i32 0, i32 2
  %138 = load i32* %137, align 4
  %139 = add nsw i32 %138, 1
  store i32 %139, i32* %137, align 4
  %140 = load i8** %6, align 8
  %141 = getelementptr inbounds i8* %140, i64 1
  store i8* %141, i8** %6, align 8
  %142 = load i32* %7, align 4
  %143 = add nsw i32 %142, -1
  store i32 %143, i32* %7, align 4
  br label %123

; <label>:144                                     ; preds = %123
  %145 = load %struct.bzFile** %bzf, align 8
  %146 = getelementptr inbounds %struct.bzFile* %145, i32 0, i32 4
  %147 = load i32* %4, align 4
  %148 = load i32* %5, align 4
  %149 = call i32 @BZ2_bzDecompressInit(%struct.bz_stream* %146, i32 %147, i32 %148)
  store i32 %149, i32* %ret, align 4
  %150 = load i32* %ret, align 4
  %151 = icmp ne i32 %150, 0
  br i1 %151, label %152, label %168

; <label>:152                                     ; preds = %144
  %153 = load i32** %2, align 8
  %154 = icmp ne i32* %153, null
  br i1 %154, label %155, label %158

; <label>:155                                     ; preds = %152
  %156 = load i32* %ret, align 4
  %157 = load i32** %2, align 8
  store i32 %156, i32* %157, align 4
  br label %158

; <label>:158                                     ; preds = %155, %152
  %159 = load %struct.bzFile** %bzf, align 8
  %160 = icmp ne %struct.bzFile* %159, null
  br i1 %160, label %161, label %165

; <label>:161                                     ; preds = %158
  %162 = load i32* %ret, align 4
  %163 = load %struct.bzFile** %bzf, align 8
  %164 = getelementptr inbounds %struct.bzFile* %163, i32 0, i32 5
  store i32 %162, i32* %164, align 4
  br label %165

; <label>:165                                     ; preds = %161, %158
  %166 = load %struct.bzFile** %bzf, align 8
  %167 = bitcast %struct.bzFile* %166 to i8*
  call void @free(i8* %167) #8
  store i8* null, i8** %1
  br label %185

; <label>:168                                     ; preds = %144
  %169 = load %struct.bzFile** %bzf, align 8
  %170 = getelementptr inbounds %struct.bzFile* %169, i32 0, i32 2
  %171 = load i32* %170, align 4
  %172 = load %struct.bzFile** %bzf, align 8
  %173 = getelementptr inbounds %struct.bzFile* %172, i32 0, i32 4
  %174 = getelementptr inbounds %struct.bz_stream* %173, i32 0, i32 1
  store i32 %171, i32* %174, align 4
  %175 = load %struct.bzFile** %bzf, align 8
  %176 = getelementptr inbounds %struct.bzFile* %175, i32 0, i32 1
  %177 = getelementptr inbounds [5000 x i8]* %176, i32 0, i32 0
  %178 = load %struct.bzFile** %bzf, align 8
  %179 = getelementptr inbounds %struct.bzFile* %178, i32 0, i32 4
  %180 = getelementptr inbounds %struct.bz_stream* %179, i32 0, i32 0
  store i8* %177, i8** %180, align 8
  %181 = load %struct.bzFile** %bzf, align 8
  %182 = getelementptr inbounds %struct.bzFile* %181, i32 0, i32 6
  store i8 1, i8* %182, align 1
  %183 = load %struct.bzFile** %bzf, align 8
  %184 = bitcast %struct.bzFile* %183 to i8*
  store i8* %184, i8** %1
  br label %185

; <label>:185                                     ; preds = %168, %165, %92, %75, %59
  %186 = load i8** %1
  ret i8* %186
}

; Function Attrs: nounwind uwtable
define void @BZ2_bzReadClose(i32* %bzerror, i8* %b) #0 {
  %1 = alloca i32*, align 8
  %2 = alloca i8*, align 8
  %bzf = alloca %struct.bzFile*, align 8
  store i32* %bzerror, i32** %1, align 8
  store i8* %b, i8** %2, align 8
  %3 = load i8** %2, align 8
  %4 = bitcast i8* %3 to %struct.bzFile*
  store %struct.bzFile* %4, %struct.bzFile** %bzf, align 8
  %5 = load i32** %1, align 8
  %6 = icmp ne i32* %5, null
  br i1 %6, label %7, label %9

; <label>:7                                       ; preds = %0
  %8 = load i32** %1, align 8
  store i32 0, i32* %8, align 4
  br label %9

; <label>:9                                       ; preds = %7, %0
  %10 = load %struct.bzFile** %bzf, align 8
  %11 = icmp ne %struct.bzFile* %10, null
  br i1 %11, label %12, label %15

; <label>:12                                      ; preds = %9
  %13 = load %struct.bzFile** %bzf, align 8
  %14 = getelementptr inbounds %struct.bzFile* %13, i32 0, i32 5
  store i32 0, i32* %14, align 4
  br label %15

; <label>:15                                      ; preds = %12, %9
  %16 = load %struct.bzFile** %bzf, align 8
  %17 = icmp eq %struct.bzFile* %16, null
  br i1 %17, label %18, label %30

; <label>:18                                      ; preds = %15
  %19 = load i32** %1, align 8
  %20 = icmp ne i32* %19, null
  br i1 %20, label %21, label %23

; <label>:21                                      ; preds = %18
  %22 = load i32** %1, align 8
  store i32 0, i32* %22, align 4
  br label %23

; <label>:23                                      ; preds = %21, %18
  %24 = load %struct.bzFile** %bzf, align 8
  %25 = icmp ne %struct.bzFile* %24, null
  br i1 %25, label %26, label %29

; <label>:26                                      ; preds = %23
  %27 = load %struct.bzFile** %bzf, align 8
  %28 = getelementptr inbounds %struct.bzFile* %27, i32 0, i32 5
  store i32 0, i32* %28, align 4
  br label %29

; <label>:29                                      ; preds = %26, %23
  br label %59

; <label>:30                                      ; preds = %15
  %31 = load %struct.bzFile** %bzf, align 8
  %32 = getelementptr inbounds %struct.bzFile* %31, i32 0, i32 3
  %33 = load i8* %32, align 1
  %34 = icmp ne i8 %33, 0
  br i1 %34, label %35, label %47

; <label>:35                                      ; preds = %30
  %36 = load i32** %1, align 8
  %37 = icmp ne i32* %36, null
  br i1 %37, label %38, label %40

; <label>:38                                      ; preds = %35
  %39 = load i32** %1, align 8
  store i32 -1, i32* %39, align 4
  br label %40

; <label>:40                                      ; preds = %38, %35
  %41 = load %struct.bzFile** %bzf, align 8
  %42 = icmp ne %struct.bzFile* %41, null
  br i1 %42, label %43, label %46

; <label>:43                                      ; preds = %40
  %44 = load %struct.bzFile** %bzf, align 8
  %45 = getelementptr inbounds %struct.bzFile* %44, i32 0, i32 5
  store i32 -1, i32* %45, align 4
  br label %46

; <label>:46                                      ; preds = %43, %40
  br label %59

; <label>:47                                      ; preds = %30
  %48 = load %struct.bzFile** %bzf, align 8
  %49 = getelementptr inbounds %struct.bzFile* %48, i32 0, i32 6
  %50 = load i8* %49, align 1
  %51 = icmp ne i8 %50, 0
  br i1 %51, label %52, label %56

; <label>:52                                      ; preds = %47
  %53 = load %struct.bzFile** %bzf, align 8
  %54 = getelementptr inbounds %struct.bzFile* %53, i32 0, i32 4
  %55 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %54)
  br label %56

; <label>:56                                      ; preds = %52, %47
  %57 = load %struct.bzFile** %bzf, align 8
  %58 = bitcast %struct.bzFile* %57 to i8*
  call void @free(i8* %58) #8
  br label %59

; <label>:59                                      ; preds = %56, %46, %29
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_bzRead(i32* %bzerror, i8* %b, i8* %buf, i32 %len) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %n = alloca i32, align 4
  %ret = alloca i32, align 4
  %bzf = alloca %struct.bzFile*, align 8
  store i32* %bzerror, i32** %2, align 8
  store i8* %b, i8** %3, align 8
  store i8* %buf, i8** %4, align 8
  store i32 %len, i32* %5, align 4
  %6 = load i8** %3, align 8
  %7 = bitcast i8* %6 to %struct.bzFile*
  store %struct.bzFile* %7, %struct.bzFile** %bzf, align 8
  %8 = load i32** %2, align 8
  %9 = icmp ne i32* %8, null
  br i1 %9, label %10, label %12

; <label>:10                                      ; preds = %0
  %11 = load i32** %2, align 8
  store i32 0, i32* %11, align 4
  br label %12

; <label>:12                                      ; preds = %10, %0
  %13 = load %struct.bzFile** %bzf, align 8
  %14 = icmp ne %struct.bzFile* %13, null
  br i1 %14, label %15, label %18

; <label>:15                                      ; preds = %12
  %16 = load %struct.bzFile** %bzf, align 8
  %17 = getelementptr inbounds %struct.bzFile* %16, i32 0, i32 5
  store i32 0, i32* %17, align 4
  br label %18

; <label>:18                                      ; preds = %15, %12
  %19 = load %struct.bzFile** %bzf, align 8
  %20 = icmp eq %struct.bzFile* %19, null
  br i1 %20, label %27, label %21

; <label>:21                                      ; preds = %18
  %22 = load i8** %4, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

; <label>:24                                      ; preds = %21
  %25 = load i32* %5, align 4
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %27, label %39

; <label>:27                                      ; preds = %24, %21, %18
  %28 = load i32** %2, align 8
  %29 = icmp ne i32* %28, null
  br i1 %29, label %30, label %32

; <label>:30                                      ; preds = %27
  %31 = load i32** %2, align 8
  store i32 -2, i32* %31, align 4
  br label %32

; <label>:32                                      ; preds = %30, %27
  %33 = load %struct.bzFile** %bzf, align 8
  %34 = icmp ne %struct.bzFile* %33, null
  br i1 %34, label %35, label %38

; <label>:35                                      ; preds = %32
  %36 = load %struct.bzFile** %bzf, align 8
  %37 = getelementptr inbounds %struct.bzFile* %36, i32 0, i32 5
  store i32 -2, i32* %37, align 4
  br label %38

; <label>:38                                      ; preds = %35, %32
  store i32 0, i32* %1
  br label %250

; <label>:39                                      ; preds = %24
  %40 = load %struct.bzFile** %bzf, align 8
  %41 = getelementptr inbounds %struct.bzFile* %40, i32 0, i32 3
  %42 = load i8* %41, align 1
  %43 = icmp ne i8 %42, 0
  br i1 %43, label %44, label %56

; <label>:44                                      ; preds = %39
  %45 = load i32** %2, align 8
  %46 = icmp ne i32* %45, null
  br i1 %46, label %47, label %49

; <label>:47                                      ; preds = %44
  %48 = load i32** %2, align 8
  store i32 -1, i32* %48, align 4
  br label %49

; <label>:49                                      ; preds = %47, %44
  %50 = load %struct.bzFile** %bzf, align 8
  %51 = icmp ne %struct.bzFile* %50, null
  br i1 %51, label %52, label %55

; <label>:52                                      ; preds = %49
  %53 = load %struct.bzFile** %bzf, align 8
  %54 = getelementptr inbounds %struct.bzFile* %53, i32 0, i32 5
  store i32 -1, i32* %54, align 4
  br label %55

; <label>:55                                      ; preds = %52, %49
  store i32 0, i32* %1
  br label %250

; <label>:56                                      ; preds = %39
  %57 = load i32* %5, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %71

; <label>:59                                      ; preds = %56
  %60 = load i32** %2, align 8
  %61 = icmp ne i32* %60, null
  br i1 %61, label %62, label %64

; <label>:62                                      ; preds = %59
  %63 = load i32** %2, align 8
  store i32 0, i32* %63, align 4
  br label %64

; <label>:64                                      ; preds = %62, %59
  %65 = load %struct.bzFile** %bzf, align 8
  %66 = icmp ne %struct.bzFile* %65, null
  br i1 %66, label %67, label %70

; <label>:67                                      ; preds = %64
  %68 = load %struct.bzFile** %bzf, align 8
  %69 = getelementptr inbounds %struct.bzFile* %68, i32 0, i32 5
  store i32 0, i32* %69, align 4
  br label %70

; <label>:70                                      ; preds = %67, %64
  store i32 0, i32* %1
  br label %250

; <label>:71                                      ; preds = %56
  %72 = load i32* %5, align 4
  %73 = load %struct.bzFile** %bzf, align 8
  %74 = getelementptr inbounds %struct.bzFile* %73, i32 0, i32 4
  %75 = getelementptr inbounds %struct.bz_stream* %74, i32 0, i32 5
  store i32 %72, i32* %75, align 4
  %76 = load i8** %4, align 8
  %77 = load %struct.bzFile** %bzf, align 8
  %78 = getelementptr inbounds %struct.bzFile* %77, i32 0, i32 4
  %79 = getelementptr inbounds %struct.bz_stream* %78, i32 0, i32 4
  store i8* %76, i8** %79, align 8
  br label %80

; <label>:80                                      ; preds = %71, %249
  %81 = load %struct.bzFile** %bzf, align 8
  %82 = getelementptr inbounds %struct.bzFile* %81, i32 0, i32 0
  %83 = load %struct._IO_FILE** %82, align 8
  %84 = call i32 @ferror(%struct._IO_FILE* %83) #8
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %86, label %98

; <label>:86                                      ; preds = %80
  %87 = load i32** %2, align 8
  %88 = icmp ne i32* %87, null
  br i1 %88, label %89, label %91

; <label>:89                                      ; preds = %86
  %90 = load i32** %2, align 8
  store i32 -6, i32* %90, align 4
  br label %91

; <label>:91                                      ; preds = %89, %86
  %92 = load %struct.bzFile** %bzf, align 8
  %93 = icmp ne %struct.bzFile* %92, null
  br i1 %93, label %94, label %97

; <label>:94                                      ; preds = %91
  %95 = load %struct.bzFile** %bzf, align 8
  %96 = getelementptr inbounds %struct.bzFile* %95, i32 0, i32 5
  store i32 -6, i32* %96, align 4
  br label %97

; <label>:97                                      ; preds = %94, %91
  store i32 0, i32* %1
  br label %250

; <label>:98                                      ; preds = %80
  %99 = load %struct.bzFile** %bzf, align 8
  %100 = getelementptr inbounds %struct.bzFile* %99, i32 0, i32 4
  %101 = getelementptr inbounds %struct.bz_stream* %100, i32 0, i32 1
  %102 = load i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %152

; <label>:104                                     ; preds = %98
  %105 = load %struct.bzFile** %bzf, align 8
  %106 = getelementptr inbounds %struct.bzFile* %105, i32 0, i32 0
  %107 = load %struct._IO_FILE** %106, align 8
  %108 = call zeroext i8 @myfeof(%struct._IO_FILE* %107)
  %109 = icmp ne i8 %108, 0
  br i1 %109, label %152, label %110

; <label>:110                                     ; preds = %104
  %111 = load %struct.bzFile** %bzf, align 8
  %112 = getelementptr inbounds %struct.bzFile* %111, i32 0, i32 1
  %113 = getelementptr inbounds [5000 x i8]* %112, i32 0, i32 0
  %114 = load %struct.bzFile** %bzf, align 8
  %115 = getelementptr inbounds %struct.bzFile* %114, i32 0, i32 0
  %116 = load %struct._IO_FILE** %115, align 8
  %117 = call i64 @fread(i8* %113, i64 1, i64 5000, %struct._IO_FILE* %116)
  %118 = trunc i64 %117 to i32
  store i32 %118, i32* %n, align 4
  %119 = load %struct.bzFile** %bzf, align 8
  %120 = getelementptr inbounds %struct.bzFile* %119, i32 0, i32 0
  %121 = load %struct._IO_FILE** %120, align 8
  %122 = call i32 @ferror(%struct._IO_FILE* %121) #8
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %124, label %136

; <label>:124                                     ; preds = %110
  %125 = load i32** %2, align 8
  %126 = icmp ne i32* %125, null
  br i1 %126, label %127, label %129

; <label>:127                                     ; preds = %124
  %128 = load i32** %2, align 8
  store i32 -6, i32* %128, align 4
  br label %129

; <label>:129                                     ; preds = %127, %124
  %130 = load %struct.bzFile** %bzf, align 8
  %131 = icmp ne %struct.bzFile* %130, null
  br i1 %131, label %132, label %135

; <label>:132                                     ; preds = %129
  %133 = load %struct.bzFile** %bzf, align 8
  %134 = getelementptr inbounds %struct.bzFile* %133, i32 0, i32 5
  store i32 -6, i32* %134, align 4
  br label %135

; <label>:135                                     ; preds = %132, %129
  store i32 0, i32* %1
  br label %250

; <label>:136                                     ; preds = %110
  %137 = load i32* %n, align 4
  %138 = load %struct.bzFile** %bzf, align 8
  %139 = getelementptr inbounds %struct.bzFile* %138, i32 0, i32 2
  store i32 %137, i32* %139, align 4
  %140 = load %struct.bzFile** %bzf, align 8
  %141 = getelementptr inbounds %struct.bzFile* %140, i32 0, i32 2
  %142 = load i32* %141, align 4
  %143 = load %struct.bzFile** %bzf, align 8
  %144 = getelementptr inbounds %struct.bzFile* %143, i32 0, i32 4
  %145 = getelementptr inbounds %struct.bz_stream* %144, i32 0, i32 1
  store i32 %142, i32* %145, align 4
  %146 = load %struct.bzFile** %bzf, align 8
  %147 = getelementptr inbounds %struct.bzFile* %146, i32 0, i32 1
  %148 = getelementptr inbounds [5000 x i8]* %147, i32 0, i32 0
  %149 = load %struct.bzFile** %bzf, align 8
  %150 = getelementptr inbounds %struct.bzFile* %149, i32 0, i32 4
  %151 = getelementptr inbounds %struct.bz_stream* %150, i32 0, i32 0
  store i8* %148, i8** %151, align 8
  br label %152

; <label>:152                                     ; preds = %136, %104, %98
  %153 = load %struct.bzFile** %bzf, align 8
  %154 = getelementptr inbounds %struct.bzFile* %153, i32 0, i32 4
  %155 = call i32 @BZ2_bzDecompress(%struct.bz_stream* %154)
  store i32 %155, i32* %ret, align 4
  %156 = load i32* %ret, align 4
  %157 = icmp ne i32 %156, 0
  br i1 %157, label %158, label %175

; <label>:158                                     ; preds = %152
  %159 = load i32* %ret, align 4
  %160 = icmp ne i32 %159, 4
  br i1 %160, label %161, label %175

; <label>:161                                     ; preds = %158
  %162 = load i32** %2, align 8
  %163 = icmp ne i32* %162, null
  br i1 %163, label %164, label %167

; <label>:164                                     ; preds = %161
  %165 = load i32* %ret, align 4
  %166 = load i32** %2, align 8
  store i32 %165, i32* %166, align 4
  br label %167

; <label>:167                                     ; preds = %164, %161
  %168 = load %struct.bzFile** %bzf, align 8
  %169 = icmp ne %struct.bzFile* %168, null
  br i1 %169, label %170, label %174

; <label>:170                                     ; preds = %167
  %171 = load i32* %ret, align 4
  %172 = load %struct.bzFile** %bzf, align 8
  %173 = getelementptr inbounds %struct.bzFile* %172, i32 0, i32 5
  store i32 %171, i32* %173, align 4
  br label %174

; <label>:174                                     ; preds = %170, %167
  store i32 0, i32* %1
  br label %250

; <label>:175                                     ; preds = %158, %152
  %176 = load i32* %ret, align 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %209

; <label>:178                                     ; preds = %175
  %179 = load %struct.bzFile** %bzf, align 8
  %180 = getelementptr inbounds %struct.bzFile* %179, i32 0, i32 0
  %181 = load %struct._IO_FILE** %180, align 8
  %182 = call zeroext i8 @myfeof(%struct._IO_FILE* %181)
  %183 = zext i8 %182 to i32
  %184 = icmp ne i32 %183, 0
  br i1 %184, label %185, label %209

; <label>:185                                     ; preds = %178
  %186 = load %struct.bzFile** %bzf, align 8
  %187 = getelementptr inbounds %struct.bzFile* %186, i32 0, i32 4
  %188 = getelementptr inbounds %struct.bz_stream* %187, i32 0, i32 1
  %189 = load i32* %188, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %209

; <label>:191                                     ; preds = %185
  %192 = load %struct.bzFile** %bzf, align 8
  %193 = getelementptr inbounds %struct.bzFile* %192, i32 0, i32 4
  %194 = getelementptr inbounds %struct.bz_stream* %193, i32 0, i32 5
  %195 = load i32* %194, align 4
  %196 = icmp ugt i32 %195, 0
  br i1 %196, label %197, label %209

; <label>:197                                     ; preds = %191
  %198 = load i32** %2, align 8
  %199 = icmp ne i32* %198, null
  br i1 %199, label %200, label %202

; <label>:200                                     ; preds = %197
  %201 = load i32** %2, align 8
  store i32 -7, i32* %201, align 4
  br label %202

; <label>:202                                     ; preds = %200, %197
  %203 = load %struct.bzFile** %bzf, align 8
  %204 = icmp ne %struct.bzFile* %203, null
  br i1 %204, label %205, label %208

; <label>:205                                     ; preds = %202
  %206 = load %struct.bzFile** %bzf, align 8
  %207 = getelementptr inbounds %struct.bzFile* %206, i32 0, i32 5
  store i32 -7, i32* %207, align 4
  br label %208

; <label>:208                                     ; preds = %205, %202
  store i32 0, i32* %1
  br label %250

; <label>:209                                     ; preds = %191, %185, %178, %175
  %210 = load i32* %ret, align 4
  %211 = icmp eq i32 %210, 4
  br i1 %211, label %212, label %230

; <label>:212                                     ; preds = %209
  %213 = load i32** %2, align 8
  %214 = icmp ne i32* %213, null
  br i1 %214, label %215, label %217

; <label>:215                                     ; preds = %212
  %216 = load i32** %2, align 8
  store i32 4, i32* %216, align 4
  br label %217

; <label>:217                                     ; preds = %215, %212
  %218 = load %struct.bzFile** %bzf, align 8
  %219 = icmp ne %struct.bzFile* %218, null
  br i1 %219, label %220, label %223

; <label>:220                                     ; preds = %217
  %221 = load %struct.bzFile** %bzf, align 8
  %222 = getelementptr inbounds %struct.bzFile* %221, i32 0, i32 5
  store i32 4, i32* %222, align 4
  br label %223

; <label>:223                                     ; preds = %220, %217
  %224 = load i32* %5, align 4
  %225 = load %struct.bzFile** %bzf, align 8
  %226 = getelementptr inbounds %struct.bzFile* %225, i32 0, i32 4
  %227 = getelementptr inbounds %struct.bz_stream* %226, i32 0, i32 5
  %228 = load i32* %227, align 4
  %229 = sub i32 %224, %228
  store i32 %229, i32* %1
  br label %250

; <label>:230                                     ; preds = %209
  %231 = load %struct.bzFile** %bzf, align 8
  %232 = getelementptr inbounds %struct.bzFile* %231, i32 0, i32 4
  %233 = getelementptr inbounds %struct.bz_stream* %232, i32 0, i32 5
  %234 = load i32* %233, align 4
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %249

; <label>:236                                     ; preds = %230
  %237 = load i32** %2, align 8
  %238 = icmp ne i32* %237, null
  br i1 %238, label %239, label %241

; <label>:239                                     ; preds = %236
  %240 = load i32** %2, align 8
  store i32 0, i32* %240, align 4
  br label %241

; <label>:241                                     ; preds = %239, %236
  %242 = load %struct.bzFile** %bzf, align 8
  %243 = icmp ne %struct.bzFile* %242, null
  br i1 %243, label %244, label %247

; <label>:244                                     ; preds = %241
  %245 = load %struct.bzFile** %bzf, align 8
  %246 = getelementptr inbounds %struct.bzFile* %245, i32 0, i32 5
  store i32 0, i32* %246, align 4
  br label %247

; <label>:247                                     ; preds = %244, %241
  %248 = load i32* %5, align 4
  store i32 %248, i32* %1
  br label %250

; <label>:249                                     ; preds = %230
  br label %80

; <label>:250                                     ; preds = %247, %223, %208, %174, %135, %97, %70, %55, %38
  %251 = load i32* %1
  ret i32 %251
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @myfeof(%struct._IO_FILE* %f) #0 {
  %1 = alloca i8, align 1
  %2 = alloca %struct._IO_FILE*, align 8
  %c = alloca i32, align 4
  store %struct._IO_FILE* %f, %struct._IO_FILE** %2, align 8
  %3 = load %struct._IO_FILE** %2, align 8
  %4 = call i32 @fgetc(%struct._IO_FILE* %3)
  store i32 %4, i32* %c, align 4
  %5 = load i32* %c, align 4
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  store i8 1, i8* %1
  br label %12

; <label>:8                                       ; preds = %0
  %9 = load i32* %c, align 4
  %10 = load %struct._IO_FILE** %2, align 8
  %11 = call i32 @ungetc(i32 %9, %struct._IO_FILE* %10)
  store i8 0, i8* %1
  br label %12

; <label>:12                                      ; preds = %8, %7
  %13 = load i8* %1
  ret i8 %13
}

declare i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #1

; Function Attrs: nounwind uwtable
define void @BZ2_bzReadGetUnused(i32* %bzerror, i8* %b, i8** %unused, i32* %nUnused) #0 {
  %1 = alloca i32*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i8**, align 8
  %4 = alloca i32*, align 8
  %bzf = alloca %struct.bzFile*, align 8
  store i32* %bzerror, i32** %1, align 8
  store i8* %b, i8** %2, align 8
  store i8** %unused, i8*** %3, align 8
  store i32* %nUnused, i32** %4, align 8
  %5 = load i8** %2, align 8
  %6 = bitcast i8* %5 to %struct.bzFile*
  store %struct.bzFile* %6, %struct.bzFile** %bzf, align 8
  %7 = load %struct.bzFile** %bzf, align 8
  %8 = icmp eq %struct.bzFile* %7, null
  br i1 %8, label %9, label %21

; <label>:9                                       ; preds = %0
  %10 = load i32** %1, align 8
  %11 = icmp ne i32* %10, null
  br i1 %11, label %12, label %14

; <label>:12                                      ; preds = %9
  %13 = load i32** %1, align 8
  store i32 -2, i32* %13, align 4
  br label %14

; <label>:14                                      ; preds = %12, %9
  %15 = load %struct.bzFile** %bzf, align 8
  %16 = icmp ne %struct.bzFile* %15, null
  br i1 %16, label %17, label %20

; <label>:17                                      ; preds = %14
  %18 = load %struct.bzFile** %bzf, align 8
  %19 = getelementptr inbounds %struct.bzFile* %18, i32 0, i32 5
  store i32 -2, i32* %19, align 4
  br label %20

; <label>:20                                      ; preds = %17, %14
  br label %78

; <label>:21                                      ; preds = %0
  %22 = load %struct.bzFile** %bzf, align 8
  %23 = getelementptr inbounds %struct.bzFile* %22, i32 0, i32 5
  %24 = load i32* %23, align 4
  %25 = icmp ne i32 %24, 4
  br i1 %25, label %26, label %38

; <label>:26                                      ; preds = %21
  %27 = load i32** %1, align 8
  %28 = icmp ne i32* %27, null
  br i1 %28, label %29, label %31

; <label>:29                                      ; preds = %26
  %30 = load i32** %1, align 8
  store i32 -1, i32* %30, align 4
  br label %31

; <label>:31                                      ; preds = %29, %26
  %32 = load %struct.bzFile** %bzf, align 8
  %33 = icmp ne %struct.bzFile* %32, null
  br i1 %33, label %34, label %37

; <label>:34                                      ; preds = %31
  %35 = load %struct.bzFile** %bzf, align 8
  %36 = getelementptr inbounds %struct.bzFile* %35, i32 0, i32 5
  store i32 -1, i32* %36, align 4
  br label %37

; <label>:37                                      ; preds = %34, %31
  br label %78

; <label>:38                                      ; preds = %21
  %39 = load i8*** %3, align 8
  %40 = icmp eq i8** %39, null
  br i1 %40, label %44, label %41

; <label>:41                                      ; preds = %38
  %42 = load i32** %4, align 8
  %43 = icmp eq i32* %42, null
  br i1 %43, label %44, label %56

; <label>:44                                      ; preds = %41, %38
  %45 = load i32** %1, align 8
  %46 = icmp ne i32* %45, null
  br i1 %46, label %47, label %49

; <label>:47                                      ; preds = %44
  %48 = load i32** %1, align 8
  store i32 -2, i32* %48, align 4
  br label %49

; <label>:49                                      ; preds = %47, %44
  %50 = load %struct.bzFile** %bzf, align 8
  %51 = icmp ne %struct.bzFile* %50, null
  br i1 %51, label %52, label %55

; <label>:52                                      ; preds = %49
  %53 = load %struct.bzFile** %bzf, align 8
  %54 = getelementptr inbounds %struct.bzFile* %53, i32 0, i32 5
  store i32 -2, i32* %54, align 4
  br label %55

; <label>:55                                      ; preds = %52, %49
  br label %78

; <label>:56                                      ; preds = %41
  %57 = load i32** %1, align 8
  %58 = icmp ne i32* %57, null
  br i1 %58, label %59, label %61

; <label>:59                                      ; preds = %56
  %60 = load i32** %1, align 8
  store i32 0, i32* %60, align 4
  br label %61

; <label>:61                                      ; preds = %59, %56
  %62 = load %struct.bzFile** %bzf, align 8
  %63 = icmp ne %struct.bzFile* %62, null
  br i1 %63, label %64, label %67

; <label>:64                                      ; preds = %61
  %65 = load %struct.bzFile** %bzf, align 8
  %66 = getelementptr inbounds %struct.bzFile* %65, i32 0, i32 5
  store i32 0, i32* %66, align 4
  br label %67

; <label>:67                                      ; preds = %64, %61
  %68 = load %struct.bzFile** %bzf, align 8
  %69 = getelementptr inbounds %struct.bzFile* %68, i32 0, i32 4
  %70 = getelementptr inbounds %struct.bz_stream* %69, i32 0, i32 1
  %71 = load i32* %70, align 4
  %72 = load i32** %4, align 8
  store i32 %71, i32* %72, align 4
  %73 = load %struct.bzFile** %bzf, align 8
  %74 = getelementptr inbounds %struct.bzFile* %73, i32 0, i32 4
  %75 = getelementptr inbounds %struct.bz_stream* %74, i32 0, i32 0
  %76 = load i8** %75, align 8
  %77 = load i8*** %3, align 8
  store i8* %76, i8** %77, align 8
  br label %78

; <label>:78                                      ; preds = %67, %55, %37, %20
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_bzBuffToBuffCompress(i8* %dest, i32* %destLen, i8* %source, i32 %sourceLen, i32 %blockSize100k, i32 %verbosity, i32 %workFactor) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %strm = alloca %struct.bz_stream, align 8
  %ret = alloca i32, align 4
  store i8* %dest, i8** %2, align 8
  store i32* %destLen, i32** %3, align 8
  store i8* %source, i8** %4, align 8
  store i32 %sourceLen, i32* %5, align 4
  store i32 %blockSize100k, i32* %6, align 4
  store i32 %verbosity, i32* %7, align 4
  store i32 %workFactor, i32* %8, align 4
  %9 = load i8** %2, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %35, label %11

; <label>:11                                      ; preds = %0
  %12 = load i32** %3, align 8
  %13 = icmp eq i32* %12, null
  br i1 %13, label %35, label %14

; <label>:14                                      ; preds = %11
  %15 = load i8** %4, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %35, label %17

; <label>:17                                      ; preds = %14
  %18 = load i32* %6, align 4
  %19 = icmp slt i32 %18, 1
  br i1 %19, label %35, label %20

; <label>:20                                      ; preds = %17
  %21 = load i32* %6, align 4
  %22 = icmp sgt i32 %21, 9
  br i1 %22, label %35, label %23

; <label>:23                                      ; preds = %20
  %24 = load i32* %7, align 4
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %35, label %26

; <label>:26                                      ; preds = %23
  %27 = load i32* %7, align 4
  %28 = icmp sgt i32 %27, 4
  br i1 %28, label %35, label %29

; <label>:29                                      ; preds = %26
  %30 = load i32* %8, align 4
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %35, label %32

; <label>:32                                      ; preds = %29
  %33 = load i32* %8, align 4
  %34 = icmp sgt i32 %33, 250
  br i1 %34, label %35, label %36

; <label>:35                                      ; preds = %32, %29, %26, %23, %20, %17, %14, %11, %0
  store i32 -2, i32* %1
  br label %82

; <label>:36                                      ; preds = %32
  %37 = load i32* %8, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

; <label>:39                                      ; preds = %36
  store i32 30, i32* %8, align 4
  br label %40

; <label>:40                                      ; preds = %39, %36
  %41 = getelementptr inbounds %struct.bz_stream* %strm, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %41, align 8
  %42 = getelementptr inbounds %struct.bz_stream* %strm, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %42, align 8
  %43 = getelementptr inbounds %struct.bz_stream* %strm, i32 0, i32 11
  store i8* null, i8** %43, align 8
  %44 = load i32* %6, align 4
  %45 = load i32* %7, align 4
  %46 = load i32* %8, align 4
  %47 = call i32 @BZ2_bzCompressInit(%struct.bz_stream* %strm, i32 %44, i32 %45, i32 %46)
  store i32 %47, i32* %ret, align 4
  %48 = load i32* %ret, align 4
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %52

; <label>:50                                      ; preds = %40
  %51 = load i32* %ret, align 4
  store i32 %51, i32* %1
  br label %82

; <label>:52                                      ; preds = %40
  %53 = load i8** %4, align 8
  %54 = getelementptr inbounds %struct.bz_stream* %strm, i32 0, i32 0
  store i8* %53, i8** %54, align 8
  %55 = load i8** %2, align 8
  %56 = getelementptr inbounds %struct.bz_stream* %strm, i32 0, i32 4
  store i8* %55, i8** %56, align 8
  %57 = load i32* %5, align 4
  %58 = getelementptr inbounds %struct.bz_stream* %strm, i32 0, i32 1
  store i32 %57, i32* %58, align 4
  %59 = load i32** %3, align 8
  %60 = load i32* %59, align 4
  %61 = getelementptr inbounds %struct.bz_stream* %strm, i32 0, i32 5
  store i32 %60, i32* %61, align 4
  %62 = call i32 @BZ2_bzCompress(%struct.bz_stream* %strm, i32 2)
  store i32 %62, i32* %ret, align 4
  %63 = load i32* %ret, align 4
  %64 = icmp eq i32 %63, 3
  br i1 %64, label %65, label %66

; <label>:65                                      ; preds = %52
  br label %77

; <label>:66                                      ; preds = %52
  %67 = load i32* %ret, align 4
  %68 = icmp ne i32 %67, 4
  br i1 %68, label %69, label %70

; <label>:69                                      ; preds = %66
  br label %79

; <label>:70                                      ; preds = %66
  %71 = getelementptr inbounds %struct.bz_stream* %strm, i32 0, i32 5
  %72 = load i32* %71, align 4
  %73 = load i32** %3, align 8
  %74 = load i32* %73, align 4
  %75 = sub i32 %74, %72
  store i32 %75, i32* %73, align 4
  %76 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %strm)
  store i32 0, i32* %1
  br label %82

; <label>:77                                      ; preds = %65
  %78 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %strm)
  store i32 -8, i32* %1
  br label %82

; <label>:79                                      ; preds = %69
  %80 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %strm)
  %81 = load i32* %ret, align 4
  store i32 %81, i32* %1
  br label %82

; <label>:82                                      ; preds = %79, %77, %70, %50, %35
  %83 = load i32* %1
  ret i32 %83
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_bzBuffToBuffDecompress(i8* %dest, i32* %destLen, i8* %source, i32 %sourceLen, i32 %small, i32 %verbosity) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %strm = alloca %struct.bz_stream, align 8
  %ret = alloca i32, align 4
  store i8* %dest, i8** %2, align 8
  store i32* %destLen, i32** %3, align 8
  store i8* %source, i8** %4, align 8
  store i32 %sourceLen, i32* %5, align 4
  store i32 %small, i32* %6, align 4
  store i32 %verbosity, i32* %7, align 4
  %8 = load i8** %2, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %28, label %10

; <label>:10                                      ; preds = %0
  %11 = load i32** %3, align 8
  %12 = icmp eq i32* %11, null
  br i1 %12, label %28, label %13

; <label>:13                                      ; preds = %10
  %14 = load i8** %4, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %28, label %16

; <label>:16                                      ; preds = %13
  %17 = load i32* %6, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %22

; <label>:19                                      ; preds = %16
  %20 = load i32* %6, align 4
  %21 = icmp ne i32 %20, 1
  br i1 %21, label %28, label %22

; <label>:22                                      ; preds = %19, %16
  %23 = load i32* %7, align 4
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %28, label %25

; <label>:25                                      ; preds = %22
  %26 = load i32* %7, align 4
  %27 = icmp sgt i32 %26, 4
  br i1 %27, label %28, label %29

; <label>:28                                      ; preds = %25, %22, %19, %13, %10, %0
  store i32 -2, i32* %1
  br label %76

; <label>:29                                      ; preds = %25
  %30 = getelementptr inbounds %struct.bz_stream* %strm, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %30, align 8
  %31 = getelementptr inbounds %struct.bz_stream* %strm, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %31, align 8
  %32 = getelementptr inbounds %struct.bz_stream* %strm, i32 0, i32 11
  store i8* null, i8** %32, align 8
  %33 = load i32* %7, align 4
  %34 = load i32* %6, align 4
  %35 = call i32 @BZ2_bzDecompressInit(%struct.bz_stream* %strm, i32 %33, i32 %34)
  store i32 %35, i32* %ret, align 4
  %36 = load i32* %ret, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %40

; <label>:38                                      ; preds = %29
  %39 = load i32* %ret, align 4
  store i32 %39, i32* %1
  br label %76

; <label>:40                                      ; preds = %29
  %41 = load i8** %4, align 8
  %42 = getelementptr inbounds %struct.bz_stream* %strm, i32 0, i32 0
  store i8* %41, i8** %42, align 8
  %43 = load i8** %2, align 8
  %44 = getelementptr inbounds %struct.bz_stream* %strm, i32 0, i32 4
  store i8* %43, i8** %44, align 8
  %45 = load i32* %5, align 4
  %46 = getelementptr inbounds %struct.bz_stream* %strm, i32 0, i32 1
  store i32 %45, i32* %46, align 4
  %47 = load i32** %3, align 8
  %48 = load i32* %47, align 4
  %49 = getelementptr inbounds %struct.bz_stream* %strm, i32 0, i32 5
  store i32 %48, i32* %49, align 4
  %50 = call i32 @BZ2_bzDecompress(%struct.bz_stream* %strm)
  store i32 %50, i32* %ret, align 4
  %51 = load i32* %ret, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

; <label>:53                                      ; preds = %40
  br label %65

; <label>:54                                      ; preds = %40
  %55 = load i32* %ret, align 4
  %56 = icmp ne i32 %55, 4
  br i1 %56, label %57, label %58

; <label>:57                                      ; preds = %54
  br label %73

; <label>:58                                      ; preds = %54
  %59 = getelementptr inbounds %struct.bz_stream* %strm, i32 0, i32 5
  %60 = load i32* %59, align 4
  %61 = load i32** %3, align 8
  %62 = load i32* %61, align 4
  %63 = sub i32 %62, %60
  store i32 %63, i32* %61, align 4
  %64 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %strm)
  store i32 0, i32* %1
  br label %76

; <label>:65                                      ; preds = %53
  %66 = getelementptr inbounds %struct.bz_stream* %strm, i32 0, i32 5
  %67 = load i32* %66, align 4
  %68 = icmp ugt i32 %67, 0
  br i1 %68, label %69, label %71

; <label>:69                                      ; preds = %65
  %70 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %strm)
  store i32 -7, i32* %1
  br label %76

; <label>:71                                      ; preds = %65
  %72 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %strm)
  store i32 -8, i32* %1
  br label %76

; <label>:73                                      ; preds = %57
  %74 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %strm)
  %75 = load i32* %ret, align 4
  store i32 %75, i32* %1
  br label %76

; <label>:76                                      ; preds = %73, %71, %69, %58, %38, %28
  %77 = load i32* %1
  ret i32 %77
}

; Function Attrs: nounwind uwtable
define i8* @BZ2_bzopen(i8* %path, i8* %mode) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  store i8* %path, i8** %1, align 8
  store i8* %mode, i8** %2, align 8
  %3 = load i8** %1, align 8
  %4 = load i8** %2, align 8
  %5 = call i8* @bzopen_or_bzdopen(i8* %3, i32 -1, i8* %4, i32 0)
  ret i8* %5
}

; Function Attrs: nounwind uwtable
define internal i8* @bzopen_or_bzdopen(i8* %path, i32 %fd, i8* %mode, i32 %open_mode) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %bzerr = alloca i32, align 4
  %unused = alloca [5000 x i8], align 16
  %blockSize100k = alloca i32, align 4
  %writing = alloca i32, align 4
  %mode2 = alloca [10 x i8], align 1
  %fp = alloca %struct._IO_FILE*, align 8
  %bzfp = alloca i8*, align 8
  %verbosity = alloca i32, align 4
  %workFactor = alloca i32, align 4
  %smallMode = alloca i32, align 4
  %nUnused = alloca i32, align 4
  store i8* %path, i8** %2, align 8
  store i32 %fd, i32* %3, align 4
  store i8* %mode, i8** %4, align 8
  store i32 %open_mode, i32* %5, align 4
  store i32 9, i32* %blockSize100k, align 4
  store i32 0, i32* %writing, align 4
  %6 = bitcast [10 x i8]* %mode2 to i8*
  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 10, i32 1, i1 false)
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp, align 8
  store i8* null, i8** %bzfp, align 8
  store i32 0, i32* %verbosity, align 4
  store i32 30, i32* %workFactor, align 4
  store i32 0, i32* %smallMode, align 4
  store i32 0, i32* %nUnused, align 4
  %7 = load i8** %4, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %0
  store i8* null, i8** %1
  br label %123

; <label>:10                                      ; preds = %0
  br label %11

; <label>:11                                      ; preds = %40, %10
  %12 = load i8** %4, align 8
  %13 = load i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  br i1 %14, label %15, label %43

; <label>:15                                      ; preds = %11
  %16 = load i8** %4, align 8
  %17 = load i8* %16, align 1
  %18 = sext i8 %17 to i32
  switch i32 %18, label %22 [
    i32 114, label %19
    i32 119, label %20
    i32 115, label %21
  ]

; <label>:19                                      ; preds = %15
  store i32 0, i32* %writing, align 4
  br label %40

; <label>:20                                      ; preds = %15
  store i32 1, i32* %writing, align 4
  br label %40

; <label>:21                                      ; preds = %15
  store i32 1, i32* %smallMode, align 4
  br label %40

; <label>:22                                      ; preds = %15
  %23 = load i8** %4, align 8
  %24 = load i8* %23, align 1
  %25 = sext i8 %24 to i32
  %26 = sext i32 %25 to i64
  %27 = call i16** @__ctype_b_loc() #10
  %28 = load i16** %27, align 8
  %29 = getelementptr inbounds i16* %28, i64 %26
  %30 = load i16* %29, align 2
  %31 = zext i16 %30 to i32
  %32 = and i32 %31, 2048
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %39

; <label>:34                                      ; preds = %22
  %35 = load i8** %4, align 8
  %36 = load i8* %35, align 1
  %37 = sext i8 %36 to i32
  %38 = sub nsw i32 %37, 48
  store i32 %38, i32* %blockSize100k, align 4
  br label %39

; <label>:39                                      ; preds = %34, %22
  br label %40

; <label>:40                                      ; preds = %39, %21, %20, %19
  %41 = load i8** %4, align 8
  %42 = getelementptr inbounds i8* %41, i32 1
  store i8* %42, i8** %4, align 8
  br label %11

; <label>:43                                      ; preds = %11
  %44 = getelementptr inbounds [10 x i8]* %mode2, i32 0, i32 0
  %45 = load i32* %writing, align 4
  %46 = icmp ne i32 %45, 0
  %47 = select i1 %46, i8* getelementptr inbounds ([2 x i8]* @.str128, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str129, i32 0, i32 0)
  %48 = call i8* @strcat(i8* %44, i8* %47) #8
  %49 = getelementptr inbounds [10 x i8]* %mode2, i32 0, i32 0
  %50 = call i8* @strcat(i8* %49, i8* getelementptr inbounds ([2 x i8]* @.str130, i32 0, i32 0)) #8
  %51 = load i32* %5, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %74

; <label>:53                                      ; preds = %43
  %54 = load i8** %2, align 8
  %55 = icmp eq i8* %54, null
  br i1 %55, label %60, label %56

; <label>:56                                      ; preds = %53
  %57 = load i8** %2, align 8
  %58 = call i32 @strcmp(i8* %57, i8* getelementptr inbounds ([1 x i8]* @.str16, i32 0, i32 0)) #11
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %69

; <label>:60                                      ; preds = %56, %53
  %61 = load i32* %writing, align 4
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %63, label %65

; <label>:63                                      ; preds = %60
  %64 = load %struct._IO_FILE** @stdout, align 8
  br label %67

; <label>:65                                      ; preds = %60
  %66 = load %struct._IO_FILE** @stdin, align 8
  br label %67

; <label>:67                                      ; preds = %65, %63
  %68 = phi %struct._IO_FILE* [ %64, %63 ], [ %66, %65 ]
  store %struct._IO_FILE* %68, %struct._IO_FILE** %fp, align 8
  br label %73

; <label>:69                                      ; preds = %56
  %70 = load i8** %2, align 8
  %71 = getelementptr inbounds [10 x i8]* %mode2, i32 0, i32 0
  %72 = call %struct._IO_FILE* @fopen(i8* %70, i8* %71)
  store %struct._IO_FILE* %72, %struct._IO_FILE** %fp, align 8
  br label %73

; <label>:73                                      ; preds = %69, %67
  br label %78

; <label>:74                                      ; preds = %43
  %75 = load i32* %3, align 4
  %76 = getelementptr inbounds [10 x i8]* %mode2, i32 0, i32 0
  %77 = call %struct._IO_FILE* @fdopen(i32 %75, i8* %76) #8
  store %struct._IO_FILE* %77, %struct._IO_FILE** %fp, align 8
  br label %78

; <label>:78                                      ; preds = %74, %73
  %79 = load %struct._IO_FILE** %fp, align 8
  %80 = icmp eq %struct._IO_FILE* %79, null
  br i1 %80, label %81, label %82

; <label>:81                                      ; preds = %78
  store i8* null, i8** %1
  br label %123

; <label>:82                                      ; preds = %78
  %83 = load i32* %writing, align 4
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %99

; <label>:85                                      ; preds = %82
  %86 = load i32* %blockSize100k, align 4
  %87 = icmp slt i32 %86, 1
  br i1 %87, label %88, label %89

; <label>:88                                      ; preds = %85
  store i32 1, i32* %blockSize100k, align 4
  br label %89

; <label>:89                                      ; preds = %88, %85
  %90 = load i32* %blockSize100k, align 4
  %91 = icmp sgt i32 %90, 9
  br i1 %91, label %92, label %93

; <label>:92                                      ; preds = %89
  store i32 9, i32* %blockSize100k, align 4
  br label %93

; <label>:93                                      ; preds = %92, %89
  %94 = load %struct._IO_FILE** %fp, align 8
  %95 = load i32* %blockSize100k, align 4
  %96 = load i32* %verbosity, align 4
  %97 = load i32* %workFactor, align 4
  %98 = call i8* @BZ2_bzWriteOpen(i32* %bzerr, %struct._IO_FILE* %94, i32 %95, i32 %96, i32 %97)
  store i8* %98, i8** %bzfp, align 8
  br label %106

; <label>:99                                      ; preds = %82
  %100 = load %struct._IO_FILE** %fp, align 8
  %101 = load i32* %verbosity, align 4
  %102 = load i32* %smallMode, align 4
  %103 = getelementptr inbounds [5000 x i8]* %unused, i32 0, i32 0
  %104 = load i32* %nUnused, align 4
  %105 = call i8* @BZ2_bzReadOpen(i32* %bzerr, %struct._IO_FILE* %100, i32 %101, i32 %102, i8* %103, i32 %104)
  store i8* %105, i8** %bzfp, align 8
  br label %106

; <label>:106                                     ; preds = %99, %93
  %107 = load i8** %bzfp, align 8
  %108 = icmp eq i8* %107, null
  br i1 %108, label %109, label %121

; <label>:109                                     ; preds = %106
  %110 = load %struct._IO_FILE** %fp, align 8
  %111 = load %struct._IO_FILE** @stdin, align 8
  %112 = icmp ne %struct._IO_FILE* %110, %111
  br i1 %112, label %113, label %120

; <label>:113                                     ; preds = %109
  %114 = load %struct._IO_FILE** %fp, align 8
  %115 = load %struct._IO_FILE** @stdout, align 8
  %116 = icmp ne %struct._IO_FILE* %114, %115
  br i1 %116, label %117, label %120

; <label>:117                                     ; preds = %113
  %118 = load %struct._IO_FILE** %fp, align 8
  %119 = call i32 @fclose(%struct._IO_FILE* %118)
  br label %120

; <label>:120                                     ; preds = %117, %113, %109
  store i8* null, i8** %1
  br label %123

; <label>:121                                     ; preds = %106
  %122 = load i8** %bzfp, align 8
  store i8* %122, i8** %1
  br label %123

; <label>:123                                     ; preds = %121, %120, %81, %9
  %124 = load i8** %1
  ret i8* %124
}

; Function Attrs: nounwind uwtable
define i8* @BZ2_bzdopen(i32 %fd, i8* %mode) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  store i32 %fd, i32* %1, align 4
  store i8* %mode, i8** %2, align 8
  %3 = load i32* %1, align 4
  %4 = load i8** %2, align 8
  %5 = call i8* @bzopen_or_bzdopen(i8* null, i32 %3, i8* %4, i32 1)
  ret i8* %5
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_bzread(i8* %b, i8* %buf, i32 %len) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %bzerr = alloca i32, align 4
  %nread = alloca i32, align 4
  store i8* %b, i8** %2, align 8
  store i8* %buf, i8** %3, align 8
  store i32 %len, i32* %4, align 4
  %5 = load i8** %2, align 8
  %6 = bitcast i8* %5 to %struct.bzFile*
  %7 = getelementptr inbounds %struct.bzFile* %6, i32 0, i32 5
  %8 = load i32* %7, align 4
  %9 = icmp eq i32 %8, 4
  br i1 %9, label %10, label %11

; <label>:10                                      ; preds = %0
  store i32 0, i32* %1
  br label %24

; <label>:11                                      ; preds = %0
  %12 = load i8** %2, align 8
  %13 = load i8** %3, align 8
  %14 = load i32* %4, align 4
  %15 = call i32 @BZ2_bzRead(i32* %bzerr, i8* %12, i8* %13, i32 %14)
  store i32 %15, i32* %nread, align 4
  %16 = load i32* %bzerr, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

; <label>:18                                      ; preds = %11
  %19 = load i32* %bzerr, align 4
  %20 = icmp eq i32 %19, 4
  br i1 %20, label %21, label %23

; <label>:21                                      ; preds = %18, %11
  %22 = load i32* %nread, align 4
  store i32 %22, i32* %1
  br label %24

; <label>:23                                      ; preds = %18
  store i32 -1, i32* %1
  br label %24

; <label>:24                                      ; preds = %23, %21, %10
  %25 = load i32* %1
  ret i32 %25
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_bzwrite(i8* %b, i8* %buf, i32 %len) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %bzerr = alloca i32, align 4
  store i8* %b, i8** %2, align 8
  store i8* %buf, i8** %3, align 8
  store i32 %len, i32* %4, align 4
  %5 = load i8** %2, align 8
  %6 = load i8** %3, align 8
  %7 = load i32* %4, align 4
  call void @BZ2_bzWrite(i32* %bzerr, i8* %5, i8* %6, i32 %7)
  %8 = load i32* %bzerr, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

; <label>:10                                      ; preds = %0
  %11 = load i32* %4, align 4
  store i32 %11, i32* %1
  br label %13

; <label>:12                                      ; preds = %0
  store i32 -1, i32* %1
  br label %13

; <label>:13                                      ; preds = %12, %10
  %14 = load i32* %1
  ret i32 %14
}

; Function Attrs: nounwind uwtable
define i32 @BZ2_bzflush(i8* %b) #0 {
  %1 = alloca i8*, align 8
  store i8* %b, i8** %1, align 8
  ret i32 0
}

; Function Attrs: nounwind uwtable
define void @BZ2_bzclose(i8* %b) #0 {
  %1 = alloca i8*, align 8
  %bzerr = alloca i32, align 4
  %fp = alloca %struct._IO_FILE*, align 8
  store i8* %b, i8** %1, align 8
  %2 = load i8** %1, align 8
  %3 = bitcast i8* %2 to %struct.bzFile*
  %4 = getelementptr inbounds %struct.bzFile* %3, i32 0, i32 0
  %5 = load %struct._IO_FILE** %4, align 8
  store %struct._IO_FILE* %5, %struct._IO_FILE** %fp, align 8
  %6 = load i8** %1, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %0
  br label %35

; <label>:9                                       ; preds = %0
  %10 = load i8** %1, align 8
  %11 = bitcast i8* %10 to %struct.bzFile*
  %12 = getelementptr inbounds %struct.bzFile* %11, i32 0, i32 3
  %13 = load i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  br i1 %14, label %15, label %22

; <label>:15                                      ; preds = %9
  %16 = load i8** %1, align 8
  call void @BZ2_bzWriteClose(i32* %bzerr, i8* %16, i32 0, i32* null, i32* null)
  %17 = load i32* %bzerr, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %21

; <label>:19                                      ; preds = %15
  %20 = load i8** %1, align 8
  call void @BZ2_bzWriteClose(i32* null, i8* %20, i32 1, i32* null, i32* null)
  br label %21

; <label>:21                                      ; preds = %19, %15
  br label %24

; <label>:22                                      ; preds = %9
  %23 = load i8** %1, align 8
  call void @BZ2_bzReadClose(i32* %bzerr, i8* %23)
  br label %24

; <label>:24                                      ; preds = %22, %21
  %25 = load %struct._IO_FILE** %fp, align 8
  %26 = load %struct._IO_FILE** @stdin, align 8
  %27 = icmp ne %struct._IO_FILE* %25, %26
  br i1 %27, label %28, label %35

; <label>:28                                      ; preds = %24
  %29 = load %struct._IO_FILE** %fp, align 8
  %30 = load %struct._IO_FILE** @stdout, align 8
  %31 = icmp ne %struct._IO_FILE* %29, %30
  br i1 %31, label %32, label %35

; <label>:32                                      ; preds = %28
  %33 = load %struct._IO_FILE** %fp, align 8
  %34 = call i32 @fclose(%struct._IO_FILE* %33)
  br label %35

; <label>:35                                      ; preds = %8, %32, %28, %24
  ret void
}

declare i32 @fclose(%struct._IO_FILE*) #1

; Function Attrs: nounwind uwtable
define i8* @BZ2_bzerror(i8* %b, i32* %errnum) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i32*, align 8
  %err = alloca i32, align 4
  store i8* %b, i8** %1, align 8
  store i32* %errnum, i32** %2, align 8
  %3 = load i8** %1, align 8
  %4 = bitcast i8* %3 to %struct.bzFile*
  %5 = getelementptr inbounds %struct.bzFile* %4, i32 0, i32 5
  %6 = load i32* %5, align 4
  store i32 %6, i32* %err, align 4
  %7 = load i32* %err, align 4
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %0
  store i32 0, i32* %err, align 4
  br label %10

; <label>:10                                      ; preds = %9, %0
  %11 = load i32* %err, align 4
  %12 = load i32** %2, align 8
  store i32 %11, i32* %12, align 4
  %13 = load i32* %err, align 4
  %14 = mul nsw i32 %13, -1
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [16 x i8*]* @bzerrorstrings, i32 0, i64 %15
  %17 = load i8** %16, align 8
  ret i8* %17
}

; Function Attrs: nounwind uwtable
define %struct._IO_FILE* @fopen_output_safely(i8* %name, i8* %mode) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %fh = alloca i32, align 4
  store i8* %name, i8** %2, align 8
  store i8* %mode, i8** %3, align 8
  %4 = load i8** %2, align 8
  %5 = call i32 (i8*, i32, ...)* @open(i8* %4, i32 193, i32 384)
  store i32 %5, i32* %fh, align 4
  %6 = load i32* %fh, align 4
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %0
  store %struct._IO_FILE* null, %struct._IO_FILE** %1
  br label %20

; <label>:9                                       ; preds = %0
  %10 = load i32* %fh, align 4
  %11 = load i8** %3, align 8
  %12 = call %struct._IO_FILE* @fdopen(i32 %10, i8* %11) #8
  store %struct._IO_FILE* %12, %struct._IO_FILE** %fp, align 8
  %13 = load %struct._IO_FILE** %fp, align 8
  %14 = icmp eq %struct._IO_FILE* %13, null
  br i1 %14, label %15, label %18

; <label>:15                                      ; preds = %9
  %16 = load i32* %fh, align 4
  %17 = call i32 @close(i32 %16)
  br label %18

; <label>:18                                      ; preds = %15, %9
  %19 = load %struct._IO_FILE** %fp, align 8
  store %struct._IO_FILE* %19, %struct._IO_FILE** %1
  br label %20

; <label>:20                                      ; preds = %18, %8
  %21 = load %struct._IO_FILE** %1
  ret %struct._IO_FILE* %21
}

declare i32 @open(i8*, i32, ...) #1

; Function Attrs: nounwind
declare %struct._IO_FILE* @fdopen(i32, i8*) #4

declare i32 @close(i32) #1

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8**, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %argList = alloca %struct.zzzz*, align 8
  %aa = alloca %struct.zzzz*, align 8
  %decode = alloca i8, align 1
  %aa2 = alloca %struct.zzzz*, align 8
  store i32 0, i32* %1
  store i32 %argc, i32* %2, align 4
  store i8** %argv, i8*** %3, align 8
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 0, i8* @smallMode, align 1
  store i8 0, i8* @keepInputFiles, align 1
  store i8 0, i8* @forceOverwrite, align 1
  store i8 1, i8* @noisy, align 1
  store i32 0, i32* @verbosity, align 4
  store i32 9, i32* @blockSize100k, align 4
  store i8 0, i8* @testFailsExist, align 1
  store i8 0, i8* @unzFailsExist, align 1
  store i32 0, i32* @numFileNames, align 4
  store i32 0, i32* @numFilesProcessed, align 4
  store i32 30, i32* @workFactor, align 4
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  store i32 0, i32* @exitValue, align 4
  store i32 0, i32* %j, align 4
  store i32 0, i32* %i, align 4
  %4 = call void (i32)* (i32, void (i32)*)* @signal(i32 11, void (i32)* @mySIGSEGVorSIGBUScatcher) #8
  %5 = call void (i32)* (i32, void (i32)*)* @signal(i32 7, void (i32)* @mySIGSEGVorSIGBUScatcher) #8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str18, i32 0, i32 0))
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str18, i32 0, i32 0))
  %6 = load i8*** %3, align 8
  %7 = getelementptr inbounds i8** %6, i64 0
  %8 = load i8** %7, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8]* @progNameReally, i32 0, i32 0), i8* %8)
  store i8* getelementptr inbounds ([1034 x i8]* @progNameReally, i32 0, i64 0), i8** @progName, align 8
  store i8* getelementptr inbounds ([1034 x i8]* @progNameReally, i32 0, i64 0), i8** %tmp, align 8
  br label %9

; <label>:9                                       ; preds = %23, %0
  %10 = load i8** %tmp, align 8
  %11 = load i8* %10, align 1
  %12 = sext i8 %11 to i32
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %14, label %26

; <label>:14                                      ; preds = %9
  %15 = load i8** %tmp, align 8
  %16 = load i8* %15, align 1
  %17 = sext i8 %16 to i32
  %18 = icmp eq i32 %17, 47
  br i1 %18, label %19, label %22

; <label>:19                                      ; preds = %14
  %20 = load i8** %tmp, align 8
  %21 = getelementptr inbounds i8* %20, i64 1
  store i8* %21, i8** @progName, align 8
  br label %22

; <label>:22                                      ; preds = %19, %14
  br label %23

; <label>:23                                      ; preds = %22
  %24 = load i8** %tmp, align 8
  %25 = getelementptr inbounds i8* %24, i32 1
  store i8* %25, i8** %tmp, align 8
  br label %9

; <label>:26                                      ; preds = %9
  store %struct.zzzz* null, %struct.zzzz** %argList, align 8
  call void @addFlagsFromEnvVar(%struct.zzzz** %argList, i8* getelementptr inbounds ([6 x i8]* @.str19, i32 0, i32 0))
  call void @addFlagsFromEnvVar(%struct.zzzz** %argList, i8* getelementptr inbounds ([5 x i8]* @.str20, i32 0, i32 0))
  store i32 1, i32* %i, align 4
  br label %27

; <label>:27                                      ; preds = %40, %26
  %28 = load i32* %i, align 4
  %29 = load i32* %2, align 4
  %30 = sub nsw i32 %29, 1
  %31 = icmp sle i32 %28, %30
  br i1 %31, label %32, label %43

; <label>:32                                      ; preds = %27
  %33 = load %struct.zzzz** %argList, align 8
  %34 = load i32* %i, align 4
  %35 = sext i32 %34 to i64
  %36 = load i8*** %3, align 8
  %37 = getelementptr inbounds i8** %36, i64 %35
  %38 = load i8** %37, align 8
  %39 = call %struct.zzzz* @snocString(%struct.zzzz* %33, i8* %38)
  store %struct.zzzz* %39, %struct.zzzz** %argList, align 8
  br label %40

; <label>:40                                      ; preds = %32
  %41 = load i32* %i, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %i, align 4
  br label %27

; <label>:43                                      ; preds = %27
  store i32 7, i32* @longestFileName, align 4
  store i32 0, i32* @numFileNames, align 4
  store i8 1, i8* %decode, align 1
  %44 = load %struct.zzzz** %argList, align 8
  store %struct.zzzz* %44, %struct.zzzz** %aa, align 8
  br label %45

; <label>:45                                      ; preds = %85, %43
  %46 = load %struct.zzzz** %aa, align 8
  %47 = icmp ne %struct.zzzz* %46, null
  br i1 %47, label %48, label %89

; <label>:48                                      ; preds = %45
  %49 = load %struct.zzzz** %aa, align 8
  %50 = getelementptr inbounds %struct.zzzz* %49, i32 0, i32 0
  %51 = load i8** %50, align 8
  %52 = call i32 @strcmp(i8* %51, i8* getelementptr inbounds ([3 x i8]* @.str21, i32 0, i32 0)) #11
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

; <label>:54                                      ; preds = %48
  store i8 0, i8* %decode, align 1
  br label %85

; <label>:55                                      ; preds = %48
  %56 = load %struct.zzzz** %aa, align 8
  %57 = getelementptr inbounds %struct.zzzz* %56, i32 0, i32 0
  %58 = load i8** %57, align 8
  %59 = getelementptr inbounds i8* %58, i64 0
  %60 = load i8* %59, align 1
  %61 = sext i8 %60 to i32
  %62 = icmp eq i32 %61, 45
  br i1 %62, label %63, label %68

; <label>:63                                      ; preds = %55
  %64 = load i8* %decode, align 1
  %65 = zext i8 %64 to i32
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %67, label %68

; <label>:67                                      ; preds = %63
  br label %85

; <label>:68                                      ; preds = %63, %55
  %69 = load i32* @numFileNames, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* @numFileNames, align 4
  %71 = load i32* @longestFileName, align 4
  %72 = load %struct.zzzz** %aa, align 8
  %73 = getelementptr inbounds %struct.zzzz* %72, i32 0, i32 0
  %74 = load i8** %73, align 8
  %75 = call i64 @strlen(i8* %74) #11
  %76 = trunc i64 %75 to i32
  %77 = icmp slt i32 %71, %76
  br i1 %77, label %78, label %84

; <label>:78                                      ; preds = %68
  %79 = load %struct.zzzz** %aa, align 8
  %80 = getelementptr inbounds %struct.zzzz* %79, i32 0, i32 0
  %81 = load i8** %80, align 8
  %82 = call i64 @strlen(i8* %81) #11
  %83 = trunc i64 %82 to i32
  store i32 %83, i32* @longestFileName, align 4
  br label %84

; <label>:84                                      ; preds = %78, %68
  br label %85

; <label>:85                                      ; preds = %84, %67, %54
  %86 = load %struct.zzzz** %aa, align 8
  %87 = getelementptr inbounds %struct.zzzz* %86, i32 0, i32 1
  %88 = load %struct.zzzz** %87, align 8
  store %struct.zzzz* %88, %struct.zzzz** %aa, align 8
  br label %45

; <label>:89                                      ; preds = %45
  %90 = load i32* @numFileNames, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

; <label>:92                                      ; preds = %89
  store i32 1, i32* @srcMode, align 4
  br label %94

; <label>:93                                      ; preds = %89
  store i32 3, i32* @srcMode, align 4
  br label %94

; <label>:94                                      ; preds = %93, %92
  store i32 1, i32* @opMode, align 4
  %95 = load i8** @progName, align 8
  %96 = call i8* @strstr(i8* %95, i8* getelementptr inbounds ([6 x i8]* @.str22, i32 0, i32 0)) #11
  %97 = icmp ne i8* %96, null
  br i1 %97, label %102, label %98

; <label>:98                                      ; preds = %94
  %99 = load i8** @progName, align 8
  %100 = call i8* @strstr(i8* %99, i8* getelementptr inbounds ([6 x i8]* @.str23, i32 0, i32 0)) #11
  %101 = icmp ne i8* %100, null
  br i1 %101, label %102, label %103

; <label>:102                                     ; preds = %98, %94
  store i32 2, i32* @opMode, align 4
  br label %103

; <label>:103                                     ; preds = %102, %98
  %104 = load i8** @progName, align 8
  %105 = call i8* @strstr(i8* %104, i8* getelementptr inbounds ([6 x i8]* @.str24, i32 0, i32 0)) #11
  %106 = icmp ne i8* %105, null
  br i1 %106, label %119, label %107

; <label>:107                                     ; preds = %103
  %108 = load i8** @progName, align 8
  %109 = call i8* @strstr(i8* %108, i8* getelementptr inbounds ([6 x i8]* @.str25, i32 0, i32 0)) #11
  %110 = icmp ne i8* %109, null
  br i1 %110, label %119, label %111

; <label>:111                                     ; preds = %107
  %112 = load i8** @progName, align 8
  %113 = call i8* @strstr(i8* %112, i8* getelementptr inbounds ([5 x i8]* @.str26, i32 0, i32 0)) #11
  %114 = icmp ne i8* %113, null
  br i1 %114, label %119, label %115

; <label>:115                                     ; preds = %111
  %116 = load i8** @progName, align 8
  %117 = call i8* @strstr(i8* %116, i8* getelementptr inbounds ([5 x i8]* @.str27, i32 0, i32 0)) #11
  %118 = icmp ne i8* %117, null
  br i1 %118, label %119, label %123

; <label>:119                                     ; preds = %115, %111, %107, %103
  store i32 2, i32* @opMode, align 4
  %120 = load i32* @numFileNames, align 4
  %121 = icmp eq i32 %120, 0
  %122 = select i1 %121, i32 1, i32 2
  store i32 %122, i32* @srcMode, align 4
  br label %123

; <label>:123                                     ; preds = %119, %115
  %124 = load %struct.zzzz** %argList, align 8
  store %struct.zzzz* %124, %struct.zzzz** %aa, align 8
  br label %125

; <label>:125                                     ; preds = %208, %123
  %126 = load %struct.zzzz** %aa, align 8
  %127 = icmp ne %struct.zzzz* %126, null
  br i1 %127, label %128, label %212

; <label>:128                                     ; preds = %125
  %129 = load %struct.zzzz** %aa, align 8
  %130 = getelementptr inbounds %struct.zzzz* %129, i32 0, i32 0
  %131 = load i8** %130, align 8
  %132 = call i32 @strcmp(i8* %131, i8* getelementptr inbounds ([3 x i8]* @.str21, i32 0, i32 0)) #11
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

; <label>:134                                     ; preds = %128
  br label %212

; <label>:135                                     ; preds = %128
  %136 = load %struct.zzzz** %aa, align 8
  %137 = getelementptr inbounds %struct.zzzz* %136, i32 0, i32 0
  %138 = load i8** %137, align 8
  %139 = getelementptr inbounds i8* %138, i64 0
  %140 = load i8* %139, align 1
  %141 = sext i8 %140 to i32
  %142 = icmp eq i32 %141, 45
  br i1 %142, label %143, label %207

; <label>:143                                     ; preds = %135
  %144 = load %struct.zzzz** %aa, align 8
  %145 = getelementptr inbounds %struct.zzzz* %144, i32 0, i32 0
  %146 = load i8** %145, align 8
  %147 = getelementptr inbounds i8* %146, i64 1
  %148 = load i8* %147, align 1
  %149 = sext i8 %148 to i32
  %150 = icmp ne i32 %149, 45
  br i1 %150, label %151, label %207

; <label>:151                                     ; preds = %143
  store i32 1, i32* %j, align 4
  br label %152

; <label>:152                                     ; preds = %203, %151
  %153 = load i32* %j, align 4
  %154 = sext i32 %153 to i64
  %155 = load %struct.zzzz** %aa, align 8
  %156 = getelementptr inbounds %struct.zzzz* %155, i32 0, i32 0
  %157 = load i8** %156, align 8
  %158 = getelementptr inbounds i8* %157, i64 %154
  %159 = load i8* %158, align 1
  %160 = sext i8 %159 to i32
  %161 = icmp ne i32 %160, 0
  br i1 %161, label %162, label %206

; <label>:162                                     ; preds = %152
  %163 = load i32* %j, align 4
  %164 = sext i32 %163 to i64
  %165 = load %struct.zzzz** %aa, align 8
  %166 = getelementptr inbounds %struct.zzzz* %165, i32 0, i32 0
  %167 = load i8** %166, align 8
  %168 = getelementptr inbounds i8* %167, i64 %164
  %169 = load i8* %168, align 1
  %170 = sext i8 %169 to i32
  switch i32 %170, label %194 [
    i32 99, label %171
    i32 100, label %172
    i32 122, label %173
    i32 102, label %174
    i32 116, label %175
    i32 107, label %176
    i32 115, label %177
    i32 113, label %178
    i32 49, label %179
    i32 50, label %180
    i32 51, label %181
    i32 52, label %182
    i32 53, label %183
    i32 54, label %184
    i32 55, label %185
    i32 56, label %186
    i32 57, label %187
    i32 86, label %188
    i32 76, label %188
    i32 118, label %189
    i32 104, label %192
  ]

; <label>:171                                     ; preds = %162
  store i32 2, i32* @srcMode, align 4
  br label %202

; <label>:172                                     ; preds = %162
  store i32 2, i32* @opMode, align 4
  br label %202

; <label>:173                                     ; preds = %162
  store i32 1, i32* @opMode, align 4
  br label %202

; <label>:174                                     ; preds = %162
  store i8 1, i8* @forceOverwrite, align 1
  br label %202

; <label>:175                                     ; preds = %162
  store i32 3, i32* @opMode, align 4
  br label %202

; <label>:176                                     ; preds = %162
  store i8 1, i8* @keepInputFiles, align 1
  br label %202

; <label>:177                                     ; preds = %162
  store i8 1, i8* @smallMode, align 1
  br label %202

; <label>:178                                     ; preds = %162
  store i8 0, i8* @noisy, align 1
  br label %202

; <label>:179                                     ; preds = %162
  store i32 1, i32* @blockSize100k, align 4
  br label %202

; <label>:180                                     ; preds = %162
  store i32 2, i32* @blockSize100k, align 4
  br label %202

; <label>:181                                     ; preds = %162
  store i32 3, i32* @blockSize100k, align 4
  br label %202

; <label>:182                                     ; preds = %162
  store i32 4, i32* @blockSize100k, align 4
  br label %202

; <label>:183                                     ; preds = %162
  store i32 5, i32* @blockSize100k, align 4
  br label %202

; <label>:184                                     ; preds = %162
  store i32 6, i32* @blockSize100k, align 4
  br label %202

; <label>:185                                     ; preds = %162
  store i32 7, i32* @blockSize100k, align 4
  br label %202

; <label>:186                                     ; preds = %162
  store i32 8, i32* @blockSize100k, align 4
  br label %202

; <label>:187                                     ; preds = %162
  store i32 9, i32* @blockSize100k, align 4
  br label %202

; <label>:188                                     ; preds = %162, %162
  call void @license()
  br label %202

; <label>:189                                     ; preds = %162
  %190 = load i32* @verbosity, align 4
  %191 = add nsw i32 %190, 1
  store i32 %191, i32* @verbosity, align 4
  br label %202

; <label>:192                                     ; preds = %162
  %193 = load i8** @progName, align 8
  call void @usage(i8* %193)
  call void @exit(i32 0) #9
  unreachable

; <label>:194                                     ; preds = %162
  %195 = load %struct._IO_FILE** @stderr, align 8
  %196 = load i8** @progName, align 8
  %197 = load %struct.zzzz** %aa, align 8
  %198 = getelementptr inbounds %struct.zzzz* %197, i32 0, i32 0
  %199 = load i8** %198, align 8
  %200 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %195, i8* getelementptr inbounds ([19 x i8]* @.str28, i32 0, i32 0), i8* %196, i8* %199)
  %201 = load i8** @progName, align 8
  call void @usage(i8* %201)
  call void @exit(i32 1) #9
  unreachable

; <label>:202                                     ; preds = %189, %188, %187, %186, %185, %184, %183, %182, %181, %180, %179, %178, %177, %176, %175, %174, %173, %172, %171
  br label %203

; <label>:203                                     ; preds = %202
  %204 = load i32* %j, align 4
  %205 = add nsw i32 %204, 1
  store i32 %205, i32* %j, align 4
  br label %152

; <label>:206                                     ; preds = %152
  br label %207

; <label>:207                                     ; preds = %206, %143, %135
  br label %208

; <label>:208                                     ; preds = %207
  %209 = load %struct.zzzz** %aa, align 8
  %210 = getelementptr inbounds %struct.zzzz* %209, i32 0, i32 1
  %211 = load %struct.zzzz** %210, align 8
  store %struct.zzzz* %211, %struct.zzzz** %aa, align 8
  br label %125

; <label>:212                                     ; preds = %134, %125
  %213 = load %struct.zzzz** %argList, align 8
  store %struct.zzzz* %213, %struct.zzzz** %aa, align 8
  br label %214

; <label>:214                                     ; preds = %384, %212
  %215 = load %struct.zzzz** %aa, align 8
  %216 = icmp ne %struct.zzzz* %215, null
  br i1 %216, label %217, label %388

; <label>:217                                     ; preds = %214
  %218 = load %struct.zzzz** %aa, align 8
  %219 = getelementptr inbounds %struct.zzzz* %218, i32 0, i32 0
  %220 = load i8** %219, align 8
  %221 = call i32 @strcmp(i8* %220, i8* getelementptr inbounds ([3 x i8]* @.str21, i32 0, i32 0)) #11
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

; <label>:223                                     ; preds = %217
  br label %388

; <label>:224                                     ; preds = %217
  %225 = load %struct.zzzz** %aa, align 8
  %226 = getelementptr inbounds %struct.zzzz* %225, i32 0, i32 0
  %227 = load i8** %226, align 8
  %228 = call i32 @strcmp(i8* %227, i8* getelementptr inbounds ([9 x i8]* @.str29, i32 0, i32 0)) #11
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %231

; <label>:230                                     ; preds = %224
  store i32 2, i32* @srcMode, align 4
  br label %383

; <label>:231                                     ; preds = %224
  %232 = load %struct.zzzz** %aa, align 8
  %233 = getelementptr inbounds %struct.zzzz* %232, i32 0, i32 0
  %234 = load i8** %233, align 8
  %235 = call i32 @strcmp(i8* %234, i8* getelementptr inbounds ([13 x i8]* @.str30, i32 0, i32 0)) #11
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %238

; <label>:237                                     ; preds = %231
  store i32 2, i32* @opMode, align 4
  br label %382

; <label>:238                                     ; preds = %231
  %239 = load %struct.zzzz** %aa, align 8
  %240 = getelementptr inbounds %struct.zzzz* %239, i32 0, i32 0
  %241 = load i8** %240, align 8
  %242 = call i32 @strcmp(i8* %241, i8* getelementptr inbounds ([11 x i8]* @.str31, i32 0, i32 0)) #11
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %245

; <label>:244                                     ; preds = %238
  store i32 1, i32* @opMode, align 4
  br label %381

; <label>:245                                     ; preds = %238
  %246 = load %struct.zzzz** %aa, align 8
  %247 = getelementptr inbounds %struct.zzzz* %246, i32 0, i32 0
  %248 = load i8** %247, align 8
  %249 = call i32 @strcmp(i8* %248, i8* getelementptr inbounds ([8 x i8]* @.str32, i32 0, i32 0)) #11
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %252

; <label>:251                                     ; preds = %245
  store i8 1, i8* @forceOverwrite, align 1
  br label %380

; <label>:252                                     ; preds = %245
  %253 = load %struct.zzzz** %aa, align 8
  %254 = getelementptr inbounds %struct.zzzz* %253, i32 0, i32 0
  %255 = load i8** %254, align 8
  %256 = call i32 @strcmp(i8* %255, i8* getelementptr inbounds ([7 x i8]* @.str33, i32 0, i32 0)) #11
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %259

; <label>:258                                     ; preds = %252
  store i32 3, i32* @opMode, align 4
  br label %379

; <label>:259                                     ; preds = %252
  %260 = load %struct.zzzz** %aa, align 8
  %261 = getelementptr inbounds %struct.zzzz* %260, i32 0, i32 0
  %262 = load i8** %261, align 8
  %263 = call i32 @strcmp(i8* %262, i8* getelementptr inbounds ([7 x i8]* @.str34, i32 0, i32 0)) #11
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %266

; <label>:265                                     ; preds = %259
  store i8 1, i8* @keepInputFiles, align 1
  br label %378

; <label>:266                                     ; preds = %259
  %267 = load %struct.zzzz** %aa, align 8
  %268 = getelementptr inbounds %struct.zzzz* %267, i32 0, i32 0
  %269 = load i8** %268, align 8
  %270 = call i32 @strcmp(i8* %269, i8* getelementptr inbounds ([8 x i8]* @.str35, i32 0, i32 0)) #11
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %273

; <label>:272                                     ; preds = %266
  store i8 1, i8* @smallMode, align 1
  br label %377

; <label>:273                                     ; preds = %266
  %274 = load %struct.zzzz** %aa, align 8
  %275 = getelementptr inbounds %struct.zzzz* %274, i32 0, i32 0
  %276 = load i8** %275, align 8
  %277 = call i32 @strcmp(i8* %276, i8* getelementptr inbounds ([8 x i8]* @.str36, i32 0, i32 0)) #11
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %280

; <label>:279                                     ; preds = %273
  store i8 0, i8* @noisy, align 1
  br label %376

; <label>:280                                     ; preds = %273
  %281 = load %struct.zzzz** %aa, align 8
  %282 = getelementptr inbounds %struct.zzzz* %281, i32 0, i32 0
  %283 = load i8** %282, align 8
  %284 = call i32 @strcmp(i8* %283, i8* getelementptr inbounds ([10 x i8]* @.str37, i32 0, i32 0)) #11
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %287

; <label>:286                                     ; preds = %280
  call void @license()
  br label %375

; <label>:287                                     ; preds = %280
  %288 = load %struct.zzzz** %aa, align 8
  %289 = getelementptr inbounds %struct.zzzz* %288, i32 0, i32 0
  %290 = load i8** %289, align 8
  %291 = call i32 @strcmp(i8* %290, i8* getelementptr inbounds ([10 x i8]* @.str38, i32 0, i32 0)) #11
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %294

; <label>:293                                     ; preds = %287
  call void @license()
  br label %374

; <label>:294                                     ; preds = %287
  %295 = load %struct.zzzz** %aa, align 8
  %296 = getelementptr inbounds %struct.zzzz* %295, i32 0, i32 0
  %297 = load i8** %296, align 8
  %298 = call i32 @strcmp(i8* %297, i8* getelementptr inbounds ([14 x i8]* @.str39, i32 0, i32 0)) #11
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %301

; <label>:300                                     ; preds = %294
  store i32 1, i32* @workFactor, align 4
  br label %373

; <label>:301                                     ; preds = %294
  %302 = load %struct.zzzz** %aa, align 8
  %303 = getelementptr inbounds %struct.zzzz* %302, i32 0, i32 0
  %304 = load i8** %303, align 8
  %305 = call i32 @strcmp(i8* %304, i8* getelementptr inbounds ([18 x i8]* @.str40, i32 0, i32 0)) #11
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %311

; <label>:307                                     ; preds = %301
  %308 = load %struct.zzzz** %aa, align 8
  %309 = getelementptr inbounds %struct.zzzz* %308, i32 0, i32 0
  %310 = load i8** %309, align 8
  call void @redundant(i8* %310)
  br label %372

; <label>:311                                     ; preds = %301
  %312 = load %struct.zzzz** %aa, align 8
  %313 = getelementptr inbounds %struct.zzzz* %312, i32 0, i32 0
  %314 = load i8** %313, align 8
  %315 = call i32 @strcmp(i8* %314, i8* getelementptr inbounds ([18 x i8]* @.str41, i32 0, i32 0)) #11
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %321

; <label>:317                                     ; preds = %311
  %318 = load %struct.zzzz** %aa, align 8
  %319 = getelementptr inbounds %struct.zzzz* %318, i32 0, i32 0
  %320 = load i8** %319, align 8
  call void @redundant(i8* %320)
  br label %371

; <label>:321                                     ; preds = %311
  %322 = load %struct.zzzz** %aa, align 8
  %323 = getelementptr inbounds %struct.zzzz* %322, i32 0, i32 0
  %324 = load i8** %323, align 8
  %325 = call i32 @strcmp(i8* %324, i8* getelementptr inbounds ([7 x i8]* @.str42, i32 0, i32 0)) #11
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %328

; <label>:327                                     ; preds = %321
  store i32 1, i32* @blockSize100k, align 4
  br label %370

; <label>:328                                     ; preds = %321
  %329 = load %struct.zzzz** %aa, align 8
  %330 = getelementptr inbounds %struct.zzzz* %329, i32 0, i32 0
  %331 = load i8** %330, align 8
  %332 = call i32 @strcmp(i8* %331, i8* getelementptr inbounds ([7 x i8]* @.str43, i32 0, i32 0)) #11
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %335

; <label>:334                                     ; preds = %328
  store i32 9, i32* @blockSize100k, align 4
  br label %369

; <label>:335                                     ; preds = %328
  %336 = load %struct.zzzz** %aa, align 8
  %337 = getelementptr inbounds %struct.zzzz* %336, i32 0, i32 0
  %338 = load i8** %337, align 8
  %339 = call i32 @strcmp(i8* %338, i8* getelementptr inbounds ([10 x i8]* @.str44, i32 0, i32 0)) #11
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %341, label %344

; <label>:341                                     ; preds = %335
  %342 = load i32* @verbosity, align 4
  %343 = add nsw i32 %342, 1
  store i32 %343, i32* @verbosity, align 4
  br label %368

; <label>:344                                     ; preds = %335
  %345 = load %struct.zzzz** %aa, align 8
  %346 = getelementptr inbounds %struct.zzzz* %345, i32 0, i32 0
  %347 = load i8** %346, align 8
  %348 = call i32 @strcmp(i8* %347, i8* getelementptr inbounds ([7 x i8]* @.str45, i32 0, i32 0)) #11
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %352

; <label>:350                                     ; preds = %344
  %351 = load i8** @progName, align 8
  call void @usage(i8* %351)
  call void @exit(i32 0) #9
  unreachable

; <label>:352                                     ; preds = %344
  %353 = load %struct.zzzz** %aa, align 8
  %354 = getelementptr inbounds %struct.zzzz* %353, i32 0, i32 0
  %355 = load i8** %354, align 8
  %356 = call i32 @strncmp(i8* %355, i8* getelementptr inbounds ([3 x i8]* @.str21, i32 0, i32 0), i64 2) #11
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %358, label %366

; <label>:358                                     ; preds = %352
  %359 = load %struct._IO_FILE** @stderr, align 8
  %360 = load i8** @progName, align 8
  %361 = load %struct.zzzz** %aa, align 8
  %362 = getelementptr inbounds %struct.zzzz* %361, i32 0, i32 0
  %363 = load i8** %362, align 8
  %364 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %359, i8* getelementptr inbounds ([19 x i8]* @.str28, i32 0, i32 0), i8* %360, i8* %363)
  %365 = load i8** @progName, align 8
  call void @usage(i8* %365)
  call void @exit(i32 1) #9
  unreachable

; <label>:366                                     ; preds = %352
  br label %367

; <label>:367                                     ; preds = %366
  br label %368

; <label>:368                                     ; preds = %367, %341
  br label %369

; <label>:369                                     ; preds = %368, %334
  br label %370

; <label>:370                                     ; preds = %369, %327
  br label %371

; <label>:371                                     ; preds = %370, %317
  br label %372

; <label>:372                                     ; preds = %371, %307
  br label %373

; <label>:373                                     ; preds = %372, %300
  br label %374

; <label>:374                                     ; preds = %373, %293
  br label %375

; <label>:375                                     ; preds = %374, %286
  br label %376

; <label>:376                                     ; preds = %375, %279
  br label %377

; <label>:377                                     ; preds = %376, %272
  br label %378

; <label>:378                                     ; preds = %377, %265
  br label %379

; <label>:379                                     ; preds = %378, %258
  br label %380

; <label>:380                                     ; preds = %379, %251
  br label %381

; <label>:381                                     ; preds = %380, %244
  br label %382

; <label>:382                                     ; preds = %381, %237
  br label %383

; <label>:383                                     ; preds = %382, %230
  br label %384

; <label>:384                                     ; preds = %383
  %385 = load %struct.zzzz** %aa, align 8
  %386 = getelementptr inbounds %struct.zzzz* %385, i32 0, i32 1
  %387 = load %struct.zzzz** %386, align 8
  store %struct.zzzz* %387, %struct.zzzz** %aa, align 8
  br label %214

; <label>:388                                     ; preds = %223, %214
  %389 = load i32* @verbosity, align 4
  %390 = icmp sgt i32 %389, 4
  br i1 %390, label %391, label %392

; <label>:391                                     ; preds = %388
  store i32 4, i32* @verbosity, align 4
  br label %392

; <label>:392                                     ; preds = %391, %388
  %393 = load i32* @opMode, align 4
  %394 = icmp eq i32 %393, 1
  br i1 %394, label %395, label %403

; <label>:395                                     ; preds = %392
  %396 = load i8* @smallMode, align 1
  %397 = zext i8 %396 to i32
  %398 = icmp ne i32 %397, 0
  br i1 %398, label %399, label %403

; <label>:399                                     ; preds = %395
  %400 = load i32* @blockSize100k, align 4
  %401 = icmp sgt i32 %400, 2
  br i1 %401, label %402, label %403

; <label>:402                                     ; preds = %399
  store i32 2, i32* @blockSize100k, align 4
  br label %403

; <label>:403                                     ; preds = %402, %399, %395, %392
  %404 = load i32* @opMode, align 4
  %405 = icmp eq i32 %404, 3
  br i1 %405, label %406, label %413

; <label>:406                                     ; preds = %403
  %407 = load i32* @srcMode, align 4
  %408 = icmp eq i32 %407, 2
  br i1 %408, label %409, label %413

; <label>:409                                     ; preds = %406
  %410 = load %struct._IO_FILE** @stderr, align 8
  %411 = load i8** @progName, align 8
  %412 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %410, i8* getelementptr inbounds ([40 x i8]* @.str46, i32 0, i32 0), i8* %411)
  call void @exit(i32 1) #9
  unreachable

; <label>:413                                     ; preds = %406, %403
  %414 = load i32* @srcMode, align 4
  %415 = icmp eq i32 %414, 2
  br i1 %415, label %416, label %420

; <label>:416                                     ; preds = %413
  %417 = load i32* @numFileNames, align 4
  %418 = icmp eq i32 %417, 0
  br i1 %418, label %419, label %420

; <label>:419                                     ; preds = %416
  store i32 1, i32* @srcMode, align 4
  br label %420

; <label>:420                                     ; preds = %419, %416, %413
  %421 = load i32* @opMode, align 4
  %422 = icmp ne i32 %421, 1
  br i1 %422, label %423, label %424

; <label>:423                                     ; preds = %420
  store i32 0, i32* @blockSize100k, align 4
  br label %424

; <label>:424                                     ; preds = %423, %420
  %425 = load i32* @srcMode, align 4
  %426 = icmp eq i32 %425, 3
  br i1 %426, label %427, label %431

; <label>:427                                     ; preds = %424
  %428 = call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* @mySignalCatcher) #8
  %429 = call void (i32)* (i32, void (i32)*)* @signal(i32 15, void (i32)* @mySignalCatcher) #8
  %430 = call void (i32)* (i32, void (i32)*)* @signal(i32 1, void (i32)* @mySignalCatcher) #8
  br label %431

; <label>:431                                     ; preds = %427, %424
  %432 = load i32* @opMode, align 4
  %433 = icmp eq i32 %432, 1
  br i1 %433, label %434, label %475

; <label>:434                                     ; preds = %431
  %435 = load i32* @srcMode, align 4
  %436 = icmp eq i32 %435, 1
  br i1 %436, label %437, label %438

; <label>:437                                     ; preds = %434
  call void @compress(i8* null)
  br label %474

; <label>:438                                     ; preds = %434
  store i8 1, i8* %decode, align 1
  %439 = load %struct.zzzz** %argList, align 8
  store %struct.zzzz* %439, %struct.zzzz** %aa, align 8
  br label %440

; <label>:440                                     ; preds = %469, %438
  %441 = load %struct.zzzz** %aa, align 8
  %442 = icmp ne %struct.zzzz* %441, null
  br i1 %442, label %443, label %473

; <label>:443                                     ; preds = %440
  %444 = load %struct.zzzz** %aa, align 8
  %445 = getelementptr inbounds %struct.zzzz* %444, i32 0, i32 0
  %446 = load i8** %445, align 8
  %447 = call i32 @strcmp(i8* %446, i8* getelementptr inbounds ([3 x i8]* @.str21, i32 0, i32 0)) #11
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %449, label %450

; <label>:449                                     ; preds = %443
  store i8 0, i8* %decode, align 1
  br label %469

; <label>:450                                     ; preds = %443
  %451 = load %struct.zzzz** %aa, align 8
  %452 = getelementptr inbounds %struct.zzzz* %451, i32 0, i32 0
  %453 = load i8** %452, align 8
  %454 = getelementptr inbounds i8* %453, i64 0
  %455 = load i8* %454, align 1
  %456 = sext i8 %455 to i32
  %457 = icmp eq i32 %456, 45
  br i1 %457, label %458, label %463

; <label>:458                                     ; preds = %450
  %459 = load i8* %decode, align 1
  %460 = zext i8 %459 to i32
  %461 = icmp ne i32 %460, 0
  br i1 %461, label %462, label %463

; <label>:462                                     ; preds = %458
  br label %469

; <label>:463                                     ; preds = %458, %450
  %464 = load i32* @numFilesProcessed, align 4
  %465 = add nsw i32 %464, 1
  store i32 %465, i32* @numFilesProcessed, align 4
  %466 = load %struct.zzzz** %aa, align 8
  %467 = getelementptr inbounds %struct.zzzz* %466, i32 0, i32 0
  %468 = load i8** %467, align 8
  call void @compress(i8* %468)
  br label %469

; <label>:469                                     ; preds = %463, %462, %449
  %470 = load %struct.zzzz** %aa, align 8
  %471 = getelementptr inbounds %struct.zzzz* %470, i32 0, i32 1
  %472 = load %struct.zzzz** %471, align 8
  store %struct.zzzz* %472, %struct.zzzz** %aa, align 8
  br label %440

; <label>:473                                     ; preds = %440
  br label %474

; <label>:474                                     ; preds = %473, %437
  br label %578

; <label>:475                                     ; preds = %431
  %476 = load i32* @opMode, align 4
  %477 = icmp eq i32 %476, 2
  br i1 %477, label %478, label %524

; <label>:478                                     ; preds = %475
  store i8 0, i8* @unzFailsExist, align 1
  %479 = load i32* @srcMode, align 4
  %480 = icmp eq i32 %479, 1
  br i1 %480, label %481, label %482

; <label>:481                                     ; preds = %478
  call void @uncompress(i8* null)
  br label %518

; <label>:482                                     ; preds = %478
  store i8 1, i8* %decode, align 1
  %483 = load %struct.zzzz** %argList, align 8
  store %struct.zzzz* %483, %struct.zzzz** %aa, align 8
  br label %484

; <label>:484                                     ; preds = %513, %482
  %485 = load %struct.zzzz** %aa, align 8
  %486 = icmp ne %struct.zzzz* %485, null
  br i1 %486, label %487, label %517

; <label>:487                                     ; preds = %484
  %488 = load %struct.zzzz** %aa, align 8
  %489 = getelementptr inbounds %struct.zzzz* %488, i32 0, i32 0
  %490 = load i8** %489, align 8
  %491 = call i32 @strcmp(i8* %490, i8* getelementptr inbounds ([3 x i8]* @.str21, i32 0, i32 0)) #11
  %492 = icmp eq i32 %491, 0
  br i1 %492, label %493, label %494

; <label>:493                                     ; preds = %487
  store i8 0, i8* %decode, align 1
  br label %513

; <label>:494                                     ; preds = %487
  %495 = load %struct.zzzz** %aa, align 8
  %496 = getelementptr inbounds %struct.zzzz* %495, i32 0, i32 0
  %497 = load i8** %496, align 8
  %498 = getelementptr inbounds i8* %497, i64 0
  %499 = load i8* %498, align 1
  %500 = sext i8 %499 to i32
  %501 = icmp eq i32 %500, 45
  br i1 %501, label %502, label %507

; <label>:502                                     ; preds = %494
  %503 = load i8* %decode, align 1
  %504 = zext i8 %503 to i32
  %505 = icmp ne i32 %504, 0
  br i1 %505, label %506, label %507

; <label>:506                                     ; preds = %502
  br label %513

; <label>:507                                     ; preds = %502, %494
  %508 = load i32* @numFilesProcessed, align 4
  %509 = add nsw i32 %508, 1
  store i32 %509, i32* @numFilesProcessed, align 4
  %510 = load %struct.zzzz** %aa, align 8
  %511 = getelementptr inbounds %struct.zzzz* %510, i32 0, i32 0
  %512 = load i8** %511, align 8
  call void @uncompress(i8* %512)
  br label %513

; <label>:513                                     ; preds = %507, %506, %493
  %514 = load %struct.zzzz** %aa, align 8
  %515 = getelementptr inbounds %struct.zzzz* %514, i32 0, i32 1
  %516 = load %struct.zzzz** %515, align 8
  store %struct.zzzz* %516, %struct.zzzz** %aa, align 8
  br label %484

; <label>:517                                     ; preds = %484
  br label %518

; <label>:518                                     ; preds = %517, %481
  %519 = load i8* @unzFailsExist, align 1
  %520 = icmp ne i8 %519, 0
  br i1 %520, label %521, label %523

; <label>:521                                     ; preds = %518
  call void @setExit(i32 2)
  %522 = load i32* @exitValue, align 4
  call void @exit(i32 %522) #9
  unreachable

; <label>:523                                     ; preds = %518
  br label %577

; <label>:524                                     ; preds = %475
  store i8 0, i8* @testFailsExist, align 1
  %525 = load i32* @srcMode, align 4
  %526 = icmp eq i32 %525, 1
  br i1 %526, label %527, label %528

; <label>:527                                     ; preds = %524
  call void @testf(i8* null)
  br label %564

; <label>:528                                     ; preds = %524
  store i8 1, i8* %decode, align 1
  %529 = load %struct.zzzz** %argList, align 8
  store %struct.zzzz* %529, %struct.zzzz** %aa, align 8
  br label %530

; <label>:530                                     ; preds = %559, %528
  %531 = load %struct.zzzz** %aa, align 8
  %532 = icmp ne %struct.zzzz* %531, null
  br i1 %532, label %533, label %563

; <label>:533                                     ; preds = %530
  %534 = load %struct.zzzz** %aa, align 8
  %535 = getelementptr inbounds %struct.zzzz* %534, i32 0, i32 0
  %536 = load i8** %535, align 8
  %537 = call i32 @strcmp(i8* %536, i8* getelementptr inbounds ([3 x i8]* @.str21, i32 0, i32 0)) #11
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %539, label %540

; <label>:539                                     ; preds = %533
  store i8 0, i8* %decode, align 1
  br label %559

; <label>:540                                     ; preds = %533
  %541 = load %struct.zzzz** %aa, align 8
  %542 = getelementptr inbounds %struct.zzzz* %541, i32 0, i32 0
  %543 = load i8** %542, align 8
  %544 = getelementptr inbounds i8* %543, i64 0
  %545 = load i8* %544, align 1
  %546 = sext i8 %545 to i32
  %547 = icmp eq i32 %546, 45
  br i1 %547, label %548, label %553

; <label>:548                                     ; preds = %540
  %549 = load i8* %decode, align 1
  %550 = zext i8 %549 to i32
  %551 = icmp ne i32 %550, 0
  br i1 %551, label %552, label %553

; <label>:552                                     ; preds = %548
  br label %559

; <label>:553                                     ; preds = %548, %540
  %554 = load i32* @numFilesProcessed, align 4
  %555 = add nsw i32 %554, 1
  store i32 %555, i32* @numFilesProcessed, align 4
  %556 = load %struct.zzzz** %aa, align 8
  %557 = getelementptr inbounds %struct.zzzz* %556, i32 0, i32 0
  %558 = load i8** %557, align 8
  call void @testf(i8* %558)
  br label %559

; <label>:559                                     ; preds = %553, %552, %539
  %560 = load %struct.zzzz** %aa, align 8
  %561 = getelementptr inbounds %struct.zzzz* %560, i32 0, i32 1
  %562 = load %struct.zzzz** %561, align 8
  store %struct.zzzz* %562, %struct.zzzz** %aa, align 8
  br label %530

; <label>:563                                     ; preds = %530
  br label %564

; <label>:564                                     ; preds = %563, %527
  %565 = load i8* @testFailsExist, align 1
  %566 = zext i8 %565 to i32
  %567 = icmp ne i32 %566, 0
  br i1 %567, label %568, label %576

; <label>:568                                     ; preds = %564
  %569 = load i8* @noisy, align 1
  %570 = zext i8 %569 to i32
  %571 = icmp ne i32 %570, 0
  br i1 %571, label %572, label %576

; <label>:572                                     ; preds = %568
  %573 = load %struct._IO_FILE** @stderr, align 8
  %574 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %573, i8* getelementptr inbounds ([113 x i8]* @.str47, i32 0, i32 0))
  call void @setExit(i32 2)
  %575 = load i32* @exitValue, align 4
  call void @exit(i32 %575) #9
  unreachable

; <label>:576                                     ; preds = %568, %564
  br label %577

; <label>:577                                     ; preds = %576, %523
  br label %578

; <label>:578                                     ; preds = %577, %474
  %579 = load %struct.zzzz** %argList, align 8
  store %struct.zzzz* %579, %struct.zzzz** %aa, align 8
  br label %580

; <label>:580                                     ; preds = %595, %578
  %581 = load %struct.zzzz** %aa, align 8
  %582 = icmp ne %struct.zzzz* %581, null
  br i1 %582, label %583, label %599

; <label>:583                                     ; preds = %580
  %584 = load %struct.zzzz** %aa, align 8
  %585 = getelementptr inbounds %struct.zzzz* %584, i32 0, i32 1
  %586 = load %struct.zzzz** %585, align 8
  store %struct.zzzz* %586, %struct.zzzz** %aa2, align 8
  %587 = load %struct.zzzz** %aa, align 8
  %588 = getelementptr inbounds %struct.zzzz* %587, i32 0, i32 0
  %589 = load i8** %588, align 8
  %590 = icmp ne i8* %589, null
  br i1 %590, label %591, label %595

; <label>:591                                     ; preds = %583
  %592 = load %struct.zzzz** %aa, align 8
  %593 = getelementptr inbounds %struct.zzzz* %592, i32 0, i32 0
  %594 = load i8** %593, align 8
  call void @free(i8* %594) #8
  br label %595

; <label>:595                                     ; preds = %591, %583
  %596 = load %struct.zzzz** %aa, align 8
  %597 = bitcast %struct.zzzz* %596 to i8*
  call void @free(i8* %597) #8
  %598 = load %struct.zzzz** %aa2, align 8
  store %struct.zzzz* %598, %struct.zzzz** %aa, align 8
  br label %580

; <label>:599                                     ; preds = %580
  %600 = load i32* @exitValue, align 4
  ret i32 %600
}

; Function Attrs: nounwind
declare void (i32)* @signal(i32, void (i32)*) #4

; Function Attrs: nounwind uwtable
define internal void @mySIGSEGVorSIGBUScatcher(i32 %n) #0 {
  %1 = alloca i32, align 4
  store i32 %n, i32* %1, align 4
  %2 = load i32* @opMode, align 4
  %3 = icmp eq i32 %2, 1
  br i1 %3, label %4, label %8

; <label>:4                                       ; preds = %0
  %5 = load %struct._IO_FILE** @stderr, align 8
  %6 = load i8** @progName, align 8
  %7 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([868 x i8]* @.str115, i32 0, i32 0), i8* %6)
  br label %12

; <label>:8                                       ; preds = %0
  %9 = load %struct._IO_FILE** @stderr, align 8
  %10 = load i8** @progName, align 8
  %11 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([995 x i8]* @.str116, i32 0, i32 0), i8* %10)
  br label %12

; <label>:12                                      ; preds = %8, %4
  call void @showFileNames()
  %13 = load i32* @opMode, align 4
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %16

; <label>:15                                      ; preds = %12
  call void @cleanUpAndFail(i32 3) #12
  unreachable

; <label>:16                                      ; preds = %12
  call void @cadvise()
  call void @cleanUpAndFail(i32 2) #12
  unreachable
                                                  ; No predecessors!
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @copyFileName(i8* %to, i8* %from) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  store i8* %to, i8** %1, align 8
  store i8* %from, i8** %2, align 8
  %3 = load i8** %2, align 8
  %4 = call i64 @strlen(i8* %3) #11
  %5 = icmp ugt i64 %4, 1024
  br i1 %5, label %6, label %11

; <label>:6                                       ; preds = %0
  %7 = load %struct._IO_FILE** @stderr, align 8
  %8 = load i8** %2, align 8
  %9 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([120 x i8]* @.str114, i32 0, i32 0), i8* %8, i32 1024)
  call void @setExit(i32 1)
  %10 = load i32* @exitValue, align 4
  call void @exit(i32 %10) #9
  unreachable

; <label>:11                                      ; preds = %0
  %12 = load i8** %1, align 8
  %13 = load i8** %2, align 8
  %14 = call i8* @strncpy(i8* %12, i8* %13, i64 1024) #8
  %15 = load i8** %1, align 8
  %16 = getelementptr inbounds i8* %15, i64 1024
  store i8 0, i8* %16, align 1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @addFlagsFromEnvVar(%struct.zzzz** %argList, i8* %varName) #0 {
  %1 = alloca %struct.zzzz**, align 8
  %2 = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %envbase = alloca i8*, align 8
  %p = alloca i8*, align 8
  store %struct.zzzz** %argList, %struct.zzzz*** %1, align 8
  store i8* %varName, i8** %2, align 8
  %3 = load i8** %2, align 8
  %4 = call i8* @getenv(i8* %3) #8
  store i8* %4, i8** %envbase, align 8
  %5 = load i8** %envbase, align 8
  %6 = icmp ne i8* %5, null
  br i1 %6, label %7, label %104

; <label>:7                                       ; preds = %0
  %8 = load i8** %envbase, align 8
  store i8* %8, i8** %p, align 8
  store i32 0, i32* %i, align 4
  br label %9

; <label>:9                                       ; preds = %7, %102
  %10 = load i32* %i, align 4
  %11 = sext i32 %10 to i64
  %12 = load i8** %p, align 8
  %13 = getelementptr inbounds i8* %12, i64 %11
  %14 = load i8* %13, align 1
  %15 = sext i8 %14 to i32
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %9
  br label %103

; <label>:18                                      ; preds = %9
  %19 = load i32* %i, align 4
  %20 = load i8** %p, align 8
  %21 = sext i32 %19 to i64
  %22 = getelementptr inbounds i8* %20, i64 %21
  store i8* %22, i8** %p, align 8
  store i32 0, i32* %i, align 4
  br label %23

; <label>:23                                      ; preds = %36, %18
  %24 = load i8** %p, align 8
  %25 = getelementptr inbounds i8* %24, i64 0
  %26 = load i8* %25, align 1
  %27 = sext i8 %26 to i32
  %28 = sext i32 %27 to i64
  %29 = call i16** @__ctype_b_loc() #10
  %30 = load i16** %29, align 8
  %31 = getelementptr inbounds i16* %30, i64 %28
  %32 = load i16* %31, align 2
  %33 = zext i16 %32 to i32
  %34 = and i32 %33, 8192
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %39

; <label>:36                                      ; preds = %23
  %37 = load i8** %p, align 8
  %38 = getelementptr inbounds i8* %37, i32 1
  store i8* %38, i8** %p, align 8
  br label %23

; <label>:39                                      ; preds = %23
  br label %40

; <label>:40                                      ; preds = %66, %39
  %41 = load i32* %i, align 4
  %42 = sext i32 %41 to i64
  %43 = load i8** %p, align 8
  %44 = getelementptr inbounds i8* %43, i64 %42
  %45 = load i8* %44, align 1
  %46 = sext i8 %45 to i32
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %64

; <label>:48                                      ; preds = %40
  %49 = load i32* %i, align 4
  %50 = sext i32 %49 to i64
  %51 = load i8** %p, align 8
  %52 = getelementptr inbounds i8* %51, i64 %50
  %53 = load i8* %52, align 1
  %54 = sext i8 %53 to i32
  %55 = sext i32 %54 to i64
  %56 = call i16** @__ctype_b_loc() #10
  %57 = load i16** %56, align 8
  %58 = getelementptr inbounds i16* %57, i64 %55
  %59 = load i16* %58, align 2
  %60 = zext i16 %59 to i32
  %61 = and i32 %60, 8192
  %62 = icmp ne i32 %61, 0
  %63 = xor i1 %62, true
  br label %64

; <label>:64                                      ; preds = %48, %40
  %65 = phi i1 [ false, %40 ], [ %63, %48 ]
  br i1 %65, label %66, label %69

; <label>:66                                      ; preds = %64
  %67 = load i32* %i, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %i, align 4
  br label %40

; <label>:69                                      ; preds = %64
  %70 = load i32* %i, align 4
  %71 = icmp sgt i32 %70, 0
  br i1 %71, label %72, label %102

; <label>:72                                      ; preds = %69
  %73 = load i32* %i, align 4
  store i32 %73, i32* %k, align 4
  %74 = load i32* %k, align 4
  %75 = icmp sgt i32 %74, 1024
  br i1 %75, label %76, label %77

; <label>:76                                      ; preds = %72
  store i32 1024, i32* %k, align 4
  br label %77

; <label>:77                                      ; preds = %76, %72
  store i32 0, i32* %j, align 4
  br label %78

; <label>:78                                      ; preds = %91, %77
  %79 = load i32* %j, align 4
  %80 = load i32* %k, align 4
  %81 = icmp slt i32 %79, %80
  br i1 %81, label %82, label %94

; <label>:82                                      ; preds = %78
  %83 = load i32* %j, align 4
  %84 = sext i32 %83 to i64
  %85 = load i8** %p, align 8
  %86 = getelementptr inbounds i8* %85, i64 %84
  %87 = load i8* %86, align 1
  %88 = load i32* %j, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds [1034 x i8]* @tmpName, i32 0, i64 %89
  store i8 %87, i8* %90, align 1
  br label %91

; <label>:91                                      ; preds = %82
  %92 = load i32* %j, align 4
  %93 = add nsw i32 %92, 1
  store i32 %93, i32* %j, align 4
  br label %78

; <label>:94                                      ; preds = %78
  %95 = load i32* %k, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [1034 x i8]* @tmpName, i32 0, i64 %96
  store i8 0, i8* %97, align 1
  %98 = load %struct.zzzz*** %1, align 8
  %99 = load %struct.zzzz** %98, align 8
  %100 = call %struct.zzzz* @snocString(%struct.zzzz* %99, i8* getelementptr inbounds ([1034 x i8]* @tmpName, i32 0, i32 0))
  %101 = load %struct.zzzz*** %1, align 8
  store %struct.zzzz* %100, %struct.zzzz** %101, align 8
  br label %102

; <label>:102                                     ; preds = %94, %69
  br label %9

; <label>:103                                     ; preds = %17
  br label %104

; <label>:104                                     ; preds = %103, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.zzzz* @snocString(%struct.zzzz* %root, i8* %name) #0 {
  %1 = alloca %struct.zzzz*, align 8
  %2 = alloca %struct.zzzz*, align 8
  %3 = alloca i8*, align 8
  %tmp = alloca %struct.zzzz*, align 8
  %tmp1 = alloca %struct.zzzz*, align 8
  store %struct.zzzz* %root, %struct.zzzz** %2, align 8
  store i8* %name, i8** %3, align 8
  %4 = load %struct.zzzz** %2, align 8
  %5 = icmp eq %struct.zzzz* %4, null
  br i1 %5, label %6, label %21

; <label>:6                                       ; preds = %0
  %7 = call %struct.zzzz* @mkCell()
  store %struct.zzzz* %7, %struct.zzzz** %tmp, align 8
  %8 = load i8** %3, align 8
  %9 = call i64 @strlen(i8* %8) #11
  %10 = add i64 5, %9
  %11 = trunc i64 %10 to i32
  %12 = call i8* @myMalloc(i32 %11)
  %13 = load %struct.zzzz** %tmp, align 8
  %14 = getelementptr inbounds %struct.zzzz* %13, i32 0, i32 0
  store i8* %12, i8** %14, align 8
  %15 = load %struct.zzzz** %tmp, align 8
  %16 = getelementptr inbounds %struct.zzzz* %15, i32 0, i32 0
  %17 = load i8** %16, align 8
  %18 = load i8** %3, align 8
  %19 = call i8* @strcpy(i8* %17, i8* %18) #8
  %20 = load %struct.zzzz** %tmp, align 8
  store %struct.zzzz* %20, %struct.zzzz** %1
  br label %41

; <label>:21                                      ; preds = %0
  %22 = load %struct.zzzz** %2, align 8
  store %struct.zzzz* %22, %struct.zzzz** %tmp1, align 8
  br label %23

; <label>:23                                      ; preds = %28, %21
  %24 = load %struct.zzzz** %tmp1, align 8
  %25 = getelementptr inbounds %struct.zzzz* %24, i32 0, i32 1
  %26 = load %struct.zzzz** %25, align 8
  %27 = icmp ne %struct.zzzz* %26, null
  br i1 %27, label %28, label %32

; <label>:28                                      ; preds = %23
  %29 = load %struct.zzzz** %tmp1, align 8
  %30 = getelementptr inbounds %struct.zzzz* %29, i32 0, i32 1
  %31 = load %struct.zzzz** %30, align 8
  store %struct.zzzz* %31, %struct.zzzz** %tmp1, align 8
  br label %23

; <label>:32                                      ; preds = %23
  %33 = load %struct.zzzz** %tmp1, align 8
  %34 = getelementptr inbounds %struct.zzzz* %33, i32 0, i32 1
  %35 = load %struct.zzzz** %34, align 8
  %36 = load i8** %3, align 8
  %37 = call %struct.zzzz* @snocString(%struct.zzzz* %35, i8* %36)
  %38 = load %struct.zzzz** %tmp1, align 8
  %39 = getelementptr inbounds %struct.zzzz* %38, i32 0, i32 1
  store %struct.zzzz* %37, %struct.zzzz** %39, align 8
  %40 = load %struct.zzzz** %2, align 8
  store %struct.zzzz* %40, %struct.zzzz** %1
  br label %41

; <label>:41                                      ; preds = %32, %6
  %42 = load %struct.zzzz** %1
  ret %struct.zzzz* %42
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #5

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #5

; Function Attrs: nounwind readonly
declare i8* @strstr(i8*, i8*) #5

; Function Attrs: nounwind uwtable
define internal void @license() #0 {
  %1 = load %struct._IO_FILE** @stderr, align 8
  %2 = call i8* @BZ2_bzlibVersion()
  %3 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([529 x i8]* @.str113, i32 0, i32 0), i8* %2)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @usage(i8* %fullProgName) #0 {
  %1 = alloca i8*, align 8
  store i8* %fullProgName, i8** %1, align 8
  %2 = load %struct._IO_FILE** @stderr, align 8
  %3 = call i8* @BZ2_bzlibVersion()
  %4 = load i8** %1, align 8
  %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([1230 x i8]* @.str112, i32 0, i32 0), i8* %3, i8* %4)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @redundant(i8* %flag) #0 {
  %1 = alloca i8*, align 8
  store i8* %flag, i8** %1, align 8
  %2 = load %struct._IO_FILE** @stderr, align 8
  %3 = load i8** @progName, align 8
  %4 = load i8** %1, align 8
  %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([49 x i8]* @.str111, i32 0, i32 0), i8* %3, i8* %4)
  ret void
}

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #5

; Function Attrs: nounwind uwtable
define internal void @mySignalCatcher(i32 %n) #0 {
  %1 = alloca i32, align 4
  store i32 %n, i32* %1, align 4
  %2 = load %struct._IO_FILE** @stderr, align 8
  %3 = load i8** @progName, align 8
  %4 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([45 x i8]* @.str110, i32 0, i32 0), i8* %3)
  call void @cleanUpAndFail(i32 1) #12
  unreachable
                                                  ; No predecessors!
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @compress(i8* %name) #0 {
  %1 = alloca i8*, align 8
  %inStr = alloca %struct._IO_FILE*, align 8
  %outStr = alloca %struct._IO_FILE*, align 8
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %statBuf = alloca %struct.stat, align 8
  %retVal = alloca i32, align 4
  store i8* %name, i8** %1, align 8
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %2 = load i8** %1, align 8
  %3 = icmp eq i8* %2, null
  br i1 %3, label %4, label %8

; <label>:4                                       ; preds = %0
  %5 = load i32* @srcMode, align 4
  %6 = icmp ne i32 %5, 1
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %4
  call void @panic(i8* getelementptr inbounds ([21 x i8]* @.str102, i32 0, i32 0)) #12
  unreachable

; <label>:8                                       ; preds = %4, %0
  %9 = load i32* @srcMode, align 4
  switch i32 %9, label %17 [
    i32 1, label %10
    i32 3, label %11
    i32 2, label %15
  ]

; <label>:10                                      ; preds = %8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str49, i32 0, i32 0))
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str82, i32 0, i32 0))
  br label %17

; <label>:11                                      ; preds = %8
  %12 = load i8** %1, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* %12)
  %13 = load i8** %1, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0), i8* %13)
  %14 = call i8* @strcat(i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str12, i32 0, i32 0)) #8
  br label %17

; <label>:15                                      ; preds = %8
  %16 = load i8** %1, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* %16)
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str82, i32 0, i32 0))
  br label %17

; <label>:17                                      ; preds = %8, %15, %11, %10
  %18 = load i32* @srcMode, align 4
  %19 = icmp ne i32 %18, 1
  br i1 %19, label %20, label %32

; <label>:20                                      ; preds = %17
  %21 = call zeroext i8 @containsDubiousChars(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  %22 = zext i8 %21 to i32
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %24, label %32

; <label>:24                                      ; preds = %20
  %25 = load i8* @noisy, align 1
  %26 = icmp ne i8 %25, 0
  br i1 %26, label %27, label %31

; <label>:27                                      ; preds = %24
  %28 = load %struct._IO_FILE** @stderr, align 8
  %29 = load i8** @progName, align 8
  %30 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([39 x i8]* @.str50, i32 0, i32 0), i8* %29, i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  br label %31

; <label>:31                                      ; preds = %27, %24
  call void @setExit(i32 1)
  br label %256

; <label>:32                                      ; preds = %20, %17
  %33 = load i32* @srcMode, align 4
  %34 = icmp ne i32 %33, 1
  br i1 %34, label %35, label %45

; <label>:35                                      ; preds = %32
  %36 = call zeroext i8 @fileExists(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  %37 = icmp ne i8 %36, 0
  br i1 %37, label %45, label %38

; <label>:38                                      ; preds = %35
  %39 = load %struct._IO_FILE** @stderr, align 8
  %40 = load i8** @progName, align 8
  %41 = call i32* @__errno_location() #10
  %42 = load i32* %41, align 4
  %43 = call i8* @strerror(i32 %42) #8
  %44 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %39, i8* getelementptr inbounds ([35 x i8]* @.str84, i32 0, i32 0), i8* %40, i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* %43)
  call void @setExit(i32 1)
  br label %256

; <label>:45                                      ; preds = %35, %32
  store i32 0, i32* %i, align 4
  br label %46

; <label>:46                                      ; preds = %69, %45
  %47 = load i32* %i, align 4
  %48 = icmp slt i32 %47, 4
  br i1 %48, label %49, label %72

; <label>:49                                      ; preds = %46
  %50 = load i32* %i, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [4 x i8*]* @zSuffix, i32 0, i64 %51
  %53 = load i8** %52, align 8
  %54 = call zeroext i8 @hasSuffix(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* %53)
  %55 = icmp ne i8 %54, 0
  br i1 %55, label %56, label %68

; <label>:56                                      ; preds = %49
  %57 = load i8* @noisy, align 1
  %58 = icmp ne i8 %57, 0
  br i1 %58, label %59, label %67

; <label>:59                                      ; preds = %56
  %60 = load %struct._IO_FILE** @stderr, align 8
  %61 = load i8** @progName, align 8
  %62 = load i32* %i, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [4 x i8*]* @zSuffix, i32 0, i64 %63
  %65 = load i8** %64, align 8
  %66 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([42 x i8]* @.str103, i32 0, i32 0), i8* %61, i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* %65)
  br label %67

; <label>:67                                      ; preds = %59, %56
  call void @setExit(i32 1)
  br label %256

; <label>:68                                      ; preds = %49
  br label %69

; <label>:69                                      ; preds = %68
  %70 = load i32* %i, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %i, align 4
  br label %46

; <label>:72                                      ; preds = %46
  %73 = load i32* @srcMode, align 4
  %74 = icmp eq i32 %73, 3
  br i1 %74, label %78, label %75

; <label>:75                                      ; preds = %72
  %76 = load i32* @srcMode, align 4
  %77 = icmp eq i32 %76, 2
  br i1 %77, label %78, label %89

; <label>:78                                      ; preds = %75, %72
  %79 = call i32 @stat(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), %struct.stat* %statBuf) #8
  %80 = getelementptr inbounds %struct.stat* %statBuf, i32 0, i32 3
  %81 = load i32* %80, align 4
  %82 = and i32 %81, 61440
  %83 = icmp eq i32 %82, 16384
  br i1 %83, label %84, label %88

; <label>:84                                      ; preds = %78
  %85 = load %struct._IO_FILE** @stderr, align 8
  %86 = load i8** @progName, align 8
  %87 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %85, i8* getelementptr inbounds ([35 x i8]* @.str52, i32 0, i32 0), i8* %86, i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  call void @setExit(i32 1)
  br label %256

; <label>:88                                      ; preds = %78
  br label %89

; <label>:89                                      ; preds = %88, %75
  %90 = load i32* @srcMode, align 4
  %91 = icmp eq i32 %90, 3
  br i1 %91, label %92, label %107

; <label>:92                                      ; preds = %89
  %93 = load i8* @forceOverwrite, align 1
  %94 = icmp ne i8 %93, 0
  br i1 %94, label %107, label %95

; <label>:95                                      ; preds = %92
  %96 = call zeroext i8 @notAStandardFile(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  %97 = zext i8 %96 to i32
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %99, label %107

; <label>:99                                      ; preds = %95
  %100 = load i8* @noisy, align 1
  %101 = icmp ne i8 %100, 0
  br i1 %101, label %102, label %106

; <label>:102                                     ; preds = %99
  %103 = load %struct._IO_FILE** @stderr, align 8
  %104 = load i8** @progName, align 8
  %105 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %103, i8* getelementptr inbounds ([41 x i8]* @.str85, i32 0, i32 0), i8* %104, i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  br label %106

; <label>:106                                     ; preds = %102, %99
  call void @setExit(i32 1)
  br label %256

; <label>:107                                     ; preds = %95, %92, %89
  %108 = load i32* @srcMode, align 4
  %109 = icmp eq i32 %108, 3
  br i1 %109, label %110, label %124

; <label>:110                                     ; preds = %107
  %111 = call zeroext i8 @fileExists(i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0))
  %112 = zext i8 %111 to i32
  %113 = icmp ne i32 %112, 0
  br i1 %113, label %114, label %124

; <label>:114                                     ; preds = %110
  %115 = load i8* @forceOverwrite, align 1
  %116 = icmp ne i8 %115, 0
  br i1 %116, label %117, label %119

; <label>:117                                     ; preds = %114
  %118 = call i32 @remove(i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0)) #8
  br label %123

; <label>:119                                     ; preds = %114
  %120 = load %struct._IO_FILE** @stderr, align 8
  %121 = load i8** @progName, align 8
  %122 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %120, i8* getelementptr inbounds ([36 x i8]* @.str87, i32 0, i32 0), i8* %121, i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0))
  call void @setExit(i32 1)
  br label %256

; <label>:123                                     ; preds = %117
  br label %124

; <label>:124                                     ; preds = %123, %110, %107
  %125 = load i32* @srcMode, align 4
  %126 = icmp eq i32 %125, 3
  br i1 %126, label %127, label %141

; <label>:127                                     ; preds = %124
  %128 = load i8* @forceOverwrite, align 1
  %129 = icmp ne i8 %128, 0
  br i1 %129, label %141, label %130

; <label>:130                                     ; preds = %127
  %131 = call i32 @countHardLinks(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  store i32 %131, i32* %n, align 4
  %132 = icmp sgt i32 %131, 0
  br i1 %132, label %133, label %141

; <label>:133                                     ; preds = %130
  %134 = load %struct._IO_FILE** @stderr, align 8
  %135 = load i8** @progName, align 8
  %136 = load i32* %n, align 4
  %137 = load i32* %n, align 4
  %138 = icmp sgt i32 %137, 1
  %139 = select i1 %138, i8* getelementptr inbounds ([2 x i8]* @.str89, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str16, i32 0, i32 0)
  %140 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %134, i8* getelementptr inbounds ([40 x i8]* @.str88, i32 0, i32 0), i8* %135, i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i32 %136, i8* %139)
  call void @setExit(i32 1)
  br label %256

; <label>:141                                     ; preds = %130, %127, %124
  %142 = load i32* @srcMode, align 4
  %143 = icmp eq i32 %142, 3
  br i1 %143, label %144, label %145

; <label>:144                                     ; preds = %141
  call void @saveInputFileMetaInfo(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  br label %145

; <label>:145                                     ; preds = %144, %141
  %146 = load i32* @srcMode, align 4
  switch i32 %146, label %230 [
    i32 1, label %147
    i32 2, label %163
    i32 3, label %195
  ]

; <label>:147                                     ; preds = %145
  %148 = load %struct._IO_FILE** @stdin, align 8
  store %struct._IO_FILE* %148, %struct._IO_FILE** %inStr, align 8
  %149 = load %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %149, %struct._IO_FILE** %outStr, align 8
  %150 = load %struct._IO_FILE** @stdout, align 8
  %151 = call i32 @fileno(%struct._IO_FILE* %150) #8
  %152 = call i32 @isatty(i32 %151) #8
  %153 = icmp ne i32 %152, 0
  br i1 %153, label %154, label %162

; <label>:154                                     ; preds = %147
  %155 = load %struct._IO_FILE** @stderr, align 8
  %156 = load i8** @progName, align 8
  %157 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %155, i8* getelementptr inbounds ([50 x i8]* @.str104, i32 0, i32 0), i8* %156)
  %158 = load %struct._IO_FILE** @stderr, align 8
  %159 = load i8** @progName, align 8
  %160 = load i8** @progName, align 8
  %161 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %158, i8* getelementptr inbounds ([34 x i8]* @.str54, i32 0, i32 0), i8* %159, i8* %160)
  call void @setExit(i32 1)
  br label %256

; <label>:162                                     ; preds = %147
  br label %231

; <label>:163                                     ; preds = %145
  %164 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str55, i32 0, i32 0))
  store %struct._IO_FILE* %164, %struct._IO_FILE** %inStr, align 8
  %165 = load %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %165, %struct._IO_FILE** %outStr, align 8
  %166 = load %struct._IO_FILE** @stdout, align 8
  %167 = call i32 @fileno(%struct._IO_FILE* %166) #8
  %168 = call i32 @isatty(i32 %167) #8
  %169 = icmp ne i32 %168, 0
  br i1 %169, label %170, label %184

; <label>:170                                     ; preds = %163
  %171 = load %struct._IO_FILE** @stderr, align 8
  %172 = load i8** @progName, align 8
  %173 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %171, i8* getelementptr inbounds ([50 x i8]* @.str104, i32 0, i32 0), i8* %172)
  %174 = load %struct._IO_FILE** @stderr, align 8
  %175 = load i8** @progName, align 8
  %176 = load i8** @progName, align 8
  %177 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %174, i8* getelementptr inbounds ([34 x i8]* @.str54, i32 0, i32 0), i8* %175, i8* %176)
  %178 = load %struct._IO_FILE** %inStr, align 8
  %179 = icmp ne %struct._IO_FILE* %178, null
  br i1 %179, label %180, label %183

; <label>:180                                     ; preds = %170
  %181 = load %struct._IO_FILE** %inStr, align 8
  %182 = call i32 @fclose(%struct._IO_FILE* %181)
  br label %183

; <label>:183                                     ; preds = %180, %170
  call void @setExit(i32 1)
  br label %256

; <label>:184                                     ; preds = %163
  %185 = load %struct._IO_FILE** %inStr, align 8
  %186 = icmp eq %struct._IO_FILE* %185, null
  br i1 %186, label %187, label %194

; <label>:187                                     ; preds = %184
  %188 = load %struct._IO_FILE** @stderr, align 8
  %189 = load i8** @progName, align 8
  %190 = call i32* @__errno_location() #10
  %191 = load i32* %190, align 4
  %192 = call i8* @strerror(i32 %191) #8
  %193 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %188, i8* getelementptr inbounds ([35 x i8]* @.str84, i32 0, i32 0), i8* %189, i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* %192)
  call void @setExit(i32 1)
  br label %256

; <label>:194                                     ; preds = %184
  br label %231

; <label>:195                                     ; preds = %145
  %196 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str55, i32 0, i32 0))
  store %struct._IO_FILE* %196, %struct._IO_FILE** %inStr, align 8
  %197 = call %struct._IO_FILE* @fopen_output_safely(i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str90, i32 0, i32 0))
  store %struct._IO_FILE* %197, %struct._IO_FILE** %outStr, align 8
  %198 = load %struct._IO_FILE** %outStr, align 8
  %199 = icmp eq %struct._IO_FILE* %198, null
  br i1 %199, label %200, label %213

; <label>:200                                     ; preds = %195
  %201 = load %struct._IO_FILE** @stderr, align 8
  %202 = load i8** @progName, align 8
  %203 = call i32* @__errno_location() #10
  %204 = load i32* %203, align 4
  %205 = call i8* @strerror(i32 %204) #8
  %206 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %201, i8* getelementptr inbounds ([38 x i8]* @.str91, i32 0, i32 0), i8* %202, i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0), i8* %205)
  %207 = load %struct._IO_FILE** %inStr, align 8
  %208 = icmp ne %struct._IO_FILE* %207, null
  br i1 %208, label %209, label %212

; <label>:209                                     ; preds = %200
  %210 = load %struct._IO_FILE** %inStr, align 8
  %211 = call i32 @fclose(%struct._IO_FILE* %210)
  br label %212

; <label>:212                                     ; preds = %209, %200
  call void @setExit(i32 1)
  br label %256

; <label>:213                                     ; preds = %195
  %214 = load %struct._IO_FILE** %inStr, align 8
  %215 = icmp eq %struct._IO_FILE* %214, null
  br i1 %215, label %216, label %229

; <label>:216                                     ; preds = %213
  %217 = load %struct._IO_FILE** @stderr, align 8
  %218 = load i8** @progName, align 8
  %219 = call i32* @__errno_location() #10
  %220 = load i32* %219, align 4
  %221 = call i8* @strerror(i32 %220) #8
  %222 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %217, i8* getelementptr inbounds ([35 x i8]* @.str84, i32 0, i32 0), i8* %218, i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* %221)
  %223 = load %struct._IO_FILE** %outStr, align 8
  %224 = icmp ne %struct._IO_FILE* %223, null
  br i1 %224, label %225, label %228

; <label>:225                                     ; preds = %216
  %226 = load %struct._IO_FILE** %outStr, align 8
  %227 = call i32 @fclose(%struct._IO_FILE* %226)
  br label %228

; <label>:228                                     ; preds = %225, %216
  call void @setExit(i32 1)
  br label %256

; <label>:229                                     ; preds = %213
  br label %231

; <label>:230                                     ; preds = %145
  call void @panic(i8* getelementptr inbounds ([22 x i8]* @.str105, i32 0, i32 0)) #12
  unreachable

; <label>:231                                     ; preds = %229, %194, %162
  %232 = load i32* @verbosity, align 4
  %233 = icmp sge i32 %232, 1
  br i1 %233, label %234, label %239

; <label>:234                                     ; preds = %231
  %235 = load %struct._IO_FILE** @stderr, align 8
  %236 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %235, i8* getelementptr inbounds ([7 x i8]* @.str58, i32 0, i32 0), i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  call void @pad(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  %237 = load %struct._IO_FILE** @stderr, align 8
  %238 = call i32 @fflush(%struct._IO_FILE* %237)
  br label %239

; <label>:239                                     ; preds = %234, %231
  %240 = load %struct._IO_FILE** %outStr, align 8
  store %struct._IO_FILE* %240, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 1, i8* @deleteOutputOnInterrupt, align 1
  %241 = load %struct._IO_FILE** %inStr, align 8
  %242 = load %struct._IO_FILE** %outStr, align 8
  call void @compressStream(%struct._IO_FILE* %241, %struct._IO_FILE* %242)
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %243 = load i32* @srcMode, align 4
  %244 = icmp eq i32 %243, 3
  br i1 %244, label %245, label %255

; <label>:245                                     ; preds = %239
  call void @applySavedMetaInfoToOutputFile(i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0))
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %246 = load i8* @keepInputFiles, align 1
  %247 = icmp ne i8 %246, 0
  br i1 %247, label %254, label %248

; <label>:248                                     ; preds = %245
  %249 = call i32 @remove(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0)) #8
  store i32 %249, i32* %retVal, align 4
  %250 = load i32* %retVal, align 4
  %251 = icmp ne i32 %250, 0
  br i1 %251, label %252, label %253

; <label>:252                                     ; preds = %248
  call void @ioError() #12
  unreachable

; <label>:253                                     ; preds = %248
  br label %254

; <label>:254                                     ; preds = %253, %245
  br label %255

; <label>:255                                     ; preds = %254, %239
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  br label %256

; <label>:256                                     ; preds = %255, %228, %212, %187, %183, %154, %133, %119, %106, %84, %67, %38, %31
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uncompress(i8* %name) #0 {
  %1 = alloca i8*, align 8
  %inStr = alloca %struct._IO_FILE*, align 8
  %outStr = alloca %struct._IO_FILE*, align 8
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %magicNumberOK = alloca i8, align 1
  %cantGuess = alloca i8, align 1
  %statBuf = alloca %struct.stat, align 8
  %retVal = alloca i32, align 4
  %retVal1 = alloca i32, align 4
  store i8* %name, i8** %1, align 8
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %2 = load i8** %1, align 8
  %3 = icmp eq i8* %2, null
  br i1 %3, label %4, label %8

; <label>:4                                       ; preds = %0
  %5 = load i32* @srcMode, align 4
  %6 = icmp ne i32 %5, 1
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %4
  call void @panic(i8* getelementptr inbounds ([23 x i8]* @.str81, i32 0, i32 0)) #12
  unreachable

; <label>:8                                       ; preds = %4, %0
  store i8 0, i8* %cantGuess, align 1
  %9 = load i32* @srcMode, align 4
  switch i32 %9, label %37 [
    i32 1, label %10
    i32 3, label %11
    i32 2, label %35
  ]

; <label>:10                                      ; preds = %8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str49, i32 0, i32 0))
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str82, i32 0, i32 0))
  br label %37

; <label>:11                                      ; preds = %8
  %12 = load i8** %1, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* %12)
  %13 = load i8** %1, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0), i8* %13)
  store i32 0, i32* %i, align 4
  br label %14

; <label>:14                                      ; preds = %30, %11
  %15 = load i32* %i, align 4
  %16 = icmp slt i32 %15, 4
  br i1 %16, label %17, label %33

; <label>:17                                      ; preds = %14
  %18 = load i32* %i, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [4 x i8*]* @zSuffix, i32 0, i64 %19
  %21 = load i8** %20, align 8
  %22 = load i32* %i, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [4 x i8*]* @unzSuffix, i32 0, i64 %23
  %25 = load i8** %24, align 8
  %26 = call zeroext i8 @mapSuffix(i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0), i8* %21, i8* %25)
  %27 = icmp ne i8 %26, 0
  br i1 %27, label %28, label %29

; <label>:28                                      ; preds = %17
  br label %38

; <label>:29                                      ; preds = %17
  br label %30

; <label>:30                                      ; preds = %29
  %31 = load i32* %i, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %i, align 4
  br label %14

; <label>:33                                      ; preds = %14
  store i8 1, i8* %cantGuess, align 1
  %34 = call i8* @strcat(i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str83, i32 0, i32 0)) #8
  br label %37

; <label>:35                                      ; preds = %8
  %36 = load i8** %1, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* %36)
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str82, i32 0, i32 0))
  br label %37

; <label>:37                                      ; preds = %8, %35, %33, %10
  br label %38

; <label>:38                                      ; preds = %37, %28
  %39 = load i32* @srcMode, align 4
  %40 = icmp ne i32 %39, 1
  br i1 %40, label %41, label %53

; <label>:41                                      ; preds = %38
  %42 = call zeroext i8 @containsDubiousChars(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  %43 = zext i8 %42 to i32
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %53

; <label>:45                                      ; preds = %41
  %46 = load i8* @noisy, align 1
  %47 = icmp ne i8 %46, 0
  br i1 %47, label %48, label %52

; <label>:48                                      ; preds = %45
  %49 = load %struct._IO_FILE** @stderr, align 8
  %50 = load i8** @progName, align 8
  %51 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %49, i8* getelementptr inbounds ([39 x i8]* @.str50, i32 0, i32 0), i8* %50, i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  br label %52

; <label>:52                                      ; preds = %48, %45
  call void @setExit(i32 1)
  br label %283

; <label>:53                                      ; preds = %41, %38
  %54 = load i32* @srcMode, align 4
  %55 = icmp ne i32 %54, 1
  br i1 %55, label %56, label %66

; <label>:56                                      ; preds = %53
  %57 = call zeroext i8 @fileExists(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  %58 = icmp ne i8 %57, 0
  br i1 %58, label %66, label %59

; <label>:59                                      ; preds = %56
  %60 = load %struct._IO_FILE** @stderr, align 8
  %61 = load i8** @progName, align 8
  %62 = call i32* @__errno_location() #10
  %63 = load i32* %62, align 4
  %64 = call i8* @strerror(i32 %63) #8
  %65 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([35 x i8]* @.str84, i32 0, i32 0), i8* %61, i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* %64)
  call void @setExit(i32 1)
  br label %283

; <label>:66                                      ; preds = %56, %53
  %67 = load i32* @srcMode, align 4
  %68 = icmp eq i32 %67, 3
  br i1 %68, label %72, label %69

; <label>:69                                      ; preds = %66
  %70 = load i32* @srcMode, align 4
  %71 = icmp eq i32 %70, 2
  br i1 %71, label %72, label %83

; <label>:72                                      ; preds = %69, %66
  %73 = call i32 @stat(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), %struct.stat* %statBuf) #8
  %74 = getelementptr inbounds %struct.stat* %statBuf, i32 0, i32 3
  %75 = load i32* %74, align 4
  %76 = and i32 %75, 61440
  %77 = icmp eq i32 %76, 16384
  br i1 %77, label %78, label %82

; <label>:78                                      ; preds = %72
  %79 = load %struct._IO_FILE** @stderr, align 8
  %80 = load i8** @progName, align 8
  %81 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %79, i8* getelementptr inbounds ([35 x i8]* @.str52, i32 0, i32 0), i8* %80, i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  call void @setExit(i32 1)
  br label %283

; <label>:82                                      ; preds = %72
  br label %83

; <label>:83                                      ; preds = %82, %69
  %84 = load i32* @srcMode, align 4
  %85 = icmp eq i32 %84, 3
  br i1 %85, label %86, label %101

; <label>:86                                      ; preds = %83
  %87 = load i8* @forceOverwrite, align 1
  %88 = icmp ne i8 %87, 0
  br i1 %88, label %101, label %89

; <label>:89                                      ; preds = %86
  %90 = call zeroext i8 @notAStandardFile(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  %91 = zext i8 %90 to i32
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %93, label %101

; <label>:93                                      ; preds = %89
  %94 = load i8* @noisy, align 1
  %95 = icmp ne i8 %94, 0
  br i1 %95, label %96, label %100

; <label>:96                                      ; preds = %93
  %97 = load %struct._IO_FILE** @stderr, align 8
  %98 = load i8** @progName, align 8
  %99 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %97, i8* getelementptr inbounds ([41 x i8]* @.str85, i32 0, i32 0), i8* %98, i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  br label %100

; <label>:100                                     ; preds = %96, %93
  call void @setExit(i32 1)
  br label %283

; <label>:101                                     ; preds = %89, %86, %83
  %102 = load i8* %cantGuess, align 1
  %103 = icmp ne i8 %102, 0
  br i1 %103, label %104, label %112

; <label>:104                                     ; preds = %101
  %105 = load i8* @noisy, align 1
  %106 = icmp ne i8 %105, 0
  br i1 %106, label %107, label %111

; <label>:107                                     ; preds = %104
  %108 = load %struct._IO_FILE** @stderr, align 8
  %109 = load i8** @progName, align 8
  %110 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %108, i8* getelementptr inbounds ([50 x i8]* @.str86, i32 0, i32 0), i8* %109, i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0))
  br label %111

; <label>:111                                     ; preds = %107, %104
  br label %112

; <label>:112                                     ; preds = %111, %101
  %113 = load i32* @srcMode, align 4
  %114 = icmp eq i32 %113, 3
  br i1 %114, label %115, label %129

; <label>:115                                     ; preds = %112
  %116 = call zeroext i8 @fileExists(i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0))
  %117 = zext i8 %116 to i32
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %129

; <label>:119                                     ; preds = %115
  %120 = load i8* @forceOverwrite, align 1
  %121 = icmp ne i8 %120, 0
  br i1 %121, label %122, label %124

; <label>:122                                     ; preds = %119
  %123 = call i32 @remove(i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0)) #8
  br label %128

; <label>:124                                     ; preds = %119
  %125 = load %struct._IO_FILE** @stderr, align 8
  %126 = load i8** @progName, align 8
  %127 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %125, i8* getelementptr inbounds ([36 x i8]* @.str87, i32 0, i32 0), i8* %126, i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0))
  call void @setExit(i32 1)
  br label %283

; <label>:128                                     ; preds = %122
  br label %129

; <label>:129                                     ; preds = %128, %115, %112
  %130 = load i32* @srcMode, align 4
  %131 = icmp eq i32 %130, 3
  br i1 %131, label %132, label %146

; <label>:132                                     ; preds = %129
  %133 = load i8* @forceOverwrite, align 1
  %134 = icmp ne i8 %133, 0
  br i1 %134, label %146, label %135

; <label>:135                                     ; preds = %132
  %136 = call i32 @countHardLinks(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  store i32 %136, i32* %n, align 4
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %138, label %146

; <label>:138                                     ; preds = %135
  %139 = load %struct._IO_FILE** @stderr, align 8
  %140 = load i8** @progName, align 8
  %141 = load i32* %n, align 4
  %142 = load i32* %n, align 4
  %143 = icmp sgt i32 %142, 1
  %144 = select i1 %143, i8* getelementptr inbounds ([2 x i8]* @.str89, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str16, i32 0, i32 0)
  %145 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %139, i8* getelementptr inbounds ([40 x i8]* @.str88, i32 0, i32 0), i8* %140, i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i32 %141, i8* %144)
  call void @setExit(i32 1)
  br label %283

; <label>:146                                     ; preds = %135, %132, %129
  %147 = load i32* @srcMode, align 4
  %148 = icmp eq i32 %147, 3
  br i1 %148, label %149, label %150

; <label>:149                                     ; preds = %146
  call void @saveInputFileMetaInfo(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  br label %150

; <label>:150                                     ; preds = %149, %146
  %151 = load i32* @srcMode, align 4
  switch i32 %151, label %222 [
    i32 1, label %152
    i32 2, label %168
    i32 3, label %187
  ]

; <label>:152                                     ; preds = %150
  %153 = load %struct._IO_FILE** @stdin, align 8
  store %struct._IO_FILE* %153, %struct._IO_FILE** %inStr, align 8
  %154 = load %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %154, %struct._IO_FILE** %outStr, align 8
  %155 = load %struct._IO_FILE** @stdin, align 8
  %156 = call i32 @fileno(%struct._IO_FILE* %155) #8
  %157 = call i32 @isatty(i32 %156) #8
  %158 = icmp ne i32 %157, 0
  br i1 %158, label %159, label %167

; <label>:159                                     ; preds = %152
  %160 = load %struct._IO_FILE** @stderr, align 8
  %161 = load i8** @progName, align 8
  %162 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %160, i8* getelementptr inbounds ([51 x i8]* @.str53, i32 0, i32 0), i8* %161)
  %163 = load %struct._IO_FILE** @stderr, align 8
  %164 = load i8** @progName, align 8
  %165 = load i8** @progName, align 8
  %166 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %163, i8* getelementptr inbounds ([34 x i8]* @.str54, i32 0, i32 0), i8* %164, i8* %165)
  call void @setExit(i32 1)
  br label %283

; <label>:167                                     ; preds = %152
  br label %223

; <label>:168                                     ; preds = %150
  %169 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str55, i32 0, i32 0))
  store %struct._IO_FILE* %169, %struct._IO_FILE** %inStr, align 8
  %170 = load %struct._IO_FILE** @stdout, align 8
  store %struct._IO_FILE* %170, %struct._IO_FILE** %outStr, align 8
  %171 = load %struct._IO_FILE** %inStr, align 8
  %172 = icmp eq %struct._IO_FILE* %171, null
  br i1 %172, label %173, label %186

; <label>:173                                     ; preds = %168
  %174 = load %struct._IO_FILE** @stderr, align 8
  %175 = load i8** @progName, align 8
  %176 = call i32* @__errno_location() #10
  %177 = load i32* %176, align 4
  %178 = call i8* @strerror(i32 %177) #8
  %179 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %174, i8* getelementptr inbounds ([34 x i8]* @.str56, i32 0, i32 0), i8* %175, i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* %178)
  %180 = load %struct._IO_FILE** %inStr, align 8
  %181 = icmp ne %struct._IO_FILE* %180, null
  br i1 %181, label %182, label %185

; <label>:182                                     ; preds = %173
  %183 = load %struct._IO_FILE** %inStr, align 8
  %184 = call i32 @fclose(%struct._IO_FILE* %183)
  br label %185

; <label>:185                                     ; preds = %182, %173
  call void @setExit(i32 1)
  br label %283

; <label>:186                                     ; preds = %168
  br label %223

; <label>:187                                     ; preds = %150
  %188 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str55, i32 0, i32 0))
  store %struct._IO_FILE* %188, %struct._IO_FILE** %inStr, align 8
  %189 = call %struct._IO_FILE* @fopen_output_safely(i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str90, i32 0, i32 0))
  store %struct._IO_FILE* %189, %struct._IO_FILE** %outStr, align 8
  %190 = load %struct._IO_FILE** %outStr, align 8
  %191 = icmp eq %struct._IO_FILE* %190, null
  br i1 %191, label %192, label %205

; <label>:192                                     ; preds = %187
  %193 = load %struct._IO_FILE** @stderr, align 8
  %194 = load i8** @progName, align 8
  %195 = call i32* @__errno_location() #10
  %196 = load i32* %195, align 4
  %197 = call i8* @strerror(i32 %196) #8
  %198 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %193, i8* getelementptr inbounds ([38 x i8]* @.str91, i32 0, i32 0), i8* %194, i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0), i8* %197)
  %199 = load %struct._IO_FILE** %inStr, align 8
  %200 = icmp ne %struct._IO_FILE* %199, null
  br i1 %200, label %201, label %204

; <label>:201                                     ; preds = %192
  %202 = load %struct._IO_FILE** %inStr, align 8
  %203 = call i32 @fclose(%struct._IO_FILE* %202)
  br label %204

; <label>:204                                     ; preds = %201, %192
  call void @setExit(i32 1)
  br label %283

; <label>:205                                     ; preds = %187
  %206 = load %struct._IO_FILE** %inStr, align 8
  %207 = icmp eq %struct._IO_FILE* %206, null
  br i1 %207, label %208, label %221

; <label>:208                                     ; preds = %205
  %209 = load %struct._IO_FILE** @stderr, align 8
  %210 = load i8** @progName, align 8
  %211 = call i32* @__errno_location() #10
  %212 = load i32* %211, align 4
  %213 = call i8* @strerror(i32 %212) #8
  %214 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %209, i8* getelementptr inbounds ([35 x i8]* @.str84, i32 0, i32 0), i8* %210, i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* %213)
  %215 = load %struct._IO_FILE** %outStr, align 8
  %216 = icmp ne %struct._IO_FILE* %215, null
  br i1 %216, label %217, label %220

; <label>:217                                     ; preds = %208
  %218 = load %struct._IO_FILE** %outStr, align 8
  %219 = call i32 @fclose(%struct._IO_FILE* %218)
  br label %220

; <label>:220                                     ; preds = %217, %208
  call void @setExit(i32 1)
  br label %283

; <label>:221                                     ; preds = %205
  br label %223

; <label>:222                                     ; preds = %150
  call void @panic(i8* getelementptr inbounds ([24 x i8]* @.str92, i32 0, i32 0)) #12
  unreachable

; <label>:223                                     ; preds = %221, %186, %167
  %224 = load i32* @verbosity, align 4
  %225 = icmp sge i32 %224, 1
  br i1 %225, label %226, label %231

; <label>:226                                     ; preds = %223
  %227 = load %struct._IO_FILE** @stderr, align 8
  %228 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %227, i8* getelementptr inbounds ([7 x i8]* @.str58, i32 0, i32 0), i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  call void @pad(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  %229 = load %struct._IO_FILE** @stderr, align 8
  %230 = call i32 @fflush(%struct._IO_FILE* %229)
  br label %231

; <label>:231                                     ; preds = %226, %223
  %232 = load %struct._IO_FILE** %outStr, align 8
  store %struct._IO_FILE* %232, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 1, i8* @deleteOutputOnInterrupt, align 1
  %233 = load %struct._IO_FILE** %inStr, align 8
  %234 = load %struct._IO_FILE** %outStr, align 8
  %235 = call zeroext i8 @uncompressStream(%struct._IO_FILE* %233, %struct._IO_FILE* %234)
  store i8 %235, i8* %magicNumberOK, align 1
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %236 = load i8* %magicNumberOK, align 1
  %237 = icmp ne i8 %236, 0
  br i1 %237, label %238, label %252

; <label>:238                                     ; preds = %231
  %239 = load i32* @srcMode, align 4
  %240 = icmp eq i32 %239, 3
  br i1 %240, label %241, label %251

; <label>:241                                     ; preds = %238
  call void @applySavedMetaInfoToOutputFile(i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0))
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %242 = load i8* @keepInputFiles, align 1
  %243 = icmp ne i8 %242, 0
  br i1 %243, label %250, label %244

; <label>:244                                     ; preds = %241
  %245 = call i32 @remove(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0)) #8
  store i32 %245, i32* %retVal, align 4
  %246 = load i32* %retVal, align 4
  %247 = icmp ne i32 %246, 0
  br i1 %247, label %248, label %249

; <label>:248                                     ; preds = %244
  call void @ioError() #12
  unreachable

; <label>:249                                     ; preds = %244
  br label %250

; <label>:250                                     ; preds = %249, %241
  br label %251

; <label>:251                                     ; preds = %250, %238
  br label %262

; <label>:252                                     ; preds = %231
  store i8 1, i8* @unzFailsExist, align 1
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %253 = load i32* @srcMode, align 4
  %254 = icmp eq i32 %253, 3
  br i1 %254, label %255, label %261

; <label>:255                                     ; preds = %252
  %256 = call i32 @remove(i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0)) #8
  store i32 %256, i32* %retVal1, align 4
  %257 = load i32* %retVal1, align 4
  %258 = icmp ne i32 %257, 0
  br i1 %258, label %259, label %260

; <label>:259                                     ; preds = %255
  call void @ioError() #12
  unreachable

; <label>:260                                     ; preds = %255
  br label %261

; <label>:261                                     ; preds = %260, %252
  br label %262

; <label>:262                                     ; preds = %261, %251
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %263 = load i8* %magicNumberOK, align 1
  %264 = icmp ne i8 %263, 0
  br i1 %264, label %265, label %272

; <label>:265                                     ; preds = %262
  %266 = load i32* @verbosity, align 4
  %267 = icmp sge i32 %266, 1
  br i1 %267, label %268, label %271

; <label>:268                                     ; preds = %265
  %269 = load %struct._IO_FILE** @stderr, align 8
  %270 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %269, i8* getelementptr inbounds ([6 x i8]* @.str93, i32 0, i32 0))
  br label %271

; <label>:271                                     ; preds = %268, %265
  br label %283

; <label>:272                                     ; preds = %262
  call void @setExit(i32 2)
  %273 = load i32* @verbosity, align 4
  %274 = icmp sge i32 %273, 1
  br i1 %274, label %275, label %278

; <label>:275                                     ; preds = %272
  %276 = load %struct._IO_FILE** @stderr, align 8
  %277 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %276, i8* getelementptr inbounds ([19 x i8]* @.str94, i32 0, i32 0))
  br label %282

; <label>:278                                     ; preds = %272
  %279 = load %struct._IO_FILE** @stderr, align 8
  %280 = load i8** @progName, align 8
  %281 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %279, i8* getelementptr inbounds ([29 x i8]* @.str95, i32 0, i32 0), i8* %280, i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  br label %282

; <label>:282                                     ; preds = %278, %275
  br label %283

; <label>:283                                     ; preds = %52, %59, %78, %100, %124, %138, %159, %185, %204, %220, %282, %271
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @setExit(i32 %v) #0 {
  %1 = alloca i32, align 4
  store i32 %v, i32* %1, align 4
  %2 = load i32* %1, align 4
  %3 = load i32* @exitValue, align 4
  %4 = icmp sgt i32 %2, %3
  br i1 %4, label %5, label %7

; <label>:5                                       ; preds = %0
  %6 = load i32* %1, align 4
  store i32 %6, i32* @exitValue, align 4
  br label %7

; <label>:7                                       ; preds = %5, %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @testf(i8* %name) #0 {
  %1 = alloca i8*, align 8
  %inStr = alloca %struct._IO_FILE*, align 8
  %allOK = alloca i8, align 1
  %statBuf = alloca %struct.stat, align 8
  store i8* %name, i8** %1, align 8
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %2 = load i8** %1, align 8
  %3 = icmp eq i8* %2, null
  br i1 %3, label %4, label %8

; <label>:4                                       ; preds = %0
  %5 = load i32* @srcMode, align 4
  %6 = icmp ne i32 %5, 1
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %4
  call void @panic(i8* getelementptr inbounds ([18 x i8]* @.str48, i32 0, i32 0)) #12
  unreachable

; <label>:8                                       ; preds = %4, %0
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str18, i32 0, i32 0))
  %9 = load i32* @srcMode, align 4
  switch i32 %9, label %15 [
    i32 1, label %10
    i32 3, label %11
    i32 2, label %13
  ]

; <label>:10                                      ; preds = %8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str49, i32 0, i32 0))
  br label %15

; <label>:11                                      ; preds = %8
  %12 = load i8** %1, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* %12)
  br label %15

; <label>:13                                      ; preds = %8
  %14 = load i8** %1, align 8
  call void @copyFileName(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* %14)
  br label %15

; <label>:15                                      ; preds = %8, %13, %11, %10
  %16 = load i32* @srcMode, align 4
  %17 = icmp ne i32 %16, 1
  br i1 %17, label %18, label %30

; <label>:18                                      ; preds = %15
  %19 = call zeroext i8 @containsDubiousChars(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  %20 = zext i8 %19 to i32
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %22, label %30

; <label>:22                                      ; preds = %18
  %23 = load i8* @noisy, align 1
  %24 = icmp ne i8 %23, 0
  br i1 %24, label %25, label %29

; <label>:25                                      ; preds = %22
  %26 = load %struct._IO_FILE** @stderr, align 8
  %27 = load i8** @progName, align 8
  %28 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([39 x i8]* @.str50, i32 0, i32 0), i8* %27, i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  br label %29

; <label>:29                                      ; preds = %25, %22
  call void @setExit(i32 1)
  br label %111

; <label>:30                                      ; preds = %18, %15
  %31 = load i32* @srcMode, align 4
  %32 = icmp ne i32 %31, 1
  br i1 %32, label %33, label %43

; <label>:33                                      ; preds = %30
  %34 = call zeroext i8 @fileExists(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  %35 = icmp ne i8 %34, 0
  br i1 %35, label %43, label %36

; <label>:36                                      ; preds = %33
  %37 = load %struct._IO_FILE** @stderr, align 8
  %38 = load i8** @progName, align 8
  %39 = call i32* @__errno_location() #10
  %40 = load i32* %39, align 4
  %41 = call i8* @strerror(i32 %40) #8
  %42 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %37, i8* getelementptr inbounds ([30 x i8]* @.str51, i32 0, i32 0), i8* %38, i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* %41)
  call void @setExit(i32 1)
  br label %111

; <label>:43                                      ; preds = %33, %30
  %44 = load i32* @srcMode, align 4
  %45 = icmp ne i32 %44, 1
  br i1 %45, label %46, label %57

; <label>:46                                      ; preds = %43
  %47 = call i32 @stat(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), %struct.stat* %statBuf) #8
  %48 = getelementptr inbounds %struct.stat* %statBuf, i32 0, i32 3
  %49 = load i32* %48, align 4
  %50 = and i32 %49, 61440
  %51 = icmp eq i32 %50, 16384
  br i1 %51, label %52, label %56

; <label>:52                                      ; preds = %46
  %53 = load %struct._IO_FILE** @stderr, align 8
  %54 = load i8** @progName, align 8
  %55 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %53, i8* getelementptr inbounds ([35 x i8]* @.str52, i32 0, i32 0), i8* %54, i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  call void @setExit(i32 1)
  br label %111

; <label>:56                                      ; preds = %46
  br label %57

; <label>:57                                      ; preds = %56, %43
  %58 = load i32* @srcMode, align 4
  switch i32 %58, label %86 [
    i32 1, label %59
    i32 2, label %74
    i32 3, label %74
  ]

; <label>:59                                      ; preds = %57
  %60 = load %struct._IO_FILE** @stdin, align 8
  %61 = call i32 @fileno(%struct._IO_FILE* %60) #8
  %62 = call i32 @isatty(i32 %61) #8
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %72

; <label>:64                                      ; preds = %59
  %65 = load %struct._IO_FILE** @stderr, align 8
  %66 = load i8** @progName, align 8
  %67 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([51 x i8]* @.str53, i32 0, i32 0), i8* %66)
  %68 = load %struct._IO_FILE** @stderr, align 8
  %69 = load i8** @progName, align 8
  %70 = load i8** @progName, align 8
  %71 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([34 x i8]* @.str54, i32 0, i32 0), i8* %69, i8* %70)
  call void @setExit(i32 1)
  br label %111

; <label>:72                                      ; preds = %59
  %73 = load %struct._IO_FILE** @stdin, align 8
  store %struct._IO_FILE* %73, %struct._IO_FILE** %inStr, align 8
  br label %87

; <label>:74                                      ; preds = %57, %57
  %75 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str55, i32 0, i32 0))
  store %struct._IO_FILE* %75, %struct._IO_FILE** %inStr, align 8
  %76 = load %struct._IO_FILE** %inStr, align 8
  %77 = icmp eq %struct._IO_FILE* %76, null
  br i1 %77, label %78, label %85

; <label>:78                                      ; preds = %74
  %79 = load %struct._IO_FILE** @stderr, align 8
  %80 = load i8** @progName, align 8
  %81 = call i32* @__errno_location() #10
  %82 = load i32* %81, align 4
  %83 = call i8* @strerror(i32 %82) #8
  %84 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %79, i8* getelementptr inbounds ([34 x i8]* @.str56, i32 0, i32 0), i8* %80, i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* %83)
  call void @setExit(i32 1)
  br label %111

; <label>:85                                      ; preds = %74
  br label %87

; <label>:86                                      ; preds = %57
  call void @panic(i8* getelementptr inbounds ([19 x i8]* @.str57, i32 0, i32 0)) #12
  unreachable

; <label>:87                                      ; preds = %85, %72
  %88 = load i32* @verbosity, align 4
  %89 = icmp sge i32 %88, 1
  br i1 %89, label %90, label %95

; <label>:90                                      ; preds = %87
  %91 = load %struct._IO_FILE** @stderr, align 8
  %92 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %91, i8* getelementptr inbounds ([7 x i8]* @.str58, i32 0, i32 0), i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  call void @pad(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  %93 = load %struct._IO_FILE** @stderr, align 8
  %94 = call i32 @fflush(%struct._IO_FILE* %93)
  br label %95

; <label>:95                                      ; preds = %90, %87
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %96 = load %struct._IO_FILE** %inStr, align 8
  %97 = call zeroext i8 @testStream(%struct._IO_FILE* %96)
  store i8 %97, i8* %allOK, align 1
  %98 = load i8* %allOK, align 1
  %99 = zext i8 %98 to i32
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %101, label %107

; <label>:101                                     ; preds = %95
  %102 = load i32* @verbosity, align 4
  %103 = icmp sge i32 %102, 1
  br i1 %103, label %104, label %107

; <label>:104                                     ; preds = %101
  %105 = load %struct._IO_FILE** @stderr, align 8
  %106 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %105, i8* getelementptr inbounds ([4 x i8]* @.str59, i32 0, i32 0))
  br label %107

; <label>:107                                     ; preds = %104, %101, %95
  %108 = load i8* %allOK, align 1
  %109 = icmp ne i8 %108, 0
  br i1 %109, label %111, label %110

; <label>:110                                     ; preds = %107
  store i8 1, i8* @testFailsExist, align 1
  br label %111

; <label>:111                                     ; preds = %29, %36, %52, %64, %78, %110, %107
  ret void
}

; Function Attrs: noreturn nounwind uwtable
define internal void @panic(i8* %s) #6 {
  %1 = alloca i8*, align 8
  store i8* %s, i8** %1, align 8
  %2 = load %struct._IO_FILE** @stderr, align 8
  %3 = load i8** @progName, align 8
  %4 = load i8** %1, align 8
  %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([108 x i8]* @.str80, i32 0, i32 0), i8* %3, i8* %4)
  call void @showFileNames()
  call void @cleanUpAndFail(i32 3) #12
  unreachable
                                                  ; No predecessors!
  ret void
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @containsDubiousChars(i8* %name) #0 {
  %1 = alloca i8*, align 8
  store i8* %name, i8** %1, align 8
  ret i8 0
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @fileExists(i8* %name) #0 {
  %1 = alloca i8*, align 8
  %tmp = alloca %struct._IO_FILE*, align 8
  %exists = alloca i8, align 1
  store i8* %name, i8** %1, align 8
  %2 = load i8** %1, align 8
  %3 = call %struct._IO_FILE* @fopen(i8* %2, i8* getelementptr inbounds ([3 x i8]* @.str55, i32 0, i32 0))
  store %struct._IO_FILE* %3, %struct._IO_FILE** %tmp, align 8
  %4 = load %struct._IO_FILE** %tmp, align 8
  %5 = icmp ne %struct._IO_FILE* %4, null
  %6 = zext i1 %5 to i32
  %7 = trunc i32 %6 to i8
  store i8 %7, i8* %exists, align 1
  %8 = load %struct._IO_FILE** %tmp, align 8
  %9 = icmp ne %struct._IO_FILE* %8, null
  br i1 %9, label %10, label %13

; <label>:10                                      ; preds = %0
  %11 = load %struct._IO_FILE** %tmp, align 8
  %12 = call i32 @fclose(%struct._IO_FILE* %11)
  br label %13

; <label>:13                                      ; preds = %10, %0
  %14 = load i8* %exists, align 1
  ret i8 %14
}

; Function Attrs: nounwind
declare i8* @strerror(i32) #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #7

; Function Attrs: nounwind
declare i32 @stat(i8*, %struct.stat*) #4

; Function Attrs: nounwind
declare i32 @isatty(i32) #4

; Function Attrs: nounwind
declare i32 @fileno(%struct._IO_FILE*) #4

declare %struct._IO_FILE* @fopen(i8*, i8*) #1

; Function Attrs: nounwind uwtable
define internal void @pad(i8* %s) #0 {
  %1 = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %s, i8** %1, align 8
  %2 = load i8** %1, align 8
  %3 = call i64 @strlen(i8* %2) #11
  %4 = trunc i64 %3 to i32
  %5 = load i32* @longestFileName, align 4
  %6 = icmp sge i32 %4, %5
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  br label %23

; <label>:8                                       ; preds = %0
  store i32 1, i32* %i, align 4
  br label %9

; <label>:9                                       ; preds = %20, %8
  %10 = load i32* %i, align 4
  %11 = load i32* @longestFileName, align 4
  %12 = load i8** %1, align 8
  %13 = call i64 @strlen(i8* %12) #11
  %14 = trunc i64 %13 to i32
  %15 = sub nsw i32 %11, %14
  %16 = icmp sle i32 %10, %15
  br i1 %16, label %17, label %23

; <label>:17                                      ; preds = %9
  %18 = load %struct._IO_FILE** @stderr, align 8
  %19 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([2 x i8]* @.str79, i32 0, i32 0))
  br label %20

; <label>:20                                      ; preds = %17
  %21 = load i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %9

; <label>:23                                      ; preds = %7, %9
  ret void
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @testStream(%struct._IO_FILE* %zStream) #0 {
  %1 = alloca i8, align 1
  %2 = alloca %struct._IO_FILE*, align 8
  %bzf = alloca i8*, align 8
  %bzerr = alloca i32, align 4
  %bzerr_dummy = alloca i32, align 4
  %ret = alloca i32, align 4
  %nread = alloca i32, align 4
  %streamNo = alloca i32, align 4
  %i = alloca i32, align 4
  %obuf = alloca [5000 x i8], align 16
  %unused = alloca [5000 x i8], align 16
  %nUnused = alloca i32, align 4
  %unusedTmp = alloca i8*, align 8
  store %struct._IO_FILE* %zStream, %struct._IO_FILE** %2, align 8
  store i8* null, i8** %bzf, align 8
  store i32 0, i32* %nUnused, align 4
  store i32 0, i32* %streamNo, align 4
  %3 = load %struct._IO_FILE** %2, align 8
  %4 = call i32 @ferror(%struct._IO_FILE* %3) #8
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  br label %107

; <label>:7                                       ; preds = %0
  br label %8

; <label>:8                                       ; preds = %7, %76
  %9 = load %struct._IO_FILE** %2, align 8
  %10 = load i32* @verbosity, align 4
  %11 = load i8* @smallMode, align 1
  %12 = zext i8 %11 to i32
  %13 = getelementptr inbounds [5000 x i8]* %unused, i32 0, i32 0
  %14 = load i32* %nUnused, align 4
  %15 = call i8* @BZ2_bzReadOpen(i32* %bzerr, %struct._IO_FILE* %9, i32 %10, i32 %12, i8* %13, i32 %14)
  store i8* %15, i8** %bzf, align 8
  %16 = load i8** %bzf, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

; <label>:18                                      ; preds = %8
  %19 = load i32* %bzerr, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %18, %8
  br label %95

; <label>:22                                      ; preds = %18
  %23 = load i32* %streamNo, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %streamNo, align 4
  br label %25

; <label>:25                                      ; preds = %35, %22
  %26 = load i32* %bzerr, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %36

; <label>:28                                      ; preds = %25
  %29 = load i8** %bzf, align 8
  %30 = getelementptr inbounds [5000 x i8]* %obuf, i32 0, i32 0
  %31 = call i32 @BZ2_bzRead(i32* %bzerr, i8* %29, i8* %30, i32 5000)
  store i32 %31, i32* %nread, align 4
  %32 = load i32* %bzerr, align 4
  %33 = icmp eq i32 %32, -5
  br i1 %33, label %34, label %35

; <label>:34                                      ; preds = %28
  br label %95

; <label>:35                                      ; preds = %28
  br label %25

; <label>:36                                      ; preds = %25
  %37 = load i32* %bzerr, align 4
  %38 = icmp ne i32 %37, 4
  br i1 %38, label %39, label %40

; <label>:39                                      ; preds = %36
  br label %95

; <label>:40                                      ; preds = %36
  %41 = load i8** %bzf, align 8
  call void @BZ2_bzReadGetUnused(i32* %bzerr, i8* %41, i8** %unusedTmp, i32* %nUnused)
  %42 = load i32* %bzerr, align 4
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %45

; <label>:44                                      ; preds = %40
  call void @panic(i8* getelementptr inbounds ([21 x i8]* @.str60, i32 0, i32 0)) #12
  unreachable

; <label>:45                                      ; preds = %40
  store i32 0, i32* %i, align 4
  br label %46

; <label>:46                                      ; preds = %59, %45
  %47 = load i32* %i, align 4
  %48 = load i32* %nUnused, align 4
  %49 = icmp slt i32 %47, %48
  br i1 %49, label %50, label %62

; <label>:50                                      ; preds = %46
  %51 = load i32* %i, align 4
  %52 = sext i32 %51 to i64
  %53 = load i8** %unusedTmp, align 8
  %54 = getelementptr inbounds i8* %53, i64 %52
  %55 = load i8* %54, align 1
  %56 = load i32* %i, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds [5000 x i8]* %unused, i32 0, i64 %57
  store i8 %55, i8* %58, align 1
  br label %59

; <label>:59                                      ; preds = %50
  %60 = load i32* %i, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %i, align 4
  br label %46

; <label>:62                                      ; preds = %46
  %63 = load i8** %bzf, align 8
  call void @BZ2_bzReadClose(i32* %bzerr, i8* %63)
  %64 = load i32* %bzerr, align 4
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %66, label %67

; <label>:66                                      ; preds = %62
  call void @panic(i8* getelementptr inbounds ([21 x i8]* @.str60, i32 0, i32 0)) #12
  unreachable

; <label>:67                                      ; preds = %62
  %68 = load i32* %nUnused, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %76

; <label>:70                                      ; preds = %67
  %71 = load %struct._IO_FILE** %2, align 8
  %72 = call zeroext i8 @myfeof(%struct._IO_FILE* %71)
  %73 = zext i8 %72 to i32
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %75, label %76

; <label>:75                                      ; preds = %70
  br label %77

; <label>:76                                      ; preds = %70, %67
  br label %8

; <label>:77                                      ; preds = %75
  %78 = load %struct._IO_FILE** %2, align 8
  %79 = call i32 @ferror(%struct._IO_FILE* %78) #8
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %81, label %82

; <label>:81                                      ; preds = %77
  br label %107

; <label>:82                                      ; preds = %77
  %83 = load %struct._IO_FILE** %2, align 8
  %84 = call i32 @fclose(%struct._IO_FILE* %83)
  store i32 %84, i32* %ret, align 4
  %85 = load i32* %ret, align 4
  %86 = icmp eq i32 %85, -1
  br i1 %86, label %87, label %88

; <label>:87                                      ; preds = %82
  br label %107

; <label>:88                                      ; preds = %82
  %89 = load i32* @verbosity, align 4
  %90 = icmp sge i32 %89, 2
  br i1 %90, label %91, label %94

; <label>:91                                      ; preds = %88
  %92 = load %struct._IO_FILE** @stderr, align 8
  %93 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %92, i8* getelementptr inbounds ([6 x i8]* @.str61, i32 0, i32 0))
  br label %94

; <label>:94                                      ; preds = %91, %88
  store i8 1, i8* %1
  br label %136

; <label>:95                                      ; preds = %39, %34, %21
  %96 = load i8** %bzf, align 8
  call void @BZ2_bzReadClose(i32* %bzerr_dummy, i8* %96)
  %97 = load i32* @verbosity, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %103

; <label>:99                                      ; preds = %95
  %100 = load %struct._IO_FILE** @stderr, align 8
  %101 = load i8** @progName, align 8
  %102 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([9 x i8]* @.str62, i32 0, i32 0), i8* %101, i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  br label %103

; <label>:103                                     ; preds = %99, %95
  %104 = load i32* %bzerr, align 4
  switch i32 %104, label %135 [
    i32 -9, label %105
    i32 -6, label %106
    i32 -4, label %108
    i32 -3, label %111
    i32 -7, label %112
    i32 -5, label %115
  ]

; <label>:105                                     ; preds = %103
  call void @configError() #12
  unreachable

; <label>:106                                     ; preds = %103
  br label %107

; <label>:107                                     ; preds = %106, %87, %81, %6
  call void @ioError() #12
  unreachable

; <label>:108                                     ; preds = %103
  %109 = load %struct._IO_FILE** @stderr, align 8
  %110 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %109, i8* getelementptr inbounds ([36 x i8]* @.str63, i32 0, i32 0))
  store i8 0, i8* %1
  br label %136

; <label>:111                                     ; preds = %103
  call void @outOfMemory() #12
  unreachable

; <label>:112                                     ; preds = %103
  %113 = load %struct._IO_FILE** @stderr, align 8
  %114 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %113, i8* getelementptr inbounds ([24 x i8]* @.str64, i32 0, i32 0))
  store i8 0, i8* %1
  br label %136

; <label>:115                                     ; preds = %103
  %116 = load %struct._IO_FILE** %2, align 8
  %117 = load %struct._IO_FILE** @stdin, align 8
  %118 = icmp ne %struct._IO_FILE* %116, %117
  br i1 %118, label %119, label %122

; <label>:119                                     ; preds = %115
  %120 = load %struct._IO_FILE** %2, align 8
  %121 = call i32 @fclose(%struct._IO_FILE* %120)
  br label %122

; <label>:122                                     ; preds = %119, %115
  %123 = load i32* %streamNo, align 4
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %128

; <label>:125                                     ; preds = %122
  %126 = load %struct._IO_FILE** @stderr, align 8
  %127 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %126, i8* getelementptr inbounds ([46 x i8]* @.str65, i32 0, i32 0))
  store i8 0, i8* %1
  br label %136

; <label>:128                                     ; preds = %122
  %129 = load i8* @noisy, align 1
  %130 = icmp ne i8 %129, 0
  br i1 %130, label %131, label %134

; <label>:131                                     ; preds = %128
  %132 = load %struct._IO_FILE** @stderr, align 8
  %133 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %132, i8* getelementptr inbounds ([36 x i8]* @.str66, i32 0, i32 0))
  br label %134

; <label>:134                                     ; preds = %131, %128
  store i8 1, i8* %1
  br label %136

; <label>:135                                     ; preds = %103
  call void @panic(i8* getelementptr inbounds ([22 x i8]* @.str67, i32 0, i32 0)) #12
  unreachable

; <label>:136                                     ; preds = %134, %125, %112, %108, %94
  %137 = load i8* %1
  ret i8 %137
}

; Function Attrs: noreturn nounwind uwtable
define internal void @configError() #6 {
  %1 = load %struct._IO_FILE** @stderr, align 8
  %2 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([236 x i8]* @.str78, i32 0, i32 0))
  call void @setExit(i32 3)
  %3 = load i32* @exitValue, align 4
  call void @exit(i32 %3) #9
  unreachable
                                                  ; No predecessors!
  ret void
}

; Function Attrs: noreturn nounwind uwtable
define internal void @ioError() #6 {
  %1 = load %struct._IO_FILE** @stderr, align 8
  %2 = load i8** @progName, align 8
  %3 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([65 x i8]* @.str77, i32 0, i32 0), i8* %2)
  %4 = load i8** @progName, align 8
  call void @perror(i8* %4)
  call void @showFileNames()
  call void @cleanUpAndFail(i32 1) #12
  unreachable
                                                  ; No predecessors!
  ret void
}

; Function Attrs: noreturn nounwind uwtable
define internal void @outOfMemory() #6 {
  %1 = load %struct._IO_FILE** @stderr, align 8
  %2 = load i8** @progName, align 8
  %3 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([38 x i8]* @.str68, i32 0, i32 0), i8* %2)
  call void @showFileNames()
  call void @cleanUpAndFail(i32 1) #12
  unreachable
                                                  ; No predecessors!
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @showFileNames() #0 {
  %1 = load i8* @noisy, align 1
  %2 = icmp ne i8 %1, 0
  br i1 %2, label %3, label %6

; <label>:3                                       ; preds = %0
  %4 = load %struct._IO_FILE** @stderr, align 8
  %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([36 x i8]* @.str76, i32 0, i32 0), i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0))
  br label %6

; <label>:6                                       ; preds = %3, %0
  ret void
}

; Function Attrs: noreturn nounwind uwtable
define internal void @cleanUpAndFail(i32 %ec) #6 {
  %1 = alloca i32, align 4
  %retVal = alloca i32, align 4
  %statBuf = alloca %struct.stat, align 8
  store i32 %ec, i32* %1, align 4
  %2 = load i32* @srcMode, align 4
  %3 = icmp eq i32 %2, 3
  br i1 %3, label %4, label %51

; <label>:4                                       ; preds = %0
  %5 = load i32* @opMode, align 4
  %6 = icmp ne i32 %5, 3
  br i1 %6, label %7, label %51

; <label>:7                                       ; preds = %4
  %8 = load i8* @deleteOutputOnInterrupt, align 1
  %9 = zext i8 %8 to i32
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %51

; <label>:11                                      ; preds = %7
  %12 = call i32 @stat(i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0), %struct.stat* %statBuf) #8
  store i32 %12, i32* %retVal, align 4
  %13 = load i32* %retVal, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %37

; <label>:15                                      ; preds = %11
  %16 = load i8* @noisy, align 1
  %17 = icmp ne i8 %16, 0
  br i1 %17, label %18, label %22

; <label>:18                                      ; preds = %15
  %19 = load %struct._IO_FILE** @stderr, align 8
  %20 = load i8** @progName, align 8
  %21 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([44 x i8]* @.str69, i32 0, i32 0), i8* %20, i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0))
  br label %22

; <label>:22                                      ; preds = %18, %15
  %23 = load %struct._IO_FILE** @outputHandleJustInCase, align 8
  %24 = icmp ne %struct._IO_FILE* %23, null
  br i1 %24, label %25, label %28

; <label>:25                                      ; preds = %22
  %26 = load %struct._IO_FILE** @outputHandleJustInCase, align 8
  %27 = call i32 @fclose(%struct._IO_FILE* %26)
  br label %28

; <label>:28                                      ; preds = %25, %22
  %29 = call i32 @remove(i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0)) #8
  store i32 %29, i32* %retVal, align 4
  %30 = load i32* %retVal, align 4
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %36

; <label>:32                                      ; preds = %28
  %33 = load %struct._IO_FILE** @stderr, align 8
  %34 = load i8** @progName, align 8
  %35 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([59 x i8]* @.str70, i32 0, i32 0), i8* %34)
  br label %36

; <label>:36                                      ; preds = %32, %28
  br label %50

; <label>:37                                      ; preds = %11
  %38 = load %struct._IO_FILE** @stderr, align 8
  %39 = load i8** @progName, align 8
  %40 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([49 x i8]* @.str71, i32 0, i32 0), i8* %39)
  %41 = load %struct._IO_FILE** @stderr, align 8
  %42 = load i8** @progName, align 8
  %43 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([56 x i8]* @.str72, i32 0, i32 0), i8* %42)
  %44 = load %struct._IO_FILE** @stderr, align 8
  %45 = load i8** @progName, align 8
  %46 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([32 x i8]* @.str73, i32 0, i32 0), i8* %45, i8* getelementptr inbounds ([1034 x i8]* @outName, i32 0, i32 0))
  %47 = load %struct._IO_FILE** @stderr, align 8
  %48 = load i8** @progName, align 8
  %49 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %47, i8* getelementptr inbounds ([61 x i8]* @.str74, i32 0, i32 0), i8* %48)
  br label %50

; <label>:50                                      ; preds = %37, %36
  br label %51

; <label>:51                                      ; preds = %50, %7, %4, %0
  %52 = load i8* @noisy, align 1
  %53 = zext i8 %52 to i32
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %71

; <label>:55                                      ; preds = %51
  %56 = load i32* @numFileNames, align 4
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %71

; <label>:58                                      ; preds = %55
  %59 = load i32* @numFilesProcessed, align 4
  %60 = load i32* @numFileNames, align 4
  %61 = icmp slt i32 %59, %60
  br i1 %61, label %62, label %71

; <label>:62                                      ; preds = %58
  %63 = load %struct._IO_FILE** @stderr, align 8
  %64 = load i8** @progName, align 8
  %65 = load i8** @progName, align 8
  %66 = load i32* @numFileNames, align 4
  %67 = load i32* @numFileNames, align 4
  %68 = load i32* @numFilesProcessed, align 4
  %69 = sub nsw i32 %67, %68
  %70 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %63, i8* getelementptr inbounds ([110 x i8]* @.str75, i32 0, i32 0), i8* %64, i8* %65, i32 %66, i32 %69)
  br label %71

; <label>:71                                      ; preds = %62, %58, %55, %51
  %72 = load i32* %1, align 4
  call void @setExit(i32 %72)
  %73 = load i32* @exitValue, align 4
  call void @exit(i32 %73) #9
  unreachable
                                                  ; No predecessors!
  ret void
}

; Function Attrs: nounwind
declare i32 @remove(i8*) #4

declare void @perror(i8*) #1

; Function Attrs: nounwind uwtable
define internal zeroext i8 @mapSuffix(i8* %name, i8* %oldSuffix, i8* %newSuffix) #0 {
  %1 = alloca i8, align 1
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %name, i8** %2, align 8
  store i8* %oldSuffix, i8** %3, align 8
  store i8* %newSuffix, i8** %4, align 8
  %5 = load i8** %2, align 8
  %6 = load i8** %3, align 8
  %7 = call zeroext i8 @hasSuffix(i8* %5, i8* %6)
  %8 = icmp ne i8 %7, 0
  br i1 %8, label %10, label %9

; <label>:9                                       ; preds = %0
  store i8 0, i8* %1
  br label %21

; <label>:10                                      ; preds = %0
  %11 = load i8** %2, align 8
  %12 = call i64 @strlen(i8* %11) #11
  %13 = load i8** %3, align 8
  %14 = call i64 @strlen(i8* %13) #11
  %15 = sub i64 %12, %14
  %16 = load i8** %2, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  store i8 0, i8* %17, align 1
  %18 = load i8** %2, align 8
  %19 = load i8** %4, align 8
  %20 = call i8* @strcat(i8* %18, i8* %19) #8
  store i8 1, i8* %1
  br label %21

; <label>:21                                      ; preds = %10, %9
  %22 = load i8* %1
  ret i8 %22
}

; Function Attrs: nounwind
declare i8* @strcat(i8*, i8*) #4

; Function Attrs: nounwind uwtable
define internal zeroext i8 @notAStandardFile(i8* %name) #0 {
  %1 = alloca i8, align 1
  %2 = alloca i8*, align 8
  %i = alloca i32, align 4
  %statBuf = alloca %struct.stat, align 8
  store i8* %name, i8** %2, align 8
  %3 = load i8** %2, align 8
  %4 = call i32 @lstat(i8* %3, %struct.stat* %statBuf) #8
  store i32 %4, i32* %i, align 4
  %5 = load i32* %i, align 4
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  store i8 1, i8* %1
  br label %15

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %struct.stat* %statBuf, i32 0, i32 3
  %10 = load i32* %9, align 4
  %11 = and i32 %10, 61440
  %12 = icmp eq i32 %11, 32768
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %8
  store i8 0, i8* %1
  br label %15

; <label>:14                                      ; preds = %8
  store i8 1, i8* %1
  br label %15

; <label>:15                                      ; preds = %14, %13, %7
  %16 = load i8* %1
  ret i8 %16
}

; Function Attrs: nounwind uwtable
define internal i32 @countHardLinks(i8* %name) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %i = alloca i32, align 4
  %statBuf = alloca %struct.stat, align 8
  store i8* %name, i8** %2, align 8
  %3 = load i8** %2, align 8
  %4 = call i32 @lstat(i8* %3, %struct.stat* %statBuf) #8
  store i32 %4, i32* %i, align 4
  %5 = load i32* %i, align 4
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  store i32 0, i32* %1
  br label %13

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %struct.stat* %statBuf, i32 0, i32 2
  %10 = load i64* %9, align 8
  %11 = sub i64 %10, 1
  %12 = trunc i64 %11 to i32
  store i32 %12, i32* %1
  br label %13

; <label>:13                                      ; preds = %8, %7
  %14 = load i32* %1
  ret i32 %14
}

; Function Attrs: nounwind uwtable
define internal void @saveInputFileMetaInfo(i8* %srcName) #0 {
  %1 = alloca i8*, align 8
  %retVal = alloca i32, align 4
  store i8* %srcName, i8** %1, align 8
  %2 = load i8** %1, align 8
  %3 = call i32 @stat(i8* %2, %struct.stat* @fileMetaInfo) #8
  store i32 %3, i32* %retVal, align 4
  %4 = load i32* %retVal, align 4
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  call void @ioError() #12
  unreachable

; <label>:7                                       ; preds = %0
  ret void
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @uncompressStream(%struct._IO_FILE* %zStream, %struct._IO_FILE* %stream) #0 {
  %1 = alloca i8, align 1
  %2 = alloca %struct._IO_FILE*, align 8
  %3 = alloca %struct._IO_FILE*, align 8
  %bzf = alloca i8*, align 8
  %bzerr = alloca i32, align 4
  %bzerr_dummy = alloca i32, align 4
  %ret = alloca i32, align 4
  %nread = alloca i32, align 4
  %streamNo = alloca i32, align 4
  %i = alloca i32, align 4
  %obuf = alloca [5000 x i8], align 16
  %unused = alloca [5000 x i8], align 16
  %nUnused = alloca i32, align 4
  %unusedTmp = alloca i8*, align 8
  store %struct._IO_FILE* %zStream, %struct._IO_FILE** %2, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %3, align 8
  store i8* null, i8** %bzf, align 8
  store i32 0, i32* %nUnused, align 4
  store i32 0, i32* %streamNo, align 4
  %4 = load %struct._IO_FILE** %3, align 8
  %5 = call i32 @ferror(%struct._IO_FILE* %4) #8
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  br label %185

; <label>:8                                       ; preds = %0
  %9 = load %struct._IO_FILE** %2, align 8
  %10 = call i32 @ferror(%struct._IO_FILE* %9) #8
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %8
  br label %185

; <label>:13                                      ; preds = %8
  br label %14

; <label>:14                                      ; preds = %13, %102
  %15 = load %struct._IO_FILE** %2, align 8
  %16 = load i32* @verbosity, align 4
  %17 = load i8* @smallMode, align 1
  %18 = zext i8 %17 to i32
  %19 = getelementptr inbounds [5000 x i8]* %unused, i32 0, i32 0
  %20 = load i32* %nUnused, align 4
  %21 = call i8* @BZ2_bzReadOpen(i32* %bzerr, %struct._IO_FILE* %15, i32 %16, i32 %18, i8* %19, i32 %20)
  store i8* %21, i8** %bzf, align 8
  %22 = load i8** %bzf, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

; <label>:24                                      ; preds = %14
  %25 = load i32* %bzerr, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %24, %14
  br label %180

; <label>:28                                      ; preds = %24
  %29 = load i32* %streamNo, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %streamNo, align 4
  br label %31

; <label>:31                                      ; preds = %61, %28
  %32 = load i32* %bzerr, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %62

; <label>:34                                      ; preds = %31
  %35 = load i8** %bzf, align 8
  %36 = getelementptr inbounds [5000 x i8]* %obuf, i32 0, i32 0
  %37 = call i32 @BZ2_bzRead(i32* %bzerr, i8* %35, i8* %36, i32 5000)
  store i32 %37, i32* %nread, align 4
  %38 = load i32* %bzerr, align 4
  %39 = icmp eq i32 %38, -5
  br i1 %39, label %40, label %41

; <label>:40                                      ; preds = %34
  br label %144

; <label>:41                                      ; preds = %34
  %42 = load i32* %bzerr, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

; <label>:44                                      ; preds = %41
  %45 = load i32* %bzerr, align 4
  %46 = icmp eq i32 %45, 4
  br i1 %46, label %47, label %56

; <label>:47                                      ; preds = %44, %41
  %48 = load i32* %nread, align 4
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %56

; <label>:50                                      ; preds = %47
  %51 = getelementptr inbounds [5000 x i8]* %obuf, i32 0, i32 0
  %52 = load i32* %nread, align 4
  %53 = sext i32 %52 to i64
  %54 = load %struct._IO_FILE** %3, align 8
  %55 = call i64 @fwrite(i8* %51, i64 1, i64 %53, %struct._IO_FILE* %54)
  br label %56

; <label>:56                                      ; preds = %50, %47, %44
  %57 = load %struct._IO_FILE** %3, align 8
  %58 = call i32 @ferror(%struct._IO_FILE* %57) #8
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %61

; <label>:60                                      ; preds = %56
  br label %185

; <label>:61                                      ; preds = %56
  br label %31

; <label>:62                                      ; preds = %31
  %63 = load i32* %bzerr, align 4
  %64 = icmp ne i32 %63, 4
  br i1 %64, label %65, label %66

; <label>:65                                      ; preds = %62
  br label %180

; <label>:66                                      ; preds = %62
  %67 = load i8** %bzf, align 8
  call void @BZ2_bzReadGetUnused(i32* %bzerr, i8* %67, i8** %unusedTmp, i32* %nUnused)
  %68 = load i32* %bzerr, align 4
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %71

; <label>:70                                      ; preds = %66
  call void @panic(i8* getelementptr inbounds ([27 x i8]* @.str96, i32 0, i32 0)) #12
  unreachable

; <label>:71                                      ; preds = %66
  store i32 0, i32* %i, align 4
  br label %72

; <label>:72                                      ; preds = %85, %71
  %73 = load i32* %i, align 4
  %74 = load i32* %nUnused, align 4
  %75 = icmp slt i32 %73, %74
  br i1 %75, label %76, label %88

; <label>:76                                      ; preds = %72
  %77 = load i32* %i, align 4
  %78 = sext i32 %77 to i64
  %79 = load i8** %unusedTmp, align 8
  %80 = getelementptr inbounds i8* %79, i64 %78
  %81 = load i8* %80, align 1
  %82 = load i32* %i, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds [5000 x i8]* %unused, i32 0, i64 %83
  store i8 %81, i8* %84, align 1
  br label %85

; <label>:85                                      ; preds = %76
  %86 = load i32* %i, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %i, align 4
  br label %72

; <label>:88                                      ; preds = %72
  %89 = load i8** %bzf, align 8
  call void @BZ2_bzReadClose(i32* %bzerr, i8* %89)
  %90 = load i32* %bzerr, align 4
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %92, label %93

; <label>:92                                      ; preds = %88
  call void @panic(i8* getelementptr inbounds ([27 x i8]* @.str96, i32 0, i32 0)) #12
  unreachable

; <label>:93                                      ; preds = %88
  %94 = load i32* %nUnused, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %102

; <label>:96                                      ; preds = %93
  %97 = load %struct._IO_FILE** %2, align 8
  %98 = call zeroext i8 @myfeof(%struct._IO_FILE* %97)
  %99 = zext i8 %98 to i32
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %101, label %102

; <label>:101                                     ; preds = %96
  br label %103

; <label>:102                                     ; preds = %96, %93
  br label %14

; <label>:103                                     ; preds = %101
  br label %104

; <label>:104                                     ; preds = %178, %103
  %105 = load %struct._IO_FILE** %2, align 8
  %106 = call i32 @ferror(%struct._IO_FILE* %105) #8
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %108, label %109

; <label>:108                                     ; preds = %104
  br label %185

; <label>:109                                     ; preds = %104
  %110 = load %struct._IO_FILE** %2, align 8
  %111 = call i32 @fclose(%struct._IO_FILE* %110)
  store i32 %111, i32* %ret, align 4
  %112 = load i32* %ret, align 4
  %113 = icmp eq i32 %112, -1
  br i1 %113, label %114, label %115

; <label>:114                                     ; preds = %109
  br label %185

; <label>:115                                     ; preds = %109
  %116 = load %struct._IO_FILE** %3, align 8
  %117 = call i32 @ferror(%struct._IO_FILE* %116) #8
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %120

; <label>:119                                     ; preds = %115
  br label %185

; <label>:120                                     ; preds = %115
  %121 = load %struct._IO_FILE** %3, align 8
  %122 = call i32 @fflush(%struct._IO_FILE* %121)
  store i32 %122, i32* %ret, align 4
  %123 = load i32* %ret, align 4
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %125, label %126

; <label>:125                                     ; preds = %120
  br label %185

; <label>:126                                     ; preds = %120
  %127 = load %struct._IO_FILE** %3, align 8
  %128 = load %struct._IO_FILE** @stdout, align 8
  %129 = icmp ne %struct._IO_FILE* %127, %128
  br i1 %129, label %130, label %137

; <label>:130                                     ; preds = %126
  %131 = load %struct._IO_FILE** %3, align 8
  %132 = call i32 @fclose(%struct._IO_FILE* %131)
  store i32 %132, i32* %ret, align 4
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %133 = load i32* %ret, align 4
  %134 = icmp eq i32 %133, -1
  br i1 %134, label %135, label %136

; <label>:135                                     ; preds = %130
  br label %185

; <label>:136                                     ; preds = %130
  br label %137

; <label>:137                                     ; preds = %136, %126
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %138 = load i32* @verbosity, align 4
  %139 = icmp sge i32 %138, 2
  br i1 %139, label %140, label %143

; <label>:140                                     ; preds = %137
  %141 = load %struct._IO_FILE** @stderr, align 8
  %142 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %141, i8* getelementptr inbounds ([6 x i8]* @.str61, i32 0, i32 0))
  br label %143

; <label>:143                                     ; preds = %140, %137
  store i8 1, i8* %1
  br label %216

; <label>:144                                     ; preds = %40
  %145 = load i8* @forceOverwrite, align 1
  %146 = icmp ne i8 %145, 0
  br i1 %146, label %147, label %179

; <label>:147                                     ; preds = %144
  %148 = load %struct._IO_FILE** %2, align 8
  call void @rewind(%struct._IO_FILE* %148)
  br label %149

; <label>:149                                     ; preds = %147, %177
  %150 = load %struct._IO_FILE** %2, align 8
  %151 = call zeroext i8 @myfeof(%struct._IO_FILE* %150)
  %152 = icmp ne i8 %151, 0
  br i1 %152, label %153, label %154

; <label>:153                                     ; preds = %149
  br label %178

; <label>:154                                     ; preds = %149
  %155 = getelementptr inbounds [5000 x i8]* %obuf, i32 0, i32 0
  %156 = load %struct._IO_FILE** %2, align 8
  %157 = call i64 @fread(i8* %155, i64 1, i64 5000, %struct._IO_FILE* %156)
  %158 = trunc i64 %157 to i32
  store i32 %158, i32* %nread, align 4
  %159 = load %struct._IO_FILE** %2, align 8
  %160 = call i32 @ferror(%struct._IO_FILE* %159) #8
  %161 = icmp ne i32 %160, 0
  br i1 %161, label %162, label %163

; <label>:162                                     ; preds = %154
  br label %185

; <label>:163                                     ; preds = %154
  %164 = load i32* %nread, align 4
  %165 = icmp sgt i32 %164, 0
  br i1 %165, label %166, label %172

; <label>:166                                     ; preds = %163
  %167 = getelementptr inbounds [5000 x i8]* %obuf, i32 0, i32 0
  %168 = load i32* %nread, align 4
  %169 = sext i32 %168 to i64
  %170 = load %struct._IO_FILE** %3, align 8
  %171 = call i64 @fwrite(i8* %167, i64 1, i64 %169, %struct._IO_FILE* %170)
  br label %172

; <label>:172                                     ; preds = %166, %163
  %173 = load %struct._IO_FILE** %3, align 8
  %174 = call i32 @ferror(%struct._IO_FILE* %173) #8
  %175 = icmp ne i32 %174, 0
  br i1 %175, label %176, label %177

; <label>:176                                     ; preds = %172
  br label %185

; <label>:177                                     ; preds = %172
  br label %149

; <label>:178                                     ; preds = %153
  br label %104

; <label>:179                                     ; preds = %144
  br label %180

; <label>:180                                     ; preds = %179, %65, %27
  %181 = load i8** %bzf, align 8
  call void @BZ2_bzReadClose(i32* %bzerr_dummy, i8* %181)
  %182 = load i32* %bzerr, align 4
  switch i32 %182, label %215 [
    i32 -9, label %183
    i32 -6, label %184
    i32 -4, label %186
    i32 -3, label %187
    i32 -7, label %188
    i32 -5, label %189
  ]

; <label>:183                                     ; preds = %180
  call void @configError() #12
  unreachable

; <label>:184                                     ; preds = %180
  br label %185

; <label>:185                                     ; preds = %184, %176, %162, %135, %125, %119, %114, %108, %60, %12, %7
  call void @ioError() #12
  unreachable

; <label>:186                                     ; preds = %180
  call void @crcError() #12
  unreachable

; <label>:187                                     ; preds = %180
  call void @outOfMemory() #12
  unreachable

; <label>:188                                     ; preds = %180
  call void @compressedStreamEOF() #12
  unreachable

; <label>:189                                     ; preds = %180
  %190 = load %struct._IO_FILE** %2, align 8
  %191 = load %struct._IO_FILE** @stdin, align 8
  %192 = icmp ne %struct._IO_FILE* %190, %191
  br i1 %192, label %193, label %196

; <label>:193                                     ; preds = %189
  %194 = load %struct._IO_FILE** %2, align 8
  %195 = call i32 @fclose(%struct._IO_FILE* %194)
  br label %196

; <label>:196                                     ; preds = %193, %189
  %197 = load %struct._IO_FILE** %3, align 8
  %198 = load %struct._IO_FILE** @stdout, align 8
  %199 = icmp ne %struct._IO_FILE* %197, %198
  br i1 %199, label %200, label %203

; <label>:200                                     ; preds = %196
  %201 = load %struct._IO_FILE** %3, align 8
  %202 = call i32 @fclose(%struct._IO_FILE* %201)
  br label %203

; <label>:203                                     ; preds = %200, %196
  %204 = load i32* %streamNo, align 4
  %205 = icmp eq i32 %204, 1
  br i1 %205, label %206, label %207

; <label>:206                                     ; preds = %203
  store i8 0, i8* %1
  br label %216

; <label>:207                                     ; preds = %203
  %208 = load i8* @noisy, align 1
  %209 = icmp ne i8 %208, 0
  br i1 %209, label %210, label %214

; <label>:210                                     ; preds = %207
  %211 = load %struct._IO_FILE** @stderr, align 8
  %212 = load i8** @progName, align 8
  %213 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %211, i8* getelementptr inbounds ([45 x i8]* @.str97, i32 0, i32 0), i8* %212, i8* getelementptr inbounds ([1034 x i8]* @inName, i32 0, i32 0))
  br label %214

; <label>:214                                     ; preds = %210, %207
  store i8 1, i8* %1
  br label %216

; <label>:215                                     ; preds = %180
  call void @panic(i8* getelementptr inbounds ([28 x i8]* @.str98, i32 0, i32 0)) #12
  unreachable

; <label>:216                                     ; preds = %214, %206, %143
  %217 = load i8* %1
  ret i8 %217
}

; Function Attrs: nounwind uwtable
define internal void @applySavedMetaInfoToOutputFile(i8* %dstName) #0 {
  %1 = alloca i8*, align 8
  %retVal = alloca i32, align 4
  %uTimBuf = alloca %struct.utimbuf, align 8
  store i8* %dstName, i8** %1, align 8
  %2 = load i64* getelementptr inbounds (%struct.stat* @fileMetaInfo, i32 0, i32 11, i32 0), align 8
  %3 = getelementptr inbounds %struct.utimbuf* %uTimBuf, i32 0, i32 0
  store i64 %2, i64* %3, align 8
  %4 = load i64* getelementptr inbounds (%struct.stat* @fileMetaInfo, i32 0, i32 12, i32 0), align 8
  %5 = getelementptr inbounds %struct.utimbuf* %uTimBuf, i32 0, i32 1
  store i64 %4, i64* %5, align 8
  %6 = load i8** %1, align 8
  %7 = load i32* getelementptr inbounds (%struct.stat* @fileMetaInfo, i32 0, i32 3), align 4
  %8 = call i32 @chmod(i8* %6, i32 %7) #8
  store i32 %8, i32* %retVal, align 4
  %9 = load i32* %retVal, align 4
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %0
  call void @ioError() #12
  unreachable

; <label>:12                                      ; preds = %0
  %13 = load i8** %1, align 8
  %14 = call i32 @utime(i8* %13, %struct.utimbuf* %uTimBuf) #8
  store i32 %14, i32* %retVal, align 4
  %15 = load i32* %retVal, align 4
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %12
  call void @ioError() #12
  unreachable

; <label>:18                                      ; preds = %12
  %19 = load i8** %1, align 8
  %20 = load i32* getelementptr inbounds (%struct.stat* @fileMetaInfo, i32 0, i32 4), align 4
  %21 = load i32* getelementptr inbounds (%struct.stat* @fileMetaInfo, i32 0, i32 5), align 4
  %22 = call i32 @chown(i8* %19, i32 %20, i32 %21) #8
  store i32 %22, i32* %retVal, align 4
  ret void
}

; Function Attrs: nounwind
declare i32 @chmod(i8*, i32) #4

; Function Attrs: nounwind
declare i32 @utime(i8*, %struct.utimbuf*) #4

; Function Attrs: nounwind
declare i32 @chown(i8*, i32, i32) #4

declare void @rewind(%struct._IO_FILE*) #1

; Function Attrs: noreturn nounwind uwtable
define internal void @crcError() #6 {
  %1 = load %struct._IO_FILE** @stderr, align 8
  %2 = load i8** @progName, align 8
  %3 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([47 x i8]* @.str101, i32 0, i32 0), i8* %2)
  call void @showFileNames()
  call void @cadvise()
  call void @cleanUpAndFail(i32 2) #12
  unreachable
                                                  ; No predecessors!
  ret void
}

; Function Attrs: noreturn nounwind uwtable
define internal void @compressedStreamEOF() #6 {
  %1 = load i8* @noisy, align 1
  %2 = icmp ne i8 %1, 0
  br i1 %2, label %3, label %8

; <label>:3                                       ; preds = %0
  %4 = load %struct._IO_FILE** @stderr, align 8
  %5 = load i8** @progName, align 8
  %6 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([95 x i8]* @.str99, i32 0, i32 0), i8* %5)
  %7 = load i8** @progName, align 8
  call void @perror(i8* %7)
  call void @showFileNames()
  call void @cadvise()
  br label %8

; <label>:8                                       ; preds = %3, %0
  call void @cleanUpAndFail(i32 2) #12
  unreachable
                                                  ; No predecessors!
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @cadvise() #0 {
  %1 = load i8* @noisy, align 1
  %2 = icmp ne i8 %1, 0
  br i1 %2, label %3, label %6

; <label>:3                                       ; preds = %0
  %4 = load %struct._IO_FILE** @stderr, align 8
  %5 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([241 x i8]* @.str100, i32 0, i32 0))
  br label %6

; <label>:6                                       ; preds = %3, %0
  ret void
}

; Function Attrs: nounwind
declare i32 @lstat(i8*, %struct.stat*) #4

; Function Attrs: nounwind uwtable
define internal zeroext i8 @hasSuffix(i8* %s, i8* %suffix) #0 {
  %1 = alloca i8, align 1
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %ns = alloca i32, align 4
  %nx = alloca i32, align 4
  store i8* %s, i8** %2, align 8
  store i8* %suffix, i8** %3, align 8
  %4 = load i8** %2, align 8
  %5 = call i64 @strlen(i8* %4) #11
  %6 = trunc i64 %5 to i32
  store i32 %6, i32* %ns, align 4
  %7 = load i8** %3, align 8
  %8 = call i64 @strlen(i8* %7) #11
  %9 = trunc i64 %8 to i32
  store i32 %9, i32* %nx, align 4
  %10 = load i32* %ns, align 4
  %11 = load i32* %nx, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %0
  store i8 0, i8* %1
  br label %28

; <label>:14                                      ; preds = %0
  %15 = load i8** %2, align 8
  %16 = load i32* %ns, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8* %15, i64 %17
  %19 = load i32* %nx, align 4
  %20 = sext i32 %19 to i64
  %21 = sub i64 0, %20
  %22 = getelementptr inbounds i8* %18, i64 %21
  %23 = load i8** %3, align 8
  %24 = call i32 @strcmp(i8* %22, i8* %23) #11
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

; <label>:26                                      ; preds = %14
  store i8 1, i8* %1
  br label %28

; <label>:27                                      ; preds = %14
  store i8 0, i8* %1
  br label %28

; <label>:28                                      ; preds = %27, %26, %13
  %29 = load i8* %1
  ret i8 %29
}

; Function Attrs: nounwind uwtable
define internal void @compressStream(%struct._IO_FILE* %stream, %struct._IO_FILE* %zStream) #0 {
  %1 = alloca %struct._IO_FILE*, align 8
  %2 = alloca %struct._IO_FILE*, align 8
  %bzf = alloca i8*, align 8
  %ibuf = alloca [5000 x i8], align 16
  %nIbuf = alloca i32, align 4
  %nbytes_in_lo32 = alloca i32, align 4
  %nbytes_in_hi32 = alloca i32, align 4
  %nbytes_out_lo32 = alloca i32, align 4
  %nbytes_out_hi32 = alloca i32, align 4
  %bzerr = alloca i32, align 4
  %bzerr_dummy = alloca i32, align 4
  %ret = alloca i32, align 4
  %buf_nin = alloca [32 x i8], align 16
  %buf_nout = alloca [32 x i8], align 16
  %nbytes_in = alloca %struct.UInt64, align 1
  %nbytes_out = alloca %struct.UInt64, align 1
  %nbytes_in_d = alloca double, align 8
  %nbytes_out_d = alloca double, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %1, align 8
  store %struct._IO_FILE* %zStream, %struct._IO_FILE** %2, align 8
  store i8* null, i8** %bzf, align 8
  %3 = load %struct._IO_FILE** %1, align 8
  %4 = call i32 @ferror(%struct._IO_FILE* %3) #8
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  br label %137

; <label>:7                                       ; preds = %0
  %8 = load %struct._IO_FILE** %2, align 8
  %9 = call i32 @ferror(%struct._IO_FILE* %8) #8
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %7
  br label %137

; <label>:12                                      ; preds = %7
  %13 = load %struct._IO_FILE** %2, align 8
  %14 = load i32* @blockSize100k, align 4
  %15 = load i32* @verbosity, align 4
  %16 = load i32* @workFactor, align 4
  %17 = call i8* @BZ2_bzWriteOpen(i32* %bzerr, %struct._IO_FILE* %13, i32 %14, i32 %15, i32 %16)
  store i8* %17, i8** %bzf, align 8
  %18 = load i32* %bzerr, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %12
  br label %131

; <label>:21                                      ; preds = %12
  %22 = load i32* @verbosity, align 4
  %23 = icmp sge i32 %22, 2
  br i1 %23, label %24, label %27

; <label>:24                                      ; preds = %21
  %25 = load %struct._IO_FILE** @stderr, align 8
  %26 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %25, i8* getelementptr inbounds ([2 x i8]* @.str106, i32 0, i32 0))
  br label %27

; <label>:27                                      ; preds = %24, %21
  br label %28

; <label>:28                                      ; preds = %27, %53
  %29 = load %struct._IO_FILE** %1, align 8
  %30 = call zeroext i8 @myfeof(%struct._IO_FILE* %29)
  %31 = icmp ne i8 %30, 0
  br i1 %31, label %32, label %33

; <label>:32                                      ; preds = %28
  br label %54

; <label>:33                                      ; preds = %28
  %34 = getelementptr inbounds [5000 x i8]* %ibuf, i32 0, i32 0
  %35 = load %struct._IO_FILE** %1, align 8
  %36 = call i64 @fread(i8* %34, i64 1, i64 5000, %struct._IO_FILE* %35)
  %37 = trunc i64 %36 to i32
  store i32 %37, i32* %nIbuf, align 4
  %38 = load %struct._IO_FILE** %1, align 8
  %39 = call i32 @ferror(%struct._IO_FILE* %38) #8
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %42

; <label>:41                                      ; preds = %33
  br label %137

; <label>:42                                      ; preds = %33
  %43 = load i32* %nIbuf, align 4
  %44 = icmp sgt i32 %43, 0
  br i1 %44, label %45, label %49

; <label>:45                                      ; preds = %42
  %46 = load i8** %bzf, align 8
  %47 = getelementptr inbounds [5000 x i8]* %ibuf, i32 0, i32 0
  %48 = load i32* %nIbuf, align 4
  call void @BZ2_bzWrite(i32* %bzerr, i8* %46, i8* %47, i32 %48)
  br label %49

; <label>:49                                      ; preds = %45, %42
  %50 = load i32* %bzerr, align 4
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %53

; <label>:52                                      ; preds = %49
  br label %131

; <label>:53                                      ; preds = %49
  br label %28

; <label>:54                                      ; preds = %32
  %55 = load i8** %bzf, align 8
  call void @BZ2_bzWriteClose64(i32* %bzerr, i8* %55, i32 0, i32* %nbytes_in_lo32, i32* %nbytes_in_hi32, i32* %nbytes_out_lo32, i32* %nbytes_out_hi32)
  %56 = load i32* %bzerr, align 4
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %59

; <label>:58                                      ; preds = %54
  br label %131

; <label>:59                                      ; preds = %54
  %60 = load %struct._IO_FILE** %2, align 8
  %61 = call i32 @ferror(%struct._IO_FILE* %60) #8
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %63, label %64

; <label>:63                                      ; preds = %59
  br label %137

; <label>:64                                      ; preds = %59
  %65 = load %struct._IO_FILE** %2, align 8
  %66 = call i32 @fflush(%struct._IO_FILE* %65)
  store i32 %66, i32* %ret, align 4
  %67 = load i32* %ret, align 4
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %69, label %70

; <label>:69                                      ; preds = %64
  br label %137

; <label>:70                                      ; preds = %64
  %71 = load %struct._IO_FILE** %2, align 8
  %72 = load %struct._IO_FILE** @stdout, align 8
  %73 = icmp ne %struct._IO_FILE* %71, %72
  br i1 %73, label %74, label %81

; <label>:74                                      ; preds = %70
  %75 = load %struct._IO_FILE** %2, align 8
  %76 = call i32 @fclose(%struct._IO_FILE* %75)
  store i32 %76, i32* %ret, align 4
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %77 = load i32* %ret, align 4
  %78 = icmp eq i32 %77, -1
  br i1 %78, label %79, label %80

; <label>:79                                      ; preds = %74
  br label %137

; <label>:80                                      ; preds = %74
  br label %81

; <label>:81                                      ; preds = %80, %70
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %82 = load %struct._IO_FILE** %1, align 8
  %83 = call i32 @ferror(%struct._IO_FILE* %82) #8
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %86

; <label>:85                                      ; preds = %81
  br label %137

; <label>:86                                      ; preds = %81
  %87 = load %struct._IO_FILE** %1, align 8
  %88 = call i32 @fclose(%struct._IO_FILE* %87)
  store i32 %88, i32* %ret, align 4
  %89 = load i32* %ret, align 4
  %90 = icmp eq i32 %89, -1
  br i1 %90, label %91, label %92

; <label>:91                                      ; preds = %86
  br label %137

; <label>:92                                      ; preds = %86
  %93 = load i32* @verbosity, align 4
  %94 = icmp sge i32 %93, 1
  br i1 %94, label %95, label %130

; <label>:95                                      ; preds = %92
  %96 = load i32* %nbytes_in_lo32, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %104

; <label>:98                                      ; preds = %95
  %99 = load i32* %nbytes_in_hi32, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

; <label>:101                                     ; preds = %98
  %102 = load %struct._IO_FILE** @stderr, align 8
  %103 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %102, i8* getelementptr inbounds ([22 x i8]* @.str107, i32 0, i32 0))
  br label %129

; <label>:104                                     ; preds = %98, %95
  %105 = load i32* %nbytes_in_lo32, align 4
  %106 = load i32* %nbytes_in_hi32, align 4
  call void @uInt64_from_UInt32s(%struct.UInt64* %nbytes_in, i32 %105, i32 %106)
  %107 = load i32* %nbytes_out_lo32, align 4
  %108 = load i32* %nbytes_out_hi32, align 4
  call void @uInt64_from_UInt32s(%struct.UInt64* %nbytes_out, i32 %107, i32 %108)
  %109 = call double @uInt64_to_double(%struct.UInt64* %nbytes_in)
  store double %109, double* %nbytes_in_d, align 8
  %110 = call double @uInt64_to_double(%struct.UInt64* %nbytes_out)
  store double %110, double* %nbytes_out_d, align 8
  %111 = getelementptr inbounds [32 x i8]* %buf_nin, i32 0, i32 0
  call void @uInt64_toAscii(i8* %111, %struct.UInt64* %nbytes_in)
  %112 = getelementptr inbounds [32 x i8]* %buf_nout, i32 0, i32 0
  call void @uInt64_toAscii(i8* %112, %struct.UInt64* %nbytes_out)
  %113 = load %struct._IO_FILE** @stderr, align 8
  %114 = load double* %nbytes_in_d, align 8
  %115 = load double* %nbytes_out_d, align 8
  %116 = fdiv double %114, %115
  %117 = load double* %nbytes_out_d, align 8
  %118 = fmul double 8.000000e+00, %117
  %119 = load double* %nbytes_in_d, align 8
  %120 = fdiv double %118, %119
  %121 = load double* %nbytes_out_d, align 8
  %122 = load double* %nbytes_in_d, align 8
  %123 = fdiv double %121, %122
  %124 = fsub double 1.000000e+00, %123
  %125 = fmul double 1.000000e+02, %124
  %126 = getelementptr inbounds [32 x i8]* %buf_nin, i32 0, i32 0
  %127 = getelementptr inbounds [32 x i8]* %buf_nout, i32 0, i32 0
  %128 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %113, i8* getelementptr inbounds ([57 x i8]* @.str108, i32 0, i32 0), double %116, double %120, double %125, i8* %126, i8* %127)
  br label %129

; <label>:129                                     ; preds = %104, %101
  br label %130

; <label>:130                                     ; preds = %129, %92
  ret void

; <label>:131                                     ; preds = %58, %52, %20
  %132 = load i8** %bzf, align 8
  call void @BZ2_bzWriteClose64(i32* %bzerr_dummy, i8* %132, i32 1, i32* %nbytes_in_lo32, i32* %nbytes_in_hi32, i32* %nbytes_out_lo32, i32* %nbytes_out_hi32)
  %133 = load i32* %bzerr, align 4
  switch i32 %133, label %138 [
    i32 -9, label %134
    i32 -3, label %135
    i32 -6, label %136
  ]

; <label>:134                                     ; preds = %131
  call void @configError() #12
  unreachable

; <label>:135                                     ; preds = %131
  call void @outOfMemory() #12
  unreachable

; <label>:136                                     ; preds = %131
  br label %137

; <label>:137                                     ; preds = %136, %91, %85, %79, %69, %63, %41, %11, %6
  call void @ioError() #12
  unreachable

; <label>:138                                     ; preds = %131
  call void @panic(i8* getelementptr inbounds ([26 x i8]* @.str109, i32 0, i32 0)) #12
  unreachable
}

; Function Attrs: nounwind uwtable
define internal void @uInt64_from_UInt32s(%struct.UInt64* %n, i32 %lo32, i32 %hi32) #0 {
  %1 = alloca %struct.UInt64*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store %struct.UInt64* %n, %struct.UInt64** %1, align 8
  store i32 %lo32, i32* %2, align 4
  store i32 %hi32, i32* %3, align 4
  %4 = load i32* %3, align 4
  %5 = lshr i32 %4, 24
  %6 = and i32 %5, 255
  %7 = trunc i32 %6 to i8
  %8 = load %struct.UInt64** %1, align 8
  %9 = getelementptr inbounds %struct.UInt64* %8, i32 0, i32 0
  %10 = getelementptr inbounds [8 x i8]* %9, i32 0, i64 7
  store i8 %7, i8* %10, align 1
  %11 = load i32* %3, align 4
  %12 = lshr i32 %11, 16
  %13 = and i32 %12, 255
  %14 = trunc i32 %13 to i8
  %15 = load %struct.UInt64** %1, align 8
  %16 = getelementptr inbounds %struct.UInt64* %15, i32 0, i32 0
  %17 = getelementptr inbounds [8 x i8]* %16, i32 0, i64 6
  store i8 %14, i8* %17, align 1
  %18 = load i32* %3, align 4
  %19 = lshr i32 %18, 8
  %20 = and i32 %19, 255
  %21 = trunc i32 %20 to i8
  %22 = load %struct.UInt64** %1, align 8
  %23 = getelementptr inbounds %struct.UInt64* %22, i32 0, i32 0
  %24 = getelementptr inbounds [8 x i8]* %23, i32 0, i64 5
  store i8 %21, i8* %24, align 1
  %25 = load i32* %3, align 4
  %26 = and i32 %25, 255
  %27 = trunc i32 %26 to i8
  %28 = load %struct.UInt64** %1, align 8
  %29 = getelementptr inbounds %struct.UInt64* %28, i32 0, i32 0
  %30 = getelementptr inbounds [8 x i8]* %29, i32 0, i64 4
  store i8 %27, i8* %30, align 1
  %31 = load i32* %2, align 4
  %32 = lshr i32 %31, 24
  %33 = and i32 %32, 255
  %34 = trunc i32 %33 to i8
  %35 = load %struct.UInt64** %1, align 8
  %36 = getelementptr inbounds %struct.UInt64* %35, i32 0, i32 0
  %37 = getelementptr inbounds [8 x i8]* %36, i32 0, i64 3
  store i8 %34, i8* %37, align 1
  %38 = load i32* %2, align 4
  %39 = lshr i32 %38, 16
  %40 = and i32 %39, 255
  %41 = trunc i32 %40 to i8
  %42 = load %struct.UInt64** %1, align 8
  %43 = getelementptr inbounds %struct.UInt64* %42, i32 0, i32 0
  %44 = getelementptr inbounds [8 x i8]* %43, i32 0, i64 2
  store i8 %41, i8* %44, align 1
  %45 = load i32* %2, align 4
  %46 = lshr i32 %45, 8
  %47 = and i32 %46, 255
  %48 = trunc i32 %47 to i8
  %49 = load %struct.UInt64** %1, align 8
  %50 = getelementptr inbounds %struct.UInt64* %49, i32 0, i32 0
  %51 = getelementptr inbounds [8 x i8]* %50, i32 0, i64 1
  store i8 %48, i8* %51, align 1
  %52 = load i32* %2, align 4
  %53 = and i32 %52, 255
  %54 = trunc i32 %53 to i8
  %55 = load %struct.UInt64** %1, align 8
  %56 = getelementptr inbounds %struct.UInt64* %55, i32 0, i32 0
  %57 = getelementptr inbounds [8 x i8]* %56, i32 0, i64 0
  store i8 %54, i8* %57, align 1
  ret void
}

; Function Attrs: nounwind uwtable
define internal double @uInt64_to_double(%struct.UInt64* %n) #0 {
  %1 = alloca %struct.UInt64*, align 8
  %i = alloca i32, align 4
  %base = alloca double, align 8
  %sum = alloca double, align 8
  store %struct.UInt64* %n, %struct.UInt64** %1, align 8
  store double 1.000000e+00, double* %base, align 8
  store double 0.000000e+00, double* %sum, align 8
  store i32 0, i32* %i, align 4
  br label %2

; <label>:2                                       ; preds = %19, %0
  %3 = load i32* %i, align 4
  %4 = icmp slt i32 %3, 8
  br i1 %4, label %5, label %22

; <label>:5                                       ; preds = %2
  %6 = load double* %base, align 8
  %7 = load i32* %i, align 4
  %8 = sext i32 %7 to i64
  %9 = load %struct.UInt64** %1, align 8
  %10 = getelementptr inbounds %struct.UInt64* %9, i32 0, i32 0
  %11 = getelementptr inbounds [8 x i8]* %10, i32 0, i64 %8
  %12 = load i8* %11, align 1
  %13 = uitofp i8 %12 to double
  %14 = fmul double %6, %13
  %15 = load double* %sum, align 8
  %16 = fadd double %15, %14
  store double %16, double* %sum, align 8
  %17 = load double* %base, align 8
  %18 = fmul double %17, 2.560000e+02
  store double %18, double* %base, align 8
  br label %19

; <label>:19                                      ; preds = %5
  %20 = load i32* %i, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %i, align 4
  br label %2

; <label>:22                                      ; preds = %2
  %23 = load double* %sum, align 8
  ret double %23
}

; Function Attrs: nounwind uwtable
define internal void @uInt64_toAscii(i8* %outbuf, %struct.UInt64* %n) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.UInt64*, align 8
  %i = alloca i32, align 4
  %q = alloca i32, align 4
  %buf = alloca [32 x i8], align 16
  %nBuf = alloca i32, align 4
  %n_copy = alloca %struct.UInt64, align 1
  store i8* %outbuf, i8** %1, align 8
  store %struct.UInt64* %n, %struct.UInt64** %2, align 8
  store i32 0, i32* %nBuf, align 4
  %3 = load %struct.UInt64** %2, align 8
  %4 = bitcast %struct.UInt64* %n_copy to i8*
  %5 = bitcast %struct.UInt64* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 8, i32 1, i1 false)
  br label %6

; <label>:6                                       ; preds = %16, %0
  %7 = call i32 @uInt64_qrm10(%struct.UInt64* %n_copy)
  store i32 %7, i32* %q, align 4
  %8 = load i32* %q, align 4
  %9 = add nsw i32 %8, 48
  %10 = trunc i32 %9 to i8
  %11 = load i32* %nBuf, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [32 x i8]* %buf, i32 0, i64 %12
  store i8 %10, i8* %13, align 1
  %14 = load i32* %nBuf, align 4
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %nBuf, align 4
  br label %16

; <label>:16                                      ; preds = %6
  %17 = call zeroext i8 @uInt64_isZero(%struct.UInt64* %n_copy)
  %18 = icmp ne i8 %17, 0
  %19 = xor i1 %18, true
  br i1 %19, label %6, label %20

; <label>:20                                      ; preds = %16
  %21 = load i32* %nBuf, align 4
  %22 = sext i32 %21 to i64
  %23 = load i8** %1, align 8
  %24 = getelementptr inbounds i8* %23, i64 %22
  store i8 0, i8* %24, align 1
  store i32 0, i32* %i, align 4
  br label %25

; <label>:25                                      ; preds = %41, %20
  %26 = load i32* %i, align 4
  %27 = load i32* %nBuf, align 4
  %28 = icmp slt i32 %26, %27
  br i1 %28, label %29, label %44

; <label>:29                                      ; preds = %25
  %30 = load i32* %nBuf, align 4
  %31 = load i32* %i, align 4
  %32 = sub nsw i32 %30, %31
  %33 = sub nsw i32 %32, 1
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [32 x i8]* %buf, i32 0, i64 %34
  %36 = load i8* %35, align 1
  %37 = load i32* %i, align 4
  %38 = sext i32 %37 to i64
  %39 = load i8** %1, align 8
  %40 = getelementptr inbounds i8* %39, i64 %38
  store i8 %36, i8* %40, align 1
  br label %41

; <label>:41                                      ; preds = %29
  %42 = load i32* %i, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %i, align 4
  br label %25

; <label>:44                                      ; preds = %25
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture, i64, i32, i1) #8

; Function Attrs: nounwind uwtable
define internal i32 @uInt64_qrm10(%struct.UInt64* %n) #0 {
  %1 = alloca %struct.UInt64*, align 8
  %rem = alloca i32, align 4
  %tmp = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.UInt64* %n, %struct.UInt64** %1, align 8
  store i32 0, i32* %rem, align 4
  store i32 7, i32* %i, align 4
  br label %2

; <label>:2                                       ; preds = %26, %0
  %3 = load i32* %i, align 4
  %4 = icmp sge i32 %3, 0
  br i1 %4, label %5, label %29

; <label>:5                                       ; preds = %2
  %6 = load i32* %rem, align 4
  %7 = mul i32 %6, 256
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load %struct.UInt64** %1, align 8
  %11 = getelementptr inbounds %struct.UInt64* %10, i32 0, i32 0
  %12 = getelementptr inbounds [8 x i8]* %11, i32 0, i64 %9
  %13 = load i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = add i32 %7, %14
  store i32 %15, i32* %tmp, align 4
  %16 = load i32* %tmp, align 4
  %17 = udiv i32 %16, 10
  %18 = trunc i32 %17 to i8
  %19 = load i32* %i, align 4
  %20 = sext i32 %19 to i64
  %21 = load %struct.UInt64** %1, align 8
  %22 = getelementptr inbounds %struct.UInt64* %21, i32 0, i32 0
  %23 = getelementptr inbounds [8 x i8]* %22, i32 0, i64 %20
  store i8 %18, i8* %23, align 1
  %24 = load i32* %tmp, align 4
  %25 = urem i32 %24, 10
  store i32 %25, i32* %rem, align 4
  br label %26

; <label>:26                                      ; preds = %5
  %27 = load i32* %i, align 4
  %28 = add nsw i32 %27, -1
  store i32 %28, i32* %i, align 4
  br label %2

; <label>:29                                      ; preds = %2
  %30 = load i32* %rem, align 4
  ret i32 %30
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @uInt64_isZero(%struct.UInt64* %n) #0 {
  %1 = alloca i8, align 1
  %2 = alloca %struct.UInt64*, align 8
  %i = alloca i32, align 4
  store %struct.UInt64* %n, %struct.UInt64** %2, align 8
  store i32 0, i32* %i, align 4
  br label %3

; <label>:3                                       ; preds = %17, %0
  %4 = load i32* %i, align 4
  %5 = icmp slt i32 %4, 8
  br i1 %5, label %6, label %20

; <label>:6                                       ; preds = %3
  %7 = load i32* %i, align 4
  %8 = sext i32 %7 to i64
  %9 = load %struct.UInt64** %2, align 8
  %10 = getelementptr inbounds %struct.UInt64* %9, i32 0, i32 0
  %11 = getelementptr inbounds [8 x i8]* %10, i32 0, i64 %8
  %12 = load i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %16

; <label>:15                                      ; preds = %6
  store i8 0, i8* %1
  br label %21

; <label>:16                                      ; preds = %6
  br label %17

; <label>:17                                      ; preds = %16
  %18 = load i32* %i, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %i, align 4
  br label %3

; <label>:20                                      ; preds = %3
  store i8 1, i8* %1
  br label %21

; <label>:21                                      ; preds = %20, %15
  %22 = load i8* %1
  ret i8 %22
}

; Function Attrs: nounwind uwtable
define internal %struct.zzzz* @mkCell() #0 {
  %c = alloca %struct.zzzz*, align 8
  %1 = call i8* @myMalloc(i32 16)
  %2 = bitcast i8* %1 to %struct.zzzz*
  store %struct.zzzz* %2, %struct.zzzz** %c, align 8
  %3 = load %struct.zzzz** %c, align 8
  %4 = getelementptr inbounds %struct.zzzz* %3, i32 0, i32 0
  store i8* null, i8** %4, align 8
  %5 = load %struct.zzzz** %c, align 8
  %6 = getelementptr inbounds %struct.zzzz* %5, i32 0, i32 1
  store %struct.zzzz* null, %struct.zzzz** %6, align 8
  %7 = load %struct.zzzz** %c, align 8
  ret %struct.zzzz* %7
}

; Function Attrs: nounwind uwtable
define internal i8* @myMalloc(i32 %n) #0 {
  %1 = alloca i32, align 4
  %p = alloca i8*, align 8
  store i32 %n, i32* %1, align 4
  %2 = load i32* %1, align 4
  %3 = sext i32 %2 to i64
  %4 = call noalias i8* @malloc(i64 %3) #8
  store i8* %4, i8** %p, align 8
  %5 = load i8** %p, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  call void @outOfMemory() #12
  unreachable

; <label>:8                                       ; preds = %0
  %9 = load i8** %p, align 8
  ret i8* %9
}

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #4

; Function Attrs: nounwind
declare i8* @getenv(i8*) #4

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #7

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8*, i64) #4

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #8

declare i32 @fgetc(%struct._IO_FILE*) #1

declare i32 @ungetc(i32, %struct._IO_FILE*) #1

; Function Attrs: nounwind uwtable
define internal zeroext i8 @copy_output_until_stop(%struct.EState* %s) #0 {
  %1 = alloca %struct.EState*, align 8
  %progress_out = alloca i8, align 1
  store %struct.EState* %s, %struct.EState** %1, align 8
  store i8 0, i8* %progress_out, align 1
  br label %2

; <label>:2                                       ; preds = %0, %69
  %3 = load %struct.EState** %1, align 8
  %4 = getelementptr inbounds %struct.EState* %3, i32 0, i32 0
  %5 = load %struct.bz_stream** %4, align 8
  %6 = getelementptr inbounds %struct.bz_stream* %5, i32 0, i32 5
  %7 = load i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %2
  br label %70

; <label>:10                                      ; preds = %2
  %11 = load %struct.EState** %1, align 8
  %12 = getelementptr inbounds %struct.EState* %11, i32 0, i32 20
  %13 = load i32* %12, align 4
  %14 = load %struct.EState** %1, align 8
  %15 = getelementptr inbounds %struct.EState* %14, i32 0, i32 19
  %16 = load i32* %15, align 4
  %17 = icmp sge i32 %13, %16
  br i1 %17, label %18, label %19

; <label>:18                                      ; preds = %10
  br label %70

; <label>:19                                      ; preds = %10
  store i8 1, i8* %progress_out, align 1
  %20 = load %struct.EState** %1, align 8
  %21 = getelementptr inbounds %struct.EState* %20, i32 0, i32 20
  %22 = load i32* %21, align 4
  %23 = sext i32 %22 to i64
  %24 = load %struct.EState** %1, align 8
  %25 = getelementptr inbounds %struct.EState* %24, i32 0, i32 11
  %26 = load i8** %25, align 8
  %27 = getelementptr inbounds i8* %26, i64 %23
  %28 = load i8* %27, align 1
  %29 = load %struct.EState** %1, align 8
  %30 = getelementptr inbounds %struct.EState* %29, i32 0, i32 0
  %31 = load %struct.bz_stream** %30, align 8
  %32 = getelementptr inbounds %struct.bz_stream* %31, i32 0, i32 4
  %33 = load i8** %32, align 8
  store i8 %28, i8* %33, align 1
  %34 = load %struct.EState** %1, align 8
  %35 = getelementptr inbounds %struct.EState* %34, i32 0, i32 20
  %36 = load i32* %35, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %35, align 4
  %38 = load %struct.EState** %1, align 8
  %39 = getelementptr inbounds %struct.EState* %38, i32 0, i32 0
  %40 = load %struct.bz_stream** %39, align 8
  %41 = getelementptr inbounds %struct.bz_stream* %40, i32 0, i32 5
  %42 = load i32* %41, align 4
  %43 = add i32 %42, -1
  store i32 %43, i32* %41, align 4
  %44 = load %struct.EState** %1, align 8
  %45 = getelementptr inbounds %struct.EState* %44, i32 0, i32 0
  %46 = load %struct.bz_stream** %45, align 8
  %47 = getelementptr inbounds %struct.bz_stream* %46, i32 0, i32 4
  %48 = load i8** %47, align 8
  %49 = getelementptr inbounds i8* %48, i32 1
  store i8* %49, i8** %47, align 8
  %50 = load %struct.EState** %1, align 8
  %51 = getelementptr inbounds %struct.EState* %50, i32 0, i32 0
  %52 = load %struct.bz_stream** %51, align 8
  %53 = getelementptr inbounds %struct.bz_stream* %52, i32 0, i32 6
  %54 = load i32* %53, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %53, align 4
  %56 = load %struct.EState** %1, align 8
  %57 = getelementptr inbounds %struct.EState* %56, i32 0, i32 0
  %58 = load %struct.bz_stream** %57, align 8
  %59 = getelementptr inbounds %struct.bz_stream* %58, i32 0, i32 6
  %60 = load i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %69

; <label>:62                                      ; preds = %19
  %63 = load %struct.EState** %1, align 8
  %64 = getelementptr inbounds %struct.EState* %63, i32 0, i32 0
  %65 = load %struct.bz_stream** %64, align 8
  %66 = getelementptr inbounds %struct.bz_stream* %65, i32 0, i32 7
  %67 = load i32* %66, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %66, align 4
  br label %69

; <label>:69                                      ; preds = %62, %19
  br label %2

; <label>:70                                      ; preds = %18, %9
  %71 = load i8* %progress_out, align 1
  ret i8 %71
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @copy_input_until_stop(%struct.EState* %s) #0 {
  %1 = alloca %struct.EState*, align 8
  %progress_in = alloca i8, align 1
  %zchh = alloca i32, align 4
  %ch = alloca i8, align 1
  %zchh1 = alloca i32, align 4
  %ch2 = alloca i8, align 1
  store %struct.EState* %s, %struct.EState** %1, align 8
  store i8 0, i8* %progress_in, align 1
  %2 = load %struct.EState** %1, align 8
  %3 = getelementptr inbounds %struct.EState* %2, i32 0, i32 1
  %4 = load i32* %3, align 4
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %6, label %151

; <label>:6                                       ; preds = %0
  br label %7

; <label>:7                                       ; preds = %6, %149
  %8 = load %struct.EState** %1, align 8
  %9 = getelementptr inbounds %struct.EState* %8, i32 0, i32 17
  %10 = load i32* %9, align 4
  %11 = load %struct.EState** %1, align 8
  %12 = getelementptr inbounds %struct.EState* %11, i32 0, i32 18
  %13 = load i32* %12, align 4
  %14 = icmp sge i32 %10, %13
  br i1 %14, label %15, label %16

; <label>:15                                      ; preds = %7
  br label %150

; <label>:16                                      ; preds = %7
  %17 = load %struct.EState** %1, align 8
  %18 = getelementptr inbounds %struct.EState* %17, i32 0, i32 0
  %19 = load %struct.bz_stream** %18, align 8
  %20 = getelementptr inbounds %struct.bz_stream* %19, i32 0, i32 1
  %21 = load i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

; <label>:23                                      ; preds = %16
  br label %150

; <label>:24                                      ; preds = %16
  store i8 1, i8* %progress_in, align 1
  %25 = load %struct.EState** %1, align 8
  %26 = getelementptr inbounds %struct.EState* %25, i32 0, i32 0
  %27 = load %struct.bz_stream** %26, align 8
  %28 = getelementptr inbounds %struct.bz_stream* %27, i32 0, i32 0
  %29 = load i8** %28, align 8
  %30 = load i8* %29, align 1
  %31 = zext i8 %30 to i32
  store i32 %31, i32* %zchh, align 4
  %32 = load i32* %zchh, align 4
  %33 = load %struct.EState** %1, align 8
  %34 = getelementptr inbounds %struct.EState* %33, i32 0, i32 13
  %35 = load i32* %34, align 4
  %36 = icmp ne i32 %32, %35
  br i1 %36, label %37, label %87

; <label>:37                                      ; preds = %24
  %38 = load %struct.EState** %1, align 8
  %39 = getelementptr inbounds %struct.EState* %38, i32 0, i32 14
  %40 = load i32* %39, align 4
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %87

; <label>:42                                      ; preds = %37
  %43 = load %struct.EState** %1, align 8
  %44 = getelementptr inbounds %struct.EState* %43, i32 0, i32 13
  %45 = load i32* %44, align 4
  %46 = trunc i32 %45 to i8
  store i8 %46, i8* %ch, align 1
  %47 = load %struct.EState** %1, align 8
  %48 = getelementptr inbounds %struct.EState* %47, i32 0, i32 26
  %49 = load i32* %48, align 4
  %50 = shl i32 %49, 8
  %51 = load %struct.EState** %1, align 8
  %52 = getelementptr inbounds %struct.EState* %51, i32 0, i32 26
  %53 = load i32* %52, align 4
  %54 = lshr i32 %53, 24
  %55 = load i8* %ch, align 1
  %56 = zext i8 %55 to i32
  %57 = xor i32 %54, %56
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds [256 x i32]* @BZ2_crc32Table, i32 0, i64 %58
  %60 = load i32* %59, align 4
  %61 = xor i32 %50, %60
  %62 = load %struct.EState** %1, align 8
  %63 = getelementptr inbounds %struct.EState* %62, i32 0, i32 26
  store i32 %61, i32* %63, align 4
  %64 = load %struct.EState** %1, align 8
  %65 = getelementptr inbounds %struct.EState* %64, i32 0, i32 13
  %66 = load i32* %65, align 4
  %67 = zext i32 %66 to i64
  %68 = load %struct.EState** %1, align 8
  %69 = getelementptr inbounds %struct.EState* %68, i32 0, i32 22
  %70 = getelementptr inbounds [256 x i8]* %69, i32 0, i64 %67
  store i8 1, i8* %70, align 1
  %71 = load i8* %ch, align 1
  %72 = load %struct.EState** %1, align 8
  %73 = getelementptr inbounds %struct.EState* %72, i32 0, i32 17
  %74 = load i32* %73, align 4
  %75 = sext i32 %74 to i64
  %76 = load %struct.EState** %1, align 8
  %77 = getelementptr inbounds %struct.EState* %76, i32 0, i32 9
  %78 = load i8** %77, align 8
  %79 = getelementptr inbounds i8* %78, i64 %75
  store i8 %71, i8* %79, align 1
  %80 = load %struct.EState** %1, align 8
  %81 = getelementptr inbounds %struct.EState* %80, i32 0, i32 17
  %82 = load i32* %81, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %81, align 4
  %84 = load i32* %zchh, align 4
  %85 = load %struct.EState** %1, align 8
  %86 = getelementptr inbounds %struct.EState* %85, i32 0, i32 13
  store i32 %84, i32* %86, align 4
  br label %117

; <label>:87                                      ; preds = %37, %24
  %88 = load i32* %zchh, align 4
  %89 = load %struct.EState** %1, align 8
  %90 = getelementptr inbounds %struct.EState* %89, i32 0, i32 13
  %91 = load i32* %90, align 4
  %92 = icmp ne i32 %88, %91
  br i1 %92, label %98, label %93

; <label>:93                                      ; preds = %87
  %94 = load %struct.EState** %1, align 8
  %95 = getelementptr inbounds %struct.EState* %94, i32 0, i32 14
  %96 = load i32* %95, align 4
  %97 = icmp eq i32 %96, 255
  br i1 %97, label %98, label %111

; <label>:98                                      ; preds = %93, %87
  %99 = load %struct.EState** %1, align 8
  %100 = getelementptr inbounds %struct.EState* %99, i32 0, i32 13
  %101 = load i32* %100, align 4
  %102 = icmp ult i32 %101, 256
  br i1 %102, label %103, label %105

; <label>:103                                     ; preds = %98
  %104 = load %struct.EState** %1, align 8
  call void @add_pair_to_block(%struct.EState* %104)
  br label %105

; <label>:105                                     ; preds = %103, %98
  %106 = load i32* %zchh, align 4
  %107 = load %struct.EState** %1, align 8
  %108 = getelementptr inbounds %struct.EState* %107, i32 0, i32 13
  store i32 %106, i32* %108, align 4
  %109 = load %struct.EState** %1, align 8
  %110 = getelementptr inbounds %struct.EState* %109, i32 0, i32 14
  store i32 1, i32* %110, align 4
  br label %116

; <label>:111                                     ; preds = %93
  %112 = load %struct.EState** %1, align 8
  %113 = getelementptr inbounds %struct.EState* %112, i32 0, i32 14
  %114 = load i32* %113, align 4
  %115 = add nsw i32 %114, 1
  store i32 %115, i32* %113, align 4
  br label %116

; <label>:116                                     ; preds = %111, %105
  br label %117

; <label>:117                                     ; preds = %116, %42
  %118 = load %struct.EState** %1, align 8
  %119 = getelementptr inbounds %struct.EState* %118, i32 0, i32 0
  %120 = load %struct.bz_stream** %119, align 8
  %121 = getelementptr inbounds %struct.bz_stream* %120, i32 0, i32 0
  %122 = load i8** %121, align 8
  %123 = getelementptr inbounds i8* %122, i32 1
  store i8* %123, i8** %121, align 8
  %124 = load %struct.EState** %1, align 8
  %125 = getelementptr inbounds %struct.EState* %124, i32 0, i32 0
  %126 = load %struct.bz_stream** %125, align 8
  %127 = getelementptr inbounds %struct.bz_stream* %126, i32 0, i32 1
  %128 = load i32* %127, align 4
  %129 = add i32 %128, -1
  store i32 %129, i32* %127, align 4
  %130 = load %struct.EState** %1, align 8
  %131 = getelementptr inbounds %struct.EState* %130, i32 0, i32 0
  %132 = load %struct.bz_stream** %131, align 8
  %133 = getelementptr inbounds %struct.bz_stream* %132, i32 0, i32 2
  %134 = load i32* %133, align 4
  %135 = add i32 %134, 1
  store i32 %135, i32* %133, align 4
  %136 = load %struct.EState** %1, align 8
  %137 = getelementptr inbounds %struct.EState* %136, i32 0, i32 0
  %138 = load %struct.bz_stream** %137, align 8
  %139 = getelementptr inbounds %struct.bz_stream* %138, i32 0, i32 2
  %140 = load i32* %139, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %149

; <label>:142                                     ; preds = %117
  %143 = load %struct.EState** %1, align 8
  %144 = getelementptr inbounds %struct.EState* %143, i32 0, i32 0
  %145 = load %struct.bz_stream** %144, align 8
  %146 = getelementptr inbounds %struct.bz_stream* %145, i32 0, i32 3
  %147 = load i32* %146, align 4
  %148 = add i32 %147, 1
  store i32 %148, i32* %146, align 4
  br label %149

; <label>:149                                     ; preds = %142, %117
  br label %7

; <label>:150                                     ; preds = %23, %15
  br label %306

; <label>:151                                     ; preds = %0
  br label %152

; <label>:152                                     ; preds = %151, %300
  %153 = load %struct.EState** %1, align 8
  %154 = getelementptr inbounds %struct.EState* %153, i32 0, i32 17
  %155 = load i32* %154, align 4
  %156 = load %struct.EState** %1, align 8
  %157 = getelementptr inbounds %struct.EState* %156, i32 0, i32 18
  %158 = load i32* %157, align 4
  %159 = icmp sge i32 %155, %158
  br i1 %159, label %160, label %161

; <label>:160                                     ; preds = %152
  br label %305

; <label>:161                                     ; preds = %152
  %162 = load %struct.EState** %1, align 8
  %163 = getelementptr inbounds %struct.EState* %162, i32 0, i32 0
  %164 = load %struct.bz_stream** %163, align 8
  %165 = getelementptr inbounds %struct.bz_stream* %164, i32 0, i32 1
  %166 = load i32* %165, align 4
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

; <label>:168                                     ; preds = %161
  br label %305

; <label>:169                                     ; preds = %161
  %170 = load %struct.EState** %1, align 8
  %171 = getelementptr inbounds %struct.EState* %170, i32 0, i32 3
  %172 = load i32* %171, align 4
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

; <label>:174                                     ; preds = %169
  br label %305

; <label>:175                                     ; preds = %169
  store i8 1, i8* %progress_in, align 1
  %176 = load %struct.EState** %1, align 8
  %177 = getelementptr inbounds %struct.EState* %176, i32 0, i32 0
  %178 = load %struct.bz_stream** %177, align 8
  %179 = getelementptr inbounds %struct.bz_stream* %178, i32 0, i32 0
  %180 = load i8** %179, align 8
  %181 = load i8* %180, align 1
  %182 = zext i8 %181 to i32
  store i32 %182, i32* %zchh1, align 4
  %183 = load i32* %zchh1, align 4
  %184 = load %struct.EState** %1, align 8
  %185 = getelementptr inbounds %struct.EState* %184, i32 0, i32 13
  %186 = load i32* %185, align 4
  %187 = icmp ne i32 %183, %186
  br i1 %187, label %188, label %238

; <label>:188                                     ; preds = %175
  %189 = load %struct.EState** %1, align 8
  %190 = getelementptr inbounds %struct.EState* %189, i32 0, i32 14
  %191 = load i32* %190, align 4
  %192 = icmp eq i32 %191, 1
  br i1 %192, label %193, label %238

; <label>:193                                     ; preds = %188
  %194 = load %struct.EState** %1, align 8
  %195 = getelementptr inbounds %struct.EState* %194, i32 0, i32 13
  %196 = load i32* %195, align 4
  %197 = trunc i32 %196 to i8
  store i8 %197, i8* %ch2, align 1
  %198 = load %struct.EState** %1, align 8
  %199 = getelementptr inbounds %struct.EState* %198, i32 0, i32 26
  %200 = load i32* %199, align 4
  %201 = shl i32 %200, 8
  %202 = load %struct.EState** %1, align 8
  %203 = getelementptr inbounds %struct.EState* %202, i32 0, i32 26
  %204 = load i32* %203, align 4
  %205 = lshr i32 %204, 24
  %206 = load i8* %ch2, align 1
  %207 = zext i8 %206 to i32
  %208 = xor i32 %205, %207
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds [256 x i32]* @BZ2_crc32Table, i32 0, i64 %209
  %211 = load i32* %210, align 4
  %212 = xor i32 %201, %211
  %213 = load %struct.EState** %1, align 8
  %214 = getelementptr inbounds %struct.EState* %213, i32 0, i32 26
  store i32 %212, i32* %214, align 4
  %215 = load %struct.EState** %1, align 8
  %216 = getelementptr inbounds %struct.EState* %215, i32 0, i32 13
  %217 = load i32* %216, align 4
  %218 = zext i32 %217 to i64
  %219 = load %struct.EState** %1, align 8
  %220 = getelementptr inbounds %struct.EState* %219, i32 0, i32 22
  %221 = getelementptr inbounds [256 x i8]* %220, i32 0, i64 %218
  store i8 1, i8* %221, align 1
  %222 = load i8* %ch2, align 1
  %223 = load %struct.EState** %1, align 8
  %224 = getelementptr inbounds %struct.EState* %223, i32 0, i32 17
  %225 = load i32* %224, align 4
  %226 = sext i32 %225 to i64
  %227 = load %struct.EState** %1, align 8
  %228 = getelementptr inbounds %struct.EState* %227, i32 0, i32 9
  %229 = load i8** %228, align 8
  %230 = getelementptr inbounds i8* %229, i64 %226
  store i8 %222, i8* %230, align 1
  %231 = load %struct.EState** %1, align 8
  %232 = getelementptr inbounds %struct.EState* %231, i32 0, i32 17
  %233 = load i32* %232, align 4
  %234 = add nsw i32 %233, 1
  store i32 %234, i32* %232, align 4
  %235 = load i32* %zchh1, align 4
  %236 = load %struct.EState** %1, align 8
  %237 = getelementptr inbounds %struct.EState* %236, i32 0, i32 13
  store i32 %235, i32* %237, align 4
  br label %268

; <label>:238                                     ; preds = %188, %175
  %239 = load i32* %zchh1, align 4
  %240 = load %struct.EState** %1, align 8
  %241 = getelementptr inbounds %struct.EState* %240, i32 0, i32 13
  %242 = load i32* %241, align 4
  %243 = icmp ne i32 %239, %242
  br i1 %243, label %249, label %244

; <label>:244                                     ; preds = %238
  %245 = load %struct.EState** %1, align 8
  %246 = getelementptr inbounds %struct.EState* %245, i32 0, i32 14
  %247 = load i32* %246, align 4
  %248 = icmp eq i32 %247, 255
  br i1 %248, label %249, label %262

; <label>:249                                     ; preds = %244, %238
  %250 = load %struct.EState** %1, align 8
  %251 = getelementptr inbounds %struct.EState* %250, i32 0, i32 13
  %252 = load i32* %251, align 4
  %253 = icmp ult i32 %252, 256
  br i1 %253, label %254, label %256

; <label>:254                                     ; preds = %249
  %255 = load %struct.EState** %1, align 8
  call void @add_pair_to_block(%struct.EState* %255)
  br label %256

; <label>:256                                     ; preds = %254, %249
  %257 = load i32* %zchh1, align 4
  %258 = load %struct.EState** %1, align 8
  %259 = getelementptr inbounds %struct.EState* %258, i32 0, i32 13
  store i32 %257, i32* %259, align 4
  %260 = load %struct.EState** %1, align 8
  %261 = getelementptr inbounds %struct.EState* %260, i32 0, i32 14
  store i32 1, i32* %261, align 4
  br label %267

; <label>:262                                     ; preds = %244
  %263 = load %struct.EState** %1, align 8
  %264 = getelementptr inbounds %struct.EState* %263, i32 0, i32 14
  %265 = load i32* %264, align 4
  %266 = add nsw i32 %265, 1
  store i32 %266, i32* %264, align 4
  br label %267

; <label>:267                                     ; preds = %262, %256
  br label %268

; <label>:268                                     ; preds = %267, %193
  %269 = load %struct.EState** %1, align 8
  %270 = getelementptr inbounds %struct.EState* %269, i32 0, i32 0
  %271 = load %struct.bz_stream** %270, align 8
  %272 = getelementptr inbounds %struct.bz_stream* %271, i32 0, i32 0
  %273 = load i8** %272, align 8
  %274 = getelementptr inbounds i8* %273, i32 1
  store i8* %274, i8** %272, align 8
  %275 = load %struct.EState** %1, align 8
  %276 = getelementptr inbounds %struct.EState* %275, i32 0, i32 0
  %277 = load %struct.bz_stream** %276, align 8
  %278 = getelementptr inbounds %struct.bz_stream* %277, i32 0, i32 1
  %279 = load i32* %278, align 4
  %280 = add i32 %279, -1
  store i32 %280, i32* %278, align 4
  %281 = load %struct.EState** %1, align 8
  %282 = getelementptr inbounds %struct.EState* %281, i32 0, i32 0
  %283 = load %struct.bz_stream** %282, align 8
  %284 = getelementptr inbounds %struct.bz_stream* %283, i32 0, i32 2
  %285 = load i32* %284, align 4
  %286 = add i32 %285, 1
  store i32 %286, i32* %284, align 4
  %287 = load %struct.EState** %1, align 8
  %288 = getelementptr inbounds %struct.EState* %287, i32 0, i32 0
  %289 = load %struct.bz_stream** %288, align 8
  %290 = getelementptr inbounds %struct.bz_stream* %289, i32 0, i32 2
  %291 = load i32* %290, align 4
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %300

; <label>:293                                     ; preds = %268
  %294 = load %struct.EState** %1, align 8
  %295 = getelementptr inbounds %struct.EState* %294, i32 0, i32 0
  %296 = load %struct.bz_stream** %295, align 8
  %297 = getelementptr inbounds %struct.bz_stream* %296, i32 0, i32 3
  %298 = load i32* %297, align 4
  %299 = add i32 %298, 1
  store i32 %299, i32* %297, align 4
  br label %300

; <label>:300                                     ; preds = %293, %268
  %301 = load %struct.EState** %1, align 8
  %302 = getelementptr inbounds %struct.EState* %301, i32 0, i32 3
  %303 = load i32* %302, align 4
  %304 = add i32 %303, -1
  store i32 %304, i32* %302, align 4
  br label %152

; <label>:305                                     ; preds = %174, %168, %160
  br label %306

; <label>:306                                     ; preds = %305, %150
  %307 = load i8* %progress_in, align 1
  ret i8 %307
}

; Function Attrs: nounwind uwtable
define internal void @flush_RL(%struct.EState* %s) #0 {
  %1 = alloca %struct.EState*, align 8
  store %struct.EState* %s, %struct.EState** %1, align 8
  %2 = load %struct.EState** %1, align 8
  %3 = getelementptr inbounds %struct.EState* %2, i32 0, i32 13
  %4 = load i32* %3, align 4
  %5 = icmp ult i32 %4, 256
  br i1 %5, label %6, label %8

; <label>:6                                       ; preds = %0
  %7 = load %struct.EState** %1, align 8
  call void @add_pair_to_block(%struct.EState* %7)
  br label %8

; <label>:8                                       ; preds = %6, %0
  %9 = load %struct.EState** %1, align 8
  call void @init_RL(%struct.EState* %9)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @add_pair_to_block(%struct.EState* %s) #0 {
  %1 = alloca %struct.EState*, align 8
  %i = alloca i32, align 4
  %ch = alloca i8, align 1
  store %struct.EState* %s, %struct.EState** %1, align 8
  %2 = load %struct.EState** %1, align 8
  %3 = getelementptr inbounds %struct.EState* %2, i32 0, i32 13
  %4 = load i32* %3, align 4
  %5 = trunc i32 %4 to i8
  store i8 %5, i8* %ch, align 1
  store i32 0, i32* %i, align 4
  br label %6

; <label>:6                                       ; preds = %30, %0
  %7 = load i32* %i, align 4
  %8 = load %struct.EState** %1, align 8
  %9 = getelementptr inbounds %struct.EState* %8, i32 0, i32 14
  %10 = load i32* %9, align 4
  %11 = icmp slt i32 %7, %10
  br i1 %11, label %12, label %33

; <label>:12                                      ; preds = %6
  %13 = load %struct.EState** %1, align 8
  %14 = getelementptr inbounds %struct.EState* %13, i32 0, i32 26
  %15 = load i32* %14, align 4
  %16 = shl i32 %15, 8
  %17 = load %struct.EState** %1, align 8
  %18 = getelementptr inbounds %struct.EState* %17, i32 0, i32 26
  %19 = load i32* %18, align 4
  %20 = lshr i32 %19, 24
  %21 = load i8* %ch, align 1
  %22 = zext i8 %21 to i32
  %23 = xor i32 %20, %22
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds [256 x i32]* @BZ2_crc32Table, i32 0, i64 %24
  %26 = load i32* %25, align 4
  %27 = xor i32 %16, %26
  %28 = load %struct.EState** %1, align 8
  %29 = getelementptr inbounds %struct.EState* %28, i32 0, i32 26
  store i32 %27, i32* %29, align 4
  br label %30

; <label>:30                                      ; preds = %12
  %31 = load i32* %i, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %i, align 4
  br label %6

; <label>:33                                      ; preds = %6
  %34 = load %struct.EState** %1, align 8
  %35 = getelementptr inbounds %struct.EState* %34, i32 0, i32 13
  %36 = load i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = load %struct.EState** %1, align 8
  %39 = getelementptr inbounds %struct.EState* %38, i32 0, i32 22
  %40 = getelementptr inbounds [256 x i8]* %39, i32 0, i64 %37
  store i8 1, i8* %40, align 1
  %41 = load %struct.EState** %1, align 8
  %42 = getelementptr inbounds %struct.EState* %41, i32 0, i32 14
  %43 = load i32* %42, align 4
  switch i32 %43, label %125 [
    i32 1, label %44
    i32 2, label %58
    i32 3, label %85
  ]

; <label>:44                                      ; preds = %33
  %45 = load i8* %ch, align 1
  %46 = load %struct.EState** %1, align 8
  %47 = getelementptr inbounds %struct.EState* %46, i32 0, i32 17
  %48 = load i32* %47, align 4
  %49 = sext i32 %48 to i64
  %50 = load %struct.EState** %1, align 8
  %51 = getelementptr inbounds %struct.EState* %50, i32 0, i32 9
  %52 = load i8** %51, align 8
  %53 = getelementptr inbounds i8* %52, i64 %49
  store i8 %45, i8* %53, align 1
  %54 = load %struct.EState** %1, align 8
  %55 = getelementptr inbounds %struct.EState* %54, i32 0, i32 17
  %56 = load i32* %55, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %55, align 4
  br label %203

; <label>:58                                      ; preds = %33
  %59 = load i8* %ch, align 1
  %60 = load %struct.EState** %1, align 8
  %61 = getelementptr inbounds %struct.EState* %60, i32 0, i32 17
  %62 = load i32* %61, align 4
  %63 = sext i32 %62 to i64
  %64 = load %struct.EState** %1, align 8
  %65 = getelementptr inbounds %struct.EState* %64, i32 0, i32 9
  %66 = load i8** %65, align 8
  %67 = getelementptr inbounds i8* %66, i64 %63
  store i8 %59, i8* %67, align 1
  %68 = load %struct.EState** %1, align 8
  %69 = getelementptr inbounds %struct.EState* %68, i32 0, i32 17
  %70 = load i32* %69, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %69, align 4
  %72 = load i8* %ch, align 1
  %73 = load %struct.EState** %1, align 8
  %74 = getelementptr inbounds %struct.EState* %73, i32 0, i32 17
  %75 = load i32* %74, align 4
  %76 = sext i32 %75 to i64
  %77 = load %struct.EState** %1, align 8
  %78 = getelementptr inbounds %struct.EState* %77, i32 0, i32 9
  %79 = load i8** %78, align 8
  %80 = getelementptr inbounds i8* %79, i64 %76
  store i8 %72, i8* %80, align 1
  %81 = load %struct.EState** %1, align 8
  %82 = getelementptr inbounds %struct.EState* %81, i32 0, i32 17
  %83 = load i32* %82, align 4
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %82, align 4
  br label %203

; <label>:85                                      ; preds = %33
  %86 = load i8* %ch, align 1
  %87 = load %struct.EState** %1, align 8
  %88 = getelementptr inbounds %struct.EState* %87, i32 0, i32 17
  %89 = load i32* %88, align 4
  %90 = sext i32 %89 to i64
  %91 = load %struct.EState** %1, align 8
  %92 = getelementptr inbounds %struct.EState* %91, i32 0, i32 9
  %93 = load i8** %92, align 8
  %94 = getelementptr inbounds i8* %93, i64 %90
  store i8 %86, i8* %94, align 1
  %95 = load %struct.EState** %1, align 8
  %96 = getelementptr inbounds %struct.EState* %95, i32 0, i32 17
  %97 = load i32* %96, align 4
  %98 = add nsw i32 %97, 1
  store i32 %98, i32* %96, align 4
  %99 = load i8* %ch, align 1
  %100 = load %struct.EState** %1, align 8
  %101 = getelementptr inbounds %struct.EState* %100, i32 0, i32 17
  %102 = load i32* %101, align 4
  %103 = sext i32 %102 to i64
  %104 = load %struct.EState** %1, align 8
  %105 = getelementptr inbounds %struct.EState* %104, i32 0, i32 9
  %106 = load i8** %105, align 8
  %107 = getelementptr inbounds i8* %106, i64 %103
  store i8 %99, i8* %107, align 1
  %108 = load %struct.EState** %1, align 8
  %109 = getelementptr inbounds %struct.EState* %108, i32 0, i32 17
  %110 = load i32* %109, align 4
  %111 = add nsw i32 %110, 1
  store i32 %111, i32* %109, align 4
  %112 = load i8* %ch, align 1
  %113 = load %struct.EState** %1, align 8
  %114 = getelementptr inbounds %struct.EState* %113, i32 0, i32 17
  %115 = load i32* %114, align 4
  %116 = sext i32 %115 to i64
  %117 = load %struct.EState** %1, align 8
  %118 = getelementptr inbounds %struct.EState* %117, i32 0, i32 9
  %119 = load i8** %118, align 8
  %120 = getelementptr inbounds i8* %119, i64 %116
  store i8 %112, i8* %120, align 1
  %121 = load %struct.EState** %1, align 8
  %122 = getelementptr inbounds %struct.EState* %121, i32 0, i32 17
  %123 = load i32* %122, align 4
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %122, align 4
  br label %203

; <label>:125                                     ; preds = %33
  %126 = load %struct.EState** %1, align 8
  %127 = getelementptr inbounds %struct.EState* %126, i32 0, i32 14
  %128 = load i32* %127, align 4
  %129 = sub nsw i32 %128, 4
  %130 = sext i32 %129 to i64
  %131 = load %struct.EState** %1, align 8
  %132 = getelementptr inbounds %struct.EState* %131, i32 0, i32 22
  %133 = getelementptr inbounds [256 x i8]* %132, i32 0, i64 %130
  store i8 1, i8* %133, align 1
  %134 = load i8* %ch, align 1
  %135 = load %struct.EState** %1, align 8
  %136 = getelementptr inbounds %struct.EState* %135, i32 0, i32 17
  %137 = load i32* %136, align 4
  %138 = sext i32 %137 to i64
  %139 = load %struct.EState** %1, align 8
  %140 = getelementptr inbounds %struct.EState* %139, i32 0, i32 9
  %141 = load i8** %140, align 8
  %142 = getelementptr inbounds i8* %141, i64 %138
  store i8 %134, i8* %142, align 1
  %143 = load %struct.EState** %1, align 8
  %144 = getelementptr inbounds %struct.EState* %143, i32 0, i32 17
  %145 = load i32* %144, align 4
  %146 = add nsw i32 %145, 1
  store i32 %146, i32* %144, align 4
  %147 = load i8* %ch, align 1
  %148 = load %struct.EState** %1, align 8
  %149 = getelementptr inbounds %struct.EState* %148, i32 0, i32 17
  %150 = load i32* %149, align 4
  %151 = sext i32 %150 to i64
  %152 = load %struct.EState** %1, align 8
  %153 = getelementptr inbounds %struct.EState* %152, i32 0, i32 9
  %154 = load i8** %153, align 8
  %155 = getelementptr inbounds i8* %154, i64 %151
  store i8 %147, i8* %155, align 1
  %156 = load %struct.EState** %1, align 8
  %157 = getelementptr inbounds %struct.EState* %156, i32 0, i32 17
  %158 = load i32* %157, align 4
  %159 = add nsw i32 %158, 1
  store i32 %159, i32* %157, align 4
  %160 = load i8* %ch, align 1
  %161 = load %struct.EState** %1, align 8
  %162 = getelementptr inbounds %struct.EState* %161, i32 0, i32 17
  %163 = load i32* %162, align 4
  %164 = sext i32 %163 to i64
  %165 = load %struct.EState** %1, align 8
  %166 = getelementptr inbounds %struct.EState* %165, i32 0, i32 9
  %167 = load i8** %166, align 8
  %168 = getelementptr inbounds i8* %167, i64 %164
  store i8 %160, i8* %168, align 1
  %169 = load %struct.EState** %1, align 8
  %170 = getelementptr inbounds %struct.EState* %169, i32 0, i32 17
  %171 = load i32* %170, align 4
  %172 = add nsw i32 %171, 1
  store i32 %172, i32* %170, align 4
  %173 = load i8* %ch, align 1
  %174 = load %struct.EState** %1, align 8
  %175 = getelementptr inbounds %struct.EState* %174, i32 0, i32 17
  %176 = load i32* %175, align 4
  %177 = sext i32 %176 to i64
  %178 = load %struct.EState** %1, align 8
  %179 = getelementptr inbounds %struct.EState* %178, i32 0, i32 9
  %180 = load i8** %179, align 8
  %181 = getelementptr inbounds i8* %180, i64 %177
  store i8 %173, i8* %181, align 1
  %182 = load %struct.EState** %1, align 8
  %183 = getelementptr inbounds %struct.EState* %182, i32 0, i32 17
  %184 = load i32* %183, align 4
  %185 = add nsw i32 %184, 1
  store i32 %185, i32* %183, align 4
  %186 = load %struct.EState** %1, align 8
  %187 = getelementptr inbounds %struct.EState* %186, i32 0, i32 14
  %188 = load i32* %187, align 4
  %189 = sub nsw i32 %188, 4
  %190 = trunc i32 %189 to i8
  %191 = load %struct.EState** %1, align 8
  %192 = getelementptr inbounds %struct.EState* %191, i32 0, i32 17
  %193 = load i32* %192, align 4
  %194 = sext i32 %193 to i64
  %195 = load %struct.EState** %1, align 8
  %196 = getelementptr inbounds %struct.EState* %195, i32 0, i32 9
  %197 = load i8** %196, align 8
  %198 = getelementptr inbounds i8* %197, i64 %194
  store i8 %190, i8* %198, align 1
  %199 = load %struct.EState** %1, align 8
  %200 = getelementptr inbounds %struct.EState* %199, i32 0, i32 17
  %201 = load i32* %200, align 4
  %202 = add nsw i32 %201, 1
  store i32 %202, i32* %200, align 4
  br label %203

; <label>:203                                     ; preds = %125, %85, %58, %44
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @makeMaps_e(%struct.EState* %s) #0 {
  %1 = alloca %struct.EState*, align 8
  %i = alloca i32, align 4
  store %struct.EState* %s, %struct.EState** %1, align 8
  %2 = load %struct.EState** %1, align 8
  %3 = getelementptr inbounds %struct.EState* %2, i32 0, i32 21
  store i32 0, i32* %3, align 4
  store i32 0, i32* %i, align 4
  br label %4

; <label>:4                                       ; preds = %30, %0
  %5 = load i32* %i, align 4
  %6 = icmp slt i32 %5, 256
  br i1 %6, label %7, label %33

; <label>:7                                       ; preds = %4
  %8 = load i32* %i, align 4
  %9 = sext i32 %8 to i64
  %10 = load %struct.EState** %1, align 8
  %11 = getelementptr inbounds %struct.EState* %10, i32 0, i32 22
  %12 = getelementptr inbounds [256 x i8]* %11, i32 0, i64 %9
  %13 = load i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  br i1 %14, label %15, label %29

; <label>:15                                      ; preds = %7
  %16 = load %struct.EState** %1, align 8
  %17 = getelementptr inbounds %struct.EState* %16, i32 0, i32 21
  %18 = load i32* %17, align 4
  %19 = trunc i32 %18 to i8
  %20 = load i32* %i, align 4
  %21 = sext i32 %20 to i64
  %22 = load %struct.EState** %1, align 8
  %23 = getelementptr inbounds %struct.EState* %22, i32 0, i32 23
  %24 = getelementptr inbounds [256 x i8]* %23, i32 0, i64 %21
  store i8 %19, i8* %24, align 1
  %25 = load %struct.EState** %1, align 8
  %26 = getelementptr inbounds %struct.EState* %25, i32 0, i32 21
  %27 = load i32* %26, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %26, align 4
  br label %29

; <label>:29                                      ; preds = %15, %7
  br label %30

; <label>:30                                      ; preds = %29
  %31 = load i32* %i, align 4
  %32 = add nsw i32 %31, 1
  store i32 %32, i32* %i, align 4
  br label %4

; <label>:33                                      ; preds = %4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @mainQSort3(i32* %ptr, i8* %block, i16* %quadrant, i32 %nblock, i32 %loSt, i32 %hiSt, i32 %dSt, i32* %budget) #0 {
  %1 = alloca i32*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i16*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %unLo = alloca i32, align 4
  %unHi = alloca i32, align 4
  %ltLo = alloca i32, align 4
  %gtHi = alloca i32, align 4
  %n = alloca i32, align 4
  %m = alloca i32, align 4
  %med = alloca i32, align 4
  %sp = alloca i32, align 4
  %lo = alloca i32, align 4
  %hi = alloca i32, align 4
  %d = alloca i32, align 4
  %stackLo = alloca [100 x i32], align 16
  %stackHi = alloca [100 x i32], align 16
  %stackD = alloca [100 x i32], align 16
  %nextLo = alloca [3 x i32], align 4
  %nextHi = alloca [3 x i32], align 4
  %nextD = alloca [3 x i32], align 4
  %zztmp = alloca i32, align 4
  %zztmp1 = alloca i32, align 4
  %zztmp2 = alloca i32, align 4
  %yyp1 = alloca i32, align 4
  %yyp2 = alloca i32, align 4
  %yyn = alloca i32, align 4
  %zztmp3 = alloca i32, align 4
  %yyp14 = alloca i32, align 4
  %yyp25 = alloca i32, align 4
  %yyn6 = alloca i32, align 4
  %zztmp7 = alloca i32, align 4
  %tz = alloca i32, align 4
  %tz8 = alloca i32, align 4
  %tz9 = alloca i32, align 4
  store i32* %ptr, i32** %1, align 8
  store i8* %block, i8** %2, align 8
  store i16* %quadrant, i16** %3, align 8
  store i32 %nblock, i32* %4, align 4
  store i32 %loSt, i32* %5, align 4
  store i32 %hiSt, i32* %6, align 4
  store i32 %dSt, i32* %7, align 4
  store i32* %budget, i32** %8, align 8
  store i32 0, i32* %sp, align 4
  %9 = load i32* %5, align 4
  %10 = load i32* %sp, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [100 x i32]* %stackLo, i32 0, i64 %11
  store i32 %9, i32* %12, align 4
  %13 = load i32* %6, align 4
  %14 = load i32* %sp, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [100 x i32]* %stackHi, i32 0, i64 %15
  store i32 %13, i32* %16, align 4
  %17 = load i32* %7, align 4
  %18 = load i32* %sp, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [100 x i32]* %stackD, i32 0, i64 %19
  store i32 %17, i32* %20, align 4
  %21 = load i32* %sp, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %sp, align 4
  br label %23

; <label>:23                                      ; preds = %504, %248, %65, %0
  %24 = load i32* %sp, align 4
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %556

; <label>:26                                      ; preds = %23
  %27 = load i32* %sp, align 4
  %28 = icmp slt i32 %27, 100
  br i1 %28, label %30, label %29

; <label>:29                                      ; preds = %26
  call void @BZ2_bz__AssertH__fail(i32 1001)
  br label %30

; <label>:30                                      ; preds = %29, %26
  %31 = load i32* %sp, align 4
  %32 = add nsw i32 %31, -1
  store i32 %32, i32* %sp, align 4
  %33 = load i32* %sp, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [100 x i32]* %stackLo, i32 0, i64 %34
  %36 = load i32* %35, align 4
  store i32 %36, i32* %lo, align 4
  %37 = load i32* %sp, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds [100 x i32]* %stackHi, i32 0, i64 %38
  %40 = load i32* %39, align 4
  store i32 %40, i32* %hi, align 4
  %41 = load i32* %sp, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [100 x i32]* %stackD, i32 0, i64 %42
  %44 = load i32* %43, align 4
  store i32 %44, i32* %d, align 4
  %45 = load i32* %hi, align 4
  %46 = load i32* %lo, align 4
  %47 = sub nsw i32 %45, %46
  %48 = icmp slt i32 %47, 20
  br i1 %48, label %52, label %49

; <label>:49                                      ; preds = %30
  %50 = load i32* %d, align 4
  %51 = icmp sgt i32 %50, 14
  br i1 %51, label %52, label %66

; <label>:52                                      ; preds = %49, %30
  %53 = load i32** %1, align 8
  %54 = load i8** %2, align 8
  %55 = load i16** %3, align 8
  %56 = load i32* %4, align 4
  %57 = load i32* %lo, align 4
  %58 = load i32* %hi, align 4
  %59 = load i32* %d, align 4
  %60 = load i32** %8, align 8
  call void @mainSimpleSort(i32* %53, i8* %54, i16* %55, i32 %56, i32 %57, i32 %58, i32 %59, i32* %60)
  %61 = load i32** %8, align 8
  %62 = load i32* %61, align 4
  %63 = icmp slt i32 %62, 0
  br i1 %63, label %64, label %65

; <label>:64                                      ; preds = %52
  br label %556

; <label>:65                                      ; preds = %52
  br label %23

; <label>:66                                      ; preds = %49
  %67 = load i32* %lo, align 4
  %68 = sext i32 %67 to i64
  %69 = load i32** %1, align 8
  %70 = getelementptr inbounds i32* %69, i64 %68
  %71 = load i32* %70, align 4
  %72 = load i32* %d, align 4
  %73 = add i32 %71, %72
  %74 = zext i32 %73 to i64
  %75 = load i8** %2, align 8
  %76 = getelementptr inbounds i8* %75, i64 %74
  %77 = load i8* %76, align 1
  %78 = load i32* %hi, align 4
  %79 = sext i32 %78 to i64
  %80 = load i32** %1, align 8
  %81 = getelementptr inbounds i32* %80, i64 %79
  %82 = load i32* %81, align 4
  %83 = load i32* %d, align 4
  %84 = add i32 %82, %83
  %85 = zext i32 %84 to i64
  %86 = load i8** %2, align 8
  %87 = getelementptr inbounds i8* %86, i64 %85
  %88 = load i8* %87, align 1
  %89 = load i32* %lo, align 4
  %90 = load i32* %hi, align 4
  %91 = add nsw i32 %89, %90
  %92 = ashr i32 %91, 1
  %93 = sext i32 %92 to i64
  %94 = load i32** %1, align 8
  %95 = getelementptr inbounds i32* %94, i64 %93
  %96 = load i32* %95, align 4
  %97 = load i32* %d, align 4
  %98 = add i32 %96, %97
  %99 = zext i32 %98 to i64
  %100 = load i8** %2, align 8
  %101 = getelementptr inbounds i8* %100, i64 %99
  %102 = load i8* %101, align 1
  %103 = call zeroext i8 @mmed3(i8 zeroext %77, i8 zeroext %88, i8 zeroext %102)
  %104 = zext i8 %103 to i32
  store i32 %104, i32* %med, align 4
  %105 = load i32* %lo, align 4
  store i32 %105, i32* %ltLo, align 4
  store i32 %105, i32* %unLo, align 4
  %106 = load i32* %hi, align 4
  store i32 %106, i32* %gtHi, align 4
  store i32 %106, i32* %unHi, align 4
  br label %107

; <label>:107                                     ; preds = %66, %220
  br label %108

; <label>:108                                     ; preds = %107, %130, %158
  %109 = load i32* %unLo, align 4
  %110 = load i32* %unHi, align 4
  %111 = icmp sgt i32 %109, %110
  br i1 %111, label %112, label %113

; <label>:112                                     ; preds = %108
  br label %161

; <label>:113                                     ; preds = %108
  %114 = load i32* %unLo, align 4
  %115 = sext i32 %114 to i64
  %116 = load i32** %1, align 8
  %117 = getelementptr inbounds i32* %116, i64 %115
  %118 = load i32* %117, align 4
  %119 = load i32* %d, align 4
  %120 = add i32 %118, %119
  %121 = zext i32 %120 to i64
  %122 = load i8** %2, align 8
  %123 = getelementptr inbounds i8* %122, i64 %121
  %124 = load i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = load i32* %med, align 4
  %127 = sub nsw i32 %125, %126
  store i32 %127, i32* %n, align 4
  %128 = load i32* %n, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %154

; <label>:130                                     ; preds = %113
  %131 = load i32* %unLo, align 4
  %132 = sext i32 %131 to i64
  %133 = load i32** %1, align 8
  %134 = getelementptr inbounds i32* %133, i64 %132
  %135 = load i32* %134, align 4
  store i32 %135, i32* %zztmp, align 4
  %136 = load i32* %ltLo, align 4
  %137 = sext i32 %136 to i64
  %138 = load i32** %1, align 8
  %139 = getelementptr inbounds i32* %138, i64 %137
  %140 = load i32* %139, align 4
  %141 = load i32* %unLo, align 4
  %142 = sext i32 %141 to i64
  %143 = load i32** %1, align 8
  %144 = getelementptr inbounds i32* %143, i64 %142
  store i32 %140, i32* %144, align 4
  %145 = load i32* %zztmp, align 4
  %146 = load i32* %ltLo, align 4
  %147 = sext i32 %146 to i64
  %148 = load i32** %1, align 8
  %149 = getelementptr inbounds i32* %148, i64 %147
  store i32 %145, i32* %149, align 4
  %150 = load i32* %ltLo, align 4
  %151 = add nsw i32 %150, 1
  store i32 %151, i32* %ltLo, align 4
  %152 = load i32* %unLo, align 4
  %153 = add nsw i32 %152, 1
  store i32 %153, i32* %unLo, align 4
  br label %108

; <label>:154                                     ; preds = %113
  %155 = load i32* %n, align 4
  %156 = icmp sgt i32 %155, 0
  br i1 %156, label %157, label %158

; <label>:157                                     ; preds = %154
  br label %161

; <label>:158                                     ; preds = %154
  %159 = load i32* %unLo, align 4
  %160 = add nsw i32 %159, 1
  store i32 %160, i32* %unLo, align 4
  br label %108

; <label>:161                                     ; preds = %157, %112
  br label %162

; <label>:162                                     ; preds = %161, %184, %212
  %163 = load i32* %unLo, align 4
  %164 = load i32* %unHi, align 4
  %165 = icmp sgt i32 %163, %164
  br i1 %165, label %166, label %167

; <label>:166                                     ; preds = %162
  br label %215

; <label>:167                                     ; preds = %162
  %168 = load i32* %unHi, align 4
  %169 = sext i32 %168 to i64
  %170 = load i32** %1, align 8
  %171 = getelementptr inbounds i32* %170, i64 %169
  %172 = load i32* %171, align 4
  %173 = load i32* %d, align 4
  %174 = add i32 %172, %173
  %175 = zext i32 %174 to i64
  %176 = load i8** %2, align 8
  %177 = getelementptr inbounds i8* %176, i64 %175
  %178 = load i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = load i32* %med, align 4
  %181 = sub nsw i32 %179, %180
  store i32 %181, i32* %n, align 4
  %182 = load i32* %n, align 4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %208

; <label>:184                                     ; preds = %167
  %185 = load i32* %unHi, align 4
  %186 = sext i32 %185 to i64
  %187 = load i32** %1, align 8
  %188 = getelementptr inbounds i32* %187, i64 %186
  %189 = load i32* %188, align 4
  store i32 %189, i32* %zztmp1, align 4
  %190 = load i32* %gtHi, align 4
  %191 = sext i32 %190 to i64
  %192 = load i32** %1, align 8
  %193 = getelementptr inbounds i32* %192, i64 %191
  %194 = load i32* %193, align 4
  %195 = load i32* %unHi, align 4
  %196 = sext i32 %195 to i64
  %197 = load i32** %1, align 8
  %198 = getelementptr inbounds i32* %197, i64 %196
  store i32 %194, i32* %198, align 4
  %199 = load i32* %zztmp1, align 4
  %200 = load i32* %gtHi, align 4
  %201 = sext i32 %200 to i64
  %202 = load i32** %1, align 8
  %203 = getelementptr inbounds i32* %202, i64 %201
  store i32 %199, i32* %203, align 4
  %204 = load i32* %gtHi, align 4
  %205 = add nsw i32 %204, -1
  store i32 %205, i32* %gtHi, align 4
  %206 = load i32* %unHi, align 4
  %207 = add nsw i32 %206, -1
  store i32 %207, i32* %unHi, align 4
  br label %162

; <label>:208                                     ; preds = %167
  %209 = load i32* %n, align 4
  %210 = icmp slt i32 %209, 0
  br i1 %210, label %211, label %212

; <label>:211                                     ; preds = %208
  br label %215

; <label>:212                                     ; preds = %208
  %213 = load i32* %unHi, align 4
  %214 = add nsw i32 %213, -1
  store i32 %214, i32* %unHi, align 4
  br label %162

; <label>:215                                     ; preds = %211, %166
  %216 = load i32* %unLo, align 4
  %217 = load i32* %unHi, align 4
  %218 = icmp sgt i32 %216, %217
  br i1 %218, label %219, label %220

; <label>:219                                     ; preds = %215
  br label %244

; <label>:220                                     ; preds = %215
  %221 = load i32* %unLo, align 4
  %222 = sext i32 %221 to i64
  %223 = load i32** %1, align 8
  %224 = getelementptr inbounds i32* %223, i64 %222
  %225 = load i32* %224, align 4
  store i32 %225, i32* %zztmp2, align 4
  %226 = load i32* %unHi, align 4
  %227 = sext i32 %226 to i64
  %228 = load i32** %1, align 8
  %229 = getelementptr inbounds i32* %228, i64 %227
  %230 = load i32* %229, align 4
  %231 = load i32* %unLo, align 4
  %232 = sext i32 %231 to i64
  %233 = load i32** %1, align 8
  %234 = getelementptr inbounds i32* %233, i64 %232
  store i32 %230, i32* %234, align 4
  %235 = load i32* %zztmp2, align 4
  %236 = load i32* %unHi, align 4
  %237 = sext i32 %236 to i64
  %238 = load i32** %1, align 8
  %239 = getelementptr inbounds i32* %238, i64 %237
  store i32 %235, i32* %239, align 4
  %240 = load i32* %unLo, align 4
  %241 = add nsw i32 %240, 1
  store i32 %241, i32* %unLo, align 4
  %242 = load i32* %unHi, align 4
  %243 = add nsw i32 %242, -1
  store i32 %243, i32* %unHi, align 4
  br label %107

; <label>:244                                     ; preds = %219
  %245 = load i32* %gtHi, align 4
  %246 = load i32* %ltLo, align 4
  %247 = icmp slt i32 %245, %246
  br i1 %247, label %248, label %264

; <label>:248                                     ; preds = %244
  %249 = load i32* %lo, align 4
  %250 = load i32* %sp, align 4
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds [100 x i32]* %stackLo, i32 0, i64 %251
  store i32 %249, i32* %252, align 4
  %253 = load i32* %hi, align 4
  %254 = load i32* %sp, align 4
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds [100 x i32]* %stackHi, i32 0, i64 %255
  store i32 %253, i32* %256, align 4
  %257 = load i32* %d, align 4
  %258 = add nsw i32 %257, 1
  %259 = load i32* %sp, align 4
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds [100 x i32]* %stackD, i32 0, i64 %260
  store i32 %258, i32* %261, align 4
  %262 = load i32* %sp, align 4
  %263 = add nsw i32 %262, 1
  store i32 %263, i32* %sp, align 4
  br label %23

; <label>:264                                     ; preds = %244
  %265 = load i32* %ltLo, align 4
  %266 = load i32* %lo, align 4
  %267 = sub nsw i32 %265, %266
  %268 = load i32* %unLo, align 4
  %269 = load i32* %ltLo, align 4
  %270 = sub nsw i32 %268, %269
  %271 = icmp slt i32 %267, %270
  br i1 %271, label %272, label %276

; <label>:272                                     ; preds = %264
  %273 = load i32* %ltLo, align 4
  %274 = load i32* %lo, align 4
  %275 = sub nsw i32 %273, %274
  br label %280

; <label>:276                                     ; preds = %264
  %277 = load i32* %unLo, align 4
  %278 = load i32* %ltLo, align 4
  %279 = sub nsw i32 %277, %278
  br label %280

; <label>:280                                     ; preds = %276, %272
  %281 = phi i32 [ %275, %272 ], [ %279, %276 ]
  store i32 %281, i32* %n, align 4
  %282 = load i32* %lo, align 4
  store i32 %282, i32* %yyp1, align 4
  %283 = load i32* %unLo, align 4
  %284 = load i32* %n, align 4
  %285 = sub nsw i32 %283, %284
  store i32 %285, i32* %yyp2, align 4
  %286 = load i32* %n, align 4
  store i32 %286, i32* %yyn, align 4
  br label %287

; <label>:287                                     ; preds = %290, %280
  %288 = load i32* %yyn, align 4
  %289 = icmp sgt i32 %288, 0
  br i1 %289, label %290, label %316

; <label>:290                                     ; preds = %287
  %291 = load i32* %yyp1, align 4
  %292 = sext i32 %291 to i64
  %293 = load i32** %1, align 8
  %294 = getelementptr inbounds i32* %293, i64 %292
  %295 = load i32* %294, align 4
  store i32 %295, i32* %zztmp3, align 4
  %296 = load i32* %yyp2, align 4
  %297 = sext i32 %296 to i64
  %298 = load i32** %1, align 8
  %299 = getelementptr inbounds i32* %298, i64 %297
  %300 = load i32* %299, align 4
  %301 = load i32* %yyp1, align 4
  %302 = sext i32 %301 to i64
  %303 = load i32** %1, align 8
  %304 = getelementptr inbounds i32* %303, i64 %302
  store i32 %300, i32* %304, align 4
  %305 = load i32* %zztmp3, align 4
  %306 = load i32* %yyp2, align 4
  %307 = sext i32 %306 to i64
  %308 = load i32** %1, align 8
  %309 = getelementptr inbounds i32* %308, i64 %307
  store i32 %305, i32* %309, align 4
  %310 = load i32* %yyp1, align 4
  %311 = add nsw i32 %310, 1
  store i32 %311, i32* %yyp1, align 4
  %312 = load i32* %yyp2, align 4
  %313 = add nsw i32 %312, 1
  store i32 %313, i32* %yyp2, align 4
  %314 = load i32* %yyn, align 4
  %315 = add nsw i32 %314, -1
  store i32 %315, i32* %yyn, align 4
  br label %287

; <label>:316                                     ; preds = %287
  %317 = load i32* %hi, align 4
  %318 = load i32* %gtHi, align 4
  %319 = sub nsw i32 %317, %318
  %320 = load i32* %gtHi, align 4
  %321 = load i32* %unHi, align 4
  %322 = sub nsw i32 %320, %321
  %323 = icmp slt i32 %319, %322
  br i1 %323, label %324, label %328

; <label>:324                                     ; preds = %316
  %325 = load i32* %hi, align 4
  %326 = load i32* %gtHi, align 4
  %327 = sub nsw i32 %325, %326
  br label %332

; <label>:328                                     ; preds = %316
  %329 = load i32* %gtHi, align 4
  %330 = load i32* %unHi, align 4
  %331 = sub nsw i32 %329, %330
  br label %332

; <label>:332                                     ; preds = %328, %324
  %333 = phi i32 [ %327, %324 ], [ %331, %328 ]
  store i32 %333, i32* %m, align 4
  %334 = load i32* %unLo, align 4
  store i32 %334, i32* %yyp14, align 4
  %335 = load i32* %hi, align 4
  %336 = load i32* %m, align 4
  %337 = sub nsw i32 %335, %336
  %338 = add nsw i32 %337, 1
  store i32 %338, i32* %yyp25, align 4
  %339 = load i32* %m, align 4
  store i32 %339, i32* %yyn6, align 4
  br label %340

; <label>:340                                     ; preds = %343, %332
  %341 = load i32* %yyn6, align 4
  %342 = icmp sgt i32 %341, 0
  br i1 %342, label %343, label %369

; <label>:343                                     ; preds = %340
  %344 = load i32* %yyp14, align 4
  %345 = sext i32 %344 to i64
  %346 = load i32** %1, align 8
  %347 = getelementptr inbounds i32* %346, i64 %345
  %348 = load i32* %347, align 4
  store i32 %348, i32* %zztmp7, align 4
  %349 = load i32* %yyp25, align 4
  %350 = sext i32 %349 to i64
  %351 = load i32** %1, align 8
  %352 = getelementptr inbounds i32* %351, i64 %350
  %353 = load i32* %352, align 4
  %354 = load i32* %yyp14, align 4
  %355 = sext i32 %354 to i64
  %356 = load i32** %1, align 8
  %357 = getelementptr inbounds i32* %356, i64 %355
  store i32 %353, i32* %357, align 4
  %358 = load i32* %zztmp7, align 4
  %359 = load i32* %yyp25, align 4
  %360 = sext i32 %359 to i64
  %361 = load i32** %1, align 8
  %362 = getelementptr inbounds i32* %361, i64 %360
  store i32 %358, i32* %362, align 4
  %363 = load i32* %yyp14, align 4
  %364 = add nsw i32 %363, 1
  store i32 %364, i32* %yyp14, align 4
  %365 = load i32* %yyp25, align 4
  %366 = add nsw i32 %365, 1
  store i32 %366, i32* %yyp25, align 4
  %367 = load i32* %yyn6, align 4
  %368 = add nsw i32 %367, -1
  store i32 %368, i32* %yyn6, align 4
  br label %340

; <label>:369                                     ; preds = %340
  %370 = load i32* %lo, align 4
  %371 = load i32* %unLo, align 4
  %372 = add nsw i32 %370, %371
  %373 = load i32* %ltLo, align 4
  %374 = sub nsw i32 %372, %373
  %375 = sub nsw i32 %374, 1
  store i32 %375, i32* %n, align 4
  %376 = load i32* %hi, align 4
  %377 = load i32* %gtHi, align 4
  %378 = load i32* %unHi, align 4
  %379 = sub nsw i32 %377, %378
  %380 = sub nsw i32 %376, %379
  %381 = add nsw i32 %380, 1
  store i32 %381, i32* %m, align 4
  %382 = load i32* %lo, align 4
  %383 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 0
  store i32 %382, i32* %383, align 4
  %384 = load i32* %n, align 4
  %385 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 0
  store i32 %384, i32* %385, align 4
  %386 = load i32* %d, align 4
  %387 = getelementptr inbounds [3 x i32]* %nextD, i32 0, i64 0
  store i32 %386, i32* %387, align 4
  %388 = load i32* %m, align 4
  %389 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 1
  store i32 %388, i32* %389, align 4
  %390 = load i32* %hi, align 4
  %391 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 1
  store i32 %390, i32* %391, align 4
  %392 = load i32* %d, align 4
  %393 = getelementptr inbounds [3 x i32]* %nextD, i32 0, i64 1
  store i32 %392, i32* %393, align 4
  %394 = load i32* %n, align 4
  %395 = add nsw i32 %394, 1
  %396 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 2
  store i32 %395, i32* %396, align 4
  %397 = load i32* %m, align 4
  %398 = sub nsw i32 %397, 1
  %399 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 2
  store i32 %398, i32* %399, align 4
  %400 = load i32* %d, align 4
  %401 = add nsw i32 %400, 1
  %402 = getelementptr inbounds [3 x i32]* %nextD, i32 0, i64 2
  store i32 %401, i32* %402, align 4
  %403 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 0
  %404 = load i32* %403, align 4
  %405 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 0
  %406 = load i32* %405, align 4
  %407 = sub nsw i32 %404, %406
  %408 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 1
  %409 = load i32* %408, align 4
  %410 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 1
  %411 = load i32* %410, align 4
  %412 = sub nsw i32 %409, %411
  %413 = icmp slt i32 %407, %412
  br i1 %413, label %414, label %436

; <label>:414                                     ; preds = %369
  %415 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 0
  %416 = load i32* %415, align 4
  store i32 %416, i32* %tz, align 4
  %417 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 1
  %418 = load i32* %417, align 4
  %419 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 0
  store i32 %418, i32* %419, align 4
  %420 = load i32* %tz, align 4
  %421 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 1
  store i32 %420, i32* %421, align 4
  %422 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 0
  %423 = load i32* %422, align 4
  store i32 %423, i32* %tz, align 4
  %424 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 1
  %425 = load i32* %424, align 4
  %426 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 0
  store i32 %425, i32* %426, align 4
  %427 = load i32* %tz, align 4
  %428 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 1
  store i32 %427, i32* %428, align 4
  %429 = getelementptr inbounds [3 x i32]* %nextD, i32 0, i64 0
  %430 = load i32* %429, align 4
  store i32 %430, i32* %tz, align 4
  %431 = getelementptr inbounds [3 x i32]* %nextD, i32 0, i64 1
  %432 = load i32* %431, align 4
  %433 = getelementptr inbounds [3 x i32]* %nextD, i32 0, i64 0
  store i32 %432, i32* %433, align 4
  %434 = load i32* %tz, align 4
  %435 = getelementptr inbounds [3 x i32]* %nextD, i32 0, i64 1
  store i32 %434, i32* %435, align 4
  br label %436

; <label>:436                                     ; preds = %414, %369
  %437 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 1
  %438 = load i32* %437, align 4
  %439 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 1
  %440 = load i32* %439, align 4
  %441 = sub nsw i32 %438, %440
  %442 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 2
  %443 = load i32* %442, align 4
  %444 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 2
  %445 = load i32* %444, align 4
  %446 = sub nsw i32 %443, %445
  %447 = icmp slt i32 %441, %446
  br i1 %447, label %448, label %470

; <label>:448                                     ; preds = %436
  %449 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 1
  %450 = load i32* %449, align 4
  store i32 %450, i32* %tz8, align 4
  %451 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 2
  %452 = load i32* %451, align 4
  %453 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 1
  store i32 %452, i32* %453, align 4
  %454 = load i32* %tz8, align 4
  %455 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 2
  store i32 %454, i32* %455, align 4
  %456 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 1
  %457 = load i32* %456, align 4
  store i32 %457, i32* %tz8, align 4
  %458 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 2
  %459 = load i32* %458, align 4
  %460 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 1
  store i32 %459, i32* %460, align 4
  %461 = load i32* %tz8, align 4
  %462 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 2
  store i32 %461, i32* %462, align 4
  %463 = getelementptr inbounds [3 x i32]* %nextD, i32 0, i64 1
  %464 = load i32* %463, align 4
  store i32 %464, i32* %tz8, align 4
  %465 = getelementptr inbounds [3 x i32]* %nextD, i32 0, i64 2
  %466 = load i32* %465, align 4
  %467 = getelementptr inbounds [3 x i32]* %nextD, i32 0, i64 1
  store i32 %466, i32* %467, align 4
  %468 = load i32* %tz8, align 4
  %469 = getelementptr inbounds [3 x i32]* %nextD, i32 0, i64 2
  store i32 %468, i32* %469, align 4
  br label %470

; <label>:470                                     ; preds = %448, %436
  %471 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 0
  %472 = load i32* %471, align 4
  %473 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 0
  %474 = load i32* %473, align 4
  %475 = sub nsw i32 %472, %474
  %476 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 1
  %477 = load i32* %476, align 4
  %478 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 1
  %479 = load i32* %478, align 4
  %480 = sub nsw i32 %477, %479
  %481 = icmp slt i32 %475, %480
  br i1 %481, label %482, label %504

; <label>:482                                     ; preds = %470
  %483 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 0
  %484 = load i32* %483, align 4
  store i32 %484, i32* %tz9, align 4
  %485 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 1
  %486 = load i32* %485, align 4
  %487 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 0
  store i32 %486, i32* %487, align 4
  %488 = load i32* %tz9, align 4
  %489 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 1
  store i32 %488, i32* %489, align 4
  %490 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 0
  %491 = load i32* %490, align 4
  store i32 %491, i32* %tz9, align 4
  %492 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 1
  %493 = load i32* %492, align 4
  %494 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 0
  store i32 %493, i32* %494, align 4
  %495 = load i32* %tz9, align 4
  %496 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 1
  store i32 %495, i32* %496, align 4
  %497 = getelementptr inbounds [3 x i32]* %nextD, i32 0, i64 0
  %498 = load i32* %497, align 4
  store i32 %498, i32* %tz9, align 4
  %499 = getelementptr inbounds [3 x i32]* %nextD, i32 0, i64 1
  %500 = load i32* %499, align 4
  %501 = getelementptr inbounds [3 x i32]* %nextD, i32 0, i64 0
  store i32 %500, i32* %501, align 4
  %502 = load i32* %tz9, align 4
  %503 = getelementptr inbounds [3 x i32]* %nextD, i32 0, i64 1
  store i32 %502, i32* %503, align 4
  br label %504

; <label>:504                                     ; preds = %482, %470
  %505 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 0
  %506 = load i32* %505, align 4
  %507 = load i32* %sp, align 4
  %508 = sext i32 %507 to i64
  %509 = getelementptr inbounds [100 x i32]* %stackLo, i32 0, i64 %508
  store i32 %506, i32* %509, align 4
  %510 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 0
  %511 = load i32* %510, align 4
  %512 = load i32* %sp, align 4
  %513 = sext i32 %512 to i64
  %514 = getelementptr inbounds [100 x i32]* %stackHi, i32 0, i64 %513
  store i32 %511, i32* %514, align 4
  %515 = getelementptr inbounds [3 x i32]* %nextD, i32 0, i64 0
  %516 = load i32* %515, align 4
  %517 = load i32* %sp, align 4
  %518 = sext i32 %517 to i64
  %519 = getelementptr inbounds [100 x i32]* %stackD, i32 0, i64 %518
  store i32 %516, i32* %519, align 4
  %520 = load i32* %sp, align 4
  %521 = add nsw i32 %520, 1
  store i32 %521, i32* %sp, align 4
  %522 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 1
  %523 = load i32* %522, align 4
  %524 = load i32* %sp, align 4
  %525 = sext i32 %524 to i64
  %526 = getelementptr inbounds [100 x i32]* %stackLo, i32 0, i64 %525
  store i32 %523, i32* %526, align 4
  %527 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 1
  %528 = load i32* %527, align 4
  %529 = load i32* %sp, align 4
  %530 = sext i32 %529 to i64
  %531 = getelementptr inbounds [100 x i32]* %stackHi, i32 0, i64 %530
  store i32 %528, i32* %531, align 4
  %532 = getelementptr inbounds [3 x i32]* %nextD, i32 0, i64 1
  %533 = load i32* %532, align 4
  %534 = load i32* %sp, align 4
  %535 = sext i32 %534 to i64
  %536 = getelementptr inbounds [100 x i32]* %stackD, i32 0, i64 %535
  store i32 %533, i32* %536, align 4
  %537 = load i32* %sp, align 4
  %538 = add nsw i32 %537, 1
  store i32 %538, i32* %sp, align 4
  %539 = getelementptr inbounds [3 x i32]* %nextLo, i32 0, i64 2
  %540 = load i32* %539, align 4
  %541 = load i32* %sp, align 4
  %542 = sext i32 %541 to i64
  %543 = getelementptr inbounds [100 x i32]* %stackLo, i32 0, i64 %542
  store i32 %540, i32* %543, align 4
  %544 = getelementptr inbounds [3 x i32]* %nextHi, i32 0, i64 2
  %545 = load i32* %544, align 4
  %546 = load i32* %sp, align 4
  %547 = sext i32 %546 to i64
  %548 = getelementptr inbounds [100 x i32]* %stackHi, i32 0, i64 %547
  store i32 %545, i32* %548, align 4
  %549 = getelementptr inbounds [3 x i32]* %nextD, i32 0, i64 2
  %550 = load i32* %549, align 4
  %551 = load i32* %sp, align 4
  %552 = sext i32 %551 to i64
  %553 = getelementptr inbounds [100 x i32]* %stackD, i32 0, i64 %552
  store i32 %550, i32* %553, align 4
  %554 = load i32* %sp, align 4
  %555 = add nsw i32 %554, 1
  store i32 %555, i32* %sp, align 4
  br label %23

; <label>:556                                     ; preds = %64, %23
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @mainSimpleSort(i32* %ptr, i8* %block, i16* %quadrant, i32 %nblock, i32 %lo, i32 %hi, i32 %d, i32* %budget) #0 {
  %1 = alloca i32*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i16*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %h = alloca i32, align 4
  %bigN = alloca i32, align 4
  %hp = alloca i32, align 4
  %v = alloca i32, align 4
  store i32* %ptr, i32** %1, align 8
  store i8* %block, i8** %2, align 8
  store i16* %quadrant, i16** %3, align 8
  store i32 %nblock, i32* %4, align 4
  store i32 %lo, i32* %5, align 4
  store i32 %hi, i32* %6, align 4
  store i32 %d, i32* %7, align 4
  store i32* %budget, i32** %8, align 8
  %9 = load i32* %6, align 4
  %10 = load i32* %5, align 4
  %11 = sub nsw i32 %9, %10
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %bigN, align 4
  %13 = load i32* %bigN, align 4
  %14 = icmp slt i32 %13, 2
  br i1 %14, label %15, label %16

; <label>:15                                      ; preds = %0
  br label %234

; <label>:16                                      ; preds = %0
  store i32 0, i32* %hp, align 4
  br label %17

; <label>:17                                      ; preds = %24, %16
  %18 = load i32* %hp, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [14 x i32]* @incs, i32 0, i64 %19
  %21 = load i32* %20, align 4
  %22 = load i32* %bigN, align 4
  %23 = icmp slt i32 %21, %22
  br i1 %23, label %24, label %27

; <label>:24                                      ; preds = %17
  %25 = load i32* %hp, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %hp, align 4
  br label %17

; <label>:27                                      ; preds = %17
  %28 = load i32* %hp, align 4
  %29 = add nsw i32 %28, -1
  store i32 %29, i32* %hp, align 4
  br label %30

; <label>:30                                      ; preds = %231, %27
  %31 = load i32* %hp, align 4
  %32 = icmp sge i32 %31, 0
  br i1 %32, label %33, label %234

; <label>:33                                      ; preds = %30
  %34 = load i32* %hp, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [14 x i32]* @incs, i32 0, i64 %35
  %37 = load i32* %36, align 4
  store i32 %37, i32* %h, align 4
  %38 = load i32* %5, align 4
  %39 = load i32* %h, align 4
  %40 = add nsw i32 %38, %39
  store i32 %40, i32* %i, align 4
  br label %41

; <label>:41                                      ; preds = %33, %229
  %42 = load i32* %i, align 4
  %43 = load i32* %6, align 4
  %44 = icmp sgt i32 %42, %43
  br i1 %44, label %45, label %46

; <label>:45                                      ; preds = %41
  br label %230

; <label>:46                                      ; preds = %41
  %47 = load i32* %i, align 4
  %48 = sext i32 %47 to i64
  %49 = load i32** %1, align 8
  %50 = getelementptr inbounds i32* %49, i64 %48
  %51 = load i32* %50, align 4
  store i32 %51, i32* %v, align 4
  %52 = load i32* %i, align 4
  store i32 %52, i32* %j, align 4
  br label %53

; <label>:53                                      ; preds = %94, %46
  %54 = load i32* %j, align 4
  %55 = load i32* %h, align 4
  %56 = sub nsw i32 %54, %55
  %57 = sext i32 %56 to i64
  %58 = load i32** %1, align 8
  %59 = getelementptr inbounds i32* %58, i64 %57
  %60 = load i32* %59, align 4
  %61 = load i32* %7, align 4
  %62 = add i32 %60, %61
  %63 = load i32* %v, align 4
  %64 = load i32* %7, align 4
  %65 = add i32 %63, %64
  %66 = load i8** %2, align 8
  %67 = load i16** %3, align 8
  %68 = load i32* %4, align 4
  %69 = load i32** %8, align 8
  %70 = call zeroext i8 @mainGtU(i32 %62, i32 %65, i8* %66, i16* %67, i32 %68, i32* %69)
  %71 = icmp ne i8 %70, 0
  br i1 %71, label %72, label %95

; <label>:72                                      ; preds = %53
  %73 = load i32* %j, align 4
  %74 = load i32* %h, align 4
  %75 = sub nsw i32 %73, %74
  %76 = sext i32 %75 to i64
  %77 = load i32** %1, align 8
  %78 = getelementptr inbounds i32* %77, i64 %76
  %79 = load i32* %78, align 4
  %80 = load i32* %j, align 4
  %81 = sext i32 %80 to i64
  %82 = load i32** %1, align 8
  %83 = getelementptr inbounds i32* %82, i64 %81
  store i32 %79, i32* %83, align 4
  %84 = load i32* %j, align 4
  %85 = load i32* %h, align 4
  %86 = sub nsw i32 %84, %85
  store i32 %86, i32* %j, align 4
  %87 = load i32* %j, align 4
  %88 = load i32* %5, align 4
  %89 = load i32* %h, align 4
  %90 = add nsw i32 %88, %89
  %91 = sub nsw i32 %90, 1
  %92 = icmp sle i32 %87, %91
  br i1 %92, label %93, label %94

; <label>:93                                      ; preds = %72
  br label %95

; <label>:94                                      ; preds = %72
  br label %53

; <label>:95                                      ; preds = %93, %53
  %96 = load i32* %v, align 4
  %97 = load i32* %j, align 4
  %98 = sext i32 %97 to i64
  %99 = load i32** %1, align 8
  %100 = getelementptr inbounds i32* %99, i64 %98
  store i32 %96, i32* %100, align 4
  %101 = load i32* %i, align 4
  %102 = add nsw i32 %101, 1
  store i32 %102, i32* %i, align 4
  %103 = load i32* %i, align 4
  %104 = load i32* %6, align 4
  %105 = icmp sgt i32 %103, %104
  br i1 %105, label %106, label %107

; <label>:106                                     ; preds = %95
  br label %230

; <label>:107                                     ; preds = %95
  %108 = load i32* %i, align 4
  %109 = sext i32 %108 to i64
  %110 = load i32** %1, align 8
  %111 = getelementptr inbounds i32* %110, i64 %109
  %112 = load i32* %111, align 4
  store i32 %112, i32* %v, align 4
  %113 = load i32* %i, align 4
  store i32 %113, i32* %j, align 4
  br label %114

; <label>:114                                     ; preds = %155, %107
  %115 = load i32* %j, align 4
  %116 = load i32* %h, align 4
  %117 = sub nsw i32 %115, %116
  %118 = sext i32 %117 to i64
  %119 = load i32** %1, align 8
  %120 = getelementptr inbounds i32* %119, i64 %118
  %121 = load i32* %120, align 4
  %122 = load i32* %7, align 4
  %123 = add i32 %121, %122
  %124 = load i32* %v, align 4
  %125 = load i32* %7, align 4
  %126 = add i32 %124, %125
  %127 = load i8** %2, align 8
  %128 = load i16** %3, align 8
  %129 = load i32* %4, align 4
  %130 = load i32** %8, align 8
  %131 = call zeroext i8 @mainGtU(i32 %123, i32 %126, i8* %127, i16* %128, i32 %129, i32* %130)
  %132 = icmp ne i8 %131, 0
  br i1 %132, label %133, label %156

; <label>:133                                     ; preds = %114
  %134 = load i32* %j, align 4
  %135 = load i32* %h, align 4
  %136 = sub nsw i32 %134, %135
  %137 = sext i32 %136 to i64
  %138 = load i32** %1, align 8
  %139 = getelementptr inbounds i32* %138, i64 %137
  %140 = load i32* %139, align 4
  %141 = load i32* %j, align 4
  %142 = sext i32 %141 to i64
  %143 = load i32** %1, align 8
  %144 = getelementptr inbounds i32* %143, i64 %142
  store i32 %140, i32* %144, align 4
  %145 = load i32* %j, align 4
  %146 = load i32* %h, align 4
  %147 = sub nsw i32 %145, %146
  store i32 %147, i32* %j, align 4
  %148 = load i32* %j, align 4
  %149 = load i32* %5, align 4
  %150 = load i32* %h, align 4
  %151 = add nsw i32 %149, %150
  %152 = sub nsw i32 %151, 1
  %153 = icmp sle i32 %148, %152
  br i1 %153, label %154, label %155

; <label>:154                                     ; preds = %133
  br label %156

; <label>:155                                     ; preds = %133
  br label %114

; <label>:156                                     ; preds = %154, %114
  %157 = load i32* %v, align 4
  %158 = load i32* %j, align 4
  %159 = sext i32 %158 to i64
  %160 = load i32** %1, align 8
  %161 = getelementptr inbounds i32* %160, i64 %159
  store i32 %157, i32* %161, align 4
  %162 = load i32* %i, align 4
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %i, align 4
  %164 = load i32* %i, align 4
  %165 = load i32* %6, align 4
  %166 = icmp sgt i32 %164, %165
  br i1 %166, label %167, label %168

; <label>:167                                     ; preds = %156
  br label %230

; <label>:168                                     ; preds = %156
  %169 = load i32* %i, align 4
  %170 = sext i32 %169 to i64
  %171 = load i32** %1, align 8
  %172 = getelementptr inbounds i32* %171, i64 %170
  %173 = load i32* %172, align 4
  store i32 %173, i32* %v, align 4
  %174 = load i32* %i, align 4
  store i32 %174, i32* %j, align 4
  br label %175

; <label>:175                                     ; preds = %216, %168
  %176 = load i32* %j, align 4
  %177 = load i32* %h, align 4
  %178 = sub nsw i32 %176, %177
  %179 = sext i32 %178 to i64
  %180 = load i32** %1, align 8
  %181 = getelementptr inbounds i32* %180, i64 %179
  %182 = load i32* %181, align 4
  %183 = load i32* %7, align 4
  %184 = add i32 %182, %183
  %185 = load i32* %v, align 4
  %186 = load i32* %7, align 4
  %187 = add i32 %185, %186
  %188 = load i8** %2, align 8
  %189 = load i16** %3, align 8
  %190 = load i32* %4, align 4
  %191 = load i32** %8, align 8
  %192 = call zeroext i8 @mainGtU(i32 %184, i32 %187, i8* %188, i16* %189, i32 %190, i32* %191)
  %193 = icmp ne i8 %192, 0
  br i1 %193, label %194, label %217

; <label>:194                                     ; preds = %175
  %195 = load i32* %j, align 4
  %196 = load i32* %h, align 4
  %197 = sub nsw i32 %195, %196
  %198 = sext i32 %197 to i64
  %199 = load i32** %1, align 8
  %200 = getelementptr inbounds i32* %199, i64 %198
  %201 = load i32* %200, align 4
  %202 = load i32* %j, align 4
  %203 = sext i32 %202 to i64
  %204 = load i32** %1, align 8
  %205 = getelementptr inbounds i32* %204, i64 %203
  store i32 %201, i32* %205, align 4
  %206 = load i32* %j, align 4
  %207 = load i32* %h, align 4
  %208 = sub nsw i32 %206, %207
  store i32 %208, i32* %j, align 4
  %209 = load i32* %j, align 4
  %210 = load i32* %5, align 4
  %211 = load i32* %h, align 4
  %212 = add nsw i32 %210, %211
  %213 = sub nsw i32 %212, 1
  %214 = icmp sle i32 %209, %213
  br i1 %214, label %215, label %216

; <label>:215                                     ; preds = %194
  br label %217

; <label>:216                                     ; preds = %194
  br label %175

; <label>:217                                     ; preds = %215, %175
  %218 = load i32* %v, align 4
  %219 = load i32* %j, align 4
  %220 = sext i32 %219 to i64
  %221 = load i32** %1, align 8
  %222 = getelementptr inbounds i32* %221, i64 %220
  store i32 %218, i32* %222, align 4
  %223 = load i32* %i, align 4
  %224 = add nsw i32 %223, 1
  store i32 %224, i32* %i, align 4
  %225 = load i32** %8, align 8
  %226 = load i32* %225, align 4
  %227 = icmp slt i32 %226, 0
  br i1 %227, label %228, label %229

; <label>:228                                     ; preds = %217
  br label %234

; <label>:229                                     ; preds = %217
  br label %41

; <label>:230                                     ; preds = %167, %106, %45
  br label %231

; <label>:231                                     ; preds = %230
  %232 = load i32* %hp, align 4
  %233 = add nsw i32 %232, -1
  store i32 %233, i32* %hp, align 4
  br label %30

; <label>:234                                     ; preds = %15, %228, %30
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i8 @mmed3(i8 zeroext %a, i8 zeroext %b, i8 zeroext %c) #2 {
  %1 = alloca i8, align 1
  %2 = alloca i8, align 1
  %3 = alloca i8, align 1
  %t = alloca i8, align 1
  store i8 %a, i8* %1, align 1
  store i8 %b, i8* %2, align 1
  store i8 %c, i8* %3, align 1
  %4 = load i8* %1, align 1
  %5 = zext i8 %4 to i32
  %6 = load i8* %2, align 1
  %7 = zext i8 %6 to i32
  %8 = icmp sgt i32 %5, %7
  br i1 %8, label %9, label %13

; <label>:9                                       ; preds = %0
  %10 = load i8* %1, align 1
  store i8 %10, i8* %t, align 1
  %11 = load i8* %2, align 1
  store i8 %11, i8* %1, align 1
  %12 = load i8* %t, align 1
  store i8 %12, i8* %2, align 1
  br label %13

; <label>:13                                      ; preds = %9, %0
  %14 = load i8* %2, align 1
  %15 = zext i8 %14 to i32
  %16 = load i8* %3, align 1
  %17 = zext i8 %16 to i32
  %18 = icmp sgt i32 %15, %17
  br i1 %18, label %19, label %29

; <label>:19                                      ; preds = %13
  %20 = load i8* %3, align 1
  store i8 %20, i8* %2, align 1
  %21 = load i8* %1, align 1
  %22 = zext i8 %21 to i32
  %23 = load i8* %2, align 1
  %24 = zext i8 %23 to i32
  %25 = icmp sgt i32 %22, %24
  br i1 %25, label %26, label %28

; <label>:26                                      ; preds = %19
  %27 = load i8* %1, align 1
  store i8 %27, i8* %2, align 1
  br label %28

; <label>:28                                      ; preds = %26, %19
  br label %29

; <label>:29                                      ; preds = %28, %13
  %30 = load i8* %2, align 1
  ret i8 %30
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i8 @mainGtU(i32 %i1, i32 %i2, i8* %block, i16* %quadrant, i32 %nblock, i32* %budget) #2 {
  %1 = alloca i8, align 1
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %k = alloca i32, align 4
  %c1 = alloca i8, align 1
  %c2 = alloca i8, align 1
  %s1 = alloca i16, align 2
  %s2 = alloca i16, align 2
  store i32 %i1, i32* %2, align 4
  store i32 %i2, i32* %3, align 4
  store i8* %block, i8** %4, align 8
  store i16* %quadrant, i16** %5, align 8
  store i32 %nblock, i32* %6, align 4
  store i32* %budget, i32** %7, align 8
  %8 = load i32* %2, align 4
  %9 = zext i32 %8 to i64
  %10 = load i8** %4, align 8
  %11 = getelementptr inbounds i8* %10, i64 %9
  %12 = load i8* %11, align 1
  store i8 %12, i8* %c1, align 1
  %13 = load i32* %3, align 4
  %14 = zext i32 %13 to i64
  %15 = load i8** %4, align 8
  %16 = getelementptr inbounds i8* %15, i64 %14
  %17 = load i8* %16, align 1
  store i8 %17, i8* %c2, align 1
  %18 = load i8* %c1, align 1
  %19 = zext i8 %18 to i32
  %20 = load i8* %c2, align 1
  %21 = zext i8 %20 to i32
  %22 = icmp ne i32 %19, %21
  br i1 %22, label %23, label %31

; <label>:23                                      ; preds = %0
  %24 = load i8* %c1, align 1
  %25 = zext i8 %24 to i32
  %26 = load i8* %c2, align 1
  %27 = zext i8 %26 to i32
  %28 = icmp sgt i32 %25, %27
  %29 = zext i1 %28 to i32
  %30 = trunc i32 %29 to i8
  store i8 %30, i8* %1
  br label %788

; <label>:31                                      ; preds = %0
  %32 = load i32* %2, align 4
  %33 = add i32 %32, 1
  store i32 %33, i32* %2, align 4
  %34 = load i32* %3, align 4
  %35 = add i32 %34, 1
  store i32 %35, i32* %3, align 4
  %36 = load i32* %2, align 4
  %37 = zext i32 %36 to i64
  %38 = load i8** %4, align 8
  %39 = getelementptr inbounds i8* %38, i64 %37
  %40 = load i8* %39, align 1
  store i8 %40, i8* %c1, align 1
  %41 = load i32* %3, align 4
  %42 = zext i32 %41 to i64
  %43 = load i8** %4, align 8
  %44 = getelementptr inbounds i8* %43, i64 %42
  %45 = load i8* %44, align 1
  store i8 %45, i8* %c2, align 1
  %46 = load i8* %c1, align 1
  %47 = zext i8 %46 to i32
  %48 = load i8* %c2, align 1
  %49 = zext i8 %48 to i32
  %50 = icmp ne i32 %47, %49
  br i1 %50, label %51, label %59

; <label>:51                                      ; preds = %31
  %52 = load i8* %c1, align 1
  %53 = zext i8 %52 to i32
  %54 = load i8* %c2, align 1
  %55 = zext i8 %54 to i32
  %56 = icmp sgt i32 %53, %55
  %57 = zext i1 %56 to i32
  %58 = trunc i32 %57 to i8
  store i8 %58, i8* %1
  br label %788

; <label>:59                                      ; preds = %31
  %60 = load i32* %2, align 4
  %61 = add i32 %60, 1
  store i32 %61, i32* %2, align 4
  %62 = load i32* %3, align 4
  %63 = add i32 %62, 1
  store i32 %63, i32* %3, align 4
  %64 = load i32* %2, align 4
  %65 = zext i32 %64 to i64
  %66 = load i8** %4, align 8
  %67 = getelementptr inbounds i8* %66, i64 %65
  %68 = load i8* %67, align 1
  store i8 %68, i8* %c1, align 1
  %69 = load i32* %3, align 4
  %70 = zext i32 %69 to i64
  %71 = load i8** %4, align 8
  %72 = getelementptr inbounds i8* %71, i64 %70
  %73 = load i8* %72, align 1
  store i8 %73, i8* %c2, align 1
  %74 = load i8* %c1, align 1
  %75 = zext i8 %74 to i32
  %76 = load i8* %c2, align 1
  %77 = zext i8 %76 to i32
  %78 = icmp ne i32 %75, %77
  br i1 %78, label %79, label %87

; <label>:79                                      ; preds = %59
  %80 = load i8* %c1, align 1
  %81 = zext i8 %80 to i32
  %82 = load i8* %c2, align 1
  %83 = zext i8 %82 to i32
  %84 = icmp sgt i32 %81, %83
  %85 = zext i1 %84 to i32
  %86 = trunc i32 %85 to i8
  store i8 %86, i8* %1
  br label %788

; <label>:87                                      ; preds = %59
  %88 = load i32* %2, align 4
  %89 = add i32 %88, 1
  store i32 %89, i32* %2, align 4
  %90 = load i32* %3, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %3, align 4
  %92 = load i32* %2, align 4
  %93 = zext i32 %92 to i64
  %94 = load i8** %4, align 8
  %95 = getelementptr inbounds i8* %94, i64 %93
  %96 = load i8* %95, align 1
  store i8 %96, i8* %c1, align 1
  %97 = load i32* %3, align 4
  %98 = zext i32 %97 to i64
  %99 = load i8** %4, align 8
  %100 = getelementptr inbounds i8* %99, i64 %98
  %101 = load i8* %100, align 1
  store i8 %101, i8* %c2, align 1
  %102 = load i8* %c1, align 1
  %103 = zext i8 %102 to i32
  %104 = load i8* %c2, align 1
  %105 = zext i8 %104 to i32
  %106 = icmp ne i32 %103, %105
  br i1 %106, label %107, label %115

; <label>:107                                     ; preds = %87
  %108 = load i8* %c1, align 1
  %109 = zext i8 %108 to i32
  %110 = load i8* %c2, align 1
  %111 = zext i8 %110 to i32
  %112 = icmp sgt i32 %109, %111
  %113 = zext i1 %112 to i32
  %114 = trunc i32 %113 to i8
  store i8 %114, i8* %1
  br label %788

; <label>:115                                     ; preds = %87
  %116 = load i32* %2, align 4
  %117 = add i32 %116, 1
  store i32 %117, i32* %2, align 4
  %118 = load i32* %3, align 4
  %119 = add i32 %118, 1
  store i32 %119, i32* %3, align 4
  %120 = load i32* %2, align 4
  %121 = zext i32 %120 to i64
  %122 = load i8** %4, align 8
  %123 = getelementptr inbounds i8* %122, i64 %121
  %124 = load i8* %123, align 1
  store i8 %124, i8* %c1, align 1
  %125 = load i32* %3, align 4
  %126 = zext i32 %125 to i64
  %127 = load i8** %4, align 8
  %128 = getelementptr inbounds i8* %127, i64 %126
  %129 = load i8* %128, align 1
  store i8 %129, i8* %c2, align 1
  %130 = load i8* %c1, align 1
  %131 = zext i8 %130 to i32
  %132 = load i8* %c2, align 1
  %133 = zext i8 %132 to i32
  %134 = icmp ne i32 %131, %133
  br i1 %134, label %135, label %143

; <label>:135                                     ; preds = %115
  %136 = load i8* %c1, align 1
  %137 = zext i8 %136 to i32
  %138 = load i8* %c2, align 1
  %139 = zext i8 %138 to i32
  %140 = icmp sgt i32 %137, %139
  %141 = zext i1 %140 to i32
  %142 = trunc i32 %141 to i8
  store i8 %142, i8* %1
  br label %788

; <label>:143                                     ; preds = %115
  %144 = load i32* %2, align 4
  %145 = add i32 %144, 1
  store i32 %145, i32* %2, align 4
  %146 = load i32* %3, align 4
  %147 = add i32 %146, 1
  store i32 %147, i32* %3, align 4
  %148 = load i32* %2, align 4
  %149 = zext i32 %148 to i64
  %150 = load i8** %4, align 8
  %151 = getelementptr inbounds i8* %150, i64 %149
  %152 = load i8* %151, align 1
  store i8 %152, i8* %c1, align 1
  %153 = load i32* %3, align 4
  %154 = zext i32 %153 to i64
  %155 = load i8** %4, align 8
  %156 = getelementptr inbounds i8* %155, i64 %154
  %157 = load i8* %156, align 1
  store i8 %157, i8* %c2, align 1
  %158 = load i8* %c1, align 1
  %159 = zext i8 %158 to i32
  %160 = load i8* %c2, align 1
  %161 = zext i8 %160 to i32
  %162 = icmp ne i32 %159, %161
  br i1 %162, label %163, label %171

; <label>:163                                     ; preds = %143
  %164 = load i8* %c1, align 1
  %165 = zext i8 %164 to i32
  %166 = load i8* %c2, align 1
  %167 = zext i8 %166 to i32
  %168 = icmp sgt i32 %165, %167
  %169 = zext i1 %168 to i32
  %170 = trunc i32 %169 to i8
  store i8 %170, i8* %1
  br label %788

; <label>:171                                     ; preds = %143
  %172 = load i32* %2, align 4
  %173 = add i32 %172, 1
  store i32 %173, i32* %2, align 4
  %174 = load i32* %3, align 4
  %175 = add i32 %174, 1
  store i32 %175, i32* %3, align 4
  %176 = load i32* %2, align 4
  %177 = zext i32 %176 to i64
  %178 = load i8** %4, align 8
  %179 = getelementptr inbounds i8* %178, i64 %177
  %180 = load i8* %179, align 1
  store i8 %180, i8* %c1, align 1
  %181 = load i32* %3, align 4
  %182 = zext i32 %181 to i64
  %183 = load i8** %4, align 8
  %184 = getelementptr inbounds i8* %183, i64 %182
  %185 = load i8* %184, align 1
  store i8 %185, i8* %c2, align 1
  %186 = load i8* %c1, align 1
  %187 = zext i8 %186 to i32
  %188 = load i8* %c2, align 1
  %189 = zext i8 %188 to i32
  %190 = icmp ne i32 %187, %189
  br i1 %190, label %191, label %199

; <label>:191                                     ; preds = %171
  %192 = load i8* %c1, align 1
  %193 = zext i8 %192 to i32
  %194 = load i8* %c2, align 1
  %195 = zext i8 %194 to i32
  %196 = icmp sgt i32 %193, %195
  %197 = zext i1 %196 to i32
  %198 = trunc i32 %197 to i8
  store i8 %198, i8* %1
  br label %788

; <label>:199                                     ; preds = %171
  %200 = load i32* %2, align 4
  %201 = add i32 %200, 1
  store i32 %201, i32* %2, align 4
  %202 = load i32* %3, align 4
  %203 = add i32 %202, 1
  store i32 %203, i32* %3, align 4
  %204 = load i32* %2, align 4
  %205 = zext i32 %204 to i64
  %206 = load i8** %4, align 8
  %207 = getelementptr inbounds i8* %206, i64 %205
  %208 = load i8* %207, align 1
  store i8 %208, i8* %c1, align 1
  %209 = load i32* %3, align 4
  %210 = zext i32 %209 to i64
  %211 = load i8** %4, align 8
  %212 = getelementptr inbounds i8* %211, i64 %210
  %213 = load i8* %212, align 1
  store i8 %213, i8* %c2, align 1
  %214 = load i8* %c1, align 1
  %215 = zext i8 %214 to i32
  %216 = load i8* %c2, align 1
  %217 = zext i8 %216 to i32
  %218 = icmp ne i32 %215, %217
  br i1 %218, label %219, label %227

; <label>:219                                     ; preds = %199
  %220 = load i8* %c1, align 1
  %221 = zext i8 %220 to i32
  %222 = load i8* %c2, align 1
  %223 = zext i8 %222 to i32
  %224 = icmp sgt i32 %221, %223
  %225 = zext i1 %224 to i32
  %226 = trunc i32 %225 to i8
  store i8 %226, i8* %1
  br label %788

; <label>:227                                     ; preds = %199
  %228 = load i32* %2, align 4
  %229 = add i32 %228, 1
  store i32 %229, i32* %2, align 4
  %230 = load i32* %3, align 4
  %231 = add i32 %230, 1
  store i32 %231, i32* %3, align 4
  %232 = load i32* %2, align 4
  %233 = zext i32 %232 to i64
  %234 = load i8** %4, align 8
  %235 = getelementptr inbounds i8* %234, i64 %233
  %236 = load i8* %235, align 1
  store i8 %236, i8* %c1, align 1
  %237 = load i32* %3, align 4
  %238 = zext i32 %237 to i64
  %239 = load i8** %4, align 8
  %240 = getelementptr inbounds i8* %239, i64 %238
  %241 = load i8* %240, align 1
  store i8 %241, i8* %c2, align 1
  %242 = load i8* %c1, align 1
  %243 = zext i8 %242 to i32
  %244 = load i8* %c2, align 1
  %245 = zext i8 %244 to i32
  %246 = icmp ne i32 %243, %245
  br i1 %246, label %247, label %255

; <label>:247                                     ; preds = %227
  %248 = load i8* %c1, align 1
  %249 = zext i8 %248 to i32
  %250 = load i8* %c2, align 1
  %251 = zext i8 %250 to i32
  %252 = icmp sgt i32 %249, %251
  %253 = zext i1 %252 to i32
  %254 = trunc i32 %253 to i8
  store i8 %254, i8* %1
  br label %788

; <label>:255                                     ; preds = %227
  %256 = load i32* %2, align 4
  %257 = add i32 %256, 1
  store i32 %257, i32* %2, align 4
  %258 = load i32* %3, align 4
  %259 = add i32 %258, 1
  store i32 %259, i32* %3, align 4
  %260 = load i32* %2, align 4
  %261 = zext i32 %260 to i64
  %262 = load i8** %4, align 8
  %263 = getelementptr inbounds i8* %262, i64 %261
  %264 = load i8* %263, align 1
  store i8 %264, i8* %c1, align 1
  %265 = load i32* %3, align 4
  %266 = zext i32 %265 to i64
  %267 = load i8** %4, align 8
  %268 = getelementptr inbounds i8* %267, i64 %266
  %269 = load i8* %268, align 1
  store i8 %269, i8* %c2, align 1
  %270 = load i8* %c1, align 1
  %271 = zext i8 %270 to i32
  %272 = load i8* %c2, align 1
  %273 = zext i8 %272 to i32
  %274 = icmp ne i32 %271, %273
  br i1 %274, label %275, label %283

; <label>:275                                     ; preds = %255
  %276 = load i8* %c1, align 1
  %277 = zext i8 %276 to i32
  %278 = load i8* %c2, align 1
  %279 = zext i8 %278 to i32
  %280 = icmp sgt i32 %277, %279
  %281 = zext i1 %280 to i32
  %282 = trunc i32 %281 to i8
  store i8 %282, i8* %1
  br label %788

; <label>:283                                     ; preds = %255
  %284 = load i32* %2, align 4
  %285 = add i32 %284, 1
  store i32 %285, i32* %2, align 4
  %286 = load i32* %3, align 4
  %287 = add i32 %286, 1
  store i32 %287, i32* %3, align 4
  %288 = load i32* %2, align 4
  %289 = zext i32 %288 to i64
  %290 = load i8** %4, align 8
  %291 = getelementptr inbounds i8* %290, i64 %289
  %292 = load i8* %291, align 1
  store i8 %292, i8* %c1, align 1
  %293 = load i32* %3, align 4
  %294 = zext i32 %293 to i64
  %295 = load i8** %4, align 8
  %296 = getelementptr inbounds i8* %295, i64 %294
  %297 = load i8* %296, align 1
  store i8 %297, i8* %c2, align 1
  %298 = load i8* %c1, align 1
  %299 = zext i8 %298 to i32
  %300 = load i8* %c2, align 1
  %301 = zext i8 %300 to i32
  %302 = icmp ne i32 %299, %301
  br i1 %302, label %303, label %311

; <label>:303                                     ; preds = %283
  %304 = load i8* %c1, align 1
  %305 = zext i8 %304 to i32
  %306 = load i8* %c2, align 1
  %307 = zext i8 %306 to i32
  %308 = icmp sgt i32 %305, %307
  %309 = zext i1 %308 to i32
  %310 = trunc i32 %309 to i8
  store i8 %310, i8* %1
  br label %788

; <label>:311                                     ; preds = %283
  %312 = load i32* %2, align 4
  %313 = add i32 %312, 1
  store i32 %313, i32* %2, align 4
  %314 = load i32* %3, align 4
  %315 = add i32 %314, 1
  store i32 %315, i32* %3, align 4
  %316 = load i32* %2, align 4
  %317 = zext i32 %316 to i64
  %318 = load i8** %4, align 8
  %319 = getelementptr inbounds i8* %318, i64 %317
  %320 = load i8* %319, align 1
  store i8 %320, i8* %c1, align 1
  %321 = load i32* %3, align 4
  %322 = zext i32 %321 to i64
  %323 = load i8** %4, align 8
  %324 = getelementptr inbounds i8* %323, i64 %322
  %325 = load i8* %324, align 1
  store i8 %325, i8* %c2, align 1
  %326 = load i8* %c1, align 1
  %327 = zext i8 %326 to i32
  %328 = load i8* %c2, align 1
  %329 = zext i8 %328 to i32
  %330 = icmp ne i32 %327, %329
  br i1 %330, label %331, label %339

; <label>:331                                     ; preds = %311
  %332 = load i8* %c1, align 1
  %333 = zext i8 %332 to i32
  %334 = load i8* %c2, align 1
  %335 = zext i8 %334 to i32
  %336 = icmp sgt i32 %333, %335
  %337 = zext i1 %336 to i32
  %338 = trunc i32 %337 to i8
  store i8 %338, i8* %1
  br label %788

; <label>:339                                     ; preds = %311
  %340 = load i32* %2, align 4
  %341 = add i32 %340, 1
  store i32 %341, i32* %2, align 4
  %342 = load i32* %3, align 4
  %343 = add i32 %342, 1
  store i32 %343, i32* %3, align 4
  %344 = load i32* %6, align 4
  %345 = add i32 %344, 8
  store i32 %345, i32* %k, align 4
  br label %346

; <label>:346                                     ; preds = %784, %339
  %347 = load i32* %2, align 4
  %348 = zext i32 %347 to i64
  %349 = load i8** %4, align 8
  %350 = getelementptr inbounds i8* %349, i64 %348
  %351 = load i8* %350, align 1
  store i8 %351, i8* %c1, align 1
  %352 = load i32* %3, align 4
  %353 = zext i32 %352 to i64
  %354 = load i8** %4, align 8
  %355 = getelementptr inbounds i8* %354, i64 %353
  %356 = load i8* %355, align 1
  store i8 %356, i8* %c2, align 1
  %357 = load i8* %c1, align 1
  %358 = zext i8 %357 to i32
  %359 = load i8* %c2, align 1
  %360 = zext i8 %359 to i32
  %361 = icmp ne i32 %358, %360
  br i1 %361, label %362, label %370

; <label>:362                                     ; preds = %346
  %363 = load i8* %c1, align 1
  %364 = zext i8 %363 to i32
  %365 = load i8* %c2, align 1
  %366 = zext i8 %365 to i32
  %367 = icmp sgt i32 %364, %366
  %368 = zext i1 %367 to i32
  %369 = trunc i32 %368 to i8
  store i8 %369, i8* %1
  br label %788

; <label>:370                                     ; preds = %346
  %371 = load i32* %2, align 4
  %372 = zext i32 %371 to i64
  %373 = load i16** %5, align 8
  %374 = getelementptr inbounds i16* %373, i64 %372
  %375 = load i16* %374, align 2
  store i16 %375, i16* %s1, align 2
  %376 = load i32* %3, align 4
  %377 = zext i32 %376 to i64
  %378 = load i16** %5, align 8
  %379 = getelementptr inbounds i16* %378, i64 %377
  %380 = load i16* %379, align 2
  store i16 %380, i16* %s2, align 2
  %381 = load i16* %s1, align 2
  %382 = zext i16 %381 to i32
  %383 = load i16* %s2, align 2
  %384 = zext i16 %383 to i32
  %385 = icmp ne i32 %382, %384
  br i1 %385, label %386, label %394

; <label>:386                                     ; preds = %370
  %387 = load i16* %s1, align 2
  %388 = zext i16 %387 to i32
  %389 = load i16* %s2, align 2
  %390 = zext i16 %389 to i32
  %391 = icmp sgt i32 %388, %390
  %392 = zext i1 %391 to i32
  %393 = trunc i32 %392 to i8
  store i8 %393, i8* %1
  br label %788

; <label>:394                                     ; preds = %370
  %395 = load i32* %2, align 4
  %396 = add i32 %395, 1
  store i32 %396, i32* %2, align 4
  %397 = load i32* %3, align 4
  %398 = add i32 %397, 1
  store i32 %398, i32* %3, align 4
  %399 = load i32* %2, align 4
  %400 = zext i32 %399 to i64
  %401 = load i8** %4, align 8
  %402 = getelementptr inbounds i8* %401, i64 %400
  %403 = load i8* %402, align 1
  store i8 %403, i8* %c1, align 1
  %404 = load i32* %3, align 4
  %405 = zext i32 %404 to i64
  %406 = load i8** %4, align 8
  %407 = getelementptr inbounds i8* %406, i64 %405
  %408 = load i8* %407, align 1
  store i8 %408, i8* %c2, align 1
  %409 = load i8* %c1, align 1
  %410 = zext i8 %409 to i32
  %411 = load i8* %c2, align 1
  %412 = zext i8 %411 to i32
  %413 = icmp ne i32 %410, %412
  br i1 %413, label %414, label %422

; <label>:414                                     ; preds = %394
  %415 = load i8* %c1, align 1
  %416 = zext i8 %415 to i32
  %417 = load i8* %c2, align 1
  %418 = zext i8 %417 to i32
  %419 = icmp sgt i32 %416, %418
  %420 = zext i1 %419 to i32
  %421 = trunc i32 %420 to i8
  store i8 %421, i8* %1
  br label %788

; <label>:422                                     ; preds = %394
  %423 = load i32* %2, align 4
  %424 = zext i32 %423 to i64
  %425 = load i16** %5, align 8
  %426 = getelementptr inbounds i16* %425, i64 %424
  %427 = load i16* %426, align 2
  store i16 %427, i16* %s1, align 2
  %428 = load i32* %3, align 4
  %429 = zext i32 %428 to i64
  %430 = load i16** %5, align 8
  %431 = getelementptr inbounds i16* %430, i64 %429
  %432 = load i16* %431, align 2
  store i16 %432, i16* %s2, align 2
  %433 = load i16* %s1, align 2
  %434 = zext i16 %433 to i32
  %435 = load i16* %s2, align 2
  %436 = zext i16 %435 to i32
  %437 = icmp ne i32 %434, %436
  br i1 %437, label %438, label %446

; <label>:438                                     ; preds = %422
  %439 = load i16* %s1, align 2
  %440 = zext i16 %439 to i32
  %441 = load i16* %s2, align 2
  %442 = zext i16 %441 to i32
  %443 = icmp sgt i32 %440, %442
  %444 = zext i1 %443 to i32
  %445 = trunc i32 %444 to i8
  store i8 %445, i8* %1
  br label %788

; <label>:446                                     ; preds = %422
  %447 = load i32* %2, align 4
  %448 = add i32 %447, 1
  store i32 %448, i32* %2, align 4
  %449 = load i32* %3, align 4
  %450 = add i32 %449, 1
  store i32 %450, i32* %3, align 4
  %451 = load i32* %2, align 4
  %452 = zext i32 %451 to i64
  %453 = load i8** %4, align 8
  %454 = getelementptr inbounds i8* %453, i64 %452
  %455 = load i8* %454, align 1
  store i8 %455, i8* %c1, align 1
  %456 = load i32* %3, align 4
  %457 = zext i32 %456 to i64
  %458 = load i8** %4, align 8
  %459 = getelementptr inbounds i8* %458, i64 %457
  %460 = load i8* %459, align 1
  store i8 %460, i8* %c2, align 1
  %461 = load i8* %c1, align 1
  %462 = zext i8 %461 to i32
  %463 = load i8* %c2, align 1
  %464 = zext i8 %463 to i32
  %465 = icmp ne i32 %462, %464
  br i1 %465, label %466, label %474

; <label>:466                                     ; preds = %446
  %467 = load i8* %c1, align 1
  %468 = zext i8 %467 to i32
  %469 = load i8* %c2, align 1
  %470 = zext i8 %469 to i32
  %471 = icmp sgt i32 %468, %470
  %472 = zext i1 %471 to i32
  %473 = trunc i32 %472 to i8
  store i8 %473, i8* %1
  br label %788

; <label>:474                                     ; preds = %446
  %475 = load i32* %2, align 4
  %476 = zext i32 %475 to i64
  %477 = load i16** %5, align 8
  %478 = getelementptr inbounds i16* %477, i64 %476
  %479 = load i16* %478, align 2
  store i16 %479, i16* %s1, align 2
  %480 = load i32* %3, align 4
  %481 = zext i32 %480 to i64
  %482 = load i16** %5, align 8
  %483 = getelementptr inbounds i16* %482, i64 %481
  %484 = load i16* %483, align 2
  store i16 %484, i16* %s2, align 2
  %485 = load i16* %s1, align 2
  %486 = zext i16 %485 to i32
  %487 = load i16* %s2, align 2
  %488 = zext i16 %487 to i32
  %489 = icmp ne i32 %486, %488
  br i1 %489, label %490, label %498

; <label>:490                                     ; preds = %474
  %491 = load i16* %s1, align 2
  %492 = zext i16 %491 to i32
  %493 = load i16* %s2, align 2
  %494 = zext i16 %493 to i32
  %495 = icmp sgt i32 %492, %494
  %496 = zext i1 %495 to i32
  %497 = trunc i32 %496 to i8
  store i8 %497, i8* %1
  br label %788

; <label>:498                                     ; preds = %474
  %499 = load i32* %2, align 4
  %500 = add i32 %499, 1
  store i32 %500, i32* %2, align 4
  %501 = load i32* %3, align 4
  %502 = add i32 %501, 1
  store i32 %502, i32* %3, align 4
  %503 = load i32* %2, align 4
  %504 = zext i32 %503 to i64
  %505 = load i8** %4, align 8
  %506 = getelementptr inbounds i8* %505, i64 %504
  %507 = load i8* %506, align 1
  store i8 %507, i8* %c1, align 1
  %508 = load i32* %3, align 4
  %509 = zext i32 %508 to i64
  %510 = load i8** %4, align 8
  %511 = getelementptr inbounds i8* %510, i64 %509
  %512 = load i8* %511, align 1
  store i8 %512, i8* %c2, align 1
  %513 = load i8* %c1, align 1
  %514 = zext i8 %513 to i32
  %515 = load i8* %c2, align 1
  %516 = zext i8 %515 to i32
  %517 = icmp ne i32 %514, %516
  br i1 %517, label %518, label %526

; <label>:518                                     ; preds = %498
  %519 = load i8* %c1, align 1
  %520 = zext i8 %519 to i32
  %521 = load i8* %c2, align 1
  %522 = zext i8 %521 to i32
  %523 = icmp sgt i32 %520, %522
  %524 = zext i1 %523 to i32
  %525 = trunc i32 %524 to i8
  store i8 %525, i8* %1
  br label %788

; <label>:526                                     ; preds = %498
  %527 = load i32* %2, align 4
  %528 = zext i32 %527 to i64
  %529 = load i16** %5, align 8
  %530 = getelementptr inbounds i16* %529, i64 %528
  %531 = load i16* %530, align 2
  store i16 %531, i16* %s1, align 2
  %532 = load i32* %3, align 4
  %533 = zext i32 %532 to i64
  %534 = load i16** %5, align 8
  %535 = getelementptr inbounds i16* %534, i64 %533
  %536 = load i16* %535, align 2
  store i16 %536, i16* %s2, align 2
  %537 = load i16* %s1, align 2
  %538 = zext i16 %537 to i32
  %539 = load i16* %s2, align 2
  %540 = zext i16 %539 to i32
  %541 = icmp ne i32 %538, %540
  br i1 %541, label %542, label %550

; <label>:542                                     ; preds = %526
  %543 = load i16* %s1, align 2
  %544 = zext i16 %543 to i32
  %545 = load i16* %s2, align 2
  %546 = zext i16 %545 to i32
  %547 = icmp sgt i32 %544, %546
  %548 = zext i1 %547 to i32
  %549 = trunc i32 %548 to i8
  store i8 %549, i8* %1
  br label %788

; <label>:550                                     ; preds = %526
  %551 = load i32* %2, align 4
  %552 = add i32 %551, 1
  store i32 %552, i32* %2, align 4
  %553 = load i32* %3, align 4
  %554 = add i32 %553, 1
  store i32 %554, i32* %3, align 4
  %555 = load i32* %2, align 4
  %556 = zext i32 %555 to i64
  %557 = load i8** %4, align 8
  %558 = getelementptr inbounds i8* %557, i64 %556
  %559 = load i8* %558, align 1
  store i8 %559, i8* %c1, align 1
  %560 = load i32* %3, align 4
  %561 = zext i32 %560 to i64
  %562 = load i8** %4, align 8
  %563 = getelementptr inbounds i8* %562, i64 %561
  %564 = load i8* %563, align 1
  store i8 %564, i8* %c2, align 1
  %565 = load i8* %c1, align 1
  %566 = zext i8 %565 to i32
  %567 = load i8* %c2, align 1
  %568 = zext i8 %567 to i32
  %569 = icmp ne i32 %566, %568
  br i1 %569, label %570, label %578

; <label>:570                                     ; preds = %550
  %571 = load i8* %c1, align 1
  %572 = zext i8 %571 to i32
  %573 = load i8* %c2, align 1
  %574 = zext i8 %573 to i32
  %575 = icmp sgt i32 %572, %574
  %576 = zext i1 %575 to i32
  %577 = trunc i32 %576 to i8
  store i8 %577, i8* %1
  br label %788

; <label>:578                                     ; preds = %550
  %579 = load i32* %2, align 4
  %580 = zext i32 %579 to i64
  %581 = load i16** %5, align 8
  %582 = getelementptr inbounds i16* %581, i64 %580
  %583 = load i16* %582, align 2
  store i16 %583, i16* %s1, align 2
  %584 = load i32* %3, align 4
  %585 = zext i32 %584 to i64
  %586 = load i16** %5, align 8
  %587 = getelementptr inbounds i16* %586, i64 %585
  %588 = load i16* %587, align 2
  store i16 %588, i16* %s2, align 2
  %589 = load i16* %s1, align 2
  %590 = zext i16 %589 to i32
  %591 = load i16* %s2, align 2
  %592 = zext i16 %591 to i32
  %593 = icmp ne i32 %590, %592
  br i1 %593, label %594, label %602

; <label>:594                                     ; preds = %578
  %595 = load i16* %s1, align 2
  %596 = zext i16 %595 to i32
  %597 = load i16* %s2, align 2
  %598 = zext i16 %597 to i32
  %599 = icmp sgt i32 %596, %598
  %600 = zext i1 %599 to i32
  %601 = trunc i32 %600 to i8
  store i8 %601, i8* %1
  br label %788

; <label>:602                                     ; preds = %578
  %603 = load i32* %2, align 4
  %604 = add i32 %603, 1
  store i32 %604, i32* %2, align 4
  %605 = load i32* %3, align 4
  %606 = add i32 %605, 1
  store i32 %606, i32* %3, align 4
  %607 = load i32* %2, align 4
  %608 = zext i32 %607 to i64
  %609 = load i8** %4, align 8
  %610 = getelementptr inbounds i8* %609, i64 %608
  %611 = load i8* %610, align 1
  store i8 %611, i8* %c1, align 1
  %612 = load i32* %3, align 4
  %613 = zext i32 %612 to i64
  %614 = load i8** %4, align 8
  %615 = getelementptr inbounds i8* %614, i64 %613
  %616 = load i8* %615, align 1
  store i8 %616, i8* %c2, align 1
  %617 = load i8* %c1, align 1
  %618 = zext i8 %617 to i32
  %619 = load i8* %c2, align 1
  %620 = zext i8 %619 to i32
  %621 = icmp ne i32 %618, %620
  br i1 %621, label %622, label %630

; <label>:622                                     ; preds = %602
  %623 = load i8* %c1, align 1
  %624 = zext i8 %623 to i32
  %625 = load i8* %c2, align 1
  %626 = zext i8 %625 to i32
  %627 = icmp sgt i32 %624, %626
  %628 = zext i1 %627 to i32
  %629 = trunc i32 %628 to i8
  store i8 %629, i8* %1
  br label %788

; <label>:630                                     ; preds = %602
  %631 = load i32* %2, align 4
  %632 = zext i32 %631 to i64
  %633 = load i16** %5, align 8
  %634 = getelementptr inbounds i16* %633, i64 %632
  %635 = load i16* %634, align 2
  store i16 %635, i16* %s1, align 2
  %636 = load i32* %3, align 4
  %637 = zext i32 %636 to i64
  %638 = load i16** %5, align 8
  %639 = getelementptr inbounds i16* %638, i64 %637
  %640 = load i16* %639, align 2
  store i16 %640, i16* %s2, align 2
  %641 = load i16* %s1, align 2
  %642 = zext i16 %641 to i32
  %643 = load i16* %s2, align 2
  %644 = zext i16 %643 to i32
  %645 = icmp ne i32 %642, %644
  br i1 %645, label %646, label %654

; <label>:646                                     ; preds = %630
  %647 = load i16* %s1, align 2
  %648 = zext i16 %647 to i32
  %649 = load i16* %s2, align 2
  %650 = zext i16 %649 to i32
  %651 = icmp sgt i32 %648, %650
  %652 = zext i1 %651 to i32
  %653 = trunc i32 %652 to i8
  store i8 %653, i8* %1
  br label %788

; <label>:654                                     ; preds = %630
  %655 = load i32* %2, align 4
  %656 = add i32 %655, 1
  store i32 %656, i32* %2, align 4
  %657 = load i32* %3, align 4
  %658 = add i32 %657, 1
  store i32 %658, i32* %3, align 4
  %659 = load i32* %2, align 4
  %660 = zext i32 %659 to i64
  %661 = load i8** %4, align 8
  %662 = getelementptr inbounds i8* %661, i64 %660
  %663 = load i8* %662, align 1
  store i8 %663, i8* %c1, align 1
  %664 = load i32* %3, align 4
  %665 = zext i32 %664 to i64
  %666 = load i8** %4, align 8
  %667 = getelementptr inbounds i8* %666, i64 %665
  %668 = load i8* %667, align 1
  store i8 %668, i8* %c2, align 1
  %669 = load i8* %c1, align 1
  %670 = zext i8 %669 to i32
  %671 = load i8* %c2, align 1
  %672 = zext i8 %671 to i32
  %673 = icmp ne i32 %670, %672
  br i1 %673, label %674, label %682

; <label>:674                                     ; preds = %654
  %675 = load i8* %c1, align 1
  %676 = zext i8 %675 to i32
  %677 = load i8* %c2, align 1
  %678 = zext i8 %677 to i32
  %679 = icmp sgt i32 %676, %678
  %680 = zext i1 %679 to i32
  %681 = trunc i32 %680 to i8
  store i8 %681, i8* %1
  br label %788

; <label>:682                                     ; preds = %654
  %683 = load i32* %2, align 4
  %684 = zext i32 %683 to i64
  %685 = load i16** %5, align 8
  %686 = getelementptr inbounds i16* %685, i64 %684
  %687 = load i16* %686, align 2
  store i16 %687, i16* %s1, align 2
  %688 = load i32* %3, align 4
  %689 = zext i32 %688 to i64
  %690 = load i16** %5, align 8
  %691 = getelementptr inbounds i16* %690, i64 %689
  %692 = load i16* %691, align 2
  store i16 %692, i16* %s2, align 2
  %693 = load i16* %s1, align 2
  %694 = zext i16 %693 to i32
  %695 = load i16* %s2, align 2
  %696 = zext i16 %695 to i32
  %697 = icmp ne i32 %694, %696
  br i1 %697, label %698, label %706

; <label>:698                                     ; preds = %682
  %699 = load i16* %s1, align 2
  %700 = zext i16 %699 to i32
  %701 = load i16* %s2, align 2
  %702 = zext i16 %701 to i32
  %703 = icmp sgt i32 %700, %702
  %704 = zext i1 %703 to i32
  %705 = trunc i32 %704 to i8
  store i8 %705, i8* %1
  br label %788

; <label>:706                                     ; preds = %682
  %707 = load i32* %2, align 4
  %708 = add i32 %707, 1
  store i32 %708, i32* %2, align 4
  %709 = load i32* %3, align 4
  %710 = add i32 %709, 1
  store i32 %710, i32* %3, align 4
  %711 = load i32* %2, align 4
  %712 = zext i32 %711 to i64
  %713 = load i8** %4, align 8
  %714 = getelementptr inbounds i8* %713, i64 %712
  %715 = load i8* %714, align 1
  store i8 %715, i8* %c1, align 1
  %716 = load i32* %3, align 4
  %717 = zext i32 %716 to i64
  %718 = load i8** %4, align 8
  %719 = getelementptr inbounds i8* %718, i64 %717
  %720 = load i8* %719, align 1
  store i8 %720, i8* %c2, align 1
  %721 = load i8* %c1, align 1
  %722 = zext i8 %721 to i32
  %723 = load i8* %c2, align 1
  %724 = zext i8 %723 to i32
  %725 = icmp ne i32 %722, %724
  br i1 %725, label %726, label %734

; <label>:726                                     ; preds = %706
  %727 = load i8* %c1, align 1
  %728 = zext i8 %727 to i32
  %729 = load i8* %c2, align 1
  %730 = zext i8 %729 to i32
  %731 = icmp sgt i32 %728, %730
  %732 = zext i1 %731 to i32
  %733 = trunc i32 %732 to i8
  store i8 %733, i8* %1
  br label %788

; <label>:734                                     ; preds = %706
  %735 = load i32* %2, align 4
  %736 = zext i32 %735 to i64
  %737 = load i16** %5, align 8
  %738 = getelementptr inbounds i16* %737, i64 %736
  %739 = load i16* %738, align 2
  store i16 %739, i16* %s1, align 2
  %740 = load i32* %3, align 4
  %741 = zext i32 %740 to i64
  %742 = load i16** %5, align 8
  %743 = getelementptr inbounds i16* %742, i64 %741
  %744 = load i16* %743, align 2
  store i16 %744, i16* %s2, align 2
  %745 = load i16* %s1, align 2
  %746 = zext i16 %745 to i32
  %747 = load i16* %s2, align 2
  %748 = zext i16 %747 to i32
  %749 = icmp ne i32 %746, %748
  br i1 %749, label %750, label %758

; <label>:750                                     ; preds = %734
  %751 = load i16* %s1, align 2
  %752 = zext i16 %751 to i32
  %753 = load i16* %s2, align 2
  %754 = zext i16 %753 to i32
  %755 = icmp sgt i32 %752, %754
  %756 = zext i1 %755 to i32
  %757 = trunc i32 %756 to i8
  store i8 %757, i8* %1
  br label %788

; <label>:758                                     ; preds = %734
  %759 = load i32* %2, align 4
  %760 = add i32 %759, 1
  store i32 %760, i32* %2, align 4
  %761 = load i32* %3, align 4
  %762 = add i32 %761, 1
  store i32 %762, i32* %3, align 4
  %763 = load i32* %2, align 4
  %764 = load i32* %6, align 4
  %765 = icmp uge i32 %763, %764
  br i1 %765, label %766, label %770

; <label>:766                                     ; preds = %758
  %767 = load i32* %6, align 4
  %768 = load i32* %2, align 4
  %769 = sub i32 %768, %767
  store i32 %769, i32* %2, align 4
  br label %770

; <label>:770                                     ; preds = %766, %758
  %771 = load i32* %3, align 4
  %772 = load i32* %6, align 4
  %773 = icmp uge i32 %771, %772
  br i1 %773, label %774, label %778

; <label>:774                                     ; preds = %770
  %775 = load i32* %6, align 4
  %776 = load i32* %3, align 4
  %777 = sub i32 %776, %775
  store i32 %777, i32* %3, align 4
  br label %778

; <label>:778                                     ; preds = %774, %770
  %779 = load i32* %k, align 4
  %780 = sub nsw i32 %779, 8
  store i32 %780, i32* %k, align 4
  %781 = load i32** %7, align 8
  %782 = load i32* %781, align 4
  %783 = add nsw i32 %782, -1
  store i32 %783, i32* %781, align 4
  br label %784

; <label>:784                                     ; preds = %778
  %785 = load i32* %k, align 4
  %786 = icmp sge i32 %785, 0
  br i1 %786, label %346, label %787

; <label>:787                                     ; preds = %784
  store i8 0, i8* %1
  br label %788

; <label>:788                                     ; preds = %787, %750, %726, %698, %674, %646, %622, %594, %570, %542, %518, %490, %466, %438, %414, %386, %362, %331, %303, %275, %247, %219, %191, %163, %135, %107, %79, %51, %23
  %789 = load i8* %1
  ret i8 %789
}

; Function Attrs: nounwind uwtable
define internal void @fallbackQSort3(i32* %fmap, i32* %eclass, i32 %loSt, i32 %hiSt) #0 {
  %1 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %unLo = alloca i32, align 4
  %unHi = alloca i32, align 4
  %ltLo = alloca i32, align 4
  %gtHi = alloca i32, align 4
  %n = alloca i32, align 4
  %m = alloca i32, align 4
  %sp = alloca i32, align 4
  %lo = alloca i32, align 4
  %hi = alloca i32, align 4
  %med = alloca i32, align 4
  %r = alloca i32, align 4
  %r3 = alloca i32, align 4
  %stackLo = alloca [100 x i32], align 16
  %stackHi = alloca [100 x i32], align 16
  %zztmp = alloca i32, align 4
  %zztmp1 = alloca i32, align 4
  %zztmp2 = alloca i32, align 4
  %yyp1 = alloca i32, align 4
  %yyp2 = alloca i32, align 4
  %yyn = alloca i32, align 4
  %zztmp3 = alloca i32, align 4
  %yyp14 = alloca i32, align 4
  %yyp25 = alloca i32, align 4
  %yyn6 = alloca i32, align 4
  %zztmp7 = alloca i32, align 4
  store i32* %fmap, i32** %1, align 8
  store i32* %eclass, i32** %2, align 8
  store i32 %loSt, i32* %3, align 4
  store i32 %hiSt, i32* %4, align 4
  store i32 0, i32* %r, align 4
  store i32 0, i32* %sp, align 4
  %5 = load i32* %3, align 4
  %6 = load i32* %sp, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [100 x i32]* %stackLo, i32 0, i64 %7
  store i32 %5, i32* %8, align 4
  %9 = load i32* %4, align 4
  %10 = load i32* %sp, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [100 x i32]* %stackHi, i32 0, i64 %11
  store i32 %9, i32* %12, align 4
  %13 = load i32* %sp, align 4
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %sp, align 4
  br label %15

; <label>:15                                      ; preds = %394, %226, %37, %0
  %16 = load i32* %sp, align 4
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %395

; <label>:18                                      ; preds = %15
  %19 = load i32* %sp, align 4
  %20 = icmp slt i32 %19, 100
  br i1 %20, label %22, label %21

; <label>:21                                      ; preds = %18
  call void @BZ2_bz__AssertH__fail(i32 1004)
  br label %22

; <label>:22                                      ; preds = %21, %18
  %23 = load i32* %sp, align 4
  %24 = add nsw i32 %23, -1
  store i32 %24, i32* %sp, align 4
  %25 = load i32* %sp, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [100 x i32]* %stackLo, i32 0, i64 %26
  %28 = load i32* %27, align 4
  store i32 %28, i32* %lo, align 4
  %29 = load i32* %sp, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [100 x i32]* %stackHi, i32 0, i64 %30
  %32 = load i32* %31, align 4
  store i32 %32, i32* %hi, align 4
  %33 = load i32* %hi, align 4
  %34 = load i32* %lo, align 4
  %35 = sub nsw i32 %33, %34
  %36 = icmp slt i32 %35, 10
  br i1 %36, label %37, label %42

; <label>:37                                      ; preds = %22
  %38 = load i32** %1, align 8
  %39 = load i32** %2, align 8
  %40 = load i32* %lo, align 4
  %41 = load i32* %hi, align 4
  call void @fallbackSimpleSort(i32* %38, i32* %39, i32 %40, i32 %41)
  br label %15

; <label>:42                                      ; preds = %22
  %43 = load i32* %r, align 4
  %44 = mul i32 %43, 7621
  %45 = add i32 %44, 1
  %46 = urem i32 %45, 32768
  store i32 %46, i32* %r, align 4
  %47 = load i32* %r, align 4
  %48 = urem i32 %47, 3
  store i32 %48, i32* %r3, align 4
  %49 = load i32* %r3, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %61

; <label>:51                                      ; preds = %42
  %52 = load i32* %lo, align 4
  %53 = sext i32 %52 to i64
  %54 = load i32** %1, align 8
  %55 = getelementptr inbounds i32* %54, i64 %53
  %56 = load i32* %55, align 4
  %57 = zext i32 %56 to i64
  %58 = load i32** %2, align 8
  %59 = getelementptr inbounds i32* %58, i64 %57
  %60 = load i32* %59, align 4
  store i32 %60, i32* %med, align 4
  br label %88

; <label>:61                                      ; preds = %42
  %62 = load i32* %r3, align 4
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %77

; <label>:64                                      ; preds = %61
  %65 = load i32* %lo, align 4
  %66 = load i32* %hi, align 4
  %67 = add nsw i32 %65, %66
  %68 = ashr i32 %67, 1
  %69 = sext i32 %68 to i64
  %70 = load i32** %1, align 8
  %71 = getelementptr inbounds i32* %70, i64 %69
  %72 = load i32* %71, align 4
  %73 = zext i32 %72 to i64
  %74 = load i32** %2, align 8
  %75 = getelementptr inbounds i32* %74, i64 %73
  %76 = load i32* %75, align 4
  store i32 %76, i32* %med, align 4
  br label %87

; <label>:77                                      ; preds = %61
  %78 = load i32* %hi, align 4
  %79 = sext i32 %78 to i64
  %80 = load i32** %1, align 8
  %81 = getelementptr inbounds i32* %80, i64 %79
  %82 = load i32* %81, align 4
  %83 = zext i32 %82 to i64
  %84 = load i32** %2, align 8
  %85 = getelementptr inbounds i32* %84, i64 %83
  %86 = load i32* %85, align 4
  store i32 %86, i32* %med, align 4
  br label %87

; <label>:87                                      ; preds = %77, %64
  br label %88

; <label>:88                                      ; preds = %87, %51
  %89 = load i32* %lo, align 4
  store i32 %89, i32* %ltLo, align 4
  store i32 %89, i32* %unLo, align 4
  %90 = load i32* %hi, align 4
  store i32 %90, i32* %gtHi, align 4
  store i32 %90, i32* %unHi, align 4
  br label %91

; <label>:91                                      ; preds = %88, %198
  br label %92

; <label>:92                                      ; preds = %91, %111, %139
  %93 = load i32* %unLo, align 4
  %94 = load i32* %unHi, align 4
  %95 = icmp sgt i32 %93, %94
  br i1 %95, label %96, label %97

; <label>:96                                      ; preds = %92
  br label %142

; <label>:97                                      ; preds = %92
  %98 = load i32* %unLo, align 4
  %99 = sext i32 %98 to i64
  %100 = load i32** %1, align 8
  %101 = getelementptr inbounds i32* %100, i64 %99
  %102 = load i32* %101, align 4
  %103 = zext i32 %102 to i64
  %104 = load i32** %2, align 8
  %105 = getelementptr inbounds i32* %104, i64 %103
  %106 = load i32* %105, align 4
  %107 = load i32* %med, align 4
  %108 = sub nsw i32 %106, %107
  store i32 %108, i32* %n, align 4
  %109 = load i32* %n, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %135

; <label>:111                                     ; preds = %97
  %112 = load i32* %unLo, align 4
  %113 = sext i32 %112 to i64
  %114 = load i32** %1, align 8
  %115 = getelementptr inbounds i32* %114, i64 %113
  %116 = load i32* %115, align 4
  store i32 %116, i32* %zztmp, align 4
  %117 = load i32* %ltLo, align 4
  %118 = sext i32 %117 to i64
  %119 = load i32** %1, align 8
  %120 = getelementptr inbounds i32* %119, i64 %118
  %121 = load i32* %120, align 4
  %122 = load i32* %unLo, align 4
  %123 = sext i32 %122 to i64
  %124 = load i32** %1, align 8
  %125 = getelementptr inbounds i32* %124, i64 %123
  store i32 %121, i32* %125, align 4
  %126 = load i32* %zztmp, align 4
  %127 = load i32* %ltLo, align 4
  %128 = sext i32 %127 to i64
  %129 = load i32** %1, align 8
  %130 = getelementptr inbounds i32* %129, i64 %128
  store i32 %126, i32* %130, align 4
  %131 = load i32* %ltLo, align 4
  %132 = add nsw i32 %131, 1
  store i32 %132, i32* %ltLo, align 4
  %133 = load i32* %unLo, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %unLo, align 4
  br label %92

; <label>:135                                     ; preds = %97
  %136 = load i32* %n, align 4
  %137 = icmp sgt i32 %136, 0
  br i1 %137, label %138, label %139

; <label>:138                                     ; preds = %135
  br label %142

; <label>:139                                     ; preds = %135
  %140 = load i32* %unLo, align 4
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %unLo, align 4
  br label %92

; <label>:142                                     ; preds = %138, %96
  br label %143

; <label>:143                                     ; preds = %142, %162, %190
  %144 = load i32* %unLo, align 4
  %145 = load i32* %unHi, align 4
  %146 = icmp sgt i32 %144, %145
  br i1 %146, label %147, label %148

; <label>:147                                     ; preds = %143
  br label %193

; <label>:148                                     ; preds = %143
  %149 = load i32* %unHi, align 4
  %150 = sext i32 %149 to i64
  %151 = load i32** %1, align 8
  %152 = getelementptr inbounds i32* %151, i64 %150
  %153 = load i32* %152, align 4
  %154 = zext i32 %153 to i64
  %155 = load i32** %2, align 8
  %156 = getelementptr inbounds i32* %155, i64 %154
  %157 = load i32* %156, align 4
  %158 = load i32* %med, align 4
  %159 = sub nsw i32 %157, %158
  store i32 %159, i32* %n, align 4
  %160 = load i32* %n, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %186

; <label>:162                                     ; preds = %148
  %163 = load i32* %unHi, align 4
  %164 = sext i32 %163 to i64
  %165 = load i32** %1, align 8
  %166 = getelementptr inbounds i32* %165, i64 %164
  %167 = load i32* %166, align 4
  store i32 %167, i32* %zztmp1, align 4
  %168 = load i32* %gtHi, align 4
  %169 = sext i32 %168 to i64
  %170 = load i32** %1, align 8
  %171 = getelementptr inbounds i32* %170, i64 %169
  %172 = load i32* %171, align 4
  %173 = load i32* %unHi, align 4
  %174 = sext i32 %173 to i64
  %175 = load i32** %1, align 8
  %176 = getelementptr inbounds i32* %175, i64 %174
  store i32 %172, i32* %176, align 4
  %177 = load i32* %zztmp1, align 4
  %178 = load i32* %gtHi, align 4
  %179 = sext i32 %178 to i64
  %180 = load i32** %1, align 8
  %181 = getelementptr inbounds i32* %180, i64 %179
  store i32 %177, i32* %181, align 4
  %182 = load i32* %gtHi, align 4
  %183 = add nsw i32 %182, -1
  store i32 %183, i32* %gtHi, align 4
  %184 = load i32* %unHi, align 4
  %185 = add nsw i32 %184, -1
  store i32 %185, i32* %unHi, align 4
  br label %143

; <label>:186                                     ; preds = %148
  %187 = load i32* %n, align 4
  %188 = icmp slt i32 %187, 0
  br i1 %188, label %189, label %190

; <label>:189                                     ; preds = %186
  br label %193

; <label>:190                                     ; preds = %186
  %191 = load i32* %unHi, align 4
  %192 = add nsw i32 %191, -1
  store i32 %192, i32* %unHi, align 4
  br label %143

; <label>:193                                     ; preds = %189, %147
  %194 = load i32* %unLo, align 4
  %195 = load i32* %unHi, align 4
  %196 = icmp sgt i32 %194, %195
  br i1 %196, label %197, label %198

; <label>:197                                     ; preds = %193
  br label %222

; <label>:198                                     ; preds = %193
  %199 = load i32* %unLo, align 4
  %200 = sext i32 %199 to i64
  %201 = load i32** %1, align 8
  %202 = getelementptr inbounds i32* %201, i64 %200
  %203 = load i32* %202, align 4
  store i32 %203, i32* %zztmp2, align 4
  %204 = load i32* %unHi, align 4
  %205 = sext i32 %204 to i64
  %206 = load i32** %1, align 8
  %207 = getelementptr inbounds i32* %206, i64 %205
  %208 = load i32* %207, align 4
  %209 = load i32* %unLo, align 4
  %210 = sext i32 %209 to i64
  %211 = load i32** %1, align 8
  %212 = getelementptr inbounds i32* %211, i64 %210
  store i32 %208, i32* %212, align 4
  %213 = load i32* %zztmp2, align 4
  %214 = load i32* %unHi, align 4
  %215 = sext i32 %214 to i64
  %216 = load i32** %1, align 8
  %217 = getelementptr inbounds i32* %216, i64 %215
  store i32 %213, i32* %217, align 4
  %218 = load i32* %unLo, align 4
  %219 = add nsw i32 %218, 1
  store i32 %219, i32* %unLo, align 4
  %220 = load i32* %unHi, align 4
  %221 = add nsw i32 %220, -1
  store i32 %221, i32* %unHi, align 4
  br label %91

; <label>:222                                     ; preds = %197
  %223 = load i32* %gtHi, align 4
  %224 = load i32* %ltLo, align 4
  %225 = icmp slt i32 %223, %224
  br i1 %225, label %226, label %227

; <label>:226                                     ; preds = %222
  br label %15

; <label>:227                                     ; preds = %222
  %228 = load i32* %ltLo, align 4
  %229 = load i32* %lo, align 4
  %230 = sub nsw i32 %228, %229
  %231 = load i32* %unLo, align 4
  %232 = load i32* %ltLo, align 4
  %233 = sub nsw i32 %231, %232
  %234 = icmp slt i32 %230, %233
  br i1 %234, label %235, label %239

; <label>:235                                     ; preds = %227
  %236 = load i32* %ltLo, align 4
  %237 = load i32* %lo, align 4
  %238 = sub nsw i32 %236, %237
  br label %243

; <label>:239                                     ; preds = %227
  %240 = load i32* %unLo, align 4
  %241 = load i32* %ltLo, align 4
  %242 = sub nsw i32 %240, %241
  br label %243

; <label>:243                                     ; preds = %239, %235
  %244 = phi i32 [ %238, %235 ], [ %242, %239 ]
  store i32 %244, i32* %n, align 4
  %245 = load i32* %lo, align 4
  store i32 %245, i32* %yyp1, align 4
  %246 = load i32* %unLo, align 4
  %247 = load i32* %n, align 4
  %248 = sub nsw i32 %246, %247
  store i32 %248, i32* %yyp2, align 4
  %249 = load i32* %n, align 4
  store i32 %249, i32* %yyn, align 4
  br label %250

; <label>:250                                     ; preds = %253, %243
  %251 = load i32* %yyn, align 4
  %252 = icmp sgt i32 %251, 0
  br i1 %252, label %253, label %279

; <label>:253                                     ; preds = %250
  %254 = load i32* %yyp1, align 4
  %255 = sext i32 %254 to i64
  %256 = load i32** %1, align 8
  %257 = getelementptr inbounds i32* %256, i64 %255
  %258 = load i32* %257, align 4
  store i32 %258, i32* %zztmp3, align 4
  %259 = load i32* %yyp2, align 4
  %260 = sext i32 %259 to i64
  %261 = load i32** %1, align 8
  %262 = getelementptr inbounds i32* %261, i64 %260
  %263 = load i32* %262, align 4
  %264 = load i32* %yyp1, align 4
  %265 = sext i32 %264 to i64
  %266 = load i32** %1, align 8
  %267 = getelementptr inbounds i32* %266, i64 %265
  store i32 %263, i32* %267, align 4
  %268 = load i32* %zztmp3, align 4
  %269 = load i32* %yyp2, align 4
  %270 = sext i32 %269 to i64
  %271 = load i32** %1, align 8
  %272 = getelementptr inbounds i32* %271, i64 %270
  store i32 %268, i32* %272, align 4
  %273 = load i32* %yyp1, align 4
  %274 = add nsw i32 %273, 1
  store i32 %274, i32* %yyp1, align 4
  %275 = load i32* %yyp2, align 4
  %276 = add nsw i32 %275, 1
  store i32 %276, i32* %yyp2, align 4
  %277 = load i32* %yyn, align 4
  %278 = add nsw i32 %277, -1
  store i32 %278, i32* %yyn, align 4
  br label %250

; <label>:279                                     ; preds = %250
  %280 = load i32* %hi, align 4
  %281 = load i32* %gtHi, align 4
  %282 = sub nsw i32 %280, %281
  %283 = load i32* %gtHi, align 4
  %284 = load i32* %unHi, align 4
  %285 = sub nsw i32 %283, %284
  %286 = icmp slt i32 %282, %285
  br i1 %286, label %287, label %291

; <label>:287                                     ; preds = %279
  %288 = load i32* %hi, align 4
  %289 = load i32* %gtHi, align 4
  %290 = sub nsw i32 %288, %289
  br label %295

; <label>:291                                     ; preds = %279
  %292 = load i32* %gtHi, align 4
  %293 = load i32* %unHi, align 4
  %294 = sub nsw i32 %292, %293
  br label %295

; <label>:295                                     ; preds = %291, %287
  %296 = phi i32 [ %290, %287 ], [ %294, %291 ]
  store i32 %296, i32* %m, align 4
  %297 = load i32* %unLo, align 4
  store i32 %297, i32* %yyp14, align 4
  %298 = load i32* %hi, align 4
  %299 = load i32* %m, align 4
  %300 = sub nsw i32 %298, %299
  %301 = add nsw i32 %300, 1
  store i32 %301, i32* %yyp25, align 4
  %302 = load i32* %m, align 4
  store i32 %302, i32* %yyn6, align 4
  br label %303

; <label>:303                                     ; preds = %306, %295
  %304 = load i32* %yyn6, align 4
  %305 = icmp sgt i32 %304, 0
  br i1 %305, label %306, label %332

; <label>:306                                     ; preds = %303
  %307 = load i32* %yyp14, align 4
  %308 = sext i32 %307 to i64
  %309 = load i32** %1, align 8
  %310 = getelementptr inbounds i32* %309, i64 %308
  %311 = load i32* %310, align 4
  store i32 %311, i32* %zztmp7, align 4
  %312 = load i32* %yyp25, align 4
  %313 = sext i32 %312 to i64
  %314 = load i32** %1, align 8
  %315 = getelementptr inbounds i32* %314, i64 %313
  %316 = load i32* %315, align 4
  %317 = load i32* %yyp14, align 4
  %318 = sext i32 %317 to i64
  %319 = load i32** %1, align 8
  %320 = getelementptr inbounds i32* %319, i64 %318
  store i32 %316, i32* %320, align 4
  %321 = load i32* %zztmp7, align 4
  %322 = load i32* %yyp25, align 4
  %323 = sext i32 %322 to i64
  %324 = load i32** %1, align 8
  %325 = getelementptr inbounds i32* %324, i64 %323
  store i32 %321, i32* %325, align 4
  %326 = load i32* %yyp14, align 4
  %327 = add nsw i32 %326, 1
  store i32 %327, i32* %yyp14, align 4
  %328 = load i32* %yyp25, align 4
  %329 = add nsw i32 %328, 1
  store i32 %329, i32* %yyp25, align 4
  %330 = load i32* %yyn6, align 4
  %331 = add nsw i32 %330, -1
  store i32 %331, i32* %yyn6, align 4
  br label %303

; <label>:332                                     ; preds = %303
  %333 = load i32* %lo, align 4
  %334 = load i32* %unLo, align 4
  %335 = add nsw i32 %333, %334
  %336 = load i32* %ltLo, align 4
  %337 = sub nsw i32 %335, %336
  %338 = sub nsw i32 %337, 1
  store i32 %338, i32* %n, align 4
  %339 = load i32* %hi, align 4
  %340 = load i32* %gtHi, align 4
  %341 = load i32* %unHi, align 4
  %342 = sub nsw i32 %340, %341
  %343 = sub nsw i32 %339, %342
  %344 = add nsw i32 %343, 1
  store i32 %344, i32* %m, align 4
  %345 = load i32* %n, align 4
  %346 = load i32* %lo, align 4
  %347 = sub nsw i32 %345, %346
  %348 = load i32* %hi, align 4
  %349 = load i32* %m, align 4
  %350 = sub nsw i32 %348, %349
  %351 = icmp sgt i32 %347, %350
  br i1 %351, label %352, label %373

; <label>:352                                     ; preds = %332
  %353 = load i32* %lo, align 4
  %354 = load i32* %sp, align 4
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds [100 x i32]* %stackLo, i32 0, i64 %355
  store i32 %353, i32* %356, align 4
  %357 = load i32* %n, align 4
  %358 = load i32* %sp, align 4
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds [100 x i32]* %stackHi, i32 0, i64 %359
  store i32 %357, i32* %360, align 4
  %361 = load i32* %sp, align 4
  %362 = add nsw i32 %361, 1
  store i32 %362, i32* %sp, align 4
  %363 = load i32* %m, align 4
  %364 = load i32* %sp, align 4
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds [100 x i32]* %stackLo, i32 0, i64 %365
  store i32 %363, i32* %366, align 4
  %367 = load i32* %hi, align 4
  %368 = load i32* %sp, align 4
  %369 = sext i32 %368 to i64
  %370 = getelementptr inbounds [100 x i32]* %stackHi, i32 0, i64 %369
  store i32 %367, i32* %370, align 4
  %371 = load i32* %sp, align 4
  %372 = add nsw i32 %371, 1
  store i32 %372, i32* %sp, align 4
  br label %394

; <label>:373                                     ; preds = %332
  %374 = load i32* %m, align 4
  %375 = load i32* %sp, align 4
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds [100 x i32]* %stackLo, i32 0, i64 %376
  store i32 %374, i32* %377, align 4
  %378 = load i32* %hi, align 4
  %379 = load i32* %sp, align 4
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds [100 x i32]* %stackHi, i32 0, i64 %380
  store i32 %378, i32* %381, align 4
  %382 = load i32* %sp, align 4
  %383 = add nsw i32 %382, 1
  store i32 %383, i32* %sp, align 4
  %384 = load i32* %lo, align 4
  %385 = load i32* %sp, align 4
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds [100 x i32]* %stackLo, i32 0, i64 %386
  store i32 %384, i32* %387, align 4
  %388 = load i32* %n, align 4
  %389 = load i32* %sp, align 4
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds [100 x i32]* %stackHi, i32 0, i64 %390
  store i32 %388, i32* %391, align 4
  %392 = load i32* %sp, align 4
  %393 = add nsw i32 %392, 1
  store i32 %393, i32* %sp, align 4
  br label %394

; <label>:394                                     ; preds = %373, %352
  br label %15

; <label>:395                                     ; preds = %15
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @fallbackSimpleSort(i32* %fmap, i32* %eclass, i32 %lo, i32 %hi) #2 {
  %1 = alloca i32*, align 8
  %2 = alloca i32*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %tmp = alloca i32, align 4
  %ec_tmp = alloca i32, align 4
  store i32* %fmap, i32** %1, align 8
  store i32* %eclass, i32** %2, align 8
  store i32 %lo, i32* %3, align 4
  store i32 %hi, i32* %4, align 4
  %5 = load i32* %3, align 4
  %6 = load i32* %4, align 4
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %0
  br label %139

; <label>:9                                       ; preds = %0
  %10 = load i32* %4, align 4
  %11 = load i32* %3, align 4
  %12 = sub nsw i32 %10, %11
  %13 = icmp sgt i32 %12, 3
  br i1 %13, label %14, label %77

; <label>:14                                      ; preds = %9
  %15 = load i32* %4, align 4
  %16 = sub nsw i32 %15, 4
  store i32 %16, i32* %i, align 4
  br label %17

; <label>:17                                      ; preds = %73, %14
  %18 = load i32* %i, align 4
  %19 = load i32* %3, align 4
  %20 = icmp sge i32 %18, %19
  br i1 %20, label %21, label %76

; <label>:21                                      ; preds = %17
  %22 = load i32* %i, align 4
  %23 = sext i32 %22 to i64
  %24 = load i32** %1, align 8
  %25 = getelementptr inbounds i32* %24, i64 %23
  %26 = load i32* %25, align 4
  store i32 %26, i32* %tmp, align 4
  %27 = load i32* %tmp, align 4
  %28 = sext i32 %27 to i64
  %29 = load i32** %2, align 8
  %30 = getelementptr inbounds i32* %29, i64 %28
  %31 = load i32* %30, align 4
  store i32 %31, i32* %ec_tmp, align 4
  %32 = load i32* %i, align 4
  %33 = add nsw i32 %32, 4
  store i32 %33, i32* %j, align 4
  br label %34

; <label>:34                                      ; preds = %63, %21
  %35 = load i32* %j, align 4
  %36 = load i32* %4, align 4
  %37 = icmp sle i32 %35, %36
  br i1 %37, label %38, label %50

; <label>:38                                      ; preds = %34
  %39 = load i32* %ec_tmp, align 4
  %40 = load i32* %j, align 4
  %41 = sext i32 %40 to i64
  %42 = load i32** %1, align 8
  %43 = getelementptr inbounds i32* %42, i64 %41
  %44 = load i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = load i32** %2, align 8
  %47 = getelementptr inbounds i32* %46, i64 %45
  %48 = load i32* %47, align 4
  %49 = icmp ugt i32 %39, %48
  br label %50

; <label>:50                                      ; preds = %38, %34
  %51 = phi i1 [ false, %34 ], [ %49, %38 ]
  br i1 %51, label %52, label %66

; <label>:52                                      ; preds = %50
  %53 = load i32* %j, align 4
  %54 = sext i32 %53 to i64
  %55 = load i32** %1, align 8
  %56 = getelementptr inbounds i32* %55, i64 %54
  %57 = load i32* %56, align 4
  %58 = load i32* %j, align 4
  %59 = sub nsw i32 %58, 4
  %60 = sext i32 %59 to i64
  %61 = load i32** %1, align 8
  %62 = getelementptr inbounds i32* %61, i64 %60
  store i32 %57, i32* %62, align 4
  br label %63

; <label>:63                                      ; preds = %52
  %64 = load i32* %j, align 4
  %65 = add nsw i32 %64, 4
  store i32 %65, i32* %j, align 4
  br label %34

; <label>:66                                      ; preds = %50
  %67 = load i32* %tmp, align 4
  %68 = load i32* %j, align 4
  %69 = sub nsw i32 %68, 4
  %70 = sext i32 %69 to i64
  %71 = load i32** %1, align 8
  %72 = getelementptr inbounds i32* %71, i64 %70
  store i32 %67, i32* %72, align 4
  br label %73

; <label>:73                                      ; preds = %66
  %74 = load i32* %i, align 4
  %75 = add nsw i32 %74, -1
  store i32 %75, i32* %i, align 4
  br label %17

; <label>:76                                      ; preds = %17
  br label %77

; <label>:77                                      ; preds = %76, %9
  %78 = load i32* %4, align 4
  %79 = sub nsw i32 %78, 1
  store i32 %79, i32* %i, align 4
  br label %80

; <label>:80                                      ; preds = %136, %77
  %81 = load i32* %i, align 4
  %82 = load i32* %3, align 4
  %83 = icmp sge i32 %81, %82
  br i1 %83, label %84, label %139

; <label>:84                                      ; preds = %80
  %85 = load i32* %i, align 4
  %86 = sext i32 %85 to i64
  %87 = load i32** %1, align 8
  %88 = getelementptr inbounds i32* %87, i64 %86
  %89 = load i32* %88, align 4
  store i32 %89, i32* %tmp, align 4
  %90 = load i32* %tmp, align 4
  %91 = sext i32 %90 to i64
  %92 = load i32** %2, align 8
  %93 = getelementptr inbounds i32* %92, i64 %91
  %94 = load i32* %93, align 4
  store i32 %94, i32* %ec_tmp, align 4
  %95 = load i32* %i, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %j, align 4
  br label %97

; <label>:97                                      ; preds = %126, %84
  %98 = load i32* %j, align 4
  %99 = load i32* %4, align 4
  %100 = icmp sle i32 %98, %99
  br i1 %100, label %101, label %113

; <label>:101                                     ; preds = %97
  %102 = load i32* %ec_tmp, align 4
  %103 = load i32* %j, align 4
  %104 = sext i32 %103 to i64
  %105 = load i32** %1, align 8
  %106 = getelementptr inbounds i32* %105, i64 %104
  %107 = load i32* %106, align 4
  %108 = zext i32 %107 to i64
  %109 = load i32** %2, align 8
  %110 = getelementptr inbounds i32* %109, i64 %108
  %111 = load i32* %110, align 4
  %112 = icmp ugt i32 %102, %111
  br label %113

; <label>:113                                     ; preds = %101, %97
  %114 = phi i1 [ false, %97 ], [ %112, %101 ]
  br i1 %114, label %115, label %129

; <label>:115                                     ; preds = %113
  %116 = load i32* %j, align 4
  %117 = sext i32 %116 to i64
  %118 = load i32** %1, align 8
  %119 = getelementptr inbounds i32* %118, i64 %117
  %120 = load i32* %119, align 4
  %121 = load i32* %j, align 4
  %122 = sub nsw i32 %121, 1
  %123 = sext i32 %122 to i64
  %124 = load i32** %1, align 8
  %125 = getelementptr inbounds i32* %124, i64 %123
  store i32 %120, i32* %125, align 4
  br label %126

; <label>:126                                     ; preds = %115
  %127 = load i32* %j, align 4
  %128 = add nsw i32 %127, 1
  store i32 %128, i32* %j, align 4
  br label %97

; <label>:129                                     ; preds = %113
  %130 = load i32* %tmp, align 4
  %131 = load i32* %j, align 4
  %132 = sub nsw i32 %131, 1
  %133 = sext i32 %132 to i64
  %134 = load i32** %1, align 8
  %135 = getelementptr inbounds i32* %134, i64 %133
  store i32 %130, i32* %135, align 4
  br label %136

; <label>:136                                     ; preds = %129
  %137 = load i32* %i, align 4
  %138 = add nsw i32 %137, -1
  store i32 %138, i32* %i, align 4
  br label %80

; <label>:139                                     ; preds = %8, %80
  ret void
}

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { inlinehint nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind readnone }
attributes #11 = { nounwind readonly }
attributes #12 = { noreturn }
